File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\a4\a$a.java

package a4;

import org.jetbrains.annotations.Nullable;

public final class a$a {
@Nullable
public static final Integer a;

/* JADX WARNING: Removed duplicated region for block: B:8:0x001b  */
static {
/*
r0 = 0
java.lang.String r1 = "android.os.Build$VERSION"
java.lang.Class r1 = java.lang.Class.forName(r1)     // Catch:{ all -> 0x0018 }
java.lang.String r2 = "SDK_INT"
java.lang.reflect.Field r1 = r1.getField(r2)     // Catch:{ all -> 0x0018 }
java.lang.Object r1 = r1.get(r0)     // Catch:{ all -> 0x0018 }
boolean r2 = r1 instanceof java.lang.Integer     // Catch:{ all -> 0x0018 }
if (r2 == 0) goto L_0x0018
java.lang.Integer r1 = (java.lang.Integer) r1     // Catch:{ all -> 0x0018 }
goto L_0x0019
L_0x0018:
r1 = r0
L_0x0019:
if (r1 == 0) goto L_0x0027
int r2 = r1.intValue()
if (r2 <= 0) goto L_0x0023
r2 = 1
goto L_0x0024
L_0x0023:
r2 = 0
L_0x0024:
if (r2 == 0) goto L_0x0027
r0 = r1
L_0x0027:
a = r0
return
*/
throw new UnsupportedOperationException("Method not decompiled: a4.a$a.<clinit>():void");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\android\support\v4\media\MediaDescriptionCompat$Api23Impl.java

package android.support.v4.media;

import android.media.MediaDescription;
import android.net.Uri;
import androidx.annotation.DoNotInline;
import androidx.annotation.Nullable;
import androidx.annotation.RequiresApi;

@RequiresApi(23)
public class MediaDescriptionCompat$Api23Impl {
private MediaDescriptionCompat$Api23Impl() {
}

@DoNotInline
@Nullable
public static Uri getMediaUri(MediaDescription mediaDescription) {
return mediaDescription.getMediaUri();
}

@DoNotInline
public static void setMediaUri(MediaDescription.Builder builder, @Nullable Uri uri) {
builder.setMediaUri(uri);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\activity\ActivityViewModelLazyKt$viewModels$1.java

package androidx.activity;

import androidx.lifecycle.ViewModelStore;
import d4.a;
import kotlin.jvm.internal.Lambda;
import kotlin.jvm.internal.o;
import org.jetbrains.annotations.NotNull;

public final class ActivityViewModelLazyKt$viewModels$1 extends Lambda implements a<ViewModelStore> {
public final /* synthetic */ ComponentActivity $this_viewModels;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public ActivityViewModelLazyKt$viewModels$1(ComponentActivity componentActivity) {
super(0);
this.$this_viewModels = componentActivity;
}

@NotNull
public final ViewModelStore invoke() {
ViewModelStore viewModelStore = this.$this_viewModels.getViewModelStore();
o.e(viewModelStore, "viewModelStore");
return viewModelStore;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\activity\Api26Impl.java

package androidx.activity;

import android.app.Activity;
import android.app.PictureInPictureParams;
import android.graphics.Rect;
import androidx.annotation.RequiresApi;
import kotlin.jvm.internal.o;
import org.jetbrains.annotations.NotNull;

@RequiresApi(26)
public final class Api26Impl {
@NotNull
public static final Api26Impl INSTANCE = new Api26Impl();

private Api26Impl() {
}

public final void setPipParamsSourceRectHint(@NotNull Activity activity, @NotNull Rect rect) {
o.f(activity, "activity");
o.f(rect, "hint");
activity.setPictureInPictureParams(new PictureInPictureParams.Builder().setSourceRectHint(rect).build());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\activity\ViewTreeOnBackPressedDispatcherOwner.java

package androidx.activity;

import android.view.View;
import kotlin.jvm.internal.o;
import kotlin.sequences.SequencesKt__SequencesKt;
import kotlin.sequences.n;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class ViewTreeOnBackPressedDispatcherOwner {
@Nullable
public static final OnBackPressedDispatcherOwner get(@NotNull View view) {
o.f(view, "<this>");
return (OnBackPressedDispatcherOwner) n.d(n.f(SequencesKt__SequencesKt.c(view, findViewTreeOnBackPressedDispatcherOwner.1.INSTANCE), findViewTreeOnBackPressedDispatcherOwner.2.INSTANCE));
}

public static final void set(@NotNull View view, @NotNull OnBackPressedDispatcherOwner onBackPressedDispatcherOwner) {
o.f(view, "<this>");
o.f(onBackPressedDispatcherOwner, "onBackPressedDispatcherOwner");
view.setTag(R.id.view_tree_on_back_pressed_dispatcher_owner, onBackPressedDispatcherOwner);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\annotation\CheckResult.java

package androidx.annotation;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Documented
@Target({ElementType.METHOD})
@Retention(RetentionPolicy.CLASS)
public @interface CheckResult {
String suggest() default "";
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\annotation\GuardedBy.java

package androidx.annotation;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Target({ElementType.FIELD, ElementType.METHOD})
@Retention(RetentionPolicy.CLASS)
public @interface GuardedBy {
String value();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\appcompat\app\ActionBarDrawerToggleHoneycomb.java
private static final String TAG = "ActionBarDrawerToggleHC";
private static final int[] THEME_ATTRS = {16843531};

private ActionBarDrawerToggleHoneycomb() {
}

public static Drawable getThemeUpIndicator(Activity activity) {
TypedArray obtainStyledAttributes = activity.obtainStyledAttributes(THEME_ATTRS);
Drawable drawable = obtainStyledAttributes.getDrawable(0);
obtainStyledAttributes.recycle();
return drawable;
}

public static SetIndicatorInfo setActionBarDescription(SetIndicatorInfo setIndicatorInfo, Activity activity, int i) {
if (setIndicatorInfo == null) {
setIndicatorInfo = new SetIndicatorInfo(activity);
}
if (setIndicatorInfo.setHomeAsUpIndicator != null) {
try {
ActionBar actionBar = activity.getActionBar();
setIndicatorInfo.setHomeActionContentDescription.invoke(actionBar, new Object[]{Integer.valueOf(i)});
} catch (Exception e) {
Log.w(TAG, "Couldn't set content description via JB-MR2 API", e);
}
}
return setIndicatorInfo;
}

public static SetIndicatorInfo setActionBarUpIndicator(Activity activity, Drawable drawable, int i) {
SetIndicatorInfo setIndicatorInfo = new SetIndicatorInfo(activity);
if (setIndicatorInfo.setHomeAsUpIndicator != null) {
try {
ActionBar actionBar = activity.getActionBar();
setIndicatorInfo.setHomeAsUpIndicator.invoke(actionBar, new Object[]{drawable});
setIndicatorInfo.setHomeActionContentDescription.invoke(actionBar, new Object[]{Integer.valueOf(i)});
} catch (Exception e) {
Log.w(TAG, "Couldn't set home-as-up indicator via JB-MR2 API", e);
}
} else {
ImageView imageView = setIndicatorInfo.upIndicatorView;
if (imageView != null) {
imageView.setImageDrawable(drawable);
} else {
Log.w(TAG, "Couldn't set home-as-up indicator");
}
}
return setIndicatorInfo;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\appcompat\view\menu\MenuPresenter$Callback.java

package androidx.appcompat.view.menu;

import androidx.annotation.NonNull;

public interface MenuPresenter$Callback {
void onCloseMenu(@NonNull MenuBuilder menuBuilder, boolean z);

boolean onOpenSubMenu(@NonNull MenuBuilder menuBuilder);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\appcompat\widget\ActivityChooserModel$HistoricalRecord.java

package androidx.appcompat.widget;

import android.content.ComponentName;
import android.support.v4.media.c;
import java.math.BigDecimal;

public final class ActivityChooserModel$HistoricalRecord {
public final ComponentName activity;
public final long time;
public final float weight;

public ActivityChooserModel$HistoricalRecord(ComponentName componentName, long j2, float f) {
this.activity = componentName;
this.time = j2;
this.weight = f;
}

public ActivityChooserModel$HistoricalRecord(String str, long j2, float f) {
this(ComponentName.unflattenFromString(str), j2, f);
}

public boolean equals(Object obj) {
if (this == obj) {
return true;
}
if (obj == null || ActivityChooserModel$HistoricalRecord.class != obj.getClass()) {
return false;
}
ActivityChooserModel$HistoricalRecord activityChooserModel$HistoricalRecord = (ActivityChooserModel$HistoricalRecord) obj;
ComponentName componentName = this.activity;
if (componentName == null) {
if (activityChooserModel$HistoricalRecord.activity != null) {
return false;
}
} else if (!componentName.equals(activityChooserModel$HistoricalRecord.activity)) {
return false;
}
return this.time == activityChooserModel$HistoricalRecord.time && Float.floatToIntBits(this.weight) == Float.floatToIntBits(activityChooserModel$HistoricalRecord.weight);
}

public int hashCode() {
ComponentName componentName = this.activity;
int hashCode = componentName == null ? 0 : componentName.hashCode();
long j2 = this.time;
return Float.floatToIntBits(this.weight) + ((((hashCode + 31) * 31) + ((int) (j2 ^ (j2 >>> 32)))) * 31);
}

public String toString() {
StringBuilder m = c.m("[", "; activity:");
m.append(this.activity);
m.append("; time:");
m.append(this.time);
m.append("; weight:");
m.append(new BigDecimal((double) this.weight));
m.append("]");
return m.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\appcompat\widget\AppCompatAutoCompleteTextView.java

package androidx.appcompat.widget;

import android.content.Context;
import android.content.res.ColorStateList;
import android.graphics.PorterDuff;
import android.graphics.drawable.Drawable;
import android.text.method.KeyListener;
import android.util.AttributeSet;
import android.view.ActionMode;
import android.view.inputmethod.EditorInfo;
import android.view.inputmethod.InputConnection;
import android.widget.AutoCompleteTextView;
import androidx.annotation.DrawableRes;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.RequiresApi;
import androidx.annotation.RestrictTo;
import androidx.appcompat.R;
import androidx.appcompat.content.res.AppCompatResources;
import androidx.core.view.TintableBackgroundView;
import androidx.core.widget.TextViewCompat;
import androidx.core.widget.TintableCompoundDrawablesView;

public class AppCompatAutoCompleteTextView extends AutoCompleteTextView implements TintableBackgroundView, EmojiCompatConfigurationView, TintableCompoundDrawablesView {
private static final int[] TINT_ATTRS = {16843126};
@NonNull
private final AppCompatEmojiEditTextHelper mAppCompatEmojiEditTextHelper;
private final AppCompatBackgroundHelper mBackgroundTintHelper;
private final AppCompatTextHelper mTextHelper;

public AppCompatAutoCompleteTextView(@NonNull Context context) {
this(context, (AttributeSet) null);
}

public AppCompatAutoCompleteTextView(@NonNull Context context, @Nullable AttributeSet attributeSet) {
this(context, attributeSet, R.attr.autoCompleteTextViewStyle);
}

public AppCompatAutoCompleteTextView(@NonNull Context context, @Nullable AttributeSet attributeSet, int i) {
super(TintContextWrapper.wrap(context), attributeSet, i);
ThemeUtils.checkAppCompatTheme(this, getContext());
TintTypedArray obtainStyledAttributes = TintTypedArray.obtainStyledAttributes(getContext(), attributeSet, TINT_ATTRS, i, 0);
if (obtainStyledAttributes.hasValue(0)) {
setDropDownBackgroundDrawable(obtainStyledAttributes.getDrawable(0));
}
obtainStyledAttributes.recycle();
AppCompatBackgroundHelper appCompatBackgroundHelper = new AppCompatBackgroundHelper(this);
this.mBackgroundTintHelper = appCompatBackgroundHelper;
appCompatBackgroundHelper.loadFromAttributes(attributeSet, i);
AppCompatTextHelper appCompatTextHelper = new AppCompatTextHelper(this);
this.mTextHelper = appCompatTextHelper;
appCompatTextHelper.loadFromAttributes(attributeSet, i);
appCompatTextHelper.applyCompoundDrawablesTints();
AppCompatEmojiEditTextHelper appCompatEmojiEditTextHelper = new AppCompatEmojiEditTextHelper(this);
this.mAppCompatEmojiEditTextHelper = appCompatEmojiEditTextHelper;
appCompatEmojiEditTextHelper.loadFromAttributes(attributeSet, i);
initEmojiKeyListener(appCompatEmojiEditTextHelper);
}

public void drawableStateChanged() {
super.drawableStateChanged();
AppCompatBackgroundHelper appCompatBackgroundHelper = this.mBackgroundTintHelper;
if (appCompatBackgroundHelper != null) {
appCompatBackgroundHelper.applySupportBackgroundTint();
}
AppCompatTextHelper appCompatTextHelper = this.mTextHelper;
if (appCompatTextHelper != null) {
appCompatTextHelper.applyCompoundDrawablesTints();
}
}

@Nullable
public ActionMode.Callback getCustomSelectionActionModeCallback() {
return TextViewCompat.unwrapCustomSelectionActionModeCallback(super.getCustomSelectionActionModeCallback());
}

@Nullable
@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public ColorStateList getSupportBackgroundTintList() {
AppCompatBackgroundHelper appCompatBackgroundHelper = this.mBackgroundTintHelper;
if (appCompatBackgroundHelper != null) {
return appCompatBackgroundHelper.getSupportBackgroundTintList();
}
return null;
}

@Nullable
@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public PorterDuff.Mode getSupportBackgroundTintMode() {
AppCompatBackgroundHelper appCompatBackgroundHelper = this.mBackgroundTintHelper;
if (appCompatBackgroundHelper != null) {
return appCompatBackgroundHelper.getSupportBackgroundTintMode();
}
return null;
}

@Nullable
@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public ColorStateList getSupportCompoundDrawablesTintList() {
return this.mTextHelper.getCompoundDrawableTintList();
}

@Nullable
@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public PorterDuff.Mode getSupportCompoundDrawablesTintMode() {
return this.mTextHelper.getCompoundDrawableTintMode();
}

public void initEmojiKeyListener(AppCompatEmojiEditTextHelper appCompatEmojiEditTextHelper) {
KeyListener keyListener = getKeyListener();
if (appCompatEmojiEditTextHelper.isEmojiCapableKeyListener(keyListener)) {
boolean isFocusable = super.isFocusable();
boolean isClickable = super.isClickable();
boolean isLongClickable = super.isLongClickable();
int inputType = super.getInputType();
KeyListener keyListener2 = appCompatEmojiEditTextHelper.getKeyListener(keyListener);
if (keyListener2 != keyListener) {
super.setKeyListener(keyListener2);
super.setRawInputType(inputType);
super.setFocusable(isFocusable);
super.setClickable(isClickable);
super.setLongClickable(isLongClickable);
}
}
}

public boolean isEmojiCompatEnabled() {
return this.mAppCompatEmojiEditTextHelper.isEnabled();
}

public InputConnection onCreateInputConnection(EditorInfo editorInfo) {
return this.mAppCompatEmojiEditTextHelper.onCreateInputConnection(AppCompatHintHelper.onCreateInputConnection(super.onCreateInputConnection(editorInfo), editorInfo, this), editorInfo);
}

public void setBackgroundDrawable(@Nullable Drawable drawable) {
super.setBackgroundDrawable(drawable);
AppCompatBackgroundHelper appCompatBackgroundHelper = this.mBackgroundTintHelper;
if (appCompatBackgroundHelper != null) {
appCompatBackgroundHelper.onSetBackgroundDrawable(drawable);
}
}

public void setBackgroundResource(@DrawableRes int i) {
super.setBackgroundResource(i);
AppCompatBackgroundHelper appCompatBackgroundHelper = this.mBackgroundTintHelper;
if (appCompatBackgroundHelper != null) {
appCompatBackgroundHelper.onSetBackgroundResource(i);
}
}

public void setCompoundDrawables(@Nullable Drawable drawable, @Nullable Drawable drawable2, @Nullable Drawable drawable3, @Nullable Drawable drawable4) {
super.setCompoundDrawables(drawable, drawable2, drawable3, drawable4);
AppCompatTextHelper appCompatTextHelper = this.mTextHelper;
if (appCompatTextHelper != null) {
appCompatTextHelper.onSetCompoundDrawables();
}
}

@RequiresApi(17)
public void setCompoundDrawablesRelative(@Nullable Drawable drawable, @Nullable Drawable drawable2, @Nullable Drawable drawable3, @Nullable Drawable drawable4) {
super.setCompoundDrawablesRelative(drawable, drawable2, drawable3, drawable4);
AppCompatTextHelper appCompatTextHelper = this.mTextHelper;
if (appCompatTextHelper != null) {
appCompatTextHelper.onSetCompoundDrawables();
}
}

public void setCustomSelectionActionModeCallback(@Nullable ActionMode.Callback callback) {
super.setCustomSelectionActionModeCallback(TextViewCompat.wrapCustomSelectionActionModeCallback(this, callback));
}

public void setDropDownBackgroundResource(@DrawableRes int i) {
setDropDownBackgroundDrawable(AppCompatResources.getDrawable(getContext(), i));
}

public void setEmojiCompatEnabled(boolean z) {
this.mAppCompatEmojiEditTextHelper.setEnabled(z);
}

public void setKeyListener(@Nullable KeyListener keyListener) {
super.setKeyListener(this.mAppCompatEmojiEditTextHelper.getKeyListener(keyListener));
}

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public void setSupportBackgroundTintList(@Nullable ColorStateList colorStateList) {
AppCompatBackgroundHelper appCompatBackgroundHelper = this.mBackgroundTintHelper;
if (appCompatBackgroundHelper != null) {
appCompatBackgroundHelper.setSupportBackgroundTintList(colorStateList);
}
}

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public void setSupportBackgroundTintMode(@Nullable PorterDuff.Mode mode) {
AppCompatBackgroundHelper appCompatBackgroundHelper = this.mBackgroundTintHelper;
if (appCompatBackgroundHelper != null) {
appCompatBackgroundHelper.setSupportBackgroundTintMode(mode);
}
}

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public void setSupportCompoundDrawablesTintList(@Nullable ColorStateList colorStateList) {
this.mTextHelper.setCompoundDrawableTintList(colorStateList);
this.mTextHelper.applyCompoundDrawablesTints();
}

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public void setSupportCompoundDrawablesTintMode(@Nullable PorterDuff.Mode mode) {
this.mTextHelper.setCompoundDrawableTintMode(mode);
this.mTextHelper.applyCompoundDrawablesTints();
}

public void setTextAppearance(Context context, int i) {
super.setTextAppearance(context, i);
AppCompatTextHelper appCompatTextHelper = this.mTextHelper;
if (appCompatTextHelper != null) {
appCompatTextHelper.onSetTextAppearance(context, i);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\appcompat\widget\ContentFrameLayout.java

package androidx.appcompat.widget;

import android.content.Context;
import android.graphics.Rect;
import android.util.AttributeSet;
import android.util.TypedValue;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.RestrictTo;
import androidx.core.view.ViewCompat;

@RestrictTo({RestrictTo.Scope.LIBRARY})
public class ContentFrameLayout extends FrameLayout {
private OnAttachListener mAttachListener;
private final Rect mDecorPadding;
private TypedValue mFixedHeightMajor;
private TypedValue mFixedHeightMinor;
private TypedValue mFixedWidthMajor;
private TypedValue mFixedWidthMinor;
private TypedValue mMinWidthMajor;
private TypedValue mMinWidthMinor;

public ContentFrameLayout(@NonNull Context context) {
this(context, (AttributeSet) null);
}

public ContentFrameLayout(@NonNull Context context, @Nullable AttributeSet attributeSet) {
this(context, attributeSet, 0);
}

public ContentFrameLayout(@NonNull Context context, @Nullable AttributeSet attributeSet, int i) {
super(context, attributeSet, i);
this.mDecorPadding = new Rect();
}

@RestrictTo({RestrictTo.Scope.LIBRARY})
public void dispatchFitSystemWindows(Rect rect) {
fitSystemWindows(rect);
}

public TypedValue getFixedHeightMajor() {
if (this.mFixedHeightMajor == null) {
this.mFixedHeightMajor = new TypedValue();
}
return this.mFixedHeightMajor;
}

public TypedValue getFixedHeightMinor() {
if (this.mFixedHeightMinor == null) {
this.mFixedHeightMinor = new TypedValue();
}
return this.mFixedHeightMinor;
}

public TypedValue getFixedWidthMajor() {
if (this.mFixedWidthMajor == null) {
this.mFixedWidthMajor = new TypedValue();
}
return this.mFixedWidthMajor;
}

public TypedValue getFixedWidthMinor() {
if (this.mFixedWidthMinor == null) {
this.mFixedWidthMinor = new TypedValue();
}
return this.mFixedWidthMinor;
}

public TypedValue getMinWidthMajor() {
if (this.mMinWidthMajor == null) {
this.mMinWidthMajor = new TypedValue();
}
return this.mMinWidthMajor;
}

public TypedValue getMinWidthMinor() {
if (this.mMinWidthMinor == null) {
this.mMinWidthMinor = new TypedValue();
}
return this.mMinWidthMinor;
}

public void onAttachedToWindow() {
super.onAttachedToWindow();
OnAttachListener onAttachListener = this.mAttachListener;
if (onAttachListener != null) {
onAttachListener.onAttachedFromWindow();
}
}

public void onDetachedFromWindow() {
super.onDetachedFromWindow();
OnAttachListener onAttachListener = this.mAttachListener;
if (onAttachListener != null) {
onAttachListener.onDetachedFromWindow();
}
}

/* JADX WARNING: Removed duplicated region for block: B:19:0x004a  */
/* JADX WARNING: Removed duplicated region for block: B:22:0x0063  */
/* JADX WARNING: Removed duplicated region for block: B:35:0x0086  */
/* JADX WARNING: Removed duplicated region for block: B:40:0x00ab  */
/* JADX WARNING: Removed duplicated region for block: B:41:0x00ae  */
/* JADX WARNING: Removed duplicated region for block: B:46:0x00b8  */
/* JADX WARNING: Removed duplicated region for block: B:48:0x00be  */
/* JADX WARNING: Removed duplicated region for block: B:52:0x00cc  */
/* JADX WARNING: Removed duplicated region for block: B:54:0x00d6  */
/* JADX WARNING: Removed duplicated region for block: B:57:0x00de  */
/* JADX WARNING: Removed duplicated region for block: B:59:? A[RETURN, SYNTHETIC] */
/* Code decompiled incorrectly, please refer to instructions dump. */
public void onMeasure(int r14, int r15) {
/*
r13 = this;
android.content.Context r0 = r13.getContext()
android.content.res.Resources r0 = r0.getResources()
android.util.DisplayMetrics r0 = r0.getDisplayMetrics()
int r1 = r0.widthPixels
int r2 = r0.heightPixels
r3 = 1
r4 = 0
if (r1 >= r2) goto L_0x0016
r1 = r3
goto L_0x0017
L_0x0016:
r1 = r4
L_0x0017:
int r2 = android.view.View.MeasureSpec.getMode(r14)
int r5 = android.view.View.MeasureSpec.getMode(r15)
r6 = 6
r7 = 5
r8 = -2147483648(0xffffffff80000000, float:-0.0)
r9 = 1073741824(0x40000000, float:2.0)
if (r2 != r8) goto L_0x0060
if (r1 == 0) goto L_0x002c
android.util.TypedValue r10 = r13.mFixedWidthMinor
goto L_0x002e
L_0x002c:
android.util.TypedValue r10 = r13.mFixedWidthMajor
L_0x002e:
if (r10 == 0) goto L_0x0060
int r11 = r10.type
if (r11 == 0) goto L_0x0060
if (r11 != r7) goto L_0x003c
float r10 = r10.getDimension(r0)
L_0x003a:
int r10 = (int) r10
goto L_0x0048
L_0x003c:
if (r11 != r6) goto L_0x0047
int r11 = r0.widthPixels
float r12 = (float) r11
float r11 = (float) r11
float r10 = r10.getFraction(r12, r11)
goto L_0x003a
L_0x0047:
r10 = r4
L_0x0048:
if (r10 <= 0) goto L_0x0060
android.graphics.Rect r11 = r13.mDecorPadding
int r12 = r11.left
int r11 = r11.right
int r12 = r12 + r11
int r10 = r10 - r12
int r14 = android.view.View.MeasureSpec.getSize(r14)
int r14 = java.lang.Math.min(r10, r14)
int r14 = android.view.View.MeasureSpec.makeMeasureSpec(r14, r9)
r10 = r3
goto L_0x0061
L_0x0060:
r10 = r4
L_0x0061:
if (r5 != r8) goto L_0x009a
if (r1 == 0) goto L_0x0068
android.util.TypedValue r5 = r13.mFixedHeightMajor
goto L_0x006a
L_0x0068:
android.util.TypedValue r5 = r13.mFixedHeightMinor
L_0x006a:
if (r5 == 0) goto L_0x009a
int r11 = r5.type
if (r11 == 0) goto L_0x009a
if (r11 != r7) goto L_0x0078
float r5 = r5.getDimension(r0)
L_0x0076:
int r5 = (int) r5
goto L_0x0084
L_0x0078:
if (r11 != r6) goto L_0x0083
int r11 = r0.heightPixels
float r12 = (float) r11
float r11 = (float) r11
float r5 = r5.getFraction(r12, r11)
goto L_0x0076
L_0x0083:
r5 = r4
L_0x0084:
if (r5 <= 0) goto L_0x009a
android.graphics.Rect r11 = r13.mDecorPadding
int r12 = r11.top
int r11 = r11.bottom
int r12 = r12 + r11
int r5 = r5 - r12
int r15 = android.view.View.MeasureSpec.getSize(r15)
int r15 = java.lang.Math.min(r5, r15)
int r15 = android.view.View.MeasureSpec.makeMeasureSpec(r15, r9)
L_0x009a:
super.onMeasure(r14, r15)
int r14 = r13.getMeasuredWidth()
int r5 = android.view.View.MeasureSpec.makeMeasureSpec(r14, r9)
if (r10 != 0) goto L_0x00db
if (r2 != r8) goto L_0x00db
if (r1 == 0) goto L_0x00ae
android.util.TypedValue r1 = r13.mMinWidthMinor
goto L_0x00b0
L_0x00ae:
android.util.TypedValue r1 = r13.mMinWidthMajor
L_0x00b0:
if (r1 == 0) goto L_0x00db
int r2 = r1.type
if (r2 == 0) goto L_0x00db
if (r2 != r7) goto L_0x00be
float r0 = r1.getDimension(r0)
L_0x00bc:
int r0 = (int) r0
goto L_0x00ca
L_0x00be:
if (r2 != r6) goto L_0x00c9
int r0 = r0.widthPixels
float r2 = (float) r0
float r0 = (float) r0
float r0 = r1.getFraction(r2, r0)
goto L_0x00bc
L_0x00c9:
r0 = r4
L_0x00ca:
if (r0 <= 0) goto L_0x00d4
android.graphics.Rect r1 = r13.mDecorPadding
int r2 = r1.left
int r1 = r1.right
int r2 = r2 + r1
int r0 = r0 - r2
L_0x00d4:
if (r14 >= r0) goto L_0x00db
int r5 = android.view.View.MeasureSpec.makeMeasureSpec(r0, r9)
goto L_0x00dc
L_0x00db:
r3 = r4
L_0x00dc:
if (r3 == 0) goto L_0x00e1
super.onMeasure(r5, r15)
L_0x00e1:
return
*/
throw new UnsupportedOperationException("Method not decompiled: androidx.appcompat.widget.ContentFrameLayout.onMeasure(int, int):void");
}

public void setAttachListener(OnAttachListener onAttachListener) {
this.mAttachListener = onAttachListener;
}

@RestrictTo({RestrictTo.Scope.LIBRARY})
public void setDecorPadding(int i, int i3, int i4, int i5) {
this.mDecorPadding.set(i, i3, i4, i5);
if (ViewCompat.isLaidOut(this)) {
requestLayout();
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\browser\trusted\sharing\ShareTarget$FileFormField.java

package androidx.browser.trusted.sharing;

import android.os.Bundle;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public final class ShareTarget$FileFormField {
public static final String KEY_ACCEPTED_TYPES = "androidx.browser.trusted.sharing.KEY_ACCEPTED_TYPES";
public static final String KEY_NAME = "androidx.browser.trusted.sharing.KEY_FILE_NAME";
@NonNull
public final List<String> acceptedTypes;
@NonNull
public final String name;

public ShareTarget$FileFormField(@NonNull String str, @NonNull List<String> list) {
this.name = str;
this.acceptedTypes = Collections.unmodifiableList(list);
}

@Nullable
public static ShareTarget$FileFormField fromBundle(@Nullable Bundle bundle) {
if (bundle == null) {
return null;
}
String string = bundle.getString(KEY_NAME);
ArrayList<String> stringArrayList = bundle.getStringArrayList(KEY_ACCEPTED_TYPES);
if (string == null || stringArrayList == null) {
return null;
}
return new ShareTarget$FileFormField(string, stringArrayList);
}

@NonNull
public Bundle toBundle() {
Bundle bundle = new Bundle();
bundle.putString(KEY_NAME, this.name);
bundle.putStringArrayList(KEY_ACCEPTED_TYPES, new ArrayList(this.acceptedTypes));
return bundle;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\constraintlayout\core\parser\CLParser$TYPE.java

package androidx.constraintlayout.core.parser;

public enum CLParser$TYPE {
UNKNOWN,
OBJECT,
ARRAY,
NUMBER,
STRING,
KEY,
TOKEN
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\constraintlayout\core\state\helpers\AlignVerticallyReference.java

package androidx.constraintlayout.core.state.helpers;

import androidx.constraintlayout.core.state.ConstraintReference;
import androidx.constraintlayout.core.state.HelperReference;
import androidx.constraintlayout.core.state.State;
import java.util.Iterator;

public class AlignVerticallyReference extends HelperReference {
private float mBias = 0.5f;

public AlignVerticallyReference(State state) {
super(state, State.Helper.ALIGN_VERTICALLY);
}

public void apply() {
Iterator it = this.mReferences.iterator();
while (it.hasNext()) {
ConstraintReference constraints = this.mState.constraints(it.next());
constraints.clearVertical();
Object obj = this.mTopToTop;
if (obj != null) {
constraints.topToTop(obj);
} else {
Object obj2 = this.mTopToBottom;
if (obj2 != null) {
constraints.topToBottom(obj2);
} else {
constraints.topToTop(State.PARENT);
}
}
Object obj3 = this.mBottomToTop;
if (obj3 != null) {
constraints.bottomToTop(obj3);
} else {
Object obj4 = this.mBottomToBottom;
if (obj4 != null) {
constraints.bottomToBottom(obj4);
} else {
constraints.bottomToBottom(State.PARENT);
}
}
float f = this.mBias;
if (f != 0.5f) {
constraints.verticalBias(f);
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\constraintlayout\core\state\helpers\BarrierReference$1.java

package androidx.constraintlayout.core.state.helpers;

public /* synthetic */ class BarrierReference$1 {
public static final /* synthetic */ int[] $SwitchMap$androidx$constraintlayout$core$state$State$Direction;

/* JADX WARNING: Can't wrap try/catch for region: R(14:0|1|2|3|4|5|6|7|8|9|10|11|12|14) */
/* JADX WARNING: Failed to process nested try/catch */
/* JADX WARNING: Missing exception handler attribute for start block: B:11:0x003e */
/* JADX WARNING: Missing exception handler attribute for start block: B:3:0x0012 */
/* JADX WARNING: Missing exception handler attribute for start block: B:5:0x001d */
/* JADX WARNING: Missing exception handler attribute for start block: B:7:0x0028 */
/* JADX WARNING: Missing exception handler attribute for start block: B:9:0x0033 */
static {
/*
androidx.constraintlayout.core.state.State$Direction[] r0 = androidx.constraintlayout.core.state.State.Direction.values()
int r0 = r0.length
int[] r0 = new int[r0]
$SwitchMap$androidx$constraintlayout$core$state$State$Direction = r0
androidx.constraintlayout.core.state.State$Direction r1 = androidx.constraintlayout.core.state.State.Direction.LEFT     // Catch:{ NoSuchFieldError -> 0x0012 }
int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x0012 }
r2 = 1
r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x0012 }
L_0x0012:
int[] r0 = $SwitchMap$androidx$constraintlayout$core$state$State$Direction     // Catch:{ NoSuchFieldError -> 0x001d }
androidx.constraintlayout.core.state.State$Direction r1 = androidx.constraintlayout.core.state.State.Direction.START     // Catch:{ NoSuchFieldError -> 0x001d }
int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x001d }
r2 = 2
r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x001d }
L_0x001d:
int[] r0 = $SwitchMap$androidx$constraintlayout$core$state$State$Direction     // Catch:{ NoSuchFieldError -> 0x0028 }
androidx.constraintlayout.core.state.State$Direction r1 = androidx.constraintlayout.core.state.State.Direction.RIGHT     // Catch:{ NoSuchFieldError -> 0x0028 }
int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x0028 }
r2 = 3
r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x0028 }
L_0x0028:
int[] r0 = $SwitchMap$androidx$constraintlayout$core$state$State$Direction     // Catch:{ NoSuchFieldError -> 0x0033 }
androidx.constraintlayout.core.state.State$Direction r1 = androidx.constraintlayout.core.state.State.Direction.END     // Catch:{ NoSuchFieldError -> 0x0033 }
int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x0033 }
r2 = 4
r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x0033 }
L_0x0033:
int[] r0 = $SwitchMap$androidx$constraintlayout$core$state$State$Direction     // Catch:{ NoSuchFieldError -> 0x003e }
androidx.constraintlayout.core.state.State$Direction r1 = androidx.constraintlayout.core.state.State.Direction.TOP     // Catch:{ NoSuchFieldError -> 0x003e }
int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x003e }
r2 = 5
r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x003e }
L_0x003e:
int[] r0 = $SwitchMap$androidx$constraintlayout$core$state$State$Direction     // Catch:{ NoSuchFieldError -> 0x0049 }
androidx.constraintlayout.core.state.State$Direction r1 = androidx.constraintlayout.core.state.State.Direction.BOTTOM     // Catch:{ NoSuchFieldError -> 0x0049 }
int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x0049 }
r2 = 6
r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x0049 }
L_0x0049:
return
*/
throw new UnsupportedOperationException("Method not decompiled: androidx.constraintlayout.core.state.helpers.BarrierReference$1.<clinit>():void");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\constraintlayout\motion\utils\ViewOscillator$AlphaSet.java

package androidx.constraintlayout.motion.utils;

import android.view.View;

public class ViewOscillator$AlphaSet extends ViewOscillator {
public void setProperty(View view, float f) {
view.setAlpha(get(f));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\constraintlayout\motion\utils\ViewSpline$RotationYset.java

package androidx.constraintlayout.motion.utils;

import android.view.View;

public class ViewSpline$RotationYset extends ViewSpline {
public void setProperty(View view, float f) {
view.setRotationY(get(f));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\constraintlayout\widget\ConstraintLayoutStates.java

package androidx.constraintlayout.widget;

import android.content.Context;
import android.util.Log;
import android.util.SparseArray;
import org.xmlpull.v1.XmlPullParser;

public class ConstraintLayoutStates {
private static final boolean DEBUG = false;
public static final String TAG = "ConstraintLayoutStates";
private final ConstraintLayout mConstraintLayout;
private SparseArray<ConstraintSet> mConstraintSetMap = new SparseArray<>();
private ConstraintsChangedListener mConstraintsChangedListener = null;
public int mCurrentConstraintNumber = -1;
public int mCurrentStateId = -1;
public ConstraintSet mDefaultConstraintSet;
private SparseArray<State> mStateList = new SparseArray<>();

public ConstraintLayoutStates(Context context, ConstraintLayout constraintLayout, int i) {
this.mConstraintLayout = constraintLayout;
load(context, i);
}

/* JADX WARNING: Can't fix incorrect switch cases order */
/* Code decompiled incorrectly, please refer to instructions dump. */
private void load(android.content.Context r9, int r10) {
/*
r8 = this;
android.content.res.Resources r0 = r9.getResources()
android.content.res.XmlResourceParser r10 = r0.getXml(r10)
r0 = 0
int r1 = r10.getEventType()     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
L_0x000d:
r2 = 1
if (r1 == r2) goto L_0x008c
if (r1 == 0) goto L_0x007b
r3 = 2
if (r1 == r3) goto L_0x0017
goto L_0x007e
L_0x0017:
java.lang.String r1 = r10.getName()     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
r4 = -1
int r5 = r1.hashCode()     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
r6 = 4
r7 = 3
switch(r5) {
case -1349929691: goto L_0x004d;
case 80204913: goto L_0x0043;
case 1382829617: goto L_0x003a;
case 1657696882: goto L_0x0030;
case 1901439077: goto L_0x0026;
default: goto L_0x0025;
}     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
L_0x0025:
goto L_0x0057
L_0x0026:
java.lang.String r2 = "Variant"
boolean r1 = r1.equals(r2)     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
if (r1 == 0) goto L_0x0057
r2 = r7
goto L_0x0058
L_0x0030:
java.lang.String r2 = "layoutDescription"
boolean r1 = r1.equals(r2)     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
if (r1 == 0) goto L_0x0057
r2 = 0
goto L_0x0058
L_0x003a:
java.lang.String r5 = "StateSet"
boolean r1 = r1.equals(r5)     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
if (r1 == 0) goto L_0x0057
goto L_0x0058
L_0x0043:
java.lang.String r2 = "State"
boolean r1 = r1.equals(r2)     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
if (r1 == 0) goto L_0x0057
r2 = r3
goto L_0x0058
L_0x004d:
java.lang.String r2 = "ConstraintSet"
boolean r1 = r1.equals(r2)     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
if (r1 == 0) goto L_0x0057
r2 = r6
goto L_0x0058
L_0x0057:
r2 = r4
L_0x0058:
if (r2 == r3) goto L_0x006e
if (r2 == r7) goto L_0x0063
if (r2 == r6) goto L_0x005f
goto L_0x007e
L_0x005f:
r8.parseConstraintSet(r9, r10)     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
goto L_0x007e
L_0x0063:
androidx.constraintlayout.widget.ConstraintLayoutStates$Variant r1 = new androidx.constraintlayout.widget.ConstraintLayoutStates$Variant     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
r1.<init>(r9, r10)     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
if (r0 == 0) goto L_0x007e
r0.add(r1)     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
goto L_0x007e
L_0x006e:
androidx.constraintlayout.widget.ConstraintLayoutStates$State r0 = new androidx.constraintlayout.widget.ConstraintLayoutStates$State     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
r0.<init>(r9, r10)     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
android.util.SparseArray<androidx.constraintlayout.widget.ConstraintLayoutStates$State> r1 = r8.mStateList     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
int r2 = r0.mId     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
r1.put(r2, r0)     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
goto L_0x007e
L_0x007b:
r10.getName()     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
L_0x007e:
int r1 = r10.next()     // Catch:{ XmlPullParserException -> 0x0088, IOException -> 0x0083 }
goto L_0x000d
L_0x0083:
r9 = move-exception
r9.printStackTrace()
goto L_0x008c
L_0x0088:
r9 = move-exception
r9.printStackTrace()
L_0x008c:
return
*/
throw new UnsupportedOperationException("Method not decompiled: androidx.constraintlayout.widget.ConstraintLayoutStates.load(android.content.Context, int):void");
}

private void parseConstraintSet(Context context, XmlPullParser xmlPullParser) {
int i;
ConstraintSet constraintSet = new ConstraintSet();
int attributeCount = xmlPullParser.getAttributeCount();
int i3 = 0;
while (i3 < attributeCount) {
String attributeName = xmlPullParser.getAttributeName(i3);
String attributeValue = xmlPullParser.getAttributeValue(i3);
if (attributeName == null || attributeValue == null || !"id".equals(attributeName)) {
i3++;
} else {
if (attributeValue.contains("/")) {
i = context.getResources().getIdentifier(attributeValue.substring(attributeValue.indexOf(47) + 1), "id", context.getPackageName());
} else {
i = -1;
}
if (i == -1) {
if (attributeValue.length() > 1) {
i = Integer.parseInt(attributeValue.substring(1));
} else {
Log.e(TAG, "error in parsing id");
}
}
constraintSet.load(context, xmlPullParser);
this.mConstraintSetMap.put(i, constraintSet);
return;
}
}
}

public boolean needsToChange(int i, float f, float f2) {
int i3 = this.mCurrentStateId;
if (i3 != i) {
return true;
}
State state = (State) (i == -1 ? this.mStateList.valueAt(0) : this.mStateList.get(i3));
int i4 = this.mCurrentConstraintNumber;
return (i4 == -1 || !((Variant) state.mVariants.get(i4)).match(f, f2)) && this.mCurrentConstraintNumber != state.findMatch(f, f2);
}

public void setOnConstraintsChanged(ConstraintsChangedListener constraintsChangedListener) {
this.mConstraintsChangedListener = constraintsChangedListener;
}

public void updateConstraints(int i, float f, float f2) {
int findMatch;
int i3 = this.mCurrentStateId;
if (i3 == i) {
State valueAt = i == -1 ? this.mStateList.valueAt(0) : this.mStateList.get(i3);
int i4 = this.mCurrentConstraintNumber;
if ((i4 == -1 || !((Variant) valueAt.mVariants.get(i4)).match(f, f2)) && this.mCurrentConstraintNumber != (findMatch = valueAt.findMatch(f, f2))) {
ConstraintSet constraintSet = findMatch == -1 ? this.mDefaultConstraintSet : ((Variant) valueAt.mVariants.get(findMatch)).mConstraintSet;
int i5 = findMatch == -1 ? valueAt.mConstraintID : ((Variant) valueAt.mVariants.get(findMatch)).mConstraintID;
if (constraintSet != null) {
this.mCurrentConstraintNumber = findMatch;
ConstraintsChangedListener constraintsChangedListener = this.mConstraintsChangedListener;
if (constraintsChangedListener != null) {
constraintsChangedListener.preLayoutChange(-1, i5);
}
constraintSet.applyTo(this.mConstraintLayout);
ConstraintsChangedListener constraintsChangedListener2 = this.mConstraintsChangedListener;
if (constraintsChangedListener2 != null) {
constraintsChangedListener2.postLayoutChange(-1, i5);
return;
}
return;
}
return;
}
return;
}
this.mCurrentStateId = i;
State state = this.mStateList.get(i);
int findMatch2 = state.findMatch(f, f2);
ConstraintSet constraintSet2 = findMatch2 == -1 ? state.mConstraintSet : ((Variant) state.mVariants.get(findMatch2)).mConstraintSet;
int i6 = findMatch2 == -1 ? state.mConstraintID : ((Variant) state.mVariants.get(findMatch2)).mConstraintID;
if (constraintSet2 == null) {
Log.v(TAG, "NO Constraint set found ! id=" + i + ", dim =" + f + ", " + f2);
return;
}
this.mCurrentConstraintNumber = findMatch2;
ConstraintsChangedListener constraintsChangedListener3 = this.mConstraintsChangedListener;
if (constraintsChangedListener3 != null) {
constraintsChangedListener3.preLayoutChange(i, i6);
}
constraintSet2.applyTo(this.mConstraintLayout);
ConstraintsChangedListener constraintsChangedListener4 = this.mConstraintsChangedListener;
if (constraintsChangedListener4 != null) {
constraintsChangedListener4.postLayoutChange(i, i6);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\constraintlayout\widget\Group.java

package androidx.constraintlayout.widget;

import android.content.Context;
import android.util.AttributeSet;
import androidx.constraintlayout.widget.ConstraintLayout;

public class Group extends ConstraintHelper {
public Group(Context context) {
super(context);
}

public Group(Context context, AttributeSet attributeSet) {
super(context, attributeSet);
}

public Group(Context context, AttributeSet attributeSet, int i) {
super(context, attributeSet, i);
}

public void applyLayoutFeaturesInConstraintSet(ConstraintLayout constraintLayout) {
applyLayoutFeatures(constraintLayout);
}

public void init(AttributeSet attributeSet) {
Group.super.init(attributeSet);
this.mUseViewMeasure = false;
}

public void onAttachedToWindow() {
Group.super.onAttachedToWindow();
applyLayoutFeatures();
}

/* JADX WARNING: type inference failed for: r0v0, types: [android.view.View, androidx.constraintlayout.widget.ConstraintHelper, androidx.constraintlayout.widget.Group] */
public void setElevation(float f) {
Group.super.setElevation(f);
applyLayoutFeatures();
}

/* JADX WARNING: type inference failed for: r0v0, types: [android.view.View, androidx.constraintlayout.widget.ConstraintHelper, androidx.constraintlayout.widget.Group] */
public void setVisibility(int i) {
Group.super.setVisibility(i);
applyLayoutFeatures();
}

/* JADX WARNING: type inference failed for: r2v0, types: [android.view.View, androidx.constraintlayout.widget.Group] */
public void updatePostLayout(ConstraintLayout constraintLayout) {
ConstraintLayout.LayoutParams layoutParams = getLayoutParams();
layoutParams.widget.setWidth(0);
layoutParams.widget.setHeight(0);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\constraintlayout\widget\StateSet$State.java

package androidx.constraintlayout.widget;

import android.content.Context;
import android.content.res.TypedArray;
import android.util.Xml;
import androidx.constraintlayout.widget.StateSet;
import java.util.ArrayList;
import org.xmlpull.v1.XmlPullParser;

public class StateSet$State {
public int mConstraintID = -1;
public int mId;
public boolean mIsLayout;
public ArrayList<StateSet.Variant> mVariants = new ArrayList<>();

public StateSet$State(Context context, XmlPullParser xmlPullParser) {
this.mIsLayout = false;
TypedArray obtainStyledAttributes = context.obtainStyledAttributes(Xml.asAttributeSet(xmlPullParser), R.styleable.State);
int indexCount = obtainStyledAttributes.getIndexCount();
for (int i = 0; i < indexCount; i++) {
int index = obtainStyledAttributes.getIndex(i);
if (index == R.styleable.State_android_id) {
this.mId = obtainStyledAttributes.getResourceId(index, this.mId);
} else if (index == R.styleable.State_constraints) {
this.mConstraintID = obtainStyledAttributes.getResourceId(index, this.mConstraintID);
String resourceTypeName = context.getResources().getResourceTypeName(this.mConstraintID);
context.getResources().getResourceName(this.mConstraintID);
if ("layout".equals(resourceTypeName)) {
this.mIsLayout = true;
}
}
}
obtainStyledAttributes.recycle();
}

public void add(StateSet.Variant variant) {
this.mVariants.add(variant);
}

public int findMatch(float f, float f2) {
for (int i = 0; i < this.mVariants.size(); i++) {
if (this.mVariants.get(i).match(f, f2)) {
return i;
}
}
return -1;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\app\ActivityCompat$SharedElementCallback21Impl.java

package androidx.core.app;

import android.app.SharedElementCallback;
import android.content.Context;
import android.graphics.Matrix;
import android.graphics.RectF;
import android.os.Parcelable;
import android.view.View;
import androidx.annotation.RequiresApi;
import java.util.List;
import java.util.Map;

@RequiresApi(21)
public class ActivityCompat$SharedElementCallback21Impl extends SharedElementCallback {
private final SharedElementCallback mCallback;

public ActivityCompat$SharedElementCallback21Impl(SharedElementCallback sharedElementCallback) {
this.mCallback = sharedElementCallback;
}

public Parcelable onCaptureSharedElementSnapshot(View view, Matrix matrix, RectF rectF) {
return this.mCallback.onCaptureSharedElementSnapshot(view, matrix, rectF);
}

public View onCreateSnapshotView(Context context, Parcelable parcelable) {
return this.mCallback.onCreateSnapshotView(context, parcelable);
}

public void onMapSharedElements(List<String> list, Map<String, View> map) {
this.mCallback.onMapSharedElements(list, map);
}

public void onRejectSharedElements(List<View> list) {
this.mCallback.onRejectSharedElements(list);
}

public void onSharedElementEnd(List<String> list, List<View> list2, List<View> list3) {
this.mCallback.onSharedElementEnd(list, list2, list3);
}

public void onSharedElementStart(List<String> list, List<View> list2, List<View> list3) {
this.mCallback.onSharedElementStart(list, list2, list3);
}

@RequiresApi(23)
public void onSharedElementsArrived(List<String> list, List<View> list2, SharedElementCallback.OnSharedElementsReadyListener onSharedElementsReadyListener) {
this.mCallback.onSharedElementsArrived(list, list2, new b(onSharedElementsReadyListener));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\app\NotificationCompat$Action$SemanticAction.java

package androidx.core.app;

import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

@Retention(RetentionPolicy.SOURCE)
public @interface NotificationCompat$Action$SemanticAction {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\app\NotificationCompat$InboxStyle.java

package androidx.core.app;

import android.app.Notification;
import android.os.Bundle;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.RestrictTo;
import androidx.core.app.NotificationCompat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;

public class NotificationCompat$InboxStyle extends NotificationCompat.Style {
private static final String TEMPLATE_CLASS_NAME = "androidx.core.app.NotificationCompat$InboxStyle";
private ArrayList<CharSequence> mTexts = new ArrayList<>();

public NotificationCompat$InboxStyle() {
}

public NotificationCompat$InboxStyle(@Nullable NotificationCompat.Builder builder) {
setBuilder(builder);
}

@NonNull
public NotificationCompat$InboxStyle addLine(@Nullable CharSequence charSequence) {
if (charSequence != null) {
this.mTexts.add(NotificationCompat.Builder.limitCharSequenceLength(charSequence));
}
return this;
}

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public void apply(NotificationBuilderWithBuilderAccessor notificationBuilderWithBuilderAccessor) {
Notification.InboxStyle bigContentTitle = new Notification.InboxStyle(notificationBuilderWithBuilderAccessor.getBuilder()).setBigContentTitle(this.mBigContentTitle);
if (this.mSummaryTextSet) {
bigContentTitle.setSummaryText(this.mSummaryText);
}
Iterator<CharSequence> it = this.mTexts.iterator();
while (it.hasNext()) {
bigContentTitle.addLine(it.next());
}
}

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public void clearCompatExtraKeys(@NonNull Bundle bundle) {
NotificationCompat$InboxStyle.super.clearCompatExtraKeys(bundle);
bundle.remove("android.textLines");
}

@NonNull
@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public String getClassName() {
return TEMPLATE_CLASS_NAME;
}

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public void restoreFromCompatExtras(@NonNull Bundle bundle) {
NotificationCompat$InboxStyle.super.restoreFromCompatExtras(bundle);
this.mTexts.clear();
if (bundle.containsKey("android.textLines")) {
Collections.addAll(this.mTexts, bundle.getCharSequenceArray("android.textLines"));
}
}

@NonNull
public NotificationCompat$InboxStyle setBigContentTitle(@Nullable CharSequence charSequence) {
this.mBigContentTitle = NotificationCompat.Builder.limitCharSequenceLength(charSequence);
return this;
}

@NonNull
public NotificationCompat$InboxStyle setSummaryText(@Nullable CharSequence charSequence) {
this.mSummaryText = NotificationCompat.Builder.limitCharSequenceLength(charSequence);
this.mSummaryTextSet = true;
return this;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\app\unusedapprestrictions\IUnusedAppRestrictionsBackportService$Stub.java

package androidx.core.app.unusedapprestrictions;

import android.os.Binder;
import android.os.IBinder;
import android.os.Parcel;
import android.os.RemoteException;
import androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback;

public abstract class IUnusedAppRestrictionsBackportService$Stub extends Binder implements IUnusedAppRestrictionsBackportService {
private static final String DESCRIPTOR = "androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService";
public static final int TRANSACTION_isPermissionRevocationEnabledForApp = 1;

/* JADX WARNING: type inference failed for: r1v0, types: [android.os.Binder, android.os.IInterface, androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub] */
public IUnusedAppRestrictionsBackportService$Stub() {
attachInterface(this, DESCRIPTOR);
}

public static IUnusedAppRestrictionsBackportService asInterface(IBinder iBinder) {
if (iBinder == null) {
return null;
}
IUnusedAppRestrictionsBackportService queryLocalInterface = iBinder.queryLocalInterface(DESCRIPTOR);
return (queryLocalInterface == null || !(queryLocalInterface instanceof IUnusedAppRestrictionsBackportService)) ? new Proxy(iBinder) : queryLocalInterface;
}

public static IUnusedAppRestrictionsBackportService getDefaultImpl() {
return Proxy.sDefaultImpl;
}

public static boolean setDefaultImpl(IUnusedAppRestrictionsBackportService iUnusedAppRestrictionsBackportService) {
if (Proxy.sDefaultImpl != null) {
throw new IllegalStateException("setDefaultImpl() called twice");
} else if (iUnusedAppRestrictionsBackportService == null) {
return false;
} else {
Proxy.sDefaultImpl = iUnusedAppRestrictionsBackportService;
return true;
}
}

public IBinder asBinder() {
return this;
}

public boolean onTransact(int i, Parcel parcel, Parcel parcel2, int i3) throws RemoteException {
if (i == 1) {
parcel.enforceInterface(DESCRIPTOR);
isPermissionRevocationEnabledForApp(IUnusedAppRestrictionsBackportCallback.Stub.asInterface(parcel.readStrongBinder()));
return true;
} else if (i != 1598968902) {
return super.onTransact(i, parcel, parcel2, i3);
} else {
parcel2.writeString(DESCRIPTOR);
return true;
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\content\res\FontResourcesParserCompat$FontFileResourceEntry.java

package androidx.core.content.res;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;

public final class FontResourcesParserCompat$FontFileResourceEntry {
@NonNull
private final String mFileName;
private final boolean mItalic;
private final int mResourceId;
private final int mTtcIndex;
private final String mVariationSettings;
private final int mWeight;

public FontResourcesParserCompat$FontFileResourceEntry(@NonNull String str, int i, boolean z, @Nullable String str2, int i3, int i4) {
this.mFileName = str;
this.mWeight = i;
this.mItalic = z;
this.mVariationSettings = str2;
this.mTtcIndex = i3;
this.mResourceId = i4;
}

@NonNull
public String getFileName() {
return this.mFileName;
}

public int getResourceId() {
return this.mResourceId;
}

public int getTtcIndex() {
return this.mTtcIndex;
}

@Nullable
public String getVariationSettings() {
return this.mVariationSettings;
}

public int getWeight() {
return this.mWeight;
}

public boolean isItalic() {
return this.mItalic;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\graphics\TypefaceCompatApi21Impl.java
private static final String ADD_FONT_WEIGHT_STYLE_METHOD = "addFontWeightStyle";
private static final String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD = "createFromFamiliesWithDefault";
private static final String FONT_FAMILY_CLASS = "android.graphics.FontFamily";
private static final String TAG = "TypefaceCompatApi21Impl";
private static Method sAddFontWeightStyle;
private static Method sCreateFromFamiliesWithDefault;
private static Class<?> sFontFamily;
private static Constructor<?> sFontFamilyCtor;
private static boolean sHasInitBeenCalled;

private static boolean addFontWeightStyle(Object obj, String str, int i, boolean z) {
init();
try {
return ((Boolean) sAddFontWeightStyle.invoke(obj, new Object[]{str, Integer.valueOf(i), Boolean.valueOf(z)})).booleanValue();
} catch (IllegalAccessException | InvocationTargetException e) {
throw new RuntimeException(e);
}
}

private static Typeface createFromFamiliesWithDefault(Object obj) {
init();
try {
Object newInstance = Array.newInstance(sFontFamily, 1);
Array.set(newInstance, 0, obj);
return (Typeface) sCreateFromFamiliesWithDefault.invoke((Object) null, new Object[]{newInstance});
} catch (IllegalAccessException | InvocationTargetException e) {
throw new RuntimeException(e);
}
}

private File getFile(@NonNull ParcelFileDescriptor parcelFileDescriptor) {
try {
String readlink = Os.readlink("/proc/self/fd/" + parcelFileDescriptor.getFd());
if (OsConstants.S_ISREG(Os.stat(readlink).st_mode)) {
return new File(readlink);
}
} catch (ErrnoException unused) {
}
return null;
}

private static void init() {
Method method;
Class<?> cls;
Method method2;
if (!sHasInitBeenCalled) {
sHasInitBeenCalled = true;
Constructor<?> constructor = null;
try {
cls = Class.forName(FONT_FAMILY_CLASS);
Constructor<?> constructor2 = cls.getConstructor(new Class[0]);
method = cls.getMethod(vcQz.ynOPFKGdD, new Class[]{String.class, Integer.TYPE, Boolean.TYPE});
method2 = Typeface.class.getMethod(CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD, new Class[]{Array.newInstance(cls, 1).getClass()});
constructor = constructor2;
} catch (ClassNotFoundException | NoSuchMethodException e) {
Log.e(TAG, e.getClass().getName(), e);
method2 = null;
cls = null;
method = null;
}
sFontFamilyCtor = constructor;
sFontFamily = cls;
sAddFontWeightStyle = method;
sCreateFromFamiliesWithDefault = method2;
}
}

private static Object newFamily() {
init();
try {
return sFontFamilyCtor.newInstance(new Object[0]);
} catch (IllegalAccessException | InstantiationException | InvocationTargetException e) {
throw new RuntimeException(e);
}
}

public Typeface createFromFontFamilyFilesResourceEntry(Context context, FontResourcesParserCompat.FontFamilyFilesResourceEntry fontFamilyFilesResourceEntry, Resources resources, int i) {
Object newFamily = newFamily();
FontResourcesParserCompat$FontFileResourceEntry[] entries = fontFamilyFilesResourceEntry.getEntries();
int length = entries.length;
int i3 = 0;
while (i3 < length) {
FontResourcesParserCompat$FontFileResourceEntry fontResourcesParserCompat$FontFileResourceEntry = entries[i3];
File tempFile = TypefaceCompatUtil.getTempFile(context);
if (tempFile == null) {
return null;
}
try {
if (!TypefaceCompatUtil.copyToFile(tempFile, resources, fontResourcesParserCompat$FontFileResourceEntry.getResourceId())) {
tempFile.delete();
return null;
} else if (!addFontWeightStyle(newFamily, tempFile.getPath(), fontResourcesParserCompat$FontFileResourceEntry.getWeight(), fontResourcesParserCompat$FontFileResourceEntry.isItalic())) {
return null;
} else {
tempFile.delete();
i3++;
}
} catch (RuntimeException unused) {
return null;
} finally {
tempFile.delete();
}
}
return createFromFamiliesWithDefault(newFamily);
}

public Typeface createFromFontInfo(Context context, CancellationSignal cancellationSignal, @NonNull FontsContractCompat.FontInfo[] fontInfoArr, int i) {
FileInputStream fileInputStream;
if (fontInfoArr.length < 1) {
return null;
}
FontsContractCompat.FontInfo findBestInfo = findBestInfo(fontInfoArr, i);
try {
ParcelFileDescriptor openFileDescriptor = context.getContentResolver().openFileDescriptor(findBestInfo.getUri(), "r", cancellationSignal);
if (openFileDescriptor == null) {
if (openFileDescriptor != null) {
openFileDescriptor.close();
}
return null;
}
try {
File file = getFile(openFileDescriptor);
if (file != null) {
if (file.canRead()) {
Typeface createFromFile = Typeface.createFromFile(file);
openFileDescriptor.close();
return createFromFile;
}
}
fileInputStream = new FileInputStream(openFileDescriptor.getFileDescriptor());
Typeface createFromInputStream = TypefaceCompatApi21Impl.super.createFromInputStream(context, fileInputStream);
fileInputStream.close();
openFileDescriptor.close();
return createFromInputStream;
} catch (Throwable th) {
openFileDescriptor.close();
throw th;
}
} catch (IOException unused) {
return null;
} catch (Throwable th2) {
th.addSuppressed(th2);
}
throw th;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\graphics\TypefaceCompatBaseImpl$1.java

package androidx.core.graphics;

import androidx.core.graphics.TypefaceCompatBaseImpl;
import androidx.core.provider.FontsContractCompat;

public class TypefaceCompatBaseImpl$1 implements TypefaceCompatBaseImpl.StyleExtractor<FontsContractCompat.FontInfo> {
public final /* synthetic */ TypefaceCompatBaseImpl this$0;

public TypefaceCompatBaseImpl$1(TypefaceCompatBaseImpl typefaceCompatBaseImpl) {
this.this$0 = typefaceCompatBaseImpl;
}

public int getWeight(FontsContractCompat.FontInfo fontInfo) {
return fontInfo.getWeight();
}

public boolean isItalic(FontsContractCompat.FontInfo fontInfo) {
return fontInfo.isItalic();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\graphics\TypefaceCompatBaseImpl$2.java

package androidx.core.graphics;

import androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry;
import androidx.core.graphics.TypefaceCompatBaseImpl;

public class TypefaceCompatBaseImpl$2 implements TypefaceCompatBaseImpl.StyleExtractor<FontResourcesParserCompat$FontFileResourceEntry> {
public final /* synthetic */ TypefaceCompatBaseImpl this$0;

public TypefaceCompatBaseImpl$2(TypefaceCompatBaseImpl typefaceCompatBaseImpl) {
this.this$0 = typefaceCompatBaseImpl;
}

public int getWeight(FontResourcesParserCompat$FontFileResourceEntry fontResourcesParserCompat$FontFileResourceEntry) {
return fontResourcesParserCompat$FontFileResourceEntry.getWeight();
}

public boolean isItalic(FontResourcesParserCompat$FontFileResourceEntry fontResourcesParserCompat$FontFileResourceEntry) {
return fontResourcesParserCompat$FontFileResourceEntry.isItalic();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\os\BuildCompat.java

package androidx.core.os;

import android.annotation.SuppressLint;
import android.os.Build;
import androidx.annotation.ChecksSdkIntAtLeast;
import androidx.annotation.NonNull;
import androidx.annotation.RestrictTo;
import java.util.Locale;

public class BuildCompat {
private BuildCompat() {
}

@Deprecated
@ChecksSdkIntAtLeast(api = 24)
public static boolean isAtLeastN() {
return Build.VERSION.SDK_INT >= 24;
}

@Deprecated
@ChecksSdkIntAtLeast(api = 25)
public static boolean isAtLeastNMR1() {
return Build.VERSION.SDK_INT >= 25;
}

@Deprecated
@ChecksSdkIntAtLeast(api = 26)
public static boolean isAtLeastO() {
return Build.VERSION.SDK_INT >= 26;
}

@Deprecated
@ChecksSdkIntAtLeast(api = 27)
public static boolean isAtLeastOMR1() {
return Build.VERSION.SDK_INT >= 27;
}

@Deprecated
@ChecksSdkIntAtLeast(api = 28)
public static boolean isAtLeastP() {
return Build.VERSION.SDK_INT >= 28;
}

@RestrictTo({RestrictTo.Scope.TESTS})
public static boolean isAtLeastPreReleaseCodename(@NonNull String str, @NonNull String str2) {
if ("REL".equals(str2)) {
return false;
}
Locale locale = Locale.ROOT;
return str2.toUpperCase(locale).compareTo(str.toUpperCase(locale)) >= 0;
}

@Deprecated
@ChecksSdkIntAtLeast(api = 29)
public static boolean isAtLeastQ() {
return Build.VERSION.SDK_INT >= 29;
}

@Deprecated
@ChecksSdkIntAtLeast(api = 30)
public static boolean isAtLeastR() {
return Build.VERSION.SDK_INT >= 30;
}

@SuppressLint({"RestrictedApi"})
@Deprecated
@ChecksSdkIntAtLeast(api = 31, codename = "S")
public static boolean isAtLeastS() {
int i = Build.VERSION.SDK_INT;
return i >= 31 || (i >= 30 && isAtLeastPreReleaseCodename("S", Build.VERSION.CODENAME));
}

@Deprecated
@ChecksSdkIntAtLeast(api = 32, codename = "Sv2")
@PrereleaseSdkCheck
public static boolean isAtLeastSv2() {
int i = Build.VERSION.SDK_INT;
return i >= 32 || (i >= 31 && isAtLeastPreReleaseCodename("Sv2", Build.VERSION.CODENAME));
}

@ChecksSdkIntAtLeast(api = 33, codename = "Tiramisu")
@PrereleaseSdkCheck
public static boolean isAtLeastT() {
int i = Build.VERSION.SDK_INT;
return i >= 33 || (i >= 32 && isAtLeastPreReleaseCodename("Tiramisu", Build.VERSION.CODENAME));
}

@ChecksSdkIntAtLeast(codename = "UpsideDownCake")
@PrereleaseSdkCheck
public static boolean isAtLeastU() {
return Build.VERSION.SDK_INT >= 33 && isAtLeastPreReleaseCodename("UpsideDownCake", Build.VERSION.CODENAME);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\os\HandlerCompat.java

package androidx.core.os;

import android.os.Build;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.util.Log;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.RequiresApi;
import com.bytedance.sdk.openadsdk.core.video.d.ZO.suskxClpKFPfVs;
import java.lang.reflect.InvocationTargetException;

public final class HandlerCompat {
private static final String TAG = "HandlerCompat";

private HandlerCompat() {
}

@NonNull
public static Handler createAsync(@NonNull Looper looper) {
if (Build.VERSION.SDK_INT >= 28) {
return Api28Impl.createAsync(looper);
}
Class<Handler> cls = Handler.class;
try {
return cls.getDeclaredConstructor(new Class[]{Looper.class, Handler.Callback.class, Boolean.TYPE}).newInstance(new Object[]{looper, null, Boolean.TRUE});
} catch (IllegalAccessException | InstantiationException | NoSuchMethodException e) {
Log.w(TAG, "Unable to invoke Handler(Looper, Callback, boolean) constructor", e);
return new Handler(looper);
} catch (InvocationTargetException e2) {
Throwable cause = e2.getCause();
if (cause instanceof RuntimeException) {
throw ((RuntimeException) cause);
} else if (cause instanceof Error) {
throw ((Error) cause);
} else {
throw new RuntimeException(cause);
}
}
}

@NonNull
public static Handler createAsync(@NonNull Looper looper, @NonNull Handler.Callback callback) {
if (Build.VERSION.SDK_INT >= 28) {
return Api28Impl.createAsync(looper, callback);
}
Class<Handler> cls = Handler.class;
try {
return cls.getDeclaredConstructor(new Class[]{Looper.class, Handler.Callback.class, Boolean.TYPE}).newInstance(new Object[]{looper, callback, Boolean.TRUE});
} catch (IllegalAccessException | InstantiationException | NoSuchMethodException e) {
Log.w(suskxClpKFPfVs.TWRPkOfmlad, "Unable to invoke Handler(Looper, Callback, boolean) constructor", e);
return new Handler(looper, callback);
} catch (InvocationTargetException e2) {
Throwable cause = e2.getCause();
if (cause instanceof RuntimeException) {
throw ((RuntimeException) cause);
} else if (cause instanceof Error) {
throw ((Error) cause);
} else {
throw new RuntimeException(cause);
}
}
}

@RequiresApi(16)
public static boolean hasCallbacks(@NonNull Handler handler, @NonNull Runnable runnable) {
if (Build.VERSION.SDK_INT >= 29) {
return Api29Impl.hasCallbacks(handler, runnable);
}
try {
return ((Boolean) Handler.class.getMethod("hasCallbacks", new Class[]{Runnable.class}).invoke(handler, new Object[]{runnable})).booleanValue();
} catch (InvocationTargetException e) {
Throwable cause = e.getCause();
if (cause instanceof RuntimeException) {
throw ((RuntimeException) cause);
} else if (cause instanceof Error) {
throw ((Error) cause);
} else {
throw new RuntimeException(cause);
}
} catch (IllegalAccessException | NoSuchMethodException | NullPointerException e2) {
throw new UnsupportedOperationException("Failed to call Handler.hasCallbacks(), but there is no safe failure mode for this method. Raising exception.", e2);
}
}

public static boolean postDelayed(@NonNull Handler handler, @NonNull Runnable runnable, @Nullable Object obj, long j2) {
if (Build.VERSION.SDK_INT >= 28) {
return Api28Impl.postDelayed(handler, runnable, obj, j2);
}
Message obtain = Message.obtain(handler, runnable);
obtain.obj = obj;
return handler.sendMessageDelayed(obtain, j2);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\provider\FontsContractCompat$FontRequestCallback$FontRequestFailReason.java

package androidx.core.provider;

import androidx.annotation.RestrictTo;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
@Retention(RetentionPolicy.SOURCE)
public @interface FontsContractCompat$FontRequestCallback$FontRequestFailReason {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\util\AndroidXConsumerKt.java

package androidx.core.util;

import kotlin.coroutines.c;
import kotlin.jvm.internal.o;
import org.jetbrains.annotations.NotNull;

public final class AndroidXConsumerKt {
@NotNull
public static final <T> Consumer<T> asAndroidXConsumer(@NotNull c<? super T> cVar) {
o.f(cVar, "<this>");
return new AndroidXContinuationConsumer(cVar);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\util\Supplier.java

package androidx.core.util;

public interface Supplier<T> {
T get();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\view\ActionProvider$VisibilityListener.java

package androidx.core.view;

public interface ActionProvider$VisibilityListener {
void onActionProviderVisibilityChanged(boolean z);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\view\NestedScrollingParent2.java

package androidx.core.view;

import android.view.View;
import androidx.annotation.NonNull;

public interface NestedScrollingParent2 extends NestedScrollingParent {
void onNestedPreScroll(@NonNull View view, int i, int i3, @NonNull int[] iArr, int i4);

void onNestedScroll(@NonNull View view, int i, int i3, int i4, int i5, int i6);

void onNestedScrollAccepted(@NonNull View view, @NonNull View view2, int i, int i3);

boolean onStartNestedScroll(@NonNull View view, @NonNull View view2, int i, int i3);

void onStopNestedScroll(@NonNull View view, int i);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\view\NestedScrollingParent3.java

package androidx.core.view;

import android.view.View;
import androidx.annotation.NonNull;

public interface NestedScrollingParent3 extends NestedScrollingParent2 {
void onNestedScroll(@NonNull View view, int i, int i3, int i4, int i5, int i6, @NonNull int[] iArr);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\view\ViewParentCompat.java

package androidx.core.view;

import android.util.Log;
import android.view.View;
import android.view.ViewParent;
import android.view.accessibility.AccessibilityEvent;
import androidx.annotation.NonNull;

public final class ViewParentCompat {
private static final String TAG = "ViewParentCompat";
private static int[] sTempNestedScrollConsumed;

private ViewParentCompat() {
}

private static int[] getTempNestedScrollConsumed() {
int[] iArr = sTempNestedScrollConsumed;
if (iArr == null) {
sTempNestedScrollConsumed = new int[2];
} else {
iArr[0] = 0;
iArr[1] = 0;
}
return sTempNestedScrollConsumed;
}

public static void notifySubtreeAccessibilityStateChanged(@NonNull ViewParent viewParent, @NonNull View view, @NonNull View view2, int i) {
Api19Impl.notifySubtreeAccessibilityStateChanged(viewParent, view, view2, i);
}

public static boolean onNestedFling(@NonNull ViewParent viewParent, @NonNull View view, float f, float f2, boolean z) {
try {
return Api21Impl.onNestedFling(viewParent, view, f, f2, z);
} catch (AbstractMethodError e) {
Log.e(TAG, "ViewParent " + viewParent + " does not implement interface method onNestedFling", e);
return false;
}
}

public static boolean onNestedPreFling(@NonNull ViewParent viewParent, @NonNull View view, float f, float f2) {
try {
return Api21Impl.onNestedPreFling(viewParent, view, f, f2);
} catch (AbstractMethodError e) {
Log.e(TAG, "ViewParent " + viewParent + " does not implement interface method onNestedPreFling", e);
return false;
}
}

public static void onNestedPreScroll(@NonNull ViewParent viewParent, @NonNull View view, int i, int i3, @NonNull int[] iArr) {
onNestedPreScroll(viewParent, view, i, i3, iArr, 0);
}

public static void onNestedPreScroll(@NonNull ViewParent viewParent, @NonNull View view, int i, int i3, @NonNull int[] iArr, int i4) {
if (viewParent instanceof NestedScrollingParent2) {
((NestedScrollingParent2) viewParent).onNestedPreScroll(view, i, i3, iArr, i4);
} else if (i4 == 0) {
try {
Api21Impl.onNestedPreScroll(viewParent, view, i, i3, iArr);
} catch (AbstractMethodError e) {
Log.e(TAG, "ViewParent " + viewParent + " does not implement interface method onNestedPreScroll", e);
}
}
}

public static void onNestedScroll(@NonNull ViewParent viewParent, @NonNull View view, int i, int i3, int i4, int i5) {
onNestedScroll(viewParent, view, i, i3, i4, i5, 0, getTempNestedScrollConsumed());
}

public static void onNestedScroll(@NonNull ViewParent viewParent, @NonNull View view, int i, int i3, int i4, int i5, int i6) {
onNestedScroll(viewParent, view, i, i3, i4, i5, i6, getTempNestedScrollConsumed());
}

public static void onNestedScroll(@NonNull ViewParent viewParent, @NonNull View view, int i, int i3, int i4, int i5, int i6, @NonNull int[] iArr) {
ViewParent viewParent2 = viewParent;
if (viewParent2 instanceof NestedScrollingParent3) {
((NestedScrollingParent3) viewParent2).onNestedScroll(view, i, i3, i4, i5, i6, iArr);
return;
}
iArr[0] = iArr[0] + i4;
iArr[1] = iArr[1] + i5;
if (viewParent2 instanceof NestedScrollingParent2) {
((NestedScrollingParent2) viewParent2).onNestedScroll(view, i, i3, i4, i5, i6);
} else if (i6 == 0) {
try {
Api21Impl.onNestedScroll(viewParent, view, i, i3, i4, i5);
} catch (AbstractMethodError e) {
AbstractMethodError abstractMethodError = e;
Log.e(TAG, "ViewParent " + viewParent + " does not implement interface method onNestedScroll", abstractMethodError);
}
}
}

public static void onNestedScrollAccepted(@NonNull ViewParent viewParent, @NonNull View view, @NonNull View view2, int i) {
onNestedScrollAccepted(viewParent, view, view2, i, 0);
}

public static void onNestedScrollAccepted(@NonNull ViewParent viewParent, @NonNull View view, @NonNull View view2, int i, int i3) {
if (viewParent instanceof NestedScrollingParent2) {
((NestedScrollingParent2) viewParent).onNestedScrollAccepted(view, view2, i, i3);
} else if (i3 == 0) {
try {
Api21Impl.onNestedScrollAccepted(viewParent, view, view2, i);
} catch (AbstractMethodError e) {
Log.e(TAG, "ViewParent " + viewParent + " does not implement interface method onNestedScrollAccepted", e);
}
}
}

public static boolean onStartNestedScroll(@NonNull ViewParent viewParent, @NonNull View view, @NonNull View view2, int i) {
return onStartNestedScroll(viewParent, view, view2, i, 0);
}

public static boolean onStartNestedScroll(@NonNull ViewParent viewParent, @NonNull View view, @NonNull View view2, int i, int i3) {
if (viewParent instanceof NestedScrollingParent2) {
return ((NestedScrollingParent2) viewParent).onStartNestedScroll(view, view2, i, i3);
}
if (i3 != 0) {
return false;
}
try {
return Api21Impl.onStartNestedScroll(viewParent, view, view2, i);
} catch (AbstractMethodError e) {
Log.e(TAG, "ViewParent " + viewParent + " does not implement interface method onStartNestedScroll", e);
return false;
}
}

public static void onStopNestedScroll(@NonNull ViewParent viewParent, @NonNull View view) {
onStopNestedScroll(viewParent, view, 0);
}

public static void onStopNestedScroll(@NonNull ViewParent viewParent, @NonNull View view, int i) {
if (viewParent instanceof NestedScrollingParent2) {
((NestedScrollingParent2) viewParent).onStopNestedScroll(view, i);
} else if (i == 0) {
try {
Api21Impl.onStopNestedScroll(viewParent, view);
} catch (AbstractMethodError e) {
Log.e(TAG, "ViewParent " + viewParent + " does not implement interface method onStopNestedScroll", e);
}
}
}

@Deprecated
public static boolean requestSendAccessibilityEvent(ViewParent viewParent, View view, AccessibilityEvent accessibilityEvent) {
return viewParent.requestSendAccessibilityEvent(view, accessibilityEvent);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\view\WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1.java

package androidx.core.view;

import android.animation.ValueAnimator;
import android.view.View;
import androidx.core.view.WindowInsetsAnimationCompat;
import java.util.Collections;

public class WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1 implements ValueAnimator.AnimatorUpdateListener {
public final /* synthetic */ WindowInsetsAnimationCompat.Impl21.Impl21OnApplyWindowInsetsListener this$0;
public final /* synthetic */ WindowInsetsAnimationCompat val$anim;
public final /* synthetic */ int val$animationMask;
public final /* synthetic */ WindowInsetsCompat val$startingInsets;
public final /* synthetic */ WindowInsetsCompat val$targetInsets;
public final /* synthetic */ View val$v;

public WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1(WindowInsetsAnimationCompat.Impl21.Impl21OnApplyWindowInsetsListener impl21OnApplyWindowInsetsListener, WindowInsetsAnimationCompat windowInsetsAnimationCompat, WindowInsetsCompat windowInsetsCompat, WindowInsetsCompat windowInsetsCompat2, int i, View view) {
this.this$0 = impl21OnApplyWindowInsetsListener;
this.val$anim = windowInsetsAnimationCompat;
this.val$targetInsets = windowInsetsCompat;
this.val$startingInsets = windowInsetsCompat2;
this.val$animationMask = i;
this.val$v = view;
}

public void onAnimationUpdate(ValueAnimator valueAnimator) {
this.val$anim.setFraction(valueAnimator.getAnimatedFraction());
WindowInsetsAnimationCompat.Impl21.dispatchOnProgress(this.val$v, WindowInsetsAnimationCompat.Impl21.interpolateInsets(this.val$targetInsets, this.val$startingInsets, this.val$anim.getInterpolatedFraction(), this.val$animationMask), Collections.singletonList(this.val$anim));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\view\accessibility\AccessibilityNodeInfoCompat$AccessibilityActionCompat.java

package androidx.core.view.accessibility;

import android.os.Build;
import android.view.accessibility.AccessibilityNodeInfo;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.RestrictTo;
import androidx.core.view.accessibility.AccessibilityViewCommand;

public class AccessibilityNodeInfoCompat$AccessibilityActionCompat {
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(64, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(128, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(2, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(8, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(16, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(524288, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(AccessibilityNodeInfo.AccessibilityAction.ACTION_CONTEXT_CLICK, 16908348, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(16384, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(65536, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(1048576, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(262144, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(1, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP;
@NonNull
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_IME_ENTER;
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(32, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW;
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT;
@NonNull
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_DOWN;
@NonNull
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_LEFT;
@NonNull
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_RIGHT;
@NonNull
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_UP;
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(32768, (CharSequence) null);
@NonNull
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PRESS_AND_HOLD;
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT;
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(8192, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(AccessibilityNodeInfo.AccessibilityAction.ACTION_SCROLL_DOWN, 16908346, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(4096, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(AccessibilityNodeInfo.AccessibilityAction.ACTION_SCROLL_LEFT, 16908345, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(AccessibilityNodeInfo.AccessibilityAction.ACTION_SCROLL_RIGHT, 16908347, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(AccessibilityNodeInfo.AccessibilityAction.ACTION_SCROLL_TO_POSITION, 16908343, (CharSequence) null, (AccessibilityViewCommand) null, AccessibilityViewCommand.ScrollToPositionArguments.class);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(AccessibilityNodeInfo.AccessibilityAction.ACTION_SCROLL_UP, 16908344, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(4, (CharSequence) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS;
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(131072, (CharSequence) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) AccessibilityViewCommand.SetSelectionArguments.class);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(2097152, (CharSequence) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) AccessibilityViewCommand.SetTextArguments.class);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(AccessibilityNodeInfo.AccessibilityAction.ACTION_SHOW_ON_SCREEN, 16908342, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
public static final AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP;
private static final String TAG = "A11yActionCompat";
public final Object mAction;
@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public final AccessibilityViewCommand mCommand;
private final int mId;
private final Class<? extends AccessibilityViewCommand.CommandArguments> mViewCommandArgumentClass;

static {
Class<AccessibilityViewCommand.MoveHtmlArguments> cls = AccessibilityViewCommand.MoveHtmlArguments.class;
Class<AccessibilityViewCommand.MoveAtGranularityArguments> cls2 = AccessibilityViewCommand.MoveAtGranularityArguments.class;
AccessibilityNodeInfo.AccessibilityAction accessibilityAction = null;
ACTION_NEXT_AT_MOVEMENT_GRANULARITY = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(256, (CharSequence) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) cls2);
ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(512, (CharSequence) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) cls2);
ACTION_NEXT_HTML_ELEMENT = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(1024, (CharSequence) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) cls);
ACTION_PREVIOUS_HTML_ELEMENT = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(2048, (CharSequence) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) cls);
int i = Build.VERSION.SDK_INT;
ACTION_PAGE_UP = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(i >= 29 ? AccessibilityNodeInfo.AccessibilityAction.ACTION_PAGE_UP : null, 16908358, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
ACTION_PAGE_DOWN = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(i >= 29 ? AccessibilityNodeInfo.AccessibilityAction.ACTION_PAGE_DOWN : null, 16908359, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
ACTION_PAGE_LEFT = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(i >= 29 ? AccessibilityNodeInfo.AccessibilityAction.ACTION_PAGE_LEFT : null, 16908360, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
ACTION_PAGE_RIGHT = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(i >= 29 ? AccessibilityNodeInfo.AccessibilityAction.ACTION_PAGE_RIGHT : null, 16908361, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
ACTION_SET_PROGRESS = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(i >= 24 ? AccessibilityNodeInfo.AccessibilityAction.ACTION_SET_PROGRESS : null, 16908349, (CharSequence) null, (AccessibilityViewCommand) null, AccessibilityViewCommand.SetProgressArguments.class);
ACTION_MOVE_WINDOW = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(i >= 26 ? AccessibilityNodeInfo.AccessibilityAction.ACTION_MOVE_WINDOW : null, 16908354, (CharSequence) null, (AccessibilityViewCommand) null, AccessibilityViewCommand.MoveWindowArguments.class);
ACTION_SHOW_TOOLTIP = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(i >= 28 ? AccessibilityNodeInfo.AccessibilityAction.ACTION_SHOW_TOOLTIP : null, 16908356, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
ACTION_HIDE_TOOLTIP = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(i >= 28 ? AccessibilityNodeInfo.AccessibilityAction.ACTION_HIDE_TOOLTIP : null, 16908357, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
ACTION_PRESS_AND_HOLD = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(i >= 30 ? AccessibilityNodeInfo.AccessibilityAction.ACTION_PRESS_AND_HOLD : null, 16908362, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
if (i >= 30) {
accessibilityAction = AccessibilityNodeInfo.AccessibilityAction.ACTION_IME_ENTER;
}
ACTION_IME_ENTER = new AccessibilityNodeInfoCompat$AccessibilityActionCompat(accessibilityAction, 16908372, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
}

public AccessibilityNodeInfoCompat$AccessibilityActionCompat(int i, CharSequence charSequence) {
this((Object) null, i, charSequence, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
}

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public AccessibilityNodeInfoCompat$AccessibilityActionCompat(int i, CharSequence charSequence, AccessibilityViewCommand accessibilityViewCommand) {
this((Object) null, i, charSequence, accessibilityViewCommand, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
}

private AccessibilityNodeInfoCompat$AccessibilityActionCompat(int i, CharSequence charSequence, Class<? extends AccessibilityViewCommand.CommandArguments> cls) {
this((Object) null, i, charSequence, (AccessibilityViewCommand) null, cls);
}

public AccessibilityNodeInfoCompat$AccessibilityActionCompat(Object obj) {
this(obj, 0, (CharSequence) null, (AccessibilityViewCommand) null, (Class<? extends AccessibilityViewCommand.CommandArguments>) null);
}

public AccessibilityNodeInfoCompat$AccessibilityActionCompat(Object obj, int i, CharSequence charSequence, AccessibilityViewCommand accessibilityViewCommand, Class<? extends AccessibilityViewCommand.CommandArguments> cls) {
this.mId = i;
this.mCommand = accessibilityViewCommand;
if (obj == null) {
this.mAction = new AccessibilityNodeInfo.AccessibilityAction(i, charSequence);
} else {
this.mAction = obj;
}
this.mViewCommandArgumentClass = cls;
}

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
public AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(CharSequence charSequence, AccessibilityViewCommand accessibilityViewCommand) {
return new AccessibilityNodeInfoCompat$AccessibilityActionCompat((Object) null, this.mId, charSequence, accessibilityViewCommand, this.mViewCommandArgumentClass);
}

public boolean equals(@Nullable Object obj) {
if (obj == null || !(obj instanceof AccessibilityNodeInfoCompat$AccessibilityActionCompat)) {
return false;
}
AccessibilityNodeInfoCompat$AccessibilityActionCompat accessibilityNodeInfoCompat$AccessibilityActionCompat = (AccessibilityNodeInfoCompat$AccessibilityActionCompat) obj;
Object obj2 = this.mAction;
return obj2 == null ? accessibilityNodeInfoCompat$AccessibilityActionCompat.mAction == null : obj2.equals(accessibilityNodeInfoCompat$AccessibilityActionCompat.mAction);
}

public int getId() {
return ((AccessibilityNodeInfo.AccessibilityAction) this.mAction).getId();
}

public CharSequence getLabel() {
return ((AccessibilityNodeInfo.AccessibilityAction) this.mAction).getLabel();
}

public int hashCode() {
Object obj = this.mAction;
if (obj != null) {
return obj.hashCode();
}
return 0;
}

/* JADX WARNING: Removed duplicated region for block: B:14:0x0025  */
/* JADX WARNING: Removed duplicated region for block: B:15:0x0028  */
@androidx.annotation.RestrictTo({androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
/* Code decompiled incorrectly, please refer to instructions dump. */
public boolean perform(android.view.View r5, android.os.Bundle r6) {
/*
r4 = this;
androidx.core.view.accessibility.AccessibilityViewCommand r0 = r4.mCommand
r1 = 0
if (r0 == 0) goto L_0x0049
r0 = 0
java.lang.Class<? extends androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments> r2 = r4.mViewCommandArgumentClass
if (r2 == 0) goto L_0x0042
java.lang.Class[] r3 = new java.lang.Class[r1]     // Catch:{ Exception -> 0x0020 }
java.lang.reflect.Constructor r2 = r2.getDeclaredConstructor(r3)     // Catch:{ Exception -> 0x0020 }
java.lang.Object[] r1 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x0020 }
java.lang.Object r1 = r2.newInstance(r1)     // Catch:{ Exception -> 0x0020 }
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments r1 = (androidx.core.view.accessibility.AccessibilityViewCommand.CommandArguments) r1     // Catch:{ Exception -> 0x0020 }
r1.setBundle(r6)     // Catch:{ Exception -> 0x001d }
r0 = r1
goto L_0x0042
L_0x001d:
r6 = move-exception
r0 = r1
goto L_0x0021
L_0x0020:
r6 = move-exception
L_0x0021:
java.lang.Class<? extends androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments> r1 = r4.mViewCommandArgumentClass
if (r1 != 0) goto L_0x0028
java.lang.String r1 = "null"
goto L_0x002c
L_0x0028:
java.lang.String r1 = r1.getName()
L_0x002c:
java.lang.StringBuilder r2 = new java.lang.StringBuilder
r2.<init>()
java.lang.String r3 = "Failed to execute command with argument class ViewCommandArgument: "
r2.append(r3)
r2.append(r1)
java.lang.String r1 = r2.toString()
java.lang.String r2 = "A11yActionCompat"
android.util.Log.e(r2, r1, r6)
L_0x0042:
androidx.core.view.accessibility.AccessibilityViewCommand r6 = r4.mCommand
boolean r5 = r6.perform(r5, r0)
return r5
L_0x0049:
return r1
*/
throw new UnsupportedOperationException("Method not decompiled: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.perform(android.view.View, android.os.Bundle):boolean");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\view\accessibility\AccessibilityWindowInfoCompat$Api21Impl.java

package androidx.core.view.accessibility;

import android.graphics.Rect;
import android.view.accessibility.AccessibilityNodeInfo;
import android.view.accessibility.AccessibilityWindowInfo;
import androidx.annotation.DoNotInline;
import androidx.annotation.RequiresApi;

@RequiresApi(21)
public class AccessibilityWindowInfoCompat$Api21Impl {
private AccessibilityWindowInfoCompat$Api21Impl() {
}

@DoNotInline
public static void getBoundsInScreen(AccessibilityWindowInfo accessibilityWindowInfo, Rect rect) {
accessibilityWindowInfo.getBoundsInScreen(rect);
}

@DoNotInline
public static AccessibilityWindowInfo getChild(AccessibilityWindowInfo accessibilityWindowInfo, int i) {
return accessibilityWindowInfo.getChild(i);
}

@DoNotInline
public static int getChildCount(AccessibilityWindowInfo accessibilityWindowInfo) {
return accessibilityWindowInfo.getChildCount();
}

@DoNotInline
public static int getId(AccessibilityWindowInfo accessibilityWindowInfo) {
return accessibilityWindowInfo.getId();
}

@DoNotInline
public static int getLayer(AccessibilityWindowInfo accessibilityWindowInfo) {
return accessibilityWindowInfo.getLayer();
}

@DoNotInline
public static AccessibilityWindowInfo getParent(AccessibilityWindowInfo accessibilityWindowInfo) {
return accessibilityWindowInfo.getParent();
}

@DoNotInline
public static AccessibilityNodeInfo getRoot(AccessibilityWindowInfo accessibilityWindowInfo) {
return accessibilityWindowInfo.getRoot();
}

@DoNotInline
public static int getType(AccessibilityWindowInfo accessibilityWindowInfo) {
return accessibilityWindowInfo.getType();
}

@DoNotInline
public static boolean isAccessibilityFocused(AccessibilityWindowInfo accessibilityWindowInfo) {
return accessibilityWindowInfo.isAccessibilityFocused();
}

@DoNotInline
public static boolean isActive(AccessibilityWindowInfo accessibilityWindowInfo) {
return accessibilityWindowInfo.isActive();
}

@DoNotInline
public static boolean isFocused(AccessibilityWindowInfo accessibilityWindowInfo) {
return accessibilityWindowInfo.isFocused();
}

@DoNotInline
public static AccessibilityWindowInfo obtain() {
return AccessibilityWindowInfo.obtain();
}

@DoNotInline
public static AccessibilityWindowInfo obtain(AccessibilityWindowInfo accessibilityWindowInfo) {
return AccessibilityWindowInfo.obtain(accessibilityWindowInfo);
}

@DoNotInline
public static void recycle(AccessibilityWindowInfo accessibilityWindowInfo) {
accessibilityWindowInfo.recycle();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\widget\AutoScrollHelper$ClampedScroller.java

package androidx.core.widget;

import android.view.animation.AnimationUtils;

public class AutoScrollHelper$ClampedScroller {
private long mDeltaTime = 0;
private int mDeltaX = 0;
private int mDeltaY = 0;
private int mEffectiveRampDown;
private int mRampDownDuration;
private int mRampUpDuration;
private long mStartTime = Long.MIN_VALUE;
private long mStopTime = -1;
private float mStopValue;
private float mTargetVelocityX;
private float mTargetVelocityY;

private float getValueAt(long j2) {
long j3 = this.mStartTime;
if (j2 < j3) {
return 0.0f;
}
long j5 = this.mStopTime;
if (j5 < 0 || j2 < j5) {
return AutoScrollHelper.constrain(((float) (j2 - j3)) / ((float) this.mRampUpDuration), 0.0f, 1.0f) * 0.5f;
}
float f = this.mStopValue;
return (AutoScrollHelper.constrain(((float) (j2 - j5)) / ((float) this.mEffectiveRampDown), 0.0f, 1.0f) * f) + (1.0f - f);
}

private float interpolateValue(float f) {
return (f * 4.0f) + (-4.0f * f * f);
}

public void computeScrollDelta() {
if (this.mDeltaTime != 0) {
long currentAnimationTimeMillis = AnimationUtils.currentAnimationTimeMillis();
float interpolateValue = interpolateValue(getValueAt(currentAnimationTimeMillis));
this.mDeltaTime = currentAnimationTimeMillis;
float f = ((float) (currentAnimationTimeMillis - this.mDeltaTime)) * interpolateValue;
this.mDeltaX = (int) (this.mTargetVelocityX * f);
this.mDeltaY = (int) (f * this.mTargetVelocityY);
return;
}
throw new RuntimeException("Cannot compute scroll delta before calling start()");
}

public int getDeltaX() {
return this.mDeltaX;
}

public int getDeltaY() {
return this.mDeltaY;
}

public int getHorizontalDirection() {
float f = this.mTargetVelocityX;
return (int) (f / Math.abs(f));
}

public int getVerticalDirection() {
float f = this.mTargetVelocityY;
return (int) (f / Math.abs(f));
}

public boolean isFinished() {
return this.mStopTime > 0 && AnimationUtils.currentAnimationTimeMillis() > this.mStopTime + ((long) this.mEffectiveRampDown);
}

public void requestStop() {
long currentAnimationTimeMillis = AnimationUtils.currentAnimationTimeMillis();
this.mEffectiveRampDown = AutoScrollHelper.constrain((int) (currentAnimationTimeMillis - this.mStartTime), 0, this.mRampDownDuration);
this.mStopValue = getValueAt(currentAnimationTimeMillis);
this.mStopTime = currentAnimationTimeMillis;
}

public void setRampDownDuration(int i) {
this.mRampDownDuration = i;
}

public void setRampUpDuration(int i) {
this.mRampUpDuration = i;
}

public void setTargetVelocity(float f, float f2) {
this.mTargetVelocityX = f;
this.mTargetVelocityY = f2;
}

public void start() {
long currentAnimationTimeMillis = AnimationUtils.currentAnimationTimeMillis();
this.mStartTime = currentAnimationTimeMillis;
this.mStopTime = -1;
this.mDeltaTime = currentAnimationTimeMillis;
this.mStopValue = 0.5f;
this.mDeltaX = 0;
this.mDeltaY = 0;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\core\widget\TextViewKt.java

package androidx.core.widget;

import android.text.Editable;
import android.text.TextWatcher;
import android.widget.TextView;
import androidx.core.widget.TextViewKt$doAfterTextChanged$;
import androidx.core.widget.TextViewKt$doBeforeTextChanged$;
import androidx.core.widget.TextViewKt$doOnTextChanged$;
import d4.l;
import d4.r;
import kotlin.jvm.internal.o;
import kotlin.p;
import org.jetbrains.annotations.NotNull;

public final class TextViewKt {
@NotNull
public static final TextWatcher addTextChangedListener(@NotNull TextView textView, @NotNull r<? super CharSequence, ? super Integer, ? super Integer, ? super Integer, p> rVar, @NotNull r<? super CharSequence, ? super Integer, ? super Integer, ? super Integer, p> rVar2, @NotNull l<? super Editable, p> lVar) {
o.f(textView, "<this>");
o.f(rVar, "beforeTextChanged");
o.f(rVar2, "onTextChanged");
o.f(lVar, "afterTextChanged");
addTextChangedListener.textWatcher.1 r0 = new addTextChangedListener.textWatcher.1(lVar, rVar, rVar2);
textView.addTextChangedListener(r0);
return r0;
}

public static /* synthetic */ TextWatcher addTextChangedListener$default(TextView textView, addTextChangedListener.1 r1, addTextChangedListener.2 r2, addTextChangedListener.3 r3, int i, Object obj) {
if ((i & 1) != 0) {
r1 = addTextChangedListener.1.INSTANCE;
}
if ((i & 2) != 0) {
r2 = addTextChangedListener.2.INSTANCE;
}
if ((i & 4) != 0) {
r3 = addTextChangedListener.3.INSTANCE;
}
o.f(textView, "<this>");
o.f(r1, "beforeTextChanged");
o.f(r2, "onTextChanged");
o.f(r3, "afterTextChanged");
addTextChangedListener.textWatcher.1 r4 = new addTextChangedListener.textWatcher.1(r3, r1, r2);
textView.addTextChangedListener(r4);
return r4;
}

@NotNull
public static final TextWatcher doAfterTextChanged(@NotNull TextView textView, @NotNull l<? super Editable, p> lVar) {
o.f(textView, "<this>");
o.f(lVar, "action");
TextViewKt$doAfterTextChanged$.inlined.addTextChangedListener.default.1 r0 = new TextViewKt$doAfterTextChanged$.inlined.addTextChangedListener.default.1(lVar);
textView.addTextChangedListener(r0);
return r0;
}

@NotNull
public static final TextWatcher doBeforeTextChanged(@NotNull TextView textView, @NotNull r<? super CharSequence, ? super Integer, ? super Integer, ? super Integer, p> rVar) {
o.f(textView, "<this>");
o.f(rVar, "action");
TextViewKt$doBeforeTextChanged$.inlined.addTextChangedListener.default.1 r0 = new TextViewKt$doBeforeTextChanged$.inlined.addTextChangedListener.default.1(rVar);
textView.addTextChangedListener(r0);
return r0;
}

@NotNull
public static final TextWatcher doOnTextChanged(@NotNull TextView textView, @NotNull r<? super CharSequence, ? super Integer, ? super Integer, ? super Integer, p> rVar) {
o.f(textView, "<this>");
o.f(rVar, "action");
TextViewKt$doOnTextChanged$.inlined.addTextChangedListener.default.1 r0 = new TextViewKt$doOnTextChanged$.inlined.addTextChangedListener.default.1(rVar);
textView.addTextChangedListener(r0);
return r0;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\databinding\InverseMethod.java

package androidx.databinding;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Target({ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
public @interface InverseMethod {
String value();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\databinding\ObservableField.java

package androidx.databinding;

import androidx.annotation.Nullable;
import java.io.Serializable;

public class ObservableField<T> extends BaseObservableField implements Serializable {
public static final long serialVersionUID = 1;
private T mValue;

public ObservableField() {
}

public ObservableField(T t) {
this.mValue = t;
}

public ObservableField(Observable... observableArr) {
super(observableArr);
}

@Nullable
public T get() {
return this.mValue;
}

public void set(T t) {
if (t != this.mValue) {
this.mValue = t;
notifyChange();
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\databinding\ViewDataBindingKtx$StateFlowListener$startCollection$1$invokeSuspend$$inlined$collect$1.java

package androidx.databinding;

import androidx.databinding.ViewDataBindingKtx;
import kotlin.coroutines.c;
import kotlin.coroutines.intrinsics.CoroutineSingletons;
import kotlin.p;
import kotlinx.coroutines.flow.d;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class ViewDataBindingKtx$StateFlowListener$startCollection$1$invokeSuspend$$inlined$collect$1 implements d<Object> {
public final /* synthetic */ ViewDataBindingKtx.StateFlowListener this$0;

public ViewDataBindingKtx$StateFlowListener$startCollection$1$invokeSuspend$$inlined$collect$1(ViewDataBindingKtx.StateFlowListener stateFlowListener) {
this.this$0 = stateFlowListener;
}

@Nullable
public Object emit(Object obj, @NotNull c cVar) {
p pVar;
ViewDataBinding binder = ViewDataBindingKtx.StateFlowListener.access$getListener$p(this.this$0).getBinder();
if (binder == null) {
pVar = null;
} else {
binder.handleFieldChange(ViewDataBindingKtx.StateFlowListener.access$getListener$p(this.this$0).mLocalFieldId, ViewDataBindingKtx.StateFlowListener.access$getListener$p(this.this$0).getTarget(), 0);
pVar = p.a;
}
return pVar == CoroutineSingletons.COROUTINE_SUSPENDED ? pVar : p.a;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\databinding\adapters\AutoCompleteTextViewBindingAdapter$IsValid.java

package androidx.databinding.adapters;

public interface AutoCompleteTextViewBindingAdapter$IsValid {
boolean isValid(CharSequence charSequence);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\databinding\adapters\TimePickerBindingAdapter$1.java

package androidx.databinding.adapters;

import android.widget.TimePicker;
import androidx.databinding.InverseBindingListener;

public class TimePickerBindingAdapter$1 implements TimePicker.OnTimeChangedListener {
public final /* synthetic */ InverseBindingListener val$hourChange;
public final /* synthetic */ TimePicker.OnTimeChangedListener val$listener;
public final /* synthetic */ InverseBindingListener val$minuteChange;

public TimePickerBindingAdapter$1(TimePicker.OnTimeChangedListener onTimeChangedListener, InverseBindingListener inverseBindingListener, InverseBindingListener inverseBindingListener2) {
this.val$listener = onTimeChangedListener;
this.val$hourChange = inverseBindingListener;
this.val$minuteChange = inverseBindingListener2;
}

public void onTimeChanged(TimePicker timePicker, int i, int i3) {
TimePicker.OnTimeChangedListener onTimeChangedListener = this.val$listener;
if (onTimeChangedListener != null) {
onTimeChangedListener.onTimeChanged(timePicker, i, i3);
}
InverseBindingListener inverseBindingListener = this.val$hourChange;
if (inverseBindingListener != null) {
inverseBindingListener.onChange();
}
InverseBindingListener inverseBindingListener2 = this.val$minuteChange;
if (inverseBindingListener2 != null) {
inverseBindingListener2.onChange();
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\emoji2\text\EmojiCompat$ReplaceStrategy.java

package androidx.emoji2.text;

import androidx.annotation.RestrictTo;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

@RestrictTo({RestrictTo.Scope.LIBRARY})
@Retention(RetentionPolicy.SOURCE)
public @interface EmojiCompat$ReplaceStrategy {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\emoji2\text\FontRequestEmojiCompatConfig.java

package androidx.emoji2.text;

import android.content.Context;
import android.content.pm.PackageManager;
import android.database.ContentObserver;
import android.net.Uri;
import android.os.Handler;
import android.support.v4.media.b;
import androidx.annotation.GuardedBy;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.RequiresApi;
import androidx.annotation.RestrictTo;
import androidx.annotation.WorkerThread;
import androidx.core.provider.FontRequest;
import androidx.core.provider.FontsContractCompat;
import androidx.core.util.Preconditions;
import androidx.emoji2.text.EmojiCompat;
import com.energysh.material.adapter.provider.pdvh.RLUHg;
import java.util.concurrent.Executor;
import java.util.concurrent.ThreadPoolExecutor;

public class FontRequestEmojiCompatConfig extends EmojiCompat.Config {
private static final FontProviderHelper DEFAULT_FONTS_CONTRACT = new FontProviderHelper();

public static class FontRequestMetadataLoader implements EmojiCompat.MetadataRepoLoader {
private static final String S_TRACE_BUILD_TYPEFACE = "EmojiCompat.FontRequestEmojiCompatConfig.buildTypeface";
@GuardedBy("mLock")
@Nullable
public EmojiCompat.MetadataRepoLoaderCallback mCallback;
@NonNull
private final Context mContext;
@GuardedBy("mLock")
@Nullable
private Executor mExecutor;
@NonNull
private final FontProviderHelper mFontProviderHelper;
@NonNull
private final Object mLock = new Object();
@GuardedBy("mLock")
@Nullable
private Handler mMainHandler;
@GuardedBy("mLock")
@Nullable
private Runnable mMainHandlerLoadCallback;
@GuardedBy("mLock")
@Nullable
private ThreadPoolExecutor mMyThreadPoolExecutor;
@GuardedBy("mLock")
@Nullable
private ContentObserver mObserver;
@NonNull
private final FontRequest mRequest;
@GuardedBy("mLock")
@Nullable
private RetryPolicy mRetryPolicy;

public FontRequestMetadataLoader(@NonNull Context context, @NonNull FontRequest fontRequest, @NonNull FontProviderHelper fontProviderHelper) {
Preconditions.checkNotNull(context, RLUHg.rqevuvItiP);
Preconditions.checkNotNull(fontRequest, "FontRequest cannot be null");
this.mContext = context.getApplicationContext();
this.mRequest = fontRequest;
this.mFontProviderHelper = fontProviderHelper;
}

private void cleanUp() {
synchronized (this.mLock) {
this.mCallback = null;
ContentObserver contentObserver = this.mObserver;
if (contentObserver != null) {
this.mFontProviderHelper.unregisterObserver(this.mContext, contentObserver);
this.mObserver = null;
}
Handler handler = this.mMainHandler;
if (handler != null) {
handler.removeCallbacks(this.mMainHandlerLoadCallback);
}
this.mMainHandler = null;
ThreadPoolExecutor threadPoolExecutor = this.mMyThreadPoolExecutor;
if (threadPoolExecutor != null) {
threadPoolExecutor.shutdown();
}
this.mExecutor = null;
this.mMyThreadPoolExecutor = null;
}
}

@WorkerThread
private FontsContractCompat.FontInfo retrieveFontInfo() {
try {
FontsContractCompat.FontFamilyResult fetchFonts = this.mFontProviderHelper.fetchFonts(this.mContext, this.mRequest);
if (fetchFonts.getStatusCode() == 0) {
FontsContractCompat.FontInfo[] fonts = fetchFonts.getFonts();
if (fonts != null && fonts.length != 0) {
return fonts[0];
}
throw new RuntimeException("fetchFonts failed (empty result)");
}
StringBuilder q = b.q("fetchFonts failed (");
q.append(fetchFonts.getStatusCode());
q.append(")");
throw new RuntimeException(q.toString());
} catch (PackageManager.NameNotFoundException e) {
throw new RuntimeException("provider not found", e);
}
}

@RequiresApi(19)
@WorkerThread
private void scheduleRetry(Uri uri, long j2) {
synchronized (this.mLock) {
Handler handler = this.mMainHandler;
if (handler == null) {
handler = ConcurrencyHelpers.mainHandlerAsync();
this.mMainHandler = handler;
}
if (this.mObserver == null) {
1 r2 = new 1(this, handler);
this.mObserver = r2;
this.mFontProviderHelper.registerObserver(this.mContext, uri, r2);
}
if (this.mMainHandlerLoadCallback == null) {
this.mMainHandlerLoadCallback = new e(this);
}
handler.postDelayed(this.mMainHandlerLoadCallback, j2);
}
}

/* JADX WARNING: Code restructure failed: missing block: B:10:0x0013, code lost:
if (r1 != 2) goto L_0x0034;
*/
/* JADX WARNING: Code restructure failed: missing block: B:11:0x0015, code lost:
r2 = r7.mLock;
*/
/* JADX WARNING: Code restructure failed: missing block: B:12:0x0017, code lost:
monitor-enter(r2);
*/
/* JADX WARNING: Code restructure failed: missing block: B:14:?, code lost:
r3 = r7.mRetryPolicy;
*/
/* JADX WARNING: Code restructure failed: missing block: B:15:0x001a, code lost:
if (r3 == null) goto L_0x002f;
*/
/* JADX WARNING: Code restructure failed: missing block: B:16:0x001c, code lost:
r3 = r3.getRetryDelay();
*/
/* JADX WARNING: Code restructure failed: missing block: B:17:0x0024, code lost:
if (r3 < 0) goto L_0x002f;
*/
/* JADX WARNING: Code restructure failed: missing block: B:18:0x0026, code lost:
scheduleRetry(r0.getUri(), r3);
*/
/* JADX WARNING: Code restructure failed: missing block: B:19:0x002d, code lost:
monitor-exit(r2);
*/
/* JADX WARNING: Code restructure failed: missing block: B:20:0x002e, code lost:
return;
*/
/* JADX WARNING: Code restructure failed: missing block: B:21:0x002f, code lost:
monitor-exit(r2);
*/
/* JADX WARNING: Code restructure failed: missing block: B:27:0x0034, code lost:
if (r1 != 0) goto L_0x0078;
*/
/* JADX WARNING: Code restructure failed: missing block: B:30:?, code lost:
androidx.core.os.TraceCompat.beginSection(S_TRACE_BUILD_TYPEFACE);
r1 = r7.mFontProviderHelper.buildTypeface(r7.mContext, r0);
r0 = androidx.core.graphics.TypefaceCompatUtil.mmap(r7.mContext, (android.os.CancellationSignal) null, r0.getUri());
*/
/* JADX WARNING: Code restructure failed: missing block: B:31:0x004e, code lost:
if (r0 == null) goto L_0x006b;
*/
/* JADX WARNING: Code restructure failed: missing block: B:32:0x0050, code lost:
if (r1 == null) goto L_0x006b;
*/
/* JADX WARNING: Code restructure failed: missing block: B:33:0x0052, code lost:
r0 = androidx.emoji2.text.MetadataRepo.create(r1, r0);
*/
/* JADX WARNING: Code restructure failed: missing block: B:35:?, code lost:
androidx.core.os.TraceCompat.endSection();
r1 = r7.mLock;
*/
/* JADX WARNING: Code restructure failed: missing block: B:36:0x005b, code lost:
monitor-enter(r1);
*/
/* JADX WARNING: Code restructure failed: missing block: B:38:?, code lost:
r2 = r7.mCallback;
*/
/* JADX WARNING: Code restructure failed: missing block: B:39:0x005e, code lost:
if (r2 == null) goto L_0x0063;
*/
/* JADX WARNING: Code restructure failed: missing block: B:40:0x0060, code lost:
r2.onLoaded(r0);
*/
/* JADX WARNING: Code restructure failed: missing block: B:41:0x0063, code lost:
monitor-exit(r1);
*/
/* JADX WARNING: Code restructure failed: missing block: B:43:?, code lost:
cleanUp();
*/
/* JADX WARNING: Code restructure failed: missing block: B:51:0x0072, code lost:
throw new java.lang.RuntimeException("Unable to open file.");
*/
/* JADX WARNING: Code restructure failed: missing block: B:52:0x0073, code lost:
r0 = move-exception;
*/
/* JADX WARNING: Code restructure failed: missing block: B:54:?, code lost:
androidx.core.os.TraceCompat.endSection();
*/
/* JADX WARNING: Code restructure failed: missing block: B:55:0x0077, code lost:
throw r0;
*/
/* JADX WARNING: Code restructure failed: missing block: B:57:0x0093, code lost:
throw new java.lang.RuntimeException("fetchFonts result is not OK. (" + r1 + ")");
*/
/* JADX WARNING: Code restructure failed: missing block: B:58:0x0094, code lost:
r0 = move-exception;
*/
/* JADX WARNING: Code restructure failed: missing block: B:60:0x0097, code lost:
monitor-enter(r7.mLock);
*/
/* JADX WARNING: Code restructure failed: missing block: B:62:?, code lost:
r2 = r7.mCallback;
*/
/* JADX WARNING: Code restructure failed: missing block: B:63:0x009a, code lost:
if (r2 != null) goto L_0x009c;
*/
/* JADX WARNING: Code restructure failed: missing block: B:64:0x009c, code lost:
r2.onFailed(r0);
*/
/* JADX WARNING: Code restructure failed: missing block: B:66:0x00a0, code lost:
cleanUp();
*/
/* JADX WARNING: Code restructure failed: missing block: B:83:?, code lost:
return;
*/
/* JADX WARNING: Code restructure failed: missing block: B:84:?, code lost:
return;
*/
/* JADX WARNING: Code restructure failed: missing block: B:9:?, code lost:
r0 = retrieveFontInfo();
r1 = r0.getResultCode();
*/
@androidx.annotation.RequiresApi(19)
@androidx.annotation.WorkerThread
/* Code decompiled incorrectly, please refer to instructions dump. */
public void createMetadata() {
/*
r7 = this;
java.lang.Object r0 = r7.mLock
monitor-enter(r0)
androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback r1 = r7.mCallback     // Catch:{ all -> 0x00a7 }
if (r1 != 0) goto L_0x0009
monitor-exit(r0)     // Catch:{ all -> 0x00a7 }
return
L_0x0009:
monitor-exit(r0)     // Catch:{ all -> 0x00a7 }
androidx.core.provider.FontsContractCompat$FontInfo r0 = r7.retrieveFontInfo()     // Catch:{ all -> 0x0094 }
int r1 = r0.getResultCode()     // Catch:{ all -> 0x0094 }
r2 = 2
if (r1 != r2) goto L_0x0034
java.lang.Object r2 = r7.mLock     // Catch:{ all -> 0x0094 }
monitor-enter(r2)     // Catch:{ all -> 0x0094 }
androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy r3 = r7.mRetryPolicy     // Catch:{ all -> 0x0031 }
if (r3 == 0) goto L_0x002f
long r3 = r3.getRetryDelay()     // Catch:{ all -> 0x0031 }
r5 = 0
int r5 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
if (r5 < 0) goto L_0x002f
android.net.Uri r0 = r0.getUri()     // Catch:{ all -> 0x0031 }
r7.scheduleRetry(r0, r3)     // Catch:{ all -> 0x0031 }
monitor-exit(r2)     // Catch:{ all -> 0x0031 }
return
L_0x002f:
monitor-exit(r2)     // Catch:{ all -> 0x0031 }
goto L_0x0034
L_0x0031:
r0 = move-exception
monitor-exit(r2)     // Catch:{ all -> 0x0031 }
throw r0     // Catch:{ all -> 0x0094 }
L_0x0034:
if (r1 != 0) goto L_0x0078
java.lang.String r1 = "EmojiCompat.FontRequestEmojiCompatConfig.buildTypeface"
androidx.core.os.TraceCompat.beginSection(r1)     // Catch:{ all -> 0x0073 }
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper r1 = r7.mFontProviderHelper     // Catch:{ all -> 0x0073 }
android.content.Context r2 = r7.mContext     // Catch:{ all -> 0x0073 }
android.graphics.Typeface r1 = r1.buildTypeface(r2, r0)     // Catch:{ all -> 0x0073 }
android.content.Context r2 = r7.mContext     // Catch:{ all -> 0x0073 }
r3 = 0
android.net.Uri r0 = r0.getUri()     // Catch:{ all -> 0x0073 }
java.nio.ByteBuffer r0 = androidx.core.graphics.TypefaceCompatUtil.mmap(r2, r3, r0)     // Catch:{ all -> 0x0073 }
if (r0 == 0) goto L_0x006b
if (r1 == 0) goto L_0x006b
androidx.emoji2.text.MetadataRepo r0 = androidx.emoji2.text.MetadataRepo.create(r1, r0)     // Catch:{ all -> 0x0073 }
androidx.core.os.TraceCompat.endSection()     // Catch:{ all -> 0x0094 }
java.lang.Object r1 = r7.mLock     // Catch:{ all -> 0x0094 }
monitor-enter(r1)     // Catch:{ all -> 0x0094 }
androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback r2 = r7.mCallback     // Catch:{ all -> 0x0068 }
if (r2 == 0) goto L_0x0063
r2.onLoaded(r0)     // Catch:{ all -> 0x0068 }
L_0x0063:
monitor-exit(r1)     // Catch:{ all -> 0x0068 }
r7.cleanUp()     // Catch:{ all -> 0x0094 }
goto L_0x00a3
L_0x0068:
r0 = move-exception
monitor-exit(r1)     // Catch:{ all -> 0x0068 }
throw r0     // Catch:{ all -> 0x0094 }
L_0x006b:
java.lang.RuntimeException r0 = new java.lang.RuntimeException     // Catch:{ all -> 0x0073 }
java.lang.String r1 = "Unable to open file."
r0.<init>(r1)     // Catch:{ all -> 0x0073 }
throw r0     // Catch:{ all -> 0x0073 }
L_0x0073:
r0 = move-exception
androidx.core.os.TraceCompat.endSection()     // Catch:{ all -> 0x0094 }
throw r0     // Catch:{ all -> 0x0094 }
L_0x0078:
java.lang.RuntimeException r0 = new java.lang.RuntimeException     // Catch:{ all -> 0x0094 }
java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ all -> 0x0094 }
r2.<init>()     // Catch:{ all -> 0x0094 }
java.lang.String r3 = "fetchFonts result is not OK. ("
r2.append(r3)     // Catch:{ all -> 0x0094 }
r2.append(r1)     // Catch:{ all -> 0x0094 }
java.lang.String r1 = ")"
r2.append(r1)     // Catch:{ all -> 0x0094 }
java.lang.String r1 = r2.toString()     // Catch:{ all -> 0x0094 }
r0.<init>(r1)     // Catch:{ all -> 0x0094 }
throw r0     // Catch:{ all -> 0x0094 }
L_0x0094:
r0 = move-exception
java.lang.Object r1 = r7.mLock
monitor-enter(r1)
androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback r2 = r7.mCallback     // Catch:{ all -> 0x00a4 }
if (r2 == 0) goto L_0x009f
r2.onFailed(r0)     // Catch:{ all -> 0x00a4 }
L_0x009f:
monitor-exit(r1)     // Catch:{ all -> 0x00a4 }
r7.cleanUp()
L_0x00a3:
return
L_0x00a4:
r0 = move-exception
monitor-exit(r1)     // Catch:{ all -> 0x00a4 }
throw r0
L_0x00a7:
r1 = move-exception
monitor-exit(r0)     // Catch:{ all -> 0x00a7 }
throw r1
*/
throw new UnsupportedOperationException("Method not decompiled: androidx.emoji2.text.FontRequestEmojiCompatConfig.FontRequestMetadataLoader.createMetadata():void");
}

@RequiresApi(19)
public void load(@NonNull EmojiCompat.MetadataRepoLoaderCallback metadataRepoLoaderCallback) {
Preconditions.checkNotNull(metadataRepoLoaderCallback, "LoaderCallback cannot be null");
synchronized (this.mLock) {
this.mCallback = metadataRepoLoaderCallback;
}
loadInternal();
}

@RequiresApi(19)
public void loadInternal() {
synchronized (this.mLock) {
if (this.mCallback != null) {
if (this.mExecutor == null) {
ThreadPoolExecutor createBackgroundPriorityExecutor = ConcurrencyHelpers.createBackgroundPriorityExecutor("emojiCompat");
this.mMyThreadPoolExecutor = createBackgroundPriorityExecutor;
this.mExecutor = createBackgroundPriorityExecutor;
}
this.mExecutor.execute(new d(this));
}
}
}

public void setExecutor(@NonNull Executor executor) {
synchronized (this.mLock) {
this.mExecutor = executor;
}
}

public void setRetryPolicy(@Nullable RetryPolicy retryPolicy) {
synchronized (this.mLock) {
this.mRetryPolicy = retryPolicy;
}
}
}

public FontRequestEmojiCompatConfig(@NonNull Context context, @NonNull FontRequest fontRequest) {
super(new FontRequestMetadataLoader(context, fontRequest, DEFAULT_FONTS_CONTRACT));
}

@RestrictTo({RestrictTo.Scope.LIBRARY})
public FontRequestEmojiCompatConfig(@NonNull Context context, @NonNull FontRequest fontRequest, @NonNull FontProviderHelper fontProviderHelper) {
super(new FontRequestMetadataLoader(context, fontRequest, fontProviderHelper));
}

@NonNull
@Deprecated
public FontRequestEmojiCompatConfig setHandler(@Nullable Handler handler) {
if (handler == null) {
return this;
}
setLoadingExecutor(ConcurrencyHelpers.convertHandlerToExecutor(handler));
return this;
}

@NonNull
public FontRequestEmojiCompatConfig setLoadingExecutor(@NonNull Executor executor) {
getMetadataRepoLoader().setExecutor(executor);
return this;
}

@NonNull
public FontRequestEmojiCompatConfig setRetryPolicy(@Nullable RetryPolicy retryPolicy) {
getMetadataRepoLoader().setRetryPolicy(retryPolicy);
return this;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\emoji2\text\flatbuffer\FloatVector.java

package androidx.emoji2.text.flatbuffer;

import java.nio.ByteBuffer;

public final class FloatVector extends BaseVector {
public FloatVector __assign(int i, ByteBuffer byteBuffer) {
__reset(i, 4, byteBuffer);
return this;
}

public float get(int i) {
return this.bb.getFloat(__element(i));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\fragment\app\FragmentState$1.java

package androidx.fragment.app;

import android.os.Parcel;
import android.os.Parcelable;

public class FragmentState$1 implements Parcelable.Creator<FragmentState> {
public FragmentState createFromParcel(Parcel parcel) {
return new FragmentState(parcel);
}

public FragmentState[] newArray(int i) {
return new FragmentState[i];
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\fragment\app\strictmode\RetainInstanceUsageViolation.java

package androidx.fragment.app.strictmode;

import androidx.fragment.app.Fragment;
import kotlin.jvm.internal.m;
import kotlin.jvm.internal.o;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public abstract class RetainInstanceUsageViolation extends Violation {
/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public RetainInstanceUsageViolation(@NotNull Fragment fragment, @Nullable String str) {
super(fragment, str);
o.f(fragment, "fragment");
}

/* JADX INFO: this call moved to the top of the method (can break code semantics) */
public /* synthetic */ RetainInstanceUsageViolation(Fragment fragment, String str, int i, m mVar) {
this(fragment, (i & 2) != 0 ? null : str);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\lifecycle\LiveDataScopeImpl$emitSource$2.java

package androidx.lifecycle;

import d4.p;
import kotlin.coroutines.c;
import kotlin.coroutines.intrinsics.CoroutineSingletons;
import kotlin.coroutines.jvm.internal.SuspendLambda;
import kotlin.f;
import kotlinx.coroutines.c0;
import kotlinx.coroutines.n0;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import y3.d;

@d(c = "androidx.lifecycle.LiveDataScopeImpl$emitSource$2", f = "CoroutineLiveData.kt", l = {95}, m = "invokeSuspend")
public final class LiveDataScopeImpl$emitSource$2 extends SuspendLambda implements p<c0, c<? super n0>, Object> {
public final /* synthetic */ LiveData<T> $source;
public int label;
public final /* synthetic */ LiveDataScopeImpl<T> this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public LiveDataScopeImpl$emitSource$2(LiveDataScopeImpl<T> liveDataScopeImpl, LiveData<T> liveData, c<? super LiveDataScopeImpl$emitSource$2> cVar) {
super(2, cVar);
this.this$0 = liveDataScopeImpl;
this.$source = liveData;
}

@NotNull
public final c<kotlin.p> create(@Nullable Object obj, @NotNull c<?> cVar) {
return new LiveDataScopeImpl$emitSource$2(this.this$0, this.$source, cVar);
}

@Nullable
public final Object invoke(@NotNull c0 c0Var, @Nullable c<? super n0> cVar) {
return create(c0Var, cVar).invokeSuspend(kotlin.p.a);
}

@Nullable
public final Object invokeSuspend(@NotNull Object obj) {
CoroutineSingletons coroutineSingletons = CoroutineSingletons.COROUTINE_SUSPENDED;
int i = this.label;
if (i == 0) {
f.b(obj);
CoroutineLiveData target$lifecycle_livedata_ktx_release = this.this$0.getTarget$lifecycle_livedata_ktx_release();
LiveData<T> liveData = this.$source;
this.label = 1;
obj = target$lifecycle_livedata_ktx_release.emitSource$lifecycle_livedata_ktx_release(liveData, this);
if (obj == coroutineSingletons) {
return coroutineSingletons;
}
} else if (i == 1) {
f.b(obj);
} else {
throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine");
}
return obj;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\lifecycle\extensions\R$attr.java

package androidx.lifecycle.extensions;

public final class R$attr {
public static final int alpha = 2130968664;
public static final int font = 2130969162;
public static final int fontProviderAuthority = 2130969164;
public static final int fontProviderCerts = 2130969165;
public static final int fontProviderFetchStrategy = 2130969166;
public static final int fontProviderFetchTimeout = 2130969167;
public static final int fontProviderPackage = 2130969168;
public static final int fontProviderQuery = 2130969169;
public static final int fontStyle = 2130969171;
public static final int fontVariationSettings = 2130969172;
public static final int fontWeight = 2130969173;
public static final int ttcIndex = 2130969887;

private R$attr() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media\MediaBrowserServiceCompat$MediaBrowserServiceImplBase$3.java

package androidx.media;

import android.os.Bundle;
import androidx.media.MediaBrowserServiceCompat;
import androidx.media.MediaSessionManager;

public class MediaBrowserServiceCompat$MediaBrowserServiceImplBase$3 implements Runnable {
public final /* synthetic */ MediaBrowserServiceCompat.MediaBrowserServiceImplBase this$1;
public final /* synthetic */ Bundle val$options;
public final /* synthetic */ String val$parentId;
public final /* synthetic */ MediaSessionManager.RemoteUserInfo val$remoteUserInfo;

public MediaBrowserServiceCompat$MediaBrowserServiceImplBase$3(MediaBrowserServiceCompat.MediaBrowserServiceImplBase mediaBrowserServiceImplBase, MediaSessionManager.RemoteUserInfo remoteUserInfo, String str, Bundle bundle) {
this.this$1 = mediaBrowserServiceImplBase;
this.val$remoteUserInfo = remoteUserInfo;
this.val$parentId = str;
this.val$options = bundle;
}

public void run() {
for (int i = 0; i < this.this$1.this$0.mConnections.size(); i++) {
MediaBrowserServiceCompat.ConnectionRecord connectionRecord = (MediaBrowserServiceCompat.ConnectionRecord) this.this$1.this$0.mConnections.valueAt(i);
if (connectionRecord.browserInfo.equals(this.val$remoteUserInfo)) {
this.this$1.notifyChildrenChangedOnHandler(connectionRecord, this.val$parentId, this.val$options);
return;
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media\MediaSessionManagerImplApi21.java
public MediaSessionManagerImplApi21(Context context) {
super(context);
this.mContext = context;
}

private boolean hasMediaControlPermission(@NonNull MediaSessionManager.RemoteUserInfoImpl remoteUserInfoImpl) {
return getContext().checkPermission("android.permission.MEDIA_CONTENT_CONTROL", remoteUserInfoImpl.getPid(), remoteUserInfoImpl.getUid()) == 0;
}

public boolean isTrustedForMediaControl(@NonNull MediaSessionManager.RemoteUserInfoImpl remoteUserInfoImpl) {
return hasMediaControlPermission(remoteUserInfoImpl) || MediaSessionManagerImplApi21.super.isTrustedForMediaControl(remoteUserInfoImpl);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media\MediaSessionManagerImplApi28.java
public MediaSessionManager mObject;

public MediaSessionManagerImplApi28(Context context) {
super(context);
this.mObject = (MediaSessionManager) context.getSystemService("media_session");
}

public boolean isTrustedForMediaControl(MediaSessionManager.RemoteUserInfoImpl remoteUserInfoImpl) {
return super.isTrustedForMediaControl(remoteUserInfoImpl);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media\VolumeProviderCompat$ControlType.java

package androidx.media;

import androidx.annotation.RestrictTo;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
@Retention(RetentionPolicy.SOURCE)
public @interface VolumeProviderCompat$ControlType {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\C$VideoScalingMode.java

package androidx.media2.exoplayer.external;

import java.lang.annotation.Documented;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

@Documented
@Retention(RetentionPolicy.SOURCE)
public @interface C$VideoScalingMode {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\analytics\DefaultPlaybackSessionManager.java

package androidx.media2.exoplayer.external.analytics;

import android.util.Base64;
import androidx.annotation.Nullable;
import androidx.annotation.RestrictTo;
import androidx.media2.exoplayer.external.Timeline;
import androidx.media2.exoplayer.external.analytics.AnalyticsListener;
import androidx.media2.exoplayer.external.analytics.PlaybackSessionManager;
import androidx.media2.exoplayer.external.source.MediaSource;
import androidx.media2.exoplayer.external.util.Assertions;
import androidx.media2.exoplayer.external.util.Util;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Random;
import org.checkerframework.checker.nullness.qual.RequiresNonNull;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public final class DefaultPlaybackSessionManager implements PlaybackSessionManager {
private static final Random RANDOM = new Random();
private static final int SESSION_ID_LENGTH = 12;
@Nullable
private String activeSessionId;
@Nullable
private MediaSource.MediaPeriodId currentMediaPeriodId;
private Timeline currentTimeline = Timeline.EMPTY;
private PlaybackSessionManager.Listener listener;
/* access modifiers changed from: private */
public final Timeline.Period period = new Timeline.Period();
private final HashMap<String, SessionDescriptor> sessions = new HashMap<>();
/* access modifiers changed from: private */
public final Timeline.Window window = new Timeline.Window();

private static String generateSessionId() {
byte[] bArr = new byte[12];
RANDOM.nextBytes(bArr);
return Base64.encodeToString(bArr, 10);
}

private SessionDescriptor getOrAddSession(int i, @Nullable MediaSource.MediaPeriodId mediaPeriodId) {
int i3;
SessionDescriptor sessionDescriptor = null;
long j2 = Long.MAX_VALUE;
for (SessionDescriptor next : this.sessions.values()) {
next.maybeSetWindowSequenceNumber(i, mediaPeriodId);
if (next.belongsToSession(i, mediaPeriodId)) {
long access$200 = SessionDescriptor.access$200(next);
if (access$200 == -1 || access$200 < j2) {
sessionDescriptor = next;
j2 = access$200;
} else if (!(i3 != 0 || SessionDescriptor.access$300((SessionDescriptor) Util.castNonNull(sessionDescriptor)) == null || SessionDescriptor.access$300(next) == null)) {
sessionDescriptor = next;
}
}
}
if (sessionDescriptor != null) {
return sessionDescriptor;
}
String generateSessionId = generateSessionId();
SessionDescriptor sessionDescriptor2 = new SessionDescriptor(this, generateSessionId, i, mediaPeriodId);
this.sessions.put(generateSessionId, sessionDescriptor2);
return sessionDescriptor2;
}

@RequiresNonNull({"listener"})
private void updateActiveSession(AnalyticsListener.EventTime eventTime, SessionDescriptor sessionDescriptor) {
this.currentMediaPeriodId = eventTime.mediaPeriodId;
if (SessionDescriptor.access$100(sessionDescriptor)) {
this.activeSessionId = SessionDescriptor.access$000(sessionDescriptor);
if (!SessionDescriptor.access$400(sessionDescriptor)) {
SessionDescriptor.access$402(sessionDescriptor, true);
this.listener.onSessionActive(eventTime, SessionDescriptor.access$000(sessionDescriptor));
}
}
}

public synchronized boolean belongsToSession(AnalyticsListener.EventTime eventTime, String str) {
SessionDescriptor sessionDescriptor = this.sessions.get(str);
if (sessionDescriptor == null) {
return false;
}
sessionDescriptor.maybeSetWindowSequenceNumber(eventTime.windowIndex, eventTime.mediaPeriodId);
return sessionDescriptor.belongsToSession(eventTime.windowIndex, eventTime.mediaPeriodId);
}

public synchronized String getSessionForMediaPeriodId(Timeline timeline, MediaSource.MediaPeriodId mediaPeriodId) {
return SessionDescriptor.access$000(getOrAddSession(timeline.getPeriodByUid(mediaPeriodId.periodUid, this.period).windowIndex, mediaPeriodId));
}

/* JADX WARNING: Code restructure failed: missing block: B:35:0x0080, code lost:
if (r0.adIndexInAdGroup == r3.adIndexInAdGroup) goto L_0x00ac;
*/
/* JADX WARNING: Removed duplicated region for block: B:12:0x0021  */
/* JADX WARNING: Removed duplicated region for block: B:30:0x006c  */
/* Code decompiled incorrectly, please refer to instructions dump. */
public synchronized void handlePositionDiscontinuity(androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime r7, int r8) {
/*
r6 = this;
monitor-enter(r6)
androidx.media2.exoplayer.external.analytics.PlaybackSessionManager$Listener r0 = r6.listener     // Catch:{ all -> 0x00b1 }
androidx.media2.exoplayer.external.util.Assertions.checkNotNull(r0)     // Catch:{ all -> 0x00b1 }
r0 = 0
r1 = 1
if (r8 == 0) goto L_0x0010
r2 = 3
if (r8 != r2) goto L_0x000e
goto L_0x0010
L_0x000e:
r8 = r0
goto L_0x0011
L_0x0010:
r8 = r1
L_0x0011:
java.util.HashMap<java.lang.String, androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager$SessionDescriptor> r2 = r6.sessions     // Catch:{ all -> 0x00b1 }
java.util.Collection r2 = r2.values()     // Catch:{ all -> 0x00b1 }
java.util.Iterator r2 = r2.iterator()     // Catch:{ all -> 0x00b1 }
L_0x001b:
boolean r3 = r2.hasNext()     // Catch:{ all -> 0x00b1 }
if (r3 == 0) goto L_0x0056
java.lang.Object r3 = r2.next()     // Catch:{ all -> 0x00b1 }
androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager$SessionDescriptor r3 = (androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager.SessionDescriptor) r3     // Catch:{ all -> 0x00b1 }
boolean r4 = r3.isFinishedAtEventTime(r7)     // Catch:{ all -> 0x00b1 }
if (r4 == 0) goto L_0x001b
r2.remove()     // Catch:{ all -> 0x00b1 }
boolean r4 = androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager.SessionDescriptor.access$100(r3)     // Catch:{ all -> 0x00b1 }
if (r4 == 0) goto L_0x001b
java.lang.String r4 = androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager.SessionDescriptor.access$000(r3)     // Catch:{ all -> 0x00b1 }
java.lang.String r5 = r6.activeSessionId     // Catch:{ all -> 0x00b1 }
boolean r4 = r4.equals(r5)     // Catch:{ all -> 0x00b1 }
if (r8 == 0) goto L_0x0046
if (r4 == 0) goto L_0x0046
r5 = r1
goto L_0x0047
L_0x0046:
r5 = r0
L_0x0047:
if (r4 == 0) goto L_0x004c
r4 = 0
r6.activeSessionId = r4     // Catch:{ all -> 0x00b1 }
L_0x004c:
androidx.media2.exoplayer.external.analytics.PlaybackSessionManager$Listener r4 = r6.listener     // Catch:{ all -> 0x00b1 }
java.lang.String r3 = androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager.SessionDescriptor.access$000(r3)     // Catch:{ all -> 0x00b1 }
r4.onSessionFinished(r7, r3, r5)     // Catch:{ all -> 0x00b1 }
goto L_0x001b
L_0x0056:
int r8 = r7.windowIndex     // Catch:{ all -> 0x00b1 }
androidx.media2.exoplayer.external.source.MediaSource$MediaPeriodId r0 = r7.mediaPeriodId     // Catch:{ all -> 0x00b1 }
androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager$SessionDescriptor r8 = r6.getOrAddSession(r8, r0)     // Catch:{ all -> 0x00b1 }
androidx.media2.exoplayer.external.source.MediaSource$MediaPeriodId r0 = r7.mediaPeriodId     // Catch:{ all -> 0x00b1 }
if (r0 == 0) goto L_0x00ac
boolean r0 = r0.isAd()     // Catch:{ all -> 0x00b1 }
if (r0 == 0) goto L_0x00ac
androidx.media2.exoplayer.external.source.MediaSource$MediaPeriodId r0 = r6.currentMediaPeriodId     // Catch:{ all -> 0x00b1 }
if (r0 == 0) goto L_0x0082
long r1 = r0.windowSequenceNumber     // Catch:{ all -> 0x00b1 }
androidx.media2.exoplayer.external.source.MediaSource$MediaPeriodId r3 = r7.mediaPeriodId     // Catch:{ all -> 0x00b1 }
long r4 = r3.windowSequenceNumber     // Catch:{ all -> 0x00b1 }
int r1 = (r1 > r4 ? 1 : (r1 == r4 ? 0 : -1))
if (r1 != 0) goto L_0x0082
int r1 = r0.adGroupIndex     // Catch:{ all -> 0x00b1 }
int r2 = r3.adGroupIndex     // Catch:{ all -> 0x00b1 }
if (r1 != r2) goto L_0x0082
int r0 = r0.adIndexInAdGroup     // Catch:{ all -> 0x00b1 }
int r1 = r3.adIndexInAdGroup     // Catch:{ all -> 0x00b1 }
if (r0 == r1) goto L_0x00ac
L_0x0082:
androidx.media2.exoplayer.external.source.MediaSource$MediaPeriodId r0 = new androidx.media2.exoplayer.external.source.MediaSource$MediaPeriodId     // Catch:{ all -> 0x00b1 }
androidx.media2.exoplayer.external.source.MediaSource$MediaPeriodId r1 = r7.mediaPeriodId     // Catch:{ all -> 0x00b1 }
java.lang.Object r2 = r1.periodUid     // Catch:{ all -> 0x00b1 }
long r3 = r1.windowSequenceNumber     // Catch:{ all -> 0x00b1 }
r0.<init>(r2, r3)     // Catch:{ all -> 0x00b1 }
int r1 = r7.windowIndex     // Catch:{ all -> 0x00b1 }
androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager$SessionDescriptor r0 = r6.getOrAddSession(r1, r0)     // Catch:{ all -> 0x00b1 }
boolean r1 = androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager.SessionDescriptor.access$100(r0)     // Catch:{ all -> 0x00b1 }
if (r1 == 0) goto L_0x00ac
boolean r1 = androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager.SessionDescriptor.access$100(r8)     // Catch:{ all -> 0x00b1 }
if (r1 == 0) goto L_0x00ac
androidx.media2.exoplayer.external.analytics.PlaybackSessionManager$Listener r1 = r6.listener     // Catch:{ all -> 0x00b1 }
java.lang.String r0 = androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager.SessionDescriptor.access$000(r0)     // Catch:{ all -> 0x00b1 }
java.lang.String r2 = androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager.SessionDescriptor.access$000(r8)     // Catch:{ all -> 0x00b1 }
r1.onAdPlaybackStarted(r7, r0, r2)     // Catch:{ all -> 0x00b1 }
L_0x00ac:
r6.updateActiveSession(r7, r8)     // Catch:{ all -> 0x00b1 }
monitor-exit(r6)
return
L_0x00b1:
r7 = move-exception
monitor-exit(r6)
throw r7
*/
throw new UnsupportedOperationException("Method not decompiled: androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager.handlePositionDiscontinuity(androidx.media2.exoplayer.external.analytics.AnalyticsListener$EventTime, int):void");
}

public synchronized void handleTimelineUpdate(AnalyticsListener.EventTime eventTime) {
Assertions.checkNotNull(this.listener);
Timeline timeline = this.currentTimeline;
this.currentTimeline = eventTime.timeline;
Iterator<SessionDescriptor> it = this.sessions.values().iterator();
while (it.hasNext()) {
SessionDescriptor next = it.next();
if (!next.tryResolvingToNewTimeline(timeline, this.currentTimeline)) {
it.remove();
if (SessionDescriptor.access$100(next)) {
if (SessionDescriptor.access$000(next).equals(this.activeSessionId)) {
this.activeSessionId = null;
}
this.listener.onSessionFinished(eventTime, SessionDescriptor.access$000(next), false);
}
}
}
handlePositionDiscontinuity(eventTime, 4);
}

public void setListener(PlaybackSessionManager.Listener listener2) {
this.listener = listener2;
}

/* JADX WARNING: Code restructure failed: missing block: B:4:0x0006, code lost:
r2 = r7.currentMediaPeriodId;
*/
/* Code decompiled incorrectly, please refer to instructions dump. */
public synchronized void updateSessions(androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime r8) {
/*
r7 = this;
monitor-enter(r7)
androidx.media2.exoplayer.external.source.MediaSource$MediaPeriodId r0 = r8.mediaPeriodId     // Catch:{ all -> 0x003e }
r1 = 1
if (r0 == 0) goto L_0x0014
androidx.media2.exoplayer.external.source.MediaSource$MediaPeriodId r2 = r7.currentMediaPeriodId     // Catch:{ all -> 0x003e }
if (r2 == 0) goto L_0x0014
long r3 = r0.windowSequenceNumber     // Catch:{ all -> 0x003e }
long r5 = r2.windowSequenceNumber     // Catch:{ all -> 0x003e }
int r2 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
if (r2 >= 0) goto L_0x0014
r2 = r1
goto L_0x0015
L_0x0014:
r2 = 0
L_0x0015:
if (r2 != 0) goto L_0x003c
int r2 = r8.windowIndex     // Catch:{ all -> 0x003e }
androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager$SessionDescriptor r0 = r7.getOrAddSession(r2, r0)     // Catch:{ all -> 0x003e }
boolean r2 = androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager.SessionDescriptor.access$100(r0)     // Catch:{ all -> 0x003e }
if (r2 != 0) goto L_0x003c
androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager.SessionDescriptor.access$102(r0, r1)     // Catch:{ all -> 0x003e }
androidx.media2.exoplayer.external.analytics.PlaybackSessionManager$Listener r1 = r7.listener     // Catch:{ all -> 0x003e }
java.lang.Object r1 = androidx.media2.exoplayer.external.util.Assertions.checkNotNull(r1)     // Catch:{ all -> 0x003e }
androidx.media2.exoplayer.external.analytics.PlaybackSessionManager$Listener r1 = (androidx.media2.exoplayer.external.analytics.PlaybackSessionManager.Listener) r1     // Catch:{ all -> 0x003e }
java.lang.String r2 = androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager.SessionDescriptor.access$000(r0)     // Catch:{ all -> 0x003e }
r1.onSessionCreated(r8, r2)     // Catch:{ all -> 0x003e }
java.lang.String r1 = r7.activeSessionId     // Catch:{ all -> 0x003e }
if (r1 != 0) goto L_0x003c
r7.updateActiveSession(r8, r0)     // Catch:{ all -> 0x003e }
L_0x003c:
monitor-exit(r7)
return
L_0x003e:
r8 = move-exception
monitor-exit(r7)
throw r8
*/
throw new UnsupportedOperationException("Method not decompiled: androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager.updateSessions(androidx.media2.exoplayer.external.analytics.AnalyticsListener$EventTime):void");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\extractor\ChunkIndex.java

package androidx.media2.exoplayer.external.extractor;

import android.support.v4.media.a;
import android.support.v4.media.c;
import androidx.annotation.RestrictTo;
import androidx.media2.exoplayer.external.extractor.SeekMap;
import androidx.media2.exoplayer.external.util.Util;
import java.util.Arrays;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public final class ChunkIndex implements SeekMap {
private final long durationUs;
public final long[] durationsUs;
public final int length;
public final long[] offsets;
public final int[] sizes;
public final long[] timesUs;

public ChunkIndex(int[] iArr, long[] jArr, long[] jArr2, long[] jArr3) {
this.sizes = iArr;
this.offsets = jArr;
this.durationsUs = jArr2;
this.timesUs = jArr3;
int length2 = iArr.length;
this.length = length2;
if (length2 > 0) {
this.durationUs = jArr2[length2 - 1] + jArr3[length2 - 1];
} else {
this.durationUs = 0;
}
}

public int getChunkIndex(long j2) {
return Util.binarySearchFloor(this.timesUs, j2, true, true);
}

public long getDurationUs() {
return this.durationUs;
}

public SeekMap.SeekPoints getSeekPoints(long j2) {
int chunkIndex = getChunkIndex(j2);
SeekPoint seekPoint = new SeekPoint(this.timesUs[chunkIndex], this.offsets[chunkIndex]);
if (seekPoint.timeUs >= j2 || chunkIndex == this.length - 1) {
return new SeekMap.SeekPoints(seekPoint);
}
int i = chunkIndex + 1;
return new SeekMap.SeekPoints(seekPoint, new SeekPoint(this.timesUs[i], this.offsets[i]));
}

public boolean isSeekable() {
return true;
}

public String toString() {
int i = this.length;
String arrays = Arrays.toString(this.sizes);
String arrays2 = Arrays.toString(this.offsets);
String arrays3 = Arrays.toString(this.timesUs);
String arrays4 = Arrays.toString(this.durationsUs);
StringBuilder sb = new StringBuilder(a.c(arrays4, a.c(arrays3, a.c(arrays2, a.c(arrays, 71)))));
sb.append("ChunkIndex(length=");
sb.append(i);
sb.append(", sizes=");
sb.append(arrays);
c.w(sb, ", offsets=", arrays2, ", timeUs=", arrays3);
return a.q(sb, ", durationsUs=", arrays4, ")");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\extractor\ts\UserDataReader.java

package androidx.media2.exoplayer.external.extractor.ts;

import androidx.annotation.RestrictTo;
import androidx.media2.exoplayer.external.Format;
import androidx.media2.exoplayer.external.drm.DrmInitData;
import androidx.media2.exoplayer.external.extractor.ExtractorOutput;
import androidx.media2.exoplayer.external.extractor.TrackOutput;
import androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader;
import androidx.media2.exoplayer.external.text.cea.CeaUtil;
import androidx.media2.exoplayer.external.util.Assertions;
import androidx.media2.exoplayer.external.util.ParsableByteArray;
import java.util.List;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
final class UserDataReader {
private static final int USER_DATA_START_CODE = 434;
private final List<Format> closedCaptionFormats;
private final TrackOutput[] outputs;

public UserDataReader(List<Format> list) {
this.closedCaptionFormats = list;
this.outputs = new TrackOutput[list.size()];
}

public void consume(long j2, ParsableByteArray parsableByteArray) {
if (parsableByteArray.bytesLeft() >= 9) {
int readInt = parsableByteArray.readInt();
int readInt2 = parsableByteArray.readInt();
int readUnsignedByte = parsableByteArray.readUnsignedByte();
if (readInt == USER_DATA_START_CODE && readInt2 == 1195456820 && readUnsignedByte == 3) {
CeaUtil.consumeCcData(j2, parsableByteArray, this.outputs);
}
}
}

public void createTracks(ExtractorOutput extractorOutput, TsPayloadReader.TrackIdGenerator trackIdGenerator) {
for (int i = 0; i < this.outputs.length; i++) {
trackIdGenerator.generateNewId();
TrackOutput track = extractorOutput.track(trackIdGenerator.getTrackId(), 3);
Format format = this.closedCaptionFormats.get(i);
String str = format.sampleMimeType;
boolean z = "application/cea-608".equals(str) || "application/cea-708".equals(str);
String valueOf = String.valueOf(str);
Assertions.checkArgument(z, valueOf.length() != 0 ? "Invalid closed caption mime type provided: ".concat(valueOf) : new String("Invalid closed caption mime type provided: "));
track.format(Format.createTextSampleFormat(trackIdGenerator.getFormatId(), str, (String) null, -1, format.selectionFlags, format.language, format.accessibilityChannel, (DrmInitData) null, Long.MAX_VALUE, format.initializationData));
this.outputs[i] = track;
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\metadata\Metadata$1.java

package androidx.media2.exoplayer.external.metadata;

import android.os.Parcel;
import android.os.Parcelable;

public class Metadata$1 implements Parcelable.Creator<Metadata> {
public Metadata createFromParcel(Parcel parcel) {
return new Metadata(parcel);
}

public Metadata[] newArray(int i) {
return new Metadata[i];
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\source\MaskingMediaSource$DummyTimeline.java

package androidx.media2.exoplayer.external.source;

import androidx.annotation.Nullable;
import androidx.media2.exoplayer.external.Timeline;
import androidx.media2.exoplayer.external.source.MaskingMediaSource;

public final class MaskingMediaSource$DummyTimeline extends Timeline {
@Nullable
private final Object tag;

public MaskingMediaSource$DummyTimeline(@Nullable Object obj) {
this.tag = obj;
}

public int getIndexOfPeriod(Object obj) {
return obj == MaskingMediaSource.MaskingTimeline.DUMMY_EXTERNAL_ID ? 0 : -1;
}

public Timeline.Period getPeriod(int i, Timeline.Period period, boolean z) {
return period.set(0, MaskingMediaSource.MaskingTimeline.DUMMY_EXTERNAL_ID, 0, -9223372036854775807L, 0);
}

public int getPeriodCount() {
return 1;
}

public Object getUidOfPeriod(int i) {
return MaskingMediaSource.MaskingTimeline.DUMMY_EXTERNAL_ID;
}

public Timeline.Window getWindow(int i, Timeline.Window window, long j2) {
return window.set(this.tag, (Object) null, -9223372036854775807L, -9223372036854775807L, false, true, 0, -9223372036854775807L, 0, 0, 0);
}

public int getWindowCount() {
return 1;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\source\SingleSampleMediaSource.java

package androidx.media2.exoplayer.external.source;

import android.net.Uri;
import android.os.Handler;
import androidx.annotation.Nullable;
import androidx.annotation.RestrictTo;
import androidx.media2.exoplayer.external.Format;
import androidx.media2.exoplayer.external.Timeline;
import androidx.media2.exoplayer.external.source.MediaSource;
import androidx.media2.exoplayer.external.upstream.Allocator;
import androidx.media2.exoplayer.external.upstream.DataSource;
import androidx.media2.exoplayer.external.upstream.DataSpec;
import androidx.media2.exoplayer.external.upstream.DefaultLoadErrorHandlingPolicy;
import androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy;
import androidx.media2.exoplayer.external.upstream.TransferListener;
import java.io.IOException;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public final class SingleSampleMediaSource extends BaseMediaSource {
private final DataSource.Factory dataSourceFactory;
private final DataSpec dataSpec;
private final long durationUs;
private final Format format;
private final LoadErrorHandlingPolicy loadErrorHandlingPolicy;
@Nullable
private final Object tag;
private final Timeline timeline;
@Nullable
private TransferListener transferListener;
private final boolean treatLoadErrorsAsEndOfStream;

@Deprecated
public SingleSampleMediaSource(Uri uri, DataSource.Factory factory, Format format2, long j2) {
this(uri, factory, format2, j2, 3);
}

@Deprecated
public SingleSampleMediaSource(Uri uri, DataSource.Factory factory, Format format2, long j2, int i) {
this(uri, factory, format2, j2, new DefaultLoadErrorHandlingPolicy(i), false, (Object) null);
}

/* JADX INFO: this call moved to the top of the method (can break code semantics) */
@Deprecated
public SingleSampleMediaSource(Uri uri, DataSource.Factory factory, Format format2, long j2, int i, Handler handler, EventListener eventListener, int i3, boolean z) {
this(uri, factory, format2, j2, new DefaultLoadErrorHandlingPolicy(i), z, (Object) null);
Handler handler2 = handler;
EventListener eventListener2 = eventListener;
if (handler2 == null || eventListener2 == null) {
return;
}
EventListenerWrapper eventListenerWrapper = new EventListenerWrapper(eventListener2, i3);
addEventListener(handler2, eventListenerWrapper);
}

private SingleSampleMediaSource(Uri uri, DataSource.Factory factory, Format format2, long j2, LoadErrorHandlingPolicy loadErrorHandlingPolicy2, boolean z, @Nullable Object obj) {
this.dataSourceFactory = factory;
this.format = format2;
this.durationUs = j2;
this.loadErrorHandlingPolicy = loadErrorHandlingPolicy2;
this.treatLoadErrorsAsEndOfStream = z;
this.tag = obj;
this.dataSpec = new DataSpec(uri, 1);
this.timeline = new SinglePeriodTimeline(j2, true, false, (Object) null, obj);
}

public MediaPeriod createPeriod(MediaSource.MediaPeriodId mediaPeriodId, Allocator allocator, long j2) {
return new SingleSampleMediaPeriod(this.dataSpec, this.dataSourceFactory, this.transferListener, this.format, this.durationUs, this.loadErrorHandlingPolicy, createEventDispatcher(mediaPeriodId), this.treatLoadErrorsAsEndOfStream);
}

@Nullable
public Object getTag() {
return this.tag;
}

public void maybeThrowSourceInfoRefreshError() throws IOException {
}

public void prepareSourceInternal(@Nullable TransferListener transferListener2) {
this.transferListener = transferListener2;
refreshSourceInfo(this.timeline);
}

public void releasePeriod(MediaPeriod mediaPeriod) {
((SingleSampleMediaPeriod) mediaPeriod).release();
}

public void releaseSourceInternal() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\source\chunk\SingleSampleMediaChunk.java

package androidx.media2.exoplayer.external.source.chunk;

import androidx.annotation.RestrictTo;
import androidx.media2.exoplayer.external.Format;
import androidx.media2.exoplayer.external.extractor.DefaultExtractorInput;
import androidx.media2.exoplayer.external.extractor.TrackOutput;
import androidx.media2.exoplayer.external.upstream.DataSource;
import androidx.media2.exoplayer.external.upstream.DataSpec;
import androidx.media2.exoplayer.external.util.Util;
import java.io.IOException;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public final class SingleSampleMediaChunk extends BaseMediaChunk {
private boolean loadCompleted;
private long nextLoadPosition;
private final Format sampleFormat;
private final int trackType;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public SingleSampleMediaChunk(DataSource dataSource, DataSpec dataSpec, Format format, int i, Object obj, long j2, long j3, long j5, int i3, Format format2) {
super(dataSource, dataSpec, format, i, obj, j2, j3, -9223372036854775807L, -9223372036854775807L, j5);
this.trackType = i3;
this.sampleFormat = format2;
}

public void cancelLoad() {
}

public boolean isLoadCompleted() {
return this.loadCompleted;
}

/* JADX INFO: finally extract failed */
public void load() throws IOException, InterruptedException {
try {
long open = this.dataSource.open(this.dataSpec.subrange(this.nextLoadPosition));
if (open != -1) {
open += this.nextLoadPosition;
}
DefaultExtractorInput defaultExtractorInput = new DefaultExtractorInput(this.dataSource, this.nextLoadPosition, open);
BaseMediaChunkOutput output = getOutput();
output.setSampleOffsetUs(0);
TrackOutput track = output.track(0, this.trackType);
track.format(this.sampleFormat);
for (int i = 0; i != -1; i = track.sampleData(defaultExtractorInput, Integer.MAX_VALUE, true)) {
this.nextLoadPosition += (long) i;
}
track.sampleMetadata(this.startTimeUs, 1, (int) this.nextLoadPosition, 0, (TrackOutput.CryptoData) null);
Util.closeQuietly(this.dataSource);
this.loadCompleted = true;
} catch (Throwable th) {
Util.closeQuietly(this.dataSource);
throw th;
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\source\hls\playlist\FilteringHlsPlaylistParserFactory.java

package androidx.media2.exoplayer.external.source.hls.playlist;

import androidx.annotation.RestrictTo;
import androidx.media2.exoplayer.external.offline.FilteringManifestParser;
import androidx.media2.exoplayer.external.offline.StreamKey;
import androidx.media2.exoplayer.external.upstream.ParsingLoadable;
import java.util.List;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public final class FilteringHlsPlaylistParserFactory implements HlsPlaylistParserFactory {
private final HlsPlaylistParserFactory hlsPlaylistParserFactory;
private final List<StreamKey> streamKeys;

public FilteringHlsPlaylistParserFactory(HlsPlaylistParserFactory hlsPlaylistParserFactory2, List<StreamKey> list) {
this.hlsPlaylistParserFactory = hlsPlaylistParserFactory2;
this.streamKeys = list;
}

public ParsingLoadable.Parser<HlsPlaylist> createPlaylistParser() {
return new FilteringManifestParser(this.hlsPlaylistParserFactory.createPlaylistParser(), this.streamKeys);
}

public ParsingLoadable.Parser<HlsPlaylist> createPlaylistParser(HlsMasterPlaylist hlsMasterPlaylist) {
return new FilteringManifestParser(this.hlsPlaylistParserFactory.createPlaylistParser(hlsMasterPlaylist), this.streamKeys);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\text\ttml\TtmlStyle$StyleFlags.java

package androidx.media2.exoplayer.external.text.ttml;

import java.lang.annotation.Documented;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

@Documented
@Retention(RetentionPolicy.SOURCE)
public @interface TtmlStyle$StyleFlags {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\upstream\Allocator.java

package androidx.media2.exoplayer.external.upstream;

import androidx.annotation.RestrictTo;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public interface Allocator {
Allocation allocate();

int getIndividualAllocationLength();

int getTotalBytesAllocated();

void release(Allocation allocation);

void release(Allocation[] allocationArr);

void trim();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\util\EventDispatcher$Event.java

package androidx.media2.exoplayer.external.util;

public interface EventDispatcher$Event<T> {
void sendTo(T t);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\util\SlidingPercentile$Sample.java

package androidx.media2.exoplayer.external.util;

public class SlidingPercentile$Sample {
public int index;
public float value;
public int weight;

private SlidingPercentile$Sample() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\util\Util$2.java

package androidx.media2.exoplayer.external.util;

import androidx.media2.exoplayer.external.Format;
import androidx.media2.exoplayer.external.audio.AudioRendererEventListener;
import androidx.media2.exoplayer.external.audio.AudioRendererEventListener$;
import androidx.media2.exoplayer.external.decoder.DecoderCounters;

public class Util$2 implements AudioRendererEventListener {
public void onAudioDecoderInitialized(String str, long j2, long j3) {
AudioRendererEventListener$.CC.onAudioDecoderInitialized$$dflt$$(this, str, j2, j3);
}

public void onAudioDisabled(DecoderCounters decoderCounters) {
AudioRendererEventListener$.CC.onAudioDisabled$$dflt$$(this, decoderCounters);
}

public void onAudioEnabled(DecoderCounters decoderCounters) {
AudioRendererEventListener$.CC.onAudioEnabled$$dflt$$(this, decoderCounters);
}

public void onAudioInputFormatChanged(Format format) {
AudioRendererEventListener$.CC.onAudioInputFormatChanged$$dflt$$(this, format);
}

public void onAudioSessionId(int i) {
AudioRendererEventListener$.CC.onAudioSessionId$$dflt$$(this, i);
}

public void onAudioSinkUnderrun(int i, long j2, long j3) {
AudioRendererEventListener$.CC.onAudioSinkUnderrun$$dflt$$(this, i, j2, j3);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\media2\exoplayer\external\video\ColorInfo.java

package androidx.media2.exoplayer.external.video;

import android.os.Parcel;
import android.os.Parcelable;
import androidx.annotation.Nullable;
import androidx.annotation.RestrictTo;
import androidx.media2.exoplayer.external.util.Util;
import java.util.Arrays;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public final class ColorInfo implements Parcelable {
public static final Parcelable.Creator<ColorInfo> CREATOR = new 1();
public final int colorRange;
public final int colorSpace;
public final int colorTransfer;
private int hashCode;
@Nullable
public final byte[] hdrStaticInfo;

public ColorInfo(int i, int i3, int i4, @Nullable byte[] bArr) {
this.colorSpace = i;
this.colorRange = i3;
this.colorTransfer = i4;
this.hdrStaticInfo = bArr;
}

public ColorInfo(Parcel parcel) {
this.colorSpace = parcel.readInt();
this.colorRange = parcel.readInt();
this.colorTransfer = parcel.readInt();
this.hdrStaticInfo = Util.readBoolean(parcel) ? parcel.createByteArray() : null;
}

public int describeContents() {
return 0;
}

public boolean equals(@Nullable Object obj) {
if (this == obj) {
return true;
}
if (obj == null || ColorInfo.class != obj.getClass()) {
return false;
}
ColorInfo colorInfo = (ColorInfo) obj;
return this.colorSpace == colorInfo.colorSpace && this.colorRange == colorInfo.colorRange && this.colorTransfer == colorInfo.colorTransfer && Arrays.equals(this.hdrStaticInfo, colorInfo.hdrStaticInfo);
}

public int hashCode() {
if (this.hashCode == 0) {
this.hashCode = Arrays.hashCode(this.hdrStaticInfo) + ((((((527 + this.colorSpace) * 31) + this.colorRange) * 31) + this.colorTransfer) * 31);
}
return this.hashCode;
}

public String toString() {
int i = this.colorSpace;
int i3 = this.colorRange;
int i4 = this.colorTransfer;
boolean z = this.hdrStaticInfo != null;
StringBuilder sb = new StringBuilder(55);
sb.append("ColorInfo(");
sb.append(i);
sb.append(", ");
sb.append(i3);
sb.append(", ");
sb.append(i4);
sb.append(", ");
sb.append(z);
sb.append(")");
return sb.toString();
}

public void writeToParcel(Parcel parcel, int i) {
parcel.writeInt(this.colorSpace);
parcel.writeInt(this.colorRange);
parcel.writeInt(this.colorTransfer);
Util.writeBoolean(parcel, this.hdrStaticInfo != null);
byte[] bArr = this.hdrStaticInfo;
if (bArr != null) {
parcel.writeByteArray(bArr);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\recyclerview\widget\ListAdapter$1.java

package androidx.recyclerview.widget;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.AsyncListDiffer;
import java.util.List;

public class ListAdapter$1 implements AsyncListDiffer.ListListener<T> {
public final /* synthetic */ ListAdapter this$0;

public ListAdapter$1(ListAdapter listAdapter) {
this.this$0 = listAdapter;
}

public void onCurrentListChanged(@NonNull List<T> list, @NonNull List<T> list2) {
this.this$0.onCurrentListChanged(list, list2);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\recyclerview\widget\RecyclerView$State.java

package androidx.recyclerview.widget;

import android.support.v4.media.b;
import android.support.v4.media.c;
import android.util.SparseArray;
import androidx.recyclerview.widget.RecyclerView;
import com.energysh.material.adapter.provider.pdvh.RLUHg;

public class RecyclerView$State {
public static final int STEP_ANIMATIONS = 4;
public static final int STEP_LAYOUT = 2;
public static final int STEP_START = 1;
private SparseArray<Object> mData;
public int mDeletedInvisibleItemCountSincePreviousLayout = 0;
public long mFocusedItemId;
public int mFocusedItemPosition;
public int mFocusedSubChildId;
public boolean mInPreLayout = false;
public boolean mIsMeasuring = false;
public int mItemCount = 0;
public int mLayoutStep = 1;
public int mPreviousLayoutItemCount = 0;
public int mRemainingScrollHorizontal;
public int mRemainingScrollVertical;
public boolean mRunPredictiveAnimations = false;
public boolean mRunSimpleAnimations = false;
public boolean mStructureChanged = false;
public int mTargetPosition = -1;
public boolean mTrackOldChangeHolders = false;

public void assertLayoutStep(int i) {
if ((this.mLayoutStep & i) == 0) {
StringBuilder q = b.q("Layout state should be one of ");
q.append(Integer.toBinaryString(i));
q.append(" but it is ");
q.append(Integer.toBinaryString(this.mLayoutStep));
throw new IllegalStateException(q.toString());
}
}

public boolean didStructureChange() {
return this.mStructureChanged;
}

public <T> T get(int i) {
SparseArray<Object> sparseArray = this.mData;
if (sparseArray == null) {
return null;
}
return sparseArray.get(i);
}

public int getItemCount() {
return this.mInPreLayout ? this.mPreviousLayoutItemCount - this.mDeletedInvisibleItemCountSincePreviousLayout : this.mItemCount;
}

public int getRemainingScrollHorizontal() {
return this.mRemainingScrollHorizontal;
}

public int getRemainingScrollVertical() {
return this.mRemainingScrollVertical;
}

public int getTargetScrollPosition() {
return this.mTargetPosition;
}

public boolean hasTargetScrollPosition() {
return this.mTargetPosition != -1;
}

public boolean isMeasuring() {
return this.mIsMeasuring;
}

public boolean isPreLayout() {
return this.mInPreLayout;
}

public void prepareForNestedPrefetch(RecyclerView.Adapter adapter) {
this.mLayoutStep = 1;
this.mItemCount = adapter.getItemCount();
this.mInPreLayout = false;
this.mTrackOldChangeHolders = false;
this.mIsMeasuring = false;
}

public void put(int i, Object obj) {
if (this.mData == null) {
this.mData = new SparseArray<>();
}
this.mData.put(i, obj);
}

public void remove(int i) {
SparseArray<Object> sparseArray = this.mData;
if (sparseArray != null) {
sparseArray.remove(i);
}
}

public String toString() {
StringBuilder q = b.q("State{mTargetPosition=");
q.append(this.mTargetPosition);
q.append(", mData=");
q.append(this.mData);
q.append(", mItemCount=");
q.append(this.mItemCount);
q.append(", mIsMeasuring=");
q.append(this.mIsMeasuring);
q.append(", mPreviousLayoutItemCount=");
q.append(this.mPreviousLayoutItemCount);
q.append(", mDeletedInvisibleItemCountSincePreviousLayout=");
q.append(this.mDeletedInvisibleItemCountSincePreviousLayout);
q.append(", mStructureChanged=");
q.append(this.mStructureChanged);
q.append(RLUHg.NegngXgh);
q.append(this.mInPreLayout);
q.append(", mRunSimpleAnimations=");
q.append(this.mRunSimpleAnimations);
q.append(", mRunPredictiveAnimations=");
return c.k(q, this.mRunPredictiveAnimations, '}');
}

public boolean willRunPredictiveAnimations() {
return this.mRunPredictiveAnimations;
}

public boolean willRunSimpleAnimations() {
return this.mRunSimpleAnimations;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\recyclerview\widget\ViewBoundsCheck$Callback.java

package androidx.recyclerview.widget;

import android.view.View;

public interface ViewBoundsCheck$Callback {
View getChildAt(int i);

int getChildEnd(View view);

int getChildStart(View view);

int getParentEnd();

int getParentStart();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\room\MultiInstanceInvalidationClient$1.java

package androidx.room;

import androidx.room.IMultiInstanceInvalidationCallback;

public class MultiInstanceInvalidationClient$1 extends IMultiInstanceInvalidationCallback.Stub {
public final /* synthetic */ MultiInstanceInvalidationClient this$0;

public MultiInstanceInvalidationClient$1(MultiInstanceInvalidationClient multiInstanceInvalidationClient) {
this.this$0 = multiInstanceInvalidationClient;
}

public void onInvalidation(String[] strArr) {
this.this$0.mExecutor.execute(new 1(this, strArr));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\room\MultiInstanceInvalidationClient$2.java

package androidx.room;

import android.content.ComponentName;
import android.content.ServiceConnection;
import android.os.IBinder;
import androidx.room.IMultiInstanceInvalidationService;

public class MultiInstanceInvalidationClient$2 implements ServiceConnection {
public final /* synthetic */ MultiInstanceInvalidationClient this$0;

public MultiInstanceInvalidationClient$2(MultiInstanceInvalidationClient multiInstanceInvalidationClient) {
this.this$0 = multiInstanceInvalidationClient;
}

public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
this.this$0.mService = IMultiInstanceInvalidationService.Stub.asInterface(iBinder);
MultiInstanceInvalidationClient multiInstanceInvalidationClient = this.this$0;
multiInstanceInvalidationClient.mExecutor.execute(multiInstanceInvalidationClient.mSetUpRunnable);
}

public void onServiceDisconnected(ComponentName componentName) {
MultiInstanceInvalidationClient multiInstanceInvalidationClient = this.this$0;
multiInstanceInvalidationClient.mExecutor.execute(multiInstanceInvalidationClient.mRemoveObserverRunnable);
this.this$0.mService = null;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\room\MultiInstanceInvalidationClient$3.java

package androidx.room;

import android.os.RemoteException;
import android.util.Log;

public class MultiInstanceInvalidationClient$3 implements Runnable {
public final /* synthetic */ MultiInstanceInvalidationClient this$0;

public MultiInstanceInvalidationClient$3(MultiInstanceInvalidationClient multiInstanceInvalidationClient) {
this.this$0 = multiInstanceInvalidationClient;
}

public void run() {
try {
MultiInstanceInvalidationClient multiInstanceInvalidationClient = this.this$0;
IMultiInstanceInvalidationService iMultiInstanceInvalidationService = multiInstanceInvalidationClient.mService;
if (iMultiInstanceInvalidationService != null) {
multiInstanceInvalidationClient.mClientId = iMultiInstanceInvalidationService.registerCallback(multiInstanceInvalidationClient.mCallback, multiInstanceInvalidationClient.mName);
MultiInstanceInvalidationClient multiInstanceInvalidationClient2 = this.this$0;
multiInstanceInvalidationClient2.mInvalidationTracker.addObserver(multiInstanceInvalidationClient2.mObserver);
}
} catch (RemoteException e) {
Log.w("ROOM", "Cannot register multi-instance invalidation callback", e);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\room\MultiInstanceInvalidationClient$4.java

package androidx.room;

public class MultiInstanceInvalidationClient$4 implements Runnable {
public final /* synthetic */ MultiInstanceInvalidationClient this$0;

public MultiInstanceInvalidationClient$4(MultiInstanceInvalidationClient multiInstanceInvalidationClient) {
this.this$0 = multiInstanceInvalidationClient;
}

public void run() {
MultiInstanceInvalidationClient multiInstanceInvalidationClient = this.this$0;
multiInstanceInvalidationClient.mInvalidationTracker.removeObserver(multiInstanceInvalidationClient.mObserver);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\room\MultiInstanceInvalidationClient$5.java

package androidx.room;

import android.os.RemoteException;
import android.util.Log;
import androidx.annotation.NonNull;
import androidx.room.InvalidationTracker;
import java.util.Set;

public class MultiInstanceInvalidationClient$5 extends InvalidationTracker.Observer {
public final /* synthetic */ MultiInstanceInvalidationClient this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public MultiInstanceInvalidationClient$5(MultiInstanceInvalidationClient multiInstanceInvalidationClient, String[] strArr) {
super(strArr);
this.this$0 = multiInstanceInvalidationClient;
}

public boolean isRemote() {
return true;
}

public void onInvalidated(@NonNull Set<String> set) {
if (!this.this$0.mStopped.get()) {
try {
MultiInstanceInvalidationClient multiInstanceInvalidationClient = this.this$0;
IMultiInstanceInvalidationService iMultiInstanceInvalidationService = multiInstanceInvalidationClient.mService;
if (iMultiInstanceInvalidationService != null) {
iMultiInstanceInvalidationService.broadcastInvalidation(multiInstanceInvalidationClient.mClientId, (String[]) set.toArray(new String[0]));
}
} catch (RemoteException e) {
Log.w("ROOM", "Cannot broadcast invalidation", e);
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\slidingpanelayout\R$layout.java

package androidx.slidingpanelayout;

public final class R$layout {
public static final int notification_action = 2131558677;
public static final int notification_action_tombstone = 2131558678;
public static final int notification_template_custom_big = 2131558685;
public static final int notification_template_icon_group = 2131558686;
public static final int notification_template_part_chronometer = 2131558690;
public static final int notification_template_part_time = 2131558691;

private R$layout() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\sqlite\db\SupportSQLiteStatement.java

package androidx.sqlite.db;

public interface SupportSQLiteStatement extends SupportSQLiteProgram {
void execute();

long executeInsert();

int executeUpdateDelete();

long simpleQueryForLong();

String simpleQueryForString();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\tracing\Trace.java

package androidx.tracing;

import android.annotation.SuppressLint;
import android.util.Log;
import androidx.annotation.NonNull;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public final class Trace {
public static final String TAG = "Trace";
private static Method sAsyncTraceBeginMethod;
private static Method sAsyncTraceEndMethod;
private static Method sIsTagEnabledMethod;
private static Method sTraceCounterMethod;
private static long sTraceTagApp;

private Trace() {
}

@SuppressLint({"NewApi"})
public static void beginAsyncSection(@NonNull String str, int i) {
try {
if (sAsyncTraceBeginMethod == null) {
TraceApi29Impl.beginAsyncSection(str, i);
return;
}
} catch (NoClassDefFoundError | NoSuchMethodError unused) {
}
beginAsyncSectionFallback(str, i);
}

private static void beginAsyncSectionFallback(@NonNull String str, int i) {
try {
if (sAsyncTraceBeginMethod == null) {
sAsyncTraceBeginMethod = android.os.Trace.class.getMethod("asyncTraceBegin", new Class[]{Long.TYPE, String.class, Integer.TYPE});
}
sAsyncTraceBeginMethod.invoke((Object) null, new Object[]{Long.valueOf(sTraceTagApp), str, Integer.valueOf(i)});
} catch (Exception e) {
handleException("asyncTraceBegin", e);
}
}

public static void beginSection(@NonNull String str) {
TraceApi18Impl.beginSection(str);
}

@SuppressLint({"NewApi"})
public static void endAsyncSection(@NonNull String str, int i) {
try {
if (sAsyncTraceEndMethod == null) {
TraceApi29Impl.endAsyncSection(str, i);
return;
}
} catch (NoClassDefFoundError | NoSuchMethodError unused) {
}
endAsyncSectionFallback(str, i);
}

private static void endAsyncSectionFallback(@NonNull String str, int i) {
try {
if (sAsyncTraceEndMethod == null) {
sAsyncTraceEndMethod = android.os.Trace.class.getMethod("asyncTraceEnd", new Class[]{Long.TYPE, String.class, Integer.TYPE});
}
sAsyncTraceEndMethod.invoke((Object) null, new Object[]{Long.valueOf(sTraceTagApp), str, Integer.valueOf(i)});
} catch (Exception e) {
handleException("asyncTraceEnd", e);
}
}

public static void endSection() {
TraceApi18Impl.endSection();
}

private static void handleException(@NonNull String str, @NonNull Exception exc) {
if (exc instanceof InvocationTargetException) {
Throwable cause = exc.getCause();
if (cause instanceof RuntimeException) {
throw ((RuntimeException) cause);
}
throw new RuntimeException(cause);
}
Log.v(TAG, "Unable to call " + str + " via reflection", exc);
}

@SuppressLint({"NewApi"})
public static boolean isEnabled() {
try {
if (sIsTagEnabledMethod == null) {
return android.os.Trace.isEnabled();
}
} catch (NoClassDefFoundError | NoSuchMethodError unused) {
}
return isEnabledFallback();
}

private static boolean isEnabledFallback() {
try {
if (sIsTagEnabledMethod == null) {
sTraceTagApp = android.os.Trace.class.getField("TRACE_TAG_APP").getLong((Object) null);
sIsTagEnabledMethod = android.os.Trace.class.getMethod("isTagEnabled", new Class[]{Long.TYPE});
}
return ((Boolean) sIsTagEnabledMethod.invoke((Object) null, new Object[]{Long.valueOf(sTraceTagApp)})).booleanValue();
} catch (Exception e) {
handleException("isTagEnabled", e);
return false;
}
}

@SuppressLint({"NewApi"})
public static void setCounter(@NonNull String str, int i) {
try {
if (sTraceCounterMethod == null) {
TraceApi29Impl.setCounter(str, i);
return;
}
} catch (NoClassDefFoundError | NoSuchMethodError unused) {
}
setCounterFallback(str, i);
}

private static void setCounterFallback(@NonNull String str, int i) {
try {
if (sTraceCounterMethod == null) {
sTraceCounterMethod = android.os.Trace.class.getMethod("traceCounter", new Class[]{Long.TYPE, String.class, Integer.TYPE});
}
sTraceCounterMethod.invoke((Object) null, new Object[]{Long.valueOf(sTraceTagApp), str, Integer.valueOf(i)});
} catch (Exception e) {
handleException("traceCounter", e);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\vectordrawable\graphics\drawable\AnimatedVectorDrawableCompat$1.java

package androidx.vectordrawable.graphics.drawable;

import android.graphics.drawable.Drawable;

public class AnimatedVectorDrawableCompat$1 implements Drawable.Callback {
public final /* synthetic */ AnimatedVectorDrawableCompat this$0;

public AnimatedVectorDrawableCompat$1(AnimatedVectorDrawableCompat animatedVectorDrawableCompat) {
this.this$0 = animatedVectorDrawableCompat;
}

public void invalidateDrawable(Drawable drawable) {
this.this$0.invalidateSelf();
}

public void scheduleDrawable(Drawable drawable, Runnable runnable, long j2) {
this.this$0.scheduleSelf(runnable, j2);
}

public void unscheduleDrawable(Drawable drawable, Runnable runnable) {
this.this$0.unscheduleSelf(runnable);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\vectordrawable\graphics\drawable\AnimatedVectorDrawableCompat$2.java

package androidx.vectordrawable.graphics.drawable;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import androidx.vectordrawable.graphics.drawable.Animatable2Compat;
import java.util.ArrayList;

public class AnimatedVectorDrawableCompat$2 extends AnimatorListenerAdapter {
public final /* synthetic */ AnimatedVectorDrawableCompat this$0;

public AnimatedVectorDrawableCompat$2(AnimatedVectorDrawableCompat animatedVectorDrawableCompat) {
this.this$0 = animatedVectorDrawableCompat;
}

public void onAnimationEnd(Animator animator) {
ArrayList arrayList = new ArrayList(this.this$0.mAnimationCallbacks);
int size = arrayList.size();
for (int i = 0; i < size; i++) {
((Animatable2Compat.AnimationCallback) arrayList.get(i)).onAnimationEnd(this.this$0);
}
}

public void onAnimationStart(Animator animator) {
ArrayList arrayList = new ArrayList(this.this$0.mAnimationCallbacks);
int size = arrayList.size();
for (int i = 0; i < size; i++) {
((Animatable2Compat.AnimationCallback) arrayList.get(i)).onAnimationStart(this.this$0);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\versionedparcelable\ParcelField.java

package androidx.versionedparcelable;

import androidx.annotation.RestrictTo;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Target({ElementType.FIELD})
@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP_PREFIX})
@Retention(RetentionPolicy.SOURCE)
public @interface ParcelField {
String defaultValue() default "";

int value();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\work\WorkerFactory$1.java

package androidx.work;

import android.content.Context;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;

public class WorkerFactory$1 extends WorkerFactory {
@Nullable
public ListenableWorker createWorker(@NonNull Context context, @NonNull String str, @NonNull WorkerParameters workerParameters) {
return null;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\work\impl\ExecutionListener.java

package androidx.work.impl;

import androidx.annotation.NonNull;
import androidx.annotation.RestrictTo;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
public interface ExecutionListener {
void onExecuted(@NonNull String str, boolean z);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\work\impl\model\WorkTypeConverters$StateIds.java

package androidx.work.impl.model;

public interface WorkTypeConverters$StateIds {
public static final int BLOCKED = 4;
public static final int CANCELLED = 5;
public static final String COMPLETED_STATES = "(2, 3, 5)";
public static final int ENQUEUED = 0;
public static final int FAILED = 3;
public static final int RUNNING = 1;
public static final int SUCCEEDED = 2;
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\work\impl\utils\futures\AbstractFuture$Cancellation.java

package androidx.work.impl.utils.futures;

import androidx.annotation.Nullable;

public final class AbstractFuture$Cancellation {
public static final AbstractFuture$Cancellation CAUSELESS_CANCELLED;
public static final AbstractFuture$Cancellation CAUSELESS_INTERRUPTED;
@Nullable
public final Throwable cause;
public final boolean wasInterrupted;

static {
if (AbstractFuture.GENERATE_CANCELLATION_CAUSES) {
CAUSELESS_CANCELLED = null;
CAUSELESS_INTERRUPTED = null;
return;
}
CAUSELESS_CANCELLED = new AbstractFuture$Cancellation(false, (Throwable) null);
CAUSELESS_INTERRUPTED = new AbstractFuture$Cancellation(true, (Throwable) null);
}

public AbstractFuture$Cancellation(boolean z, @Nullable Throwable th) {
this.wasInterrupted = z;
this.cause = th;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\androidx\work\multiprocess\IWorkManagerImplCallback$Stub.java

package androidx.work.multiprocess;

import android.os.Binder;
import android.os.IBinder;
import android.os.Parcel;
import android.os.RemoteException;

public abstract class IWorkManagerImplCallback$Stub extends Binder implements IWorkManagerImplCallback {
private static final String DESCRIPTOR = "androidx.work.multiprocess.IWorkManagerImplCallback";
public static final int TRANSACTION_onFailure = 2;
public static final int TRANSACTION_onSuccess = 1;

/* JADX WARNING: type inference failed for: r1v0, types: [android.os.Binder, androidx.work.multiprocess.IWorkManagerImplCallback$Stub, android.os.IInterface] */
public IWorkManagerImplCallback$Stub() {
attachInterface(this, DESCRIPTOR);
}

public static IWorkManagerImplCallback asInterface(IBinder iBinder) {
if (iBinder == null) {
return null;
}
IWorkManagerImplCallback queryLocalInterface = iBinder.queryLocalInterface(DESCRIPTOR);
return (queryLocalInterface == null || !(queryLocalInterface instanceof IWorkManagerImplCallback)) ? new Proxy(iBinder) : queryLocalInterface;
}

public static IWorkManagerImplCallback getDefaultImpl() {
return Proxy.sDefaultImpl;
}

public static boolean setDefaultImpl(IWorkManagerImplCallback iWorkManagerImplCallback) {
if (Proxy.sDefaultImpl != null) {
throw new IllegalStateException("setDefaultImpl() called twice");
} else if (iWorkManagerImplCallback == null) {
return false;
} else {
Proxy.sDefaultImpl = iWorkManagerImplCallback;
return true;
}
}

public IBinder asBinder() {
return this;
}

public boolean onTransact(int i, Parcel parcel, Parcel parcel2, int i3) throws RemoteException {
if (i == 1) {
parcel.enforceInterface(DESCRIPTOR);
onSuccess(parcel.createByteArray());
return true;
} else if (i == 2) {
parcel.enforceInterface(DESCRIPTOR);
onFailure(parcel.readString());
return true;
} else if (i != 1598968902) {
return super.onTransact(i, parcel, parcel2, i3);
} else {
parcel2.writeString(DESCRIPTOR);
return true;
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\airbnb\lottie\model\content\GradientType.java

package com.airbnb.lottie.model.content;

public enum GradientType {
LINEAR,
RADIAL
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\airbnb\lottie\model\content\PolystarShape$Type.java

package com.airbnb.lottie.model.content;

public enum PolystarShape$Type {
STAR(1),
POLYGON(2);

private final int value;

private PolystarShape$Type(int i) {
this.value = i;
}

public static PolystarShape$Type forValue(int i) {
for (PolystarShape$Type polystarShape$Type : values()) {
if (polystarShape$Type.value == i) {
return polystarShape$Type;
}
}
return null;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\android\volley\Cache.java

package com.android.volley;

import androidx.annotation.Nullable;

public interface Cache {
void clear();

@Nullable
Entry get(String str);

void initialize();

void invalidate(String str, boolean z);

void put(String str, Entry entry);

void remove(String str);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\android\volley\cronet\CronetHttpStack$Builder$3.java

package com.android.volley.cronet;

import com.android.volley.VolleyLog;
import com.android.volley.cronet.CronetHttpStack;

public class CronetHttpStack$Builder$3 implements CronetHttpStack$CurlCommandLogger {
public final /* synthetic */ CronetHttpStack.Builder this$0;

public CronetHttpStack$Builder$3(CronetHttpStack.Builder builder) {
this.this$0 = builder;
}

public void logCurlCommand(String str) {
VolleyLog.v(str, new Object[0]);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\android\volley\cronet\CronetHttpStack$CurlCommandLogger.java

package com.android.volley.cronet;

public interface CronetHttpStack$CurlCommandLogger {
void logCurlCommand(String str);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\apm\insight\a.java

package com.apm.insight;

import androidx.annotation.Nullable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class a {
private Map<CrashType, List<AttachUserData>> a = new HashMap();
private Map<CrashType, List<AttachUserData>> b = new HashMap();
private Map<String, String> c = new HashMap();
private ICrashFilter d = null;

private void c(CrashType crashType, AttachUserData attachUserData) {
List list;
if (this.a.get(crashType) == null) {
list = new ArrayList();
this.a.put(crashType, list);
} else {
list = this.a.get(crashType);
}
list.add(attachUserData);
}

private void d(CrashType crashType, AttachUserData attachUserData) {
List list;
if (this.b.get(crashType) == null) {
list = new ArrayList();
this.b.put(crashType, list);
} else {
list = this.b.get(crashType);
}
list.add(attachUserData);
}

private void e(CrashType crashType, AttachUserData attachUserData) {
List list = this.a.get(crashType);
if (list != null) {
list.remove(attachUserData);
}
}

private void f(CrashType crashType, AttachUserData attachUserData) {
List list = this.b.get(crashType);
if (list != null) {
list.remove(attachUserData);
}
}

@Nullable
public List<AttachUserData> a(CrashType crashType) {
return this.a.get(crashType);
}

public Map<String, String> a() {
return this.c;
}

public void a(AttachUserData attachUserData, CrashType crashType) {
if (crashType == CrashType.ALL) {
c(CrashType.LAUNCH, attachUserData);
c(CrashType.JAVA, attachUserData);
c(CrashType.CUSTOM_JAVA, attachUserData);
c(CrashType.NATIVE, attachUserData);
c(CrashType.ANR, attachUserData);
crashType = CrashType.DART;
}
c(crashType, attachUserData);
}

public void a(CrashType crashType, AttachUserData attachUserData) {
if (crashType == CrashType.ALL) {
e(CrashType.LAUNCH, attachUserData);
e(CrashType.JAVA, attachUserData);
e(CrashType.CUSTOM_JAVA, attachUserData);
e(CrashType.NATIVE, attachUserData);
e(CrashType.ANR, attachUserData);
crashType = CrashType.DART;
}
e(crashType, attachUserData);
}

public void a(ICrashFilter iCrashFilter) {
this.d = iCrashFilter;
}

public void a(Map<? extends String, ? extends String> map) {
this.c.putAll(map);
}

@Nullable
public ICrashFilter b() {
return this.d;
}

@Nullable
public List<AttachUserData> b(CrashType crashType) {
return this.b.get(crashType);
}

public void b(AttachUserData attachUserData, CrashType crashType) {
if (crashType == CrashType.ALL) {
d(CrashType.LAUNCH, attachUserData);
d(CrashType.JAVA, attachUserData);
d(CrashType.CUSTOM_JAVA, attachUserData);
d(CrashType.NATIVE, attachUserData);
d(CrashType.ANR, attachUserData);
crashType = CrashType.DART;
}
d(crashType, attachUserData);
}

public void b(CrashType crashType, AttachUserData attachUserData) {
if (crashType == CrashType.ALL) {
f(CrashType.LAUNCH, attachUserData);
f(CrashType.JAVA, attachUserData);
f(CrashType.CUSTOM_JAVA, attachUserData);
f(CrashType.NATIVE, attachUserData);
f(CrashType.ANR, attachUserData);
crashType = CrashType.DART;
}
f(crashType, attachUserData);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\apm\insight\b.java

package com.apm.insight;

import android.text.TextUtils;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.apm.insight.l.l;
import org.json.JSONArray;

public class b implements ICrashCallback, IOOMCallback {
private IOOMCallback a;
private ICrashCallback b;
private String c;

public b(String str, ICrashCallback iCrashCallback) {
this.c = str;
this.b = iCrashCallback;
}

public b(String str, IOOMCallback iOOMCallback) {
this.c = str;
this.a = iOOMCallback;
}

public void a(@NonNull CrashType crashType, @Nullable String str, @Nullable String str2, String str3) {
h a2;
if (this.b != null && (a2 = h.a(this.c)) != null && a2.a(str3, str2)) {
this.b.onCrash(crashType, str, (Thread) null);
}
}

public void a(@NonNull CrashType crashType, @Nullable String str, @Nullable Thread thread, JSONArray jSONArray) {
if (this.b != null && jSONArray != null) {
for (int i = 0; i < jSONArray.length(); i++) {
if (TextUtils.equals(l.b(jSONArray.optJSONObject(i), new String[]{"header", "aid"}), this.c)) {
this.b.onCrash(crashType, str, thread);
}
}
}
}

public void a(@NonNull CrashType crashType, @Nullable Throwable th, @Nullable Thread thread, long j2, JSONArray jSONArray) {
if (this.a != null && jSONArray != null) {
for (int i = 0; i < jSONArray.length(); i++) {
if (TextUtils.equals(l.b(jSONArray.optJSONObject(i), new String[]{"header", "aid"}), this.c)) {
this.a.onCrash(crashType, th, thread, j2);
}
}
}
}

public void onCrash(@NonNull CrashType crashType, @Nullable String str, @Nullable Thread thread) {
}

public void onCrash(@NonNull CrashType crashType, @Nullable Throwable th, @Nullable Thread thread, long j2) {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\apm\insight\c.java

package com.apm.insight;

public class c {
private static d a = new d();

public static d a() {
return a;
}

public static void a(Throwable th, String str) {
a.a(th, str);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\apm\insight\d.java

package com.apm.insight;

import com.apm.insight.f.a;
import com.apm.insight.f.b;
import com.apm.insight.l.j;
import com.apm.insight.runtime.m;
import java.util.Map;

public class d {
public d() {
a.a();
}

public void a(String str) {
a(str, "EnsureNotReachHere", (Map<String, String>) null);
}

public void a(String str, String str2, Map<String, String> map) {
if (i.i().isEnsureEnable()) {
b.a(Thread.currentThread().getStackTrace(), 5, str, str2, map);
}
}

public void a(String str, Throwable th) {
m.a(th, str);
}

public void a(Throwable th, String str) {
if (a(th)) {
b.a(th, str, true);
}
}

public boolean a(Throwable th) {
return i.i().isEnsureEnable() && !j.a(th);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\apm\insight\e.java

package com.apm.insight;

public interface e {
byte[] a(byte[] bArr);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\apm\insight\f.java

package com.apm.insight;

import androidx.annotation.Nullable;

public interface f {
@Nullable
String a(String str, String str2);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\apm\insight\g.java

package com.apm.insight;

public interface g {
void a(boolean z);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\apm\insight\h.java

package com.apm.insight;

import android.content.Context;
import android.content.pm.PackageInfo;
import android.text.TextUtils;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.apm.insight.MonitorCrash;
import com.apm.insight.entity.b;
import com.apm.insight.k.k;
import com.apm.insight.l.l;
import com.apm.insight.l.v;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class h {
public static MonitorCrash b;
public static volatile ConcurrentHashMap<String, h> c = new ConcurrentHashMap<>();
public MonitorCrash a;

private h(MonitorCrash monitorCrash) {
this.a = monitorCrash;
b.a(this);
com.apm.insight.j.b.d();
k.e();
}

public static h a(String str) {
return c.get(str);
}

public static Object a() {
return b;
}

public static void a(Context context, MonitorCrash monitorCrash) {
b = monitorCrash;
Npth.init(context, new 1(new h(monitorCrash), monitorCrash, i.a()));
}

public static void a(MonitorCrash monitorCrash) {
h hVar = new h(monitorCrash);
if (monitorCrash != null && monitorCrash.mConfig != null) {
c.put(monitorCrash.mConfig.mAid, hVar);
}
}

@Nullable
private JSONObject b(CrashType crashType) {
Map userData;
AttachUserData attachUserData = this.a.mCustomData;
if (attachUserData == null || (userData = attachUserData.getUserData(crashType)) == null) {
return null;
}
return new JSONObject(userData);
}

@NonNull
private JSONObject c(CrashType crashType) {
return new JSONObject(this.a.mTagMap);
}

/* access modifiers changed from: private */
@Nullable
public JSONObject e() {
JSONObject jSONObject = new JSONObject();
try {
if (this.a.mConfig.mPackageName == null) {
Context g = i.g();
PackageInfo packageInfo = g.getPackageManager().getPackageInfo(g.getPackageName(), 128);
if (packageInfo != null) {
MonitorCrash.Config config = this.a.mConfig;
if (config.mVersionInt == -1) {
config.mVersionInt = (long) packageInfo.versionCode;
}
if (config.mVersionStr == null) {
config.mVersionStr = packageInfo.versionName;
}
}
}
} catch (Throwable unused) {
}
if (TextUtils.isEmpty(this.a.mConfig.mDeviceId) || "0".equals(this.a.mConfig.mDeviceId)) {
this.a.mConfig.mDeviceId = i.c().a();
}
try {
jSONObject.put("aid", String.valueOf(this.a.mConfig.mAid));
jSONObject.put("update_version_code", this.a.mConfig.mVersionInt);
jSONObject.put("version_code", this.a.mConfig.mVersionInt);
jSONObject.put("app_version", this.a.mConfig.mVersionStr);
jSONObject.put("channel", this.a.mConfig.mChannel);
jSONObject.put("package", l.a(this.a.mConfig.mPackageName));
jSONObject.put("device_id", this.a.mConfig.mDeviceId);
jSONObject.put("user_id", this.a.mConfig.mUID);
jSONObject.put("ssid", this.a.mConfig.mSSID);
jSONObject.put("os", "Android");
jSONObject.put("so_list", l.a(this.a.mConfig.mSoList));
jSONObject.put("thread_list", l.a(this.a.mConfig.mThreadList));
jSONObject.put("single_upload", d() ? 1 : 0);
} catch (JSONException unused2) {
}
return jSONObject;
}

@Nullable
public JSONArray a(StackTraceElement[] stackTraceElementArr, Throwable th) {
return a(stackTraceElementArr, th, (String) null);
}

@Nullable
public JSONArray a(StackTraceElement[] stackTraceElementArr, Throwable th, String str) {
String[] strArr = this.a.mConfig.mPackageName;
if (strArr == null) {
return new JSONArray().put(new v.a(0, stackTraceElementArr.length).a());
}
if (th == null || stackTraceElementArr == null) {
return null;
}
JSONArray a2 = v.a(stackTraceElementArr, strArr);
if (!(str == null || this.a.mConfig.mThreadList == null || !l.a(a2))) {
for (String equals : this.a.mConfig.mThreadList) {
if (TextUtils.equals(equals, str)) {
a2.put(new v.a(0, stackTraceElementArr.length).a());
}
}
}
return a2;
}

public JSONArray a(String[] strArr) {
return this.a.config().mPackageName == null ? new JSONArray().put(new v.a(0, strArr.length).a()) : v.a(strArr, this.a.mConfig.mPackageName);
}

public JSONObject a(CrashType crashType) {
return a(crashType, (JSONArray) null);
}

public JSONObject a(CrashType crashType, JSONArray jSONArray) {
JSONObject jSONObject = new JSONObject();
try {
jSONObject.put("header", e());
if (crashType != null) {
jSONObject.put("custom", b(crashType));
jSONObject.put("filters", c(crashType));
}
jSONObject.put("line_num", jSONArray);
} catch (Throwable unused) {
}
return jSONObject;
}

public boolean a(Object obj) {
return this.a == obj;
}

public boolean a(String str, String str2) {
if (this.a.config().mPackageName == null) {
return true;
}
return b.a(str, l.a(this.a.mConfig.mSoList), str2, l.a(this.a.mConfig.mThreadList));
}

public String b() {
return this.a.mConfig.mAid;
}

public JSONObject c() {
return e();
}

public boolean d() {
return false;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\apm\insight\i.java

package com.apm.insight;

import android.annotation.SuppressLint;
import android.app.Application;
import android.content.Context;
import com.apm.insight.runtime.ConfigManager;
import com.apm.insight.runtime.d;
import com.apm.insight.runtime.t;
import java.util.Random;
import java.util.concurrent.ConcurrentHashMap;

public final class i {
private static Context a = null;
private static Application b = null;
private static long c = 0;
private static String d = "default";
private static boolean e;
@SuppressLint({"StaticFieldLeak"})
private static d f;
private static ConfigManager g = new ConfigManager();
private static a h = new a();
private static volatile ConcurrentHashMap<Integer, String> i;

/* renamed from: j  reason: collision with root package name */
private static t f0j = null;
private static volatile String k = null;
private static Object l = new Object();
private static volatile int m = 0;
private static volatile String n;
private static int o = 0;

public static d a() {
if (f == null) {
f = com.apm.insight.runtime.i.a(a);
}
return f;
}

public static String a(long j2, CrashType crashType, boolean z, boolean z2) {
StringBuilder sb = new StringBuilder();
sb.append(j2);
sb.append("_");
sb.append(crashType.getName());
sb.append('_');
sb.append(f());
sb.append('_');
String str = "normal_";
sb.append(z ? "oom_" : str);
sb.append(j());
sb.append('_');
if (z2) {
str = "ignore_";
}
sb.append(str);
sb.append(Long.toHexString(new Random().nextLong()));
sb.append("G");
return sb.toString();
}

public static void a(int i3) {
o = i3;
}

public static void a(int i3, String str) {
if (i == null) {
synchronized (i.class) {
if (i == null) {
i = new ConcurrentHashMap<>();
}
}
}
i.put(Integer.valueOf(i3), str);
}

public static void a(Application application) {
if (application != null) {
b = application;
}
}

public static void a(Application application, Context context) {
if (b == null) {
c = System.currentTimeMillis();
a = context;
b = application;
k = Long.toHexString(new Random().nextLong()) + "G";
}
}

public static void a(Application application, Context context, ICommonParams iCommonParams) {
a(application, context);
f = new d(a, iCommonParams, a());
}

public static void a(d dVar) {
f = dVar;
}

public static void a(String str) {
d = str;
}

public static void a(boolean z) {
e = z;
}

public static a b() {
return h;
}

public static void b(int i3, String str) {
m = i3;
n = str;
}

public static t c() {
if (f0j == null) {
synchronized (i.class) {
f0j = new t(a);
}
}
return f0j;
}

public static boolean d() {
return i().isDebugMode() && n().contains("local_test");
}

public static String e() {
return f() + '_' + Long.toHexString(new Random().nextLong()) + "G";
}

public static String f() {
if (k == null) {
synchronized (l) {
if (k == null) {
k = Long.toHexString(new Random().nextLong()) + "U";
}
}
}
return k;
}

public static Context g() {
return a;
}

public static Application h() {
return b;
}

public static ConfigManager i() {
return g;
}

public static long j() {
return c;
}

public static String k() {
return d;
}

public static int l() {
return o;
}

public static boolean m() {
return e;
}

public static String n() {
Object obj = a().a().get("channel");
return obj == null ? "unknown" : String.valueOf(obj);
}

public static ConcurrentHashMap<Integer, String> o() {
return i;
}

public static int p() {
return m;
}

public static String q() {
return n;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\apm\insight\j.java

package com.apm.insight;

public class j {
public static void a() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\apm\insight\k.java

package com.apm.insight;

public class k {
public static void a() {
}

public static void a(String str) {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\apm\insight\g\a$1.java

package com.apm.insight.g;

import com.apm.insight.l.e;

public class a$1 extends e.a {
public boolean a = false;
public final /* synthetic */ a b;

public a$1(a aVar) {
this.b = aVar;
}

public boolean a(String str) {
if (!this.a && str.contains("android.os.Looper.loop")) {
this.a = true;
}
return !this.a;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\apm\insight\g\a$2.java

package com.apm.insight.g;

import com.apm.insight.CrashType;
import com.apm.insight.entity.a;
import com.apm.insight.i;
import com.apm.insight.k.d;
import com.apm.insight.runtime.a.f;

public class a$2 implements Runnable {
public final /* synthetic */ Throwable a;

public a$2(Throwable th) {
this.a = th;
}

public void run() {
try {
a a2 = a.a(System.currentTimeMillis(), i.g(), (Thread) null, this.a);
a2.a("userdefine", 1);
a a3 = f.a().a(CrashType.CUSTOM_JAVA, a2);
if (a3 != null) {
d.a().b(a3.h());
}
} catch (Throwable unused) {
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\apm\insight\g\a$3.java

package com.apm.insight.g;

import com.apm.insight.CrashType;
import com.apm.insight.entity.a;
import com.apm.insight.k.d;
import com.apm.insight.runtime.a.f;

public class a$3 implements Runnable {
public final /* synthetic */ String a;

public a$3(String str) {
this.a = str;
}

public void run() {
try {
a aVar = new a();
aVar.a("data", this.a);
aVar.a("userdefine", 1);
a a2 = f.a().a(CrashType.CUSTOM_JAVA, aVar);
if (a2 != null) {
d.a().b(a2.h());
}
} catch (Throwable unused) {
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\ab$b.java

package com.applovin.exoplayer2;

import android.net.Uri;
import androidx.annotation.Nullable;
import com.applovin.exoplayer2.ab;
import com.applovin.exoplayer2.ab$d;
import com.applovin.exoplayer2.l.a;
import com.google.firebase.installations.interop.BuildConfig;
import java.util.Collections;
import java.util.List;

public final class ab$b {
@Nullable
private String a;
@Nullable
private Uri b;
@Nullable
private String c;
private long d;
private long e;
private boolean f;
private boolean g;
private boolean h;
private ab$d.a i;

/* renamed from: j  reason: collision with root package name */
private List<Object> f1j;
@Nullable
private String k;
private List<Object> l;
@Nullable
private ab.a m;
@Nullable
private Object n;
@Nullable
private ac o;
private ab.e.a p;

public ab$b() {
this.e = Long.MIN_VALUE;
this.i = new ab$d.a((ab.1) null);
this.f1j = Collections.emptyList();
this.l = Collections.emptyList();
this.p = new ab.e.a();
}

private ab$b(ab abVar) {
this();
ab$c ab_c = abVar.f;
this.e = ab_c.b;
this.f = ab_c.c;
this.g = ab_c.d;
this.d = ab_c.a;
this.h = ab_c.e;
this.a = abVar.b;
this.o = abVar.e;
this.p = abVar.d.a();
ab.f fVar = abVar.c;
if (fVar != null) {
this.k = fVar.f;
this.c = fVar.b;
this.b = fVar.a;
this.f1j = fVar.e;
this.l = fVar.g;
this.n = fVar.h;
ab$d ab_d = fVar.c;
this.i = ab_d != null ? ab_d.b() : new ab$d.a((ab.1) null);
this.m = fVar.d;
}
}

public ab$b a(@Nullable Uri uri) {
this.b = uri;
return this;
}

public ab$b a(@Nullable Object obj) {
this.n = obj;
return this;
}

public ab$b a(String str) {
this.a = (String) a.b(str);
return this;
}

public ab a() {
ab.f fVar;
a.b(ab$d.a.a(this.i) == null || ab$d.a.b(this.i) != null);
Uri uri = this.b;
ab$d ab_d = null;
if (uri != null) {
String str = this.c;
if (ab$d.a.b(this.i) != null) {
ab_d = this.i.a();
}
fVar = new ab.f(uri, str, ab_d, this.m, this.f1j, this.k, this.l, this.n, (ab.1) null);
} else {
fVar = null;
}
String str2 = this.a;
if (str2 == null) {
str2 = BuildConfig.FLAVOR;
}
String str3 = str2;
ab$c ab_c = new ab$c(this.d, this.e, this.f, this.g, this.h);
ab.e a2 = this.p.a();
ac acVar = this.o;
if (acVar == null) {
acVar = ac.a;
}
return new ab(str3, ab_c, fVar, a2, acVar, (ab.1) null);
}

public ab$b b(@Nullable String str) {
this.k = str;
return this;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\ab$c.java

package com.applovin.exoplayer2;

import android.os.Bundle;
import androidx.annotation.Nullable;

public final class ab$c implements g {
public static final g$a<ab$c> f = w0.e;
public final long a;
public final long b;
public final boolean c;
public final boolean d;
public final boolean e;

private ab$c(long j2, long j3, boolean z, boolean z2, boolean z3) {
this.a = j2;
this.b = j3;
this.c = z;
this.d = z2;
this.e = z3;
}

/* access modifiers changed from: private */
public static /* synthetic */ ab$c a(Bundle bundle) {
return new ab$c(bundle.getLong(a(0), 0), bundle.getLong(a(1), Long.MIN_VALUE), bundle.getBoolean(a(2), false), bundle.getBoolean(a(3), false), bundle.getBoolean(a(4), false));
}

private static String a(int i) {
return Integer.toString(i, 36);
}

public boolean equals(@Nullable Object obj) {
if (this == obj) {
return true;
}
if (!(obj instanceof ab$c)) {
return false;
}
ab$c ab_c = (ab$c) obj;
return this.a == ab_c.a && this.b == ab_c.b && this.c == ab_c.c && this.d == ab_c.d && this.e == ab_c.e;
}

public int hashCode() {
long j2 = this.a;
long j3 = this.b;
return (((((((((int) (j2 ^ (j2 >>> 32))) * 31) + ((int) ((j3 >>> 32) ^ j3))) * 31) + (this.c ? 1 : 0)) * 31) + (this.d ? 1 : 0)) * 31) + (this.e ? 1 : 0);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\ab$d.java

package com.applovin.exoplayer2;

import android.net.Uri;
import androidx.annotation.Nullable;
import com.applovin.exoplayer2.ab;
import com.applovin.exoplayer2.common.a.s;
import com.applovin.exoplayer2.common.a.u;
import com.applovin.exoplayer2.l.a;
import com.applovin.exoplayer2.l.ai;
import java.util.Arrays;
import java.util.UUID;

public final class ab$d {
public final UUID a;
@Nullable
public final Uri b;
public final u<String, String> c;
public final boolean d;
public final boolean e;
public final boolean f;
public final s<Integer> g;
/* access modifiers changed from: private */
@Nullable
public final byte[] h;

private ab$d(a aVar) {
a.b(!a.c(aVar) || a.a(aVar) != null);
this.a = (UUID) a.b(a.b(aVar));
this.b = a.a(aVar);
this.c = a.d(aVar);
this.d = a.e(aVar);
this.f = a.c(aVar);
this.e = a.f(aVar);
this.g = a.g(aVar);
this.h = a.h(aVar) != null ? Arrays.copyOf(a.h(aVar), a.h(aVar).length) : null;
}

@Nullable
public byte[] a() {
byte[] bArr = this.h;
if (bArr != null) {
return Arrays.copyOf(bArr, bArr.length);
}
return null;
}

public a b() {
return new a(this, (ab.1) null);
}

public boolean equals(@Nullable Object obj) {
if (this == obj) {
return true;
}
if (!(obj instanceof ab$d)) {
return false;
}
ab$d ab_d = (ab$d) obj;
return this.a.equals(ab_d.a) && ai.a(this.b, ab_d.b) && ai.a(this.c, ab_d.c) && this.d == ab_d.d && this.f == ab_d.f && this.e == ab_d.e && this.g.equals(ab_d.g) && Arrays.equals(this.h, ab_d.h);
}

public int hashCode() {
int hashCode = this.a.hashCode() * 31;
Uri uri = this.b;
int hashCode2 = uri != null ? uri.hashCode() : 0;
int hashCode3 = this.c.hashCode();
return Arrays.hashCode(this.h) + ((this.g.hashCode() + ((((((((hashCode3 + ((hashCode + hashCode2) * 31)) * 31) + (this.d ? 1 : 0)) * 31) + (this.f ? 1 : 0)) * 31) + (this.e ? 1 : 0)) * 31)) * 31);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\g$a.java

package com.applovin.exoplayer2;

import android.os.Bundle;
import com.applovin.exoplayer2.g;

public interface g$a<T extends g> {
T fromBundle(Bundle bundle);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\r$a.java

package com.applovin.exoplayer2;

public final class r$a implements ag {
private final Object a;
/* access modifiers changed from: private */
public ba b;

public r$a(Object obj, ba baVar) {
this.a = obj;
this.b = baVar;
}

public Object a() {
return this.a;
}

public ba b() {
return this.b;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\a\aa.java

package com.applovin.exoplayer2.common.a;

import com.applovin.exoplayer2.common.base.Objects;
import com.applovin.exoplayer2.common.base.Preconditions;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.RandomAccess;
import org.checkerframework.checker.nullness.compatqual.NullableDecl;

public final class aa {
public static <E> ArrayList<E> a() {
return new ArrayList<>();
}

public static <E> ArrayList<E> a(Iterator<? extends E> it) {
ArrayList<E> a = a();
y.a(a, it);
return a;
}

public static boolean a(List<?> list, @NullableDecl Object obj) {
if (obj == Preconditions.checkNotNull(list)) {
return true;
}
if (!(obj instanceof List)) {
return false;
}
List list2 = (List) obj;
int size = list.size();
if (size != list2.size()) {
return false;
}
if (!(list instanceof RandomAccess) || !(list2 instanceof RandomAccess)) {
return y.a(list.iterator(), list2.iterator());
}
for (int i = 0; i < size; i++) {
if (!Objects.equal(list.get(i), list2.get(i))) {
return false;
}
}
return true;
}

public static int b(List<?> list, @NullableDecl Object obj) {
if (list instanceof RandomAccess) {
return d(list, obj);
}
ListIterator<?> listIterator = list.listIterator();
while (listIterator.hasNext()) {
if (Objects.equal(obj, listIterator.next())) {
return listIterator.previousIndex();
}
}
return -1;
}

public static int c(List<?> list, @NullableDecl Object obj) {
if (list instanceof RandomAccess) {
return e(list, obj);
}
ListIterator<?> listIterator = list.listIterator(list.size());
while (listIterator.hasPrevious()) {
if (Objects.equal(obj, listIterator.previous())) {
return listIterator.nextIndex();
}
}
return -1;
}

private static int d(List<?> list, @NullableDecl Object obj) {
int size = list.size();
int i = 0;
if (obj == null) {
while (i < size) {
if (list.get(i) == null) {
return i;
}
i++;
}
return -1;
}
while (i < size) {
if (obj.equals(list.get(i))) {
return i;
}
i++;
}
return -1;
}

private static int e(List<?> list, @NullableDecl Object obj) {
if (obj == null) {
for (int size = list.size() - 1; size >= 0; size--) {
if (list.get(size) == null) {
return size;
}
}
return -1;
}
for (int size2 = list.size() - 1; size2 >= 0; size2--) {
if (obj.equals(list.get(size2))) {
return size2;
}
}
return -1;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\a\ab.java

package com.applovin.exoplayer2.common.a;

import com.applovin.exoplayer2.common.base.Function;
import com.applovin.exoplayer2.common.base.Preconditions;
import java.util.IdentityHashMap;
import java.util.Iterator;
import java.util.Map;
import org.checkerframework.checker.nullness.compatqual.NullableDecl;

public final class ab {
public static int a(int i) {
if (i < 3) {
j.a(i, "expectedSize");
return i + 1;
} else if (i < 1073741824) {
return (int) ((((float) i) / 0.75f) + 1.0f);
} else {
return Integer.MAX_VALUE;
}
}

public static <K> Function<Map.Entry<K, ?>, K> a() {
return a.a;
}

public static <V> V a(Map<?, V> map, @NullableDecl Object obj) {
Preconditions.checkNotNull(map);
try {
return map.get(obj);
} catch (ClassCastException | NullPointerException unused) {
return null;
}
}

public static String a(Map<?, ?> map) {
StringBuilder a = k.a(map.size());
a.append('{');
boolean z = true;
for (Map.Entry next : map.entrySet()) {
if (!z) {
a.append(", ");
}
z = false;
a.append(next.getKey());
a.append('=');
a.append(next.getValue());
}
a.append('}');
return a.toString();
}

public static <K, V> Iterator<K> a(Iterator<Map.Entry<K, V>> it) {
return new 1(it);
}

public static <K, V> Map.Entry<K, V> a(@NullableDecl K k, @NullableDecl V v) {
return new r(k, v);
}

public static <V> Function<Map.Entry<?, V>, V> b() {
return a.b;
}

public static <K, V> Iterator<V> b(Iterator<Map.Entry<K, V>> it) {
return new 2(it);
}

public static boolean b(Map<?, ?> map, Object obj) {
Preconditions.checkNotNull(map);
try {
return map.containsKey(obj);
} catch (ClassCastException | NullPointerException unused) {
return false;
}
}

public static <V> V c(Map<?, V> map, Object obj) {
Preconditions.checkNotNull(map);
try {
return map.remove(obj);
} catch (ClassCastException | NullPointerException unused) {
return null;
}
}

public static <K, V> IdentityHashMap<K, V> c() {
return new IdentityHashMap<>();
}

public static boolean d(Map<?, ?> map, Object obj) {
if (map == obj) {
return true;
}
if (obj instanceof Map) {
return map.entrySet().equals(((Map) obj).entrySet());
}
return false;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\a\ac.java

package com.applovin.exoplayer2.common.a;

import com.google.errorprone.annotations.CanIgnoreReturnValue;
import com.google.errorprone.annotations.CompatibleWith;
import java.util.Collection;
import java.util.Map;
import org.checkerframework.checker.nullness.compatqual.NullableDecl;

public interface ac<K, V> {
@CanIgnoreReturnValue
boolean a(@NullableDecl K k, @NullableDecl V v);

Collection<V> b(@NullableDecl K k);

Map<K, Collection<V>> b();

boolean b(@NullableDecl @CompatibleWith("K") Object obj, @NullableDecl @CompatibleWith("V") Object obj2);

@CanIgnoreReturnValue
boolean c(@NullableDecl @CompatibleWith("K") Object obj, @NullableDecl @CompatibleWith("V") Object obj2);

int d();

void e();

Collection<V> h();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\a\ad.java

package com.applovin.exoplayer2.common.a;

import com.applovin.exoplayer2.common.base.Preconditions;
import java.util.Comparator;

public abstract class ad<K0, V0> {
private ad() {
}

public static c<Comparable> a() {
return a(ai.b());
}

public static <K0> c<K0> a(Comparator<K0> comparator) {
Preconditions.checkNotNull(comparator);
return new 2(comparator);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\a\ae.java

package com.applovin.exoplayer2.common.a;

import com.applovin.exoplayer2.common.base.Supplier;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import org.checkerframework.checker.nullness.compatqual.NullableDecl;

public final class ae {
public static <K, V> z<K, V> a(Map<K, Collection<V>> map, Supplier<? extends List<V>> supplier) {
return new a(map, supplier);
}

public static boolean a(ac<?, ?> acVar, @NullableDecl Object obj) {
if (obj == acVar) {
return true;
}
if (obj instanceof ac) {
return acVar.b().equals(((ac) obj).b());
}
return false;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\a\af.java

package com.applovin.exoplayer2.common.a;

import java.util.Collection;
import java.util.Set;

public interface af<E> extends Collection<E> {
Set<E> a();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\a\ag.java

package com.applovin.exoplayer2.common.a;

import com.applovin.exoplayer2.common.base.Preconditions;
import java.io.Serializable;

final class ag extends ai<Comparable> implements Serializable {
public static final ag a = new ag();

private ag() {
}

/* renamed from: a */
public int compare(Comparable comparable, Comparable comparable2) {
Preconditions.checkNotNull(comparable);
Preconditions.checkNotNull(comparable2);
return comparable.compareTo(comparable2);
}

public <S extends Comparable> ai<S> a() {
return an.a;
}

public String toString() {
return "Ordering.natural()";
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\a\ah.java

package com.applovin.exoplayer2.common.a;

import android.support.v4.media.b;

public final class ah {
public static Object a(Object obj, int i) {
if (obj != null) {
return obj;
}
throw new NullPointerException(b.g("at index ", i));
}

public static Object[] a(Object... objArr) {
return b(objArr, objArr.length);
}

public static <T> T[] a(T[] tArr, int i) {
return aj.a(tArr, i);
}

public static Object[] b(Object[] objArr, int i) {
for (int i3 = 0; i3 < i; i3++) {
a(objArr[i3], i3);
}
return objArr;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\a\ai.java

package com.applovin.exoplayer2.common.a;

import com.applovin.exoplayer2.common.base.Function;
import com.google.errorprone.annotations.CanIgnoreReturnValue;
import java.util.Comparator;
import java.util.Map;
import org.checkerframework.checker.nullness.compatqual.NullableDecl;

public abstract class ai<T> implements Comparator<T> {
public static <T> ai<T> a(Comparator<T> comparator) {
return comparator instanceof ai ? (ai) comparator : new m<>(comparator);
}

public static <C extends Comparable> ai<C> b() {
return ag.a;
}

public <S extends T> ai<S> a() {
return new ao(this);
}

public <F> ai<F> a(Function<F, ? extends T> function) {
return new i(function, this);
}

public <E extends T> s<E> a(Iterable<E> iterable) {
return s.a(this, iterable);
}

public <T2 extends T> ai<Map.Entry<T2, ?>> c() {
return a(ab.a());
}

@CanIgnoreReturnValue
public abstract int compare(@NullableDecl T t, @NullableDecl T t2);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\a\aj.java

package com.applovin.exoplayer2.common.a;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.Map;

final class aj {
public static <K, V> Map<K, V> a() {
return l.a();
}

public static <K, V> Map<K, V> a(int i) {
return l.a(i);
}

public static <T> T[] a(T[] tArr, int i) {
return (Object[]) Array.newInstance(tArr.getClass().getComponentType(), i);
}

public static <T> T[] a(Object[] objArr, int i, int i3, T[] tArr) {
return Arrays.copyOfRange(objArr, i, i3, tArr.getClass());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\a\ak.java
public static final s<Object> a = new ak(new Object[0], 0);
public final transient Object[] b;
private final transient int c;

public ak(Object[] objArr, int i) {
this.b = objArr;
this.c = i;
}

public int a(Object[] objArr, int i) {
System.arraycopy(this.b, 0, objArr, i, this.c);
return i + this.c;
}

public Object[] b() {
return this.b;
}

public int c() {
return 0;
}

public int d() {
return this.c;
}

public boolean f() {
return false;
}

public E get(int i) {
Preconditions.checkElementIndex(i, this.c);
return this.b[i];
}

public int size() {
return this.c;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\a\al.java

package com.applovin.exoplayer2.common.a;

import com.applovin.exoplayer2.common.base.Preconditions;
import java.util.Map;
import org.checkerframework.checker.nullness.compatqual.NullableDecl;

final class al<K, V> extends u<K, V> {
public static final u<Object, Object> b = new al((int[]) null, new Object[0], 0);
public final transient Object[] c;
private final transient int[] d;
private final transient int e;

private al(int[] iArr, Object[] objArr, int i) {
this.d = iArr;
this.c = objArr;
this.e = i;
}

public static <K, V> al<K, V> a(int i, Object[] objArr) {
if (i == 0) {
return b;
}
if (i == 1) {
j.a(objArr[0], objArr[1]);
return new al<>((int[]) null, objArr, 1);
}
Preconditions.checkPositionIndex(i, objArr.length >> 1);
return new al<>(a(objArr, i, w.a(i), 0), objArr, i);
}

public static Object a(@NullableDecl int[] iArr, @NullableDecl Object[] objArr, int i, int i3, @NullableDecl Object obj) {
if (obj == null) {
return null;
}
if (i == 1) {
if (objArr[i3].equals(obj)) {
return objArr[i3 ^ 1];
}
return null;
} else if (iArr == null) {
return null;
} else {
int length = iArr.length - 1;
int a = p.a(obj.hashCode());
while (true) {
int i4 = a & length;
int i5 = iArr[i4];
if (i5 == -1) {
return null;
}
if (objArr[i5].equals(obj)) {
return objArr[i5 ^ 1];
}
a = i4 + 1;
}
}
}

/* JADX WARNING: Code restructure failed: missing block: B:9:0x0034, code lost:
r12[r7] = r5;
r3 = r3 + 1;
*/
/* Code decompiled incorrectly, please refer to instructions dump. */
public static int[] a(java.lang.Object[] r10, int r11, int r12, int r13) {
/*
r0 = 1
if (r11 != r0) goto L_0x000e
r11 = r10[r13]
r12 = r13 ^ 1
r10 = r10[r12]
com.applovin.exoplayer2.common.a.j.a(r11, r10)
r10 = 0
return r10
L_0x000e:
int r1 = r12 + -1
int[] r12 = new int[r12]
r2 = -1
java.util.Arrays.fill(r12, r2)
r3 = 0
L_0x0017:
if (r3 >= r11) goto L_0x0077
int r4 = r3 * 2
int r5 = r4 + r13
r6 = r10[r5]
r7 = r13 ^ 1
int r4 = r4 + r7
r4 = r10[r4]
com.applovin.exoplayer2.common.a.j.a(r6, r4)
int r7 = r6.hashCode()
int r7 = com.applovin.exoplayer2.common.a.p.a(r7)
L_0x002f:
r7 = r7 & r1
r8 = r12[r7]
if (r8 != r2) goto L_0x0039
r12[r7] = r5
int r3 = r3 + 1
goto L_0x0017
L_0x0039:
r9 = r10[r8]
boolean r9 = r9.equals(r6)
if (r9 != 0) goto L_0x0044
int r7 = r7 + 1
goto L_0x002f
L_0x0044:
java.lang.IllegalArgumentException r11 = new java.lang.IllegalArgumentException
java.lang.StringBuilder r12 = new java.lang.StringBuilder
r12.<init>()
java.lang.String r13 = "Multiple entries with same key: "
r12.append(r13)
r12.append(r6)
java.lang.String r13 = "="
r12.append(r13)
r12.append(r4)
java.lang.String r1 = " and "
r12.append(r1)
r1 = r10[r8]
r12.append(r1)
r12.append(r13)
r13 = r8 ^ 1
r10 = r10[r13]
r12.append(r10)
java.lang.String r10 = r12.toString()
r11.<init>(r10)
throw r11
L_0x0077:
return r12
*/
throw new UnsupportedOperationException("Method not decompiled: com.applovin.exoplayer2.common.a.al.a(java.lang.Object[], int, int, int):int[]");
}

public w<Map.Entry<K, V>> d() {
return new a(this, this.c, 0, this.e);
}

public w<K> f() {
return new b(this, new c(this.c, 0, this.e));
}

@NullableDecl
public V get(@NullableDecl Object obj) {
return a(this.d, this.c, this.e, 0, obj);
}

public q<V> h() {
return new c(this.c, 1, this.e);
}

public boolean i() {
return false;
}

public int size() {
return this.e;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\a\am.java

package com.applovin.exoplayer2.common.a;

import org.checkerframework.checker.nullness.compatqual.NullableDecl;

final class am<E> extends w<E> {
public static final am<Object> a = new am(new Object[0], 0, (Object[]) null, 0, 0);
public final transient Object[] b;
public final transient Object[] c;
private final transient int d;
private final transient int e;
private final transient int f;

public am(Object[] objArr, int i, Object[] objArr2, int i3, int i4) {
this.b = objArr;
this.c = objArr2;
this.d = i3;
this.e = i;
this.f = i4;
}

public int a(Object[] objArr, int i) {
System.arraycopy(this.b, 0, objArr, i, this.f);
return i + this.f;
}

/* renamed from: a */
public ax<E> iterator() {
return e().a();
}

public Object[] b() {
return this.b;
}

public int c() {
return 0;
}

public boolean contains(@NullableDecl Object obj) {
Object[] objArr = this.c;
if (obj == null || objArr == null) {
return false;
}
int a2 = p.a(obj);
while (true) {
int i = a2 & this.d;
Object obj2 = objArr[i];
if (obj2 == null) {
return false;
}
if (obj2.equals(obj)) {
return true;
}
a2 = i + 1;
}
}

public int d() {
return this.f;
}

public boolean f() {
return false;
}

public boolean h() {
return true;
}

public int hashCode() {
return this.e;
}

public s<E> i() {
return s.b(this.b, this.f);
}

public int size() {
return this.f;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\base\CharMatcher$c.java

package com.applovin.exoplayer2.common.base;

import java.util.Arrays;
import java.util.BitSet;

public final class CharMatcher$c extends CharMatcher {
private final char[] a;

public CharMatcher$c(CharSequence charSequence) {
char[] charArray = charSequence.toString().toCharArray();
this.a = charArray;
Arrays.sort(charArray);
}

@Deprecated
public /* bridge */ /* synthetic */ boolean apply(Object obj) {
return CharMatcher$c.super.apply((Character) obj);
}

public boolean matches(char c) {
return Arrays.binarySearch(this.a, c) >= 0;
}

public void setBits(BitSet bitSet) {
for (char c : this.a) {
bitSet.set(c);
}
}

public String toString() {
StringBuilder sb = new StringBuilder("CharMatcher.anyOf(\"");
for (char access$000 : this.a) {
sb.append(CharMatcher.access$000(access$000));
}
sb.append("\")");
return sb.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\base\CharMatcher$d.java

package com.applovin.exoplayer2.common.base;

import com.applovin.exoplayer2.common.base.CharMatcher;

public final class CharMatcher$d extends CharMatcher.t {
public static final CharMatcher$d a = new CharMatcher$d();

public CharMatcher$d() {
super("CharMatcher.ascii()");
}

public boolean matches(char c) {
return c <= 127;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\base\CharMatcher$e.java

package com.applovin.exoplayer2.common.base;

public final class CharMatcher$e extends CharMatcher {
public static final CharMatcher a = new CharMatcher$e();

private CharMatcher$e() {
}

@Deprecated
public /* bridge */ /* synthetic */ boolean apply(Object obj) {
return CharMatcher$e.super.apply((Character) obj);
}

public boolean matches(char c) {
if (!(c == ' ' || c == 133 || c == 5760)) {
if (c == 8199) {
return false;
}
if (!(c == 8287 || c == 12288 || c == 8232 || c == 8233)) {
switch (c) {
case 9:
case 10:
case 11:
case 12:
case 13:
break;
default:
return c >= 8192 && c <= 8202;
}
}
}
return true;
}

public String toString() {
return "CharMatcher.breakingWhitespace()";
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\base\CharMatcher$f.java

package com.applovin.exoplayer2.common.base;

import com.applovin.exoplayer2.common.base.CharMatcher;

public final class CharMatcher$f extends CharMatcher.y {
public static final CharMatcher$f a = new CharMatcher$f();

private CharMatcher$f() {
super("CharMatcher.digit()", a(), b());
}

private static char[] a() {
return "0٠۰߀०০੦૦୦௦౦೦൦෦๐໐༠၀႐០᠐᥆᧐᪀᪐᭐᮰᱀᱐꘠꣐꤀꧐꧰꩐꯰０".toCharArray();
}

private static char[] b() {
char[] cArr = new char[37];
for (int i = 0; i < 37; i++) {
cArr[i] = (char) ("0٠۰߀०০੦૦୦௦౦೦൦෦๐໐༠၀႐០᠐᥆᧐᪀᪐᭐᮰᱀᱐꘠꣐꤀꧐꧰꩐꯰０".charAt(i) + 9);
}
return cArr;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\base\CharMatcher$g.java

package com.applovin.exoplayer2.common.base;

import com.applovin.exoplayer2.common.base.CharMatcher;

public abstract class CharMatcher$g extends CharMatcher {
@Deprecated
public /* bridge */ /* synthetic */ boolean apply(Object obj) {
return CharMatcher$g.super.apply((Character) obj);
}

public CharMatcher negate() {
return new CharMatcher.v(this);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\base\CharMatcher$h.java

package com.applovin.exoplayer2.common.base;

import android.support.v4.media.b;

public final class CharMatcher$h extends CharMatcher {
private final Predicate<? super Character> a;

public CharMatcher$h(Predicate<? super Character> predicate) {
this.a = (Predicate) Preconditions.checkNotNull(predicate);
}

public boolean apply(Character ch) {
return this.a.apply(Preconditions.checkNotNull(ch));
}

public boolean matches(char c) {
return this.a.apply(Character.valueOf(c));
}

public String toString() {
StringBuilder q = b.q("CharMatcher.forPredicate(");
q.append(this.a);
q.append(")");
return q.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\base\CharMatcher$i.java

package com.applovin.exoplayer2.common.base;

import android.support.v4.media.b;
import java.util.BitSet;

public final class CharMatcher$i extends CharMatcher$g {
private final char a;
private final char b;

public CharMatcher$i(char c, char c2) {
Preconditions.checkArgument(c2 >= c);
this.a = c;
this.b = c2;
}

public boolean matches(char c) {
return this.a <= c && c <= this.b;
}

public void setBits(BitSet bitSet) {
bitSet.set(this.a, this.b + 1);
}

public String toString() {
StringBuilder q = b.q("CharMatcher.inRange('");
q.append(CharMatcher.access$000(this.a));
q.append("', '");
q.append(CharMatcher.access$000(this.b));
q.append("')");
return q.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\base\CharMatcher$j.java

package com.applovin.exoplayer2.common.base;

import com.applovin.exoplayer2.common.base.CharMatcher;

public final class CharMatcher$j extends CharMatcher.y {
public static final CharMatcher$j a = new CharMatcher$j();

private CharMatcher$j() {
super("CharMatcher.invisible()", "\u0000­؀؜۝܏࣢ ᠎   ⁦　?﻿￹".toCharArray(), "  ­؅؜۝܏࣢ ᠎‏ ⁤⁯　﻿￻".toCharArray());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\base\CharMatcher$m.java

package com.applovin.exoplayer2.common.base;

import android.support.v4.media.b;
import java.util.BitSet;

public final class CharMatcher$m extends CharMatcher$g {
private final char a;

public CharMatcher$m(char c) {
this.a = c;
}

public CharMatcher and(CharMatcher charMatcher) {
return charMatcher.matches(this.a) ? CharMatcher$m.super.and(charMatcher) : charMatcher;
}

public boolean matches(char c) {
return c != this.a;
}

public CharMatcher negate() {
return CharMatcher.is(this.a);
}

public CharMatcher or(CharMatcher charMatcher) {
return charMatcher.matches(this.a) ? CharMatcher.any() : this;
}

public void setBits(BitSet bitSet) {
bitSet.set(0, this.a);
bitSet.set(this.a + 1, 65536);
}

public String toString() {
StringBuilder q = b.q("CharMatcher.isNot('");
q.append(CharMatcher.access$000(this.a));
q.append("')");
return q.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\base\CharMatcher$n.java

package com.applovin.exoplayer2.common.base;

public final class CharMatcher$n extends CharMatcher {
public static final CharMatcher$n a = new CharMatcher$n();

private CharMatcher$n() {
}

@Deprecated
public /* bridge */ /* synthetic */ boolean apply(Object obj) {
return CharMatcher$n.super.apply((Character) obj);
}

public boolean matches(char c) {
return Character.isDigit(c);
}

public String toString() {
return "CharMatcher.javaDigit()";
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\common\base\Converter$1$1.java

package com.applovin.exoplayer2.common.base;

import com.applovin.exoplayer2.common.base.Converter;
import java.util.Iterator;

public class Converter$1$1 implements Iterator<B> {
public final /* synthetic */ Converter.1 a;
private final Iterator<? extends A> b;

public Converter$1$1(Converter.1 r1) {
this.a = r1;
this.b = r1.a.iterator();
}

public boolean hasNext() {
return this.b.hasNext();
}

public B next() {
return this.a.b.convert(this.b.next());
}

public void remove() {
this.b.remove();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\e\b0.java

package com.applovin.exoplayer2.e;

import android.net.Uri;
import java.util.Map;

public final /* synthetic */ class b0 {
static {
l lVar = l.a;
}

public static h[] a(l lVar, Uri uri, Map map) {
return lVar.createExtractors();
}

public static /* synthetic */ h[] b() {
return new h[0];
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\e\g\h$a.java

package com.applovin.exoplayer2.e.g;

import java.util.UUID;

public class h$a {
/* access modifiers changed from: private */
public final UUID a;
/* access modifiers changed from: private */
public final int b;
/* access modifiers changed from: private */
public final byte[] c;

public h$a(UUID uuid, int i, byte[] bArr) {
this.a = uuid;
this.b = i;
this.c = bArr;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\g\a$a.java

package com.applovin.exoplayer2.g;

import android.os.Parcelable;
import androidx.annotation.Nullable;
import com.applovin.exoplayer2.ac;
import com.applovin.exoplayer2.v;

public interface a$a extends Parcelable {
@Nullable
v a();

void a(ac.a aVar);

@Nullable
byte[] b();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\h\u$1.java

package com.applovin.exoplayer2.h;

import com.applovin.exoplayer2.ba;

public class u$1 extends h {
public final /* synthetic */ u d;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public u$1(u uVar, ba baVar) {
super(baVar);
this.d = uVar;
}

public ba.a a(int i, ba.a aVar, boolean z) {
u$1.super.a(i, aVar, z);
aVar.f = true;
return aVar;
}

public ba.c a(int i, ba.c cVar, long j2) {
u$1.super.a(i, cVar, j2);
cVar.m = true;
return cVar;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\l\v$b.java

package com.applovin.exoplayer2.l;

public final class v$b {
public final int a;
public final int b;
public final int c;
public final int d;
public final int e;
public final int f;
public final float g;
public final boolean h;
public final boolean i;

/* renamed from: j  reason: collision with root package name */
public final int f2j;
public final int k;
public final int l;
public final boolean m;

public v$b(int i3, int i4, int i5, int i6, int i7, int i8, float f2, boolean z, boolean z2, int i9, int i10, int i11, boolean z3) {
this.a = i3;
this.b = i4;
this.c = i5;
this.d = i6;
this.e = i7;
this.f = i8;
this.g = f2;
this.h = z;
this.i = z2;
this.f2j = i9;
this.k = i10;
this.l = i11;
this.m = z3;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\m\e$a.java

package com.applovin.exoplayer2.m;

import java.util.Arrays;

public final class e$a {
private long a;
private long b;
private long c;
private long d;
private long e;
private long f;
private final boolean[] g = new boolean[15];
private int h;

private static int b(long j2) {
return (int) (j2 % 15);
}

public void a() {
this.d = 0;
this.e = 0;
this.f = 0;
this.h = 0;
Arrays.fill(this.g, false);
}

public void a(long j2) {
int i;
long j3 = this.d;
if (j3 == 0) {
this.a = j2;
} else if (j3 == 1) {
long j5 = j2 - this.a;
this.b = j5;
this.f = j5;
this.e = 1;
} else {
long j6 = j2 - this.c;
int b2 = b(j3);
if (Math.abs(j6 - this.b) <= 1000000) {
this.e++;
this.f += j6;
boolean[] zArr = this.g;
if (zArr[b2]) {
zArr[b2] = false;
i = this.h - 1;
}
} else {
boolean[] zArr2 = this.g;
if (!zArr2[b2]) {
zArr2[b2] = true;
i = this.h + 1;
}
}
this.h = i;
}
this.d++;
this.c = j2;
}

public boolean b() {
return this.d > 15 && this.h == 0;
}

public boolean c() {
long j2 = this.d;
if (j2 == 0) {
return false;
}
return this.g[b(j2 - 1)];
}

public long d() {
return this.f;
}

public long e() {
long j2 = this.e;
if (j2 == 0) {
return 0;
}
return this.f / j2;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\exoplayer2\m\a\i$a.java

package com.applovin.exoplayer2.m.a;

import android.view.Surface;

public interface i$a {
void a(Surface surface);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\communicator\MessagingServiceImpl$1.java

package com.applovin.impl.communicator;

import com.applovin.communicator.AppLovinCommunicatorMessage;
import com.applovin.impl.sdk.AppLovinBroadcastManager;
import java.util.Map;

public class MessagingServiceImpl$1 implements Runnable {
public final /* synthetic */ AppLovinCommunicatorMessage a;
public final /* synthetic */ MessagingServiceImpl b;

public MessagingServiceImpl$1(MessagingServiceImpl messagingServiceImpl, AppLovinCommunicatorMessage appLovinCommunicatorMessage) {
this.b = messagingServiceImpl;
this.a = appLovinCommunicatorMessage;
}

public void run() {
AppLovinBroadcastManager.sendBroadcastSync(this.a, (Map) null);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\communicator\MessagingServiceImpl$2.java

package com.applovin.impl.communicator;

import java.util.concurrent.ThreadFactory;

public class MessagingServiceImpl$2 implements ThreadFactory {
public final /* synthetic */ MessagingServiceImpl a;

public MessagingServiceImpl$2(MessagingServiceImpl messagingServiceImpl) {
this.a = messagingServiceImpl;
}

public Thread newThread(Runnable runnable) {
Thread thread = new Thread(runnable, "AppLovinSdk:com.applovin.communicator");
thread.setPriority(10);
thread.setDaemon(true);
return thread;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\mediation\MaxAdapterParametersImpl.java

package com.applovin.impl.mediation;

import android.os.Bundle;
import androidx.annotation.Nullable;
import com.applovin.impl.mediation.a.a;
import com.applovin.impl.mediation.a.f;
import com.applovin.impl.mediation.a.h;
import com.applovin.mediation.MaxAdFormat;
import com.applovin.mediation.adapter.parameters.MaxAdapterInitializationParameters;
import com.applovin.mediation.adapter.parameters.MaxAdapterResponseParameters;
import com.applovin.mediation.adapter.parameters.MaxAdapterSignalCollectionParameters;
import java.util.Map;

public class MaxAdapterParametersImpl implements MaxAdapterInitializationParameters, MaxAdapterResponseParameters, MaxAdapterSignalCollectionParameters {
private String a;
private Map<String, Object> b;
private Bundle c;
private Bundle d;
private Boolean e;
private Boolean f;
private Boolean g;
private String h;
private boolean i;

/* renamed from: j  reason: collision with root package name */
private String f3j;
private String k;
private long l;
private MaxAdFormat m;

private MaxAdapterParametersImpl() {
}

public static MaxAdapterParametersImpl a(a aVar) {
MaxAdapterParametersImpl a2 = a((f) aVar);
a2.f3j = aVar.q();
a2.k = aVar.j();
a2.l = aVar.l();
return a2;
}

public static MaxAdapterParametersImpl a(f fVar) {
MaxAdapterParametersImpl maxAdapterParametersImpl = new MaxAdapterParametersImpl();
maxAdapterParametersImpl.a = fVar.getAdUnitId();
maxAdapterParametersImpl.e = fVar.X();
maxAdapterParametersImpl.f = fVar.Y();
maxAdapterParametersImpl.g = fVar.Z();
maxAdapterParametersImpl.h = fVar.aa();
maxAdapterParametersImpl.b = fVar.ac();
maxAdapterParametersImpl.c = fVar.ad();
maxAdapterParametersImpl.d = fVar.ae();
maxAdapterParametersImpl.i = fVar.W();
return maxAdapterParametersImpl;
}

public static MaxAdapterParametersImpl a(h hVar, MaxAdFormat maxAdFormat) {
MaxAdapterParametersImpl a2 = a((f) hVar);
a2.m = maxAdFormat;
return a2;
}

public MaxAdFormat getAdFormat() {
return this.m;
}

public String getAdUnitId() {
return this.a;
}

public long getBidExpirationMillis() {
return this.l;
}

public String getBidResponse() {
return this.k;
}

@Nullable
public String getConsentString() {
return this.h;
}

public Bundle getCustomParameters() {
return this.d;
}

public Map<String, Object> getLocalExtraParameters() {
return this.b;
}

public Bundle getServerParameters() {
return this.c;
}

public String getThirdPartyAdPlacementId() {
return this.f3j;
}

public Boolean hasUserConsent() {
return this.e;
}

public Boolean isAgeRestrictedUser() {
return this.f;
}

public Boolean isDoNotSell() {
return this.g;
}

public boolean isTesting() {
return this.i;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\mediation\ads\MaxNativeAdLoaderImpl$2.java

package com.applovin.impl.mediation.ads;

import android.support.v4.media.b;
import com.applovin.impl.mediation.a.d;
import com.applovin.impl.sdk.v;
import com.applovin.mediation.nativeAds.MaxNativeAd;
import com.applovin.mediation.nativeAds.MaxNativeAdView;

public class MaxNativeAdLoaderImpl$2 implements Runnable {
public final /* synthetic */ MaxNativeAdView a;
public final /* synthetic */ d b;
public final /* synthetic */ MaxNativeAd c;
public final /* synthetic */ MaxNativeAdLoaderImpl d;

public MaxNativeAdLoaderImpl$2(MaxNativeAdLoaderImpl maxNativeAdLoaderImpl, MaxNativeAdView maxNativeAdView, d dVar, MaxNativeAd maxNativeAd) {
this.d = maxNativeAdLoaderImpl;
this.a = maxNativeAdView;
this.b = dVar;
this.c = maxNativeAd;
}

public void run() {
v vVar = this.d.logger;
if (v.a()) {
MaxNativeAdLoaderImpl maxNativeAdLoaderImpl = this.d;
v vVar2 = maxNativeAdLoaderImpl.logger;
String str = maxNativeAdLoaderImpl.tag;
StringBuilder q = b.q("Rendering native ad view: ");
q.append(this.a);
vVar2.b(str, q.toString());
}
this.a.render(this.b, MaxNativeAdLoaderImpl.a(this.d), this.d.sdk);
this.c.setNativeAdView(this.a);
if (!this.c.prepareForInteraction(this.a.getClickableViews(), this.a)) {
this.c.prepareViewForInteraction(this.a);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\mediation\debugger\ui\e\a$2.java

package com.applovin.impl.mediation.debugger.ui.e;

import com.applovin.impl.mediation.debugger.ui.d.a;
import com.applovin.impl.mediation.debugger.ui.d.c;
import com.applovin.impl.mediation.debugger.ui.d.d;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.utils.StringUtils;

public class a$2 implements d.a {
public final /* synthetic */ n a;
public final /* synthetic */ a b;

public a$2(a aVar, n nVar) {
this.b = aVar;
this.a = nVar;
}

public void a(a aVar, c cVar) {
com.applovin.impl.mediation.debugger.b.a.d a2 = a.a(this.b, aVar);
if (!StringUtils.isValidString(a2.a()) || !StringUtils.isValidString(this.a.ap().c()) || !a2.a().equals(this.a.ap().c())) {
this.a.ap().a(true);
this.a.ap().a(a2.a());
this.a.X().a(a2.b());
} else {
this.a.ap().a(false);
this.a.ap().a((String) null);
this.a.X().a((String) null);
}
a.c(this.b).notifyDataSetChanged();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\mediation\debugger\ui\e\a$3.java

package com.applovin.impl.mediation.debugger.ui.e;

import android.content.Context;
import android.text.SpannedString;
import com.applovin.impl.mediation.debugger.b.a.d;
import com.applovin.impl.mediation.debugger.b.c.b;
import com.applovin.impl.mediation.debugger.ui.b.a.a;
import com.applovin.impl.sdk.utils.StringUtils;
import com.applovin.sdk.R;

public class a$3 extends a {
public final /* synthetic */ d a;
public final /* synthetic */ a o;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public a$3(a aVar, b bVar, Context context, d dVar) {
super(bVar, context);
this.o = aVar;
this.a = dVar;
}

public int a() {
if (a.d(this.o).ap().c() == null || !a.d(this.o).ap().c().equals(this.a.a())) {
return 0;
}
return R.drawable.applovin_ic_check_mark_borderless;
}

public int b() {
if (a.d(this.o).ap().c() == null || !a.d(this.o).ap().c().equals(this.a.a())) {
return a$3.super.b();
}
return -16776961;
}

public SpannedString k() {
return StringUtils.createSpannedString(this.a.b(), c() ? -16777216 : -7829368, 18, 1);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\a.java

package com.applovin.impl.sdk.e;

import android.content.Context;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.v;

public abstract class a implements Runnable {
private final Context a;
private final boolean b;
public final n f;
public final String g;
public final v h;

public a(String str, n nVar) {
this(str, nVar, false);
}

public a(String str, n nVar, boolean z) {
this.g = str;
this.f = nVar;
this.h = nVar.J();
this.a = n.x();
this.b = z;
}

public n d() {
return this.f;
}

public String e() {
return this.g;
}

public Context f() {
return this.a;
}

public boolean g() {
return this.b;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\b.java
public b(n nVar) {
super("TaskApiSubmitData", nVar);
}

/* access modifiers changed from: private */
public void a(JSONObject jSONObject) {
try {
JSONObject b = i.b(jSONObject);
this.f.L().a(com.applovin.impl.sdk.c.b.af, b.getString("device_id"));
this.f.L().a(com.applovin.impl.sdk.c.b.ah, b.getString("device_token"));
this.f.L().a(com.applovin.impl.sdk.c.b.ai, Long.valueOf(b.getLong("publisher_id")));
i.d(b, this.f);
i.e(b, this.f);
String string = JsonUtils.getString(b, "latest_version", BuildConfig.FLAVOR);
if (!TextUtils.isEmpty(string)) {
String str = AppLovinSdk.VERSION;
if (!str.equals(string)) {
String str2 = "Current SDK version (" + str + ") is outdated. Please integrate the latest version of the AppLovin SDK (" + string + "). Doing so will improve your CPMs and ensure you have access to the latest revenue earning features.";
if (JsonUtils.valueExists(b, "sdk_update_message")) {
str2 = JsonUtils.getString(b, "sdk_update_message", str2);
}
v.h("AppLovinSdk", str2);
}
}
this.f.N().b();
} catch (Throwable th) {
if (v.a()) {
this.h.b(this.g, "Unable to parse API response", th);
}
}
}

private void b(JSONObject jSONObject) throws JSONException {
o O = this.f.O();
Map d = O.d();
Utils.renameKeyInObjectMap(LTCFYlyRosTNvb.IwsIjtnIffIWdU, "type", d);
Utils.renameKeyInObjectMap("api_level", "sdk_version", d);
jSONObject.put("device_info", new JSONObject(d));
Map h = O.h();
Utils.renameKeyInObjectMap("sdk_version", "applovin_sdk_version", h);
Utils.renameKeyInObjectMap("ia", "installed_at", h);
jSONObject.put("app_info", new JSONObject(h));
}

private void c(JSONObject jSONObject) throws JSONException {
if (((Boolean) this.f.a(com.applovin.impl.sdk.c.b.er)).booleanValue()) {
jSONObject.put("stats", this.f.N().c());
}
}

private void d(JSONObject jSONObject) {
1 r0 = new 1(this, c.a(this.f).a(i.a("2.0/device", this.f)).c(i.b("2.0/device", this.f)).a(i.e(this.f)).b("POST").a(jSONObject).d(((Boolean) this.f.a(com.applovin.impl.sdk.c.b.eQ)).booleanValue()).a(new JSONObject()).a(((Integer) this.f.a(com.applovin.impl.sdk.c.b.dl)).intValue()).a(), this.f);
r0.a(com.applovin.impl.sdk.c.b.bh);
r0.b(com.applovin.impl.sdk.c.b.bi);
this.f.K().a((a) r0);
}

public void run() {
try {
if (v.a()) {
this.h.c(this.g, "Submitting user data...");
}
JSONObject jSONObject = new JSONObject();
b(jSONObject);
c(jSONObject);
d(jSONObject);
} catch (JSONException e) {
if (v.a()) {
this.h.b(this.g, "Unable to build JSON message with collected data", e);
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\c.java

package com.applovin.impl.sdk.e;

import android.net.Uri;
import android.os.Bundle;
import android.support.v4.media.b;
import com.applovin.impl.mediation.a.a;
import com.applovin.impl.mediation.h;
import com.applovin.impl.sdk.AppLovinAdBase;
import com.applovin.impl.sdk.ad.e;
import com.applovin.impl.sdk.d.d;
import com.applovin.impl.sdk.e.c;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.network.b;
import com.applovin.impl.sdk.r;
import com.applovin.impl.sdk.s;
import com.applovin.impl.sdk.utils.StringUtils;
import com.applovin.impl.sdk.utils.Utils;
import com.applovin.impl.sdk.v;
import com.applovin.sdk.AppLovinAdLoadListener;
import com.applovin.sdk.AppLovinSdkUtils;
import com.google.firebase.installations.interop.BuildConfig;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.concurrent.atomic.AtomicReference;

public abstract class c extends a implements h.a {
public final e a;
/* access modifiers changed from: private */
public AppLovinAdLoadListener b;
private final r c;
private final s d;
private final Collection<Character> e;
private final com.applovin.impl.sdk.d.e i;

/* renamed from: j  reason: collision with root package name */
private boolean f4j;

public c(String str, e eVar, n nVar, AppLovinAdLoadListener appLovinAdLoadListener) {
super(str, nVar);
if (eVar != null) {
this.a = eVar;
this.b = appLovinAdLoadListener;
this.c = nVar.S();
this.d = nVar.R();
this.e = j();
this.i = new com.applovin.impl.sdk.d.e();
return;
}
throw new IllegalArgumentException("No ad specified.");
}

private Uri a(Uri uri, String str) {
String str2;
v vVar;
StringBuilder sb;
String str3;
if (uri != null) {
String uri2 = uri.toString();
if (StringUtils.isValidString(uri2)) {
if (v.a()) {
v vVar2 = this.h;
String str4 = this.g;
vVar2.b(str4, "Caching " + str + " image...");
}
return c(uri2);
} else if (!v.a()) {
return null;
} else {
vVar = this.h;
str3 = this.g;
sb = new StringBuilder();
sb.append("Failed to cache ");
sb.append(str);
str2 = " image";
}
} else if (!v.a()) {
return null;
} else {
vVar = this.h;
str3 = this.g;
sb = new StringBuilder();
sb.append("No ");
sb.append(str);
str2 = " image to cache";
}
sb.append(str2);
vVar.b(str3, sb.toString());
return null;
}

private Uri a(String str, String str2) {
StringBuilder sb;
if (this.d != null) {
return b(str, str2);
}
String replace = str2.replace("/", "_");
String L = this.a.L();
if (StringUtils.isValidString(L)) {
replace = b.k(L, replace);
}
File a2 = this.c.a(replace, n.x());
if (a2 == null) {
return null;
}
if (a2.exists()) {
this.i.b(a2.length());
sb = new StringBuilder();
} else {
if (!this.c.a(a2, b.k(str, str2), Arrays.asList(new String[]{str}), this.i)) {
return null;
}
sb = new StringBuilder();
}
sb.append("file://");
sb.append(a2.getAbsolutePath());
return Uri.parse(sb.toString());
}

private Uri b(String str, String str2) {
StringBuilder sb;
String replace = str2.replace("/", "_");
String L = this.a.L();
if (StringUtils.isValidString(L)) {
replace = b.k(L, replace);
}
File a2 = this.d.a(replace, n.x());
if (a2 == null) {
return null;
}
if (a2.exists()) {
this.i.b(a2.length());
sb = new StringBuilder();
} else {
if (!this.d.a(a2, b.k(str, str2), Arrays.asList(new String[]{str}), this.i)) {
return null;
}
sb = new StringBuilder();
}
sb.append("file://");
sb.append(a2.getAbsolutePath());
return Uri.parse(sb.toString());
}

private Uri c(String str) {
return c(str, this.a.I(), true);
}

private Collection<Character> j() {
HashSet hashSet = new HashSet();
for (char valueOf : ((String) this.f.a(com.applovin.impl.sdk.c.b.bA)).toCharArray()) {
hashSet.add(Character.valueOf(valueOf));
}
hashSet.add('\"');
return hashSet;
}

public Uri a(String str) {
return a(str, (List<String>) this.a.I(), true);
}

public Uri a(String str, List<String> list, boolean z) {
if (this.d != null) {
return b(str, list, z);
}
if (!StringUtils.isValidString(str)) {
return null;
}
if (v.a()) {
v vVar = this.h;
String str2 = this.g;
vVar.b(str2, "Caching video " + str + "...");
}
String a2 = this.c.a(f(), str, this.a.L(), list, z, this.a.shouldUrlEncodeResourcePath(), this.i);
if (StringUtils.isValidString(a2)) {
File a3 = this.c.a(a2, f());
if (a3 != null) {
Uri fromFile = Uri.fromFile(a3);
if (fromFile != null) {
if (v.a()) {
v vVar2 = this.h;
String str3 = this.g;
StringBuilder q = b.q("Finish caching video for ad #");
q.append(this.a.getAdIdNumber());
q.append(". Updating ad with cachedVideoFilename = ");
q.append(a2);
vVar2.b(str3, q.toString());
}
return fromFile;
} else if (!v.a()) {
return null;
} else {
v vVar3 = this.h;
String str4 = this.g;
vVar3.e(str4, "Unable to create URI from cached video file = " + a3);
return null;
}
} else if (!v.a()) {
return null;
} else {
v vVar4 = this.h;
String str5 = this.g;
vVar4.e(str5, "Unable to cache video = " + str + "Video file was missing or null");
return null;
}
} else {
if (v.a()) {
this.h.e(this.g, "Failed to cache video");
}
h();
return null;
}
}

public String a(String str, List<String> list, e eVar) {
String str2;
String str3;
v vVar;
StringBuilder sb;
if (!StringUtils.isValidString(str)) {
return str;
}
if (!((Boolean) this.f.a(com.applovin.impl.sdk.c.b.bB)).booleanValue()) {
if (v.a()) {
this.h.b(this.g, "Resource caching is disabled, skipping cache...");
}
return str;
}
StringBuilder sb2 = new StringBuilder(str);
boolean shouldCancelHtmlCachingIfShown = eVar.shouldCancelHtmlCachingIfShown();
boolean aK = eVar.aK();
List H = eVar.H();
for (String next : list) {
int i3 = 0;
int i4 = 0;
while (i3 < sb2.length()) {
if (b()) {
return str;
}
i3 = sb2.indexOf(next, i4);
if (i3 == -1) {
continue;
break;
}
int length = sb2.length();
int i5 = i3;
while (!this.e.contains(Character.valueOf(sb2.charAt(i5))) && i5 < length) {
i5++;
}
if (i5 <= i3 || i5 == length) {
if (v.a()) {
this.h.e(this.g, "Unable to cache resource; ad HTML is invalid.");
}
return str;
}
String substring = sb2.substring(next.length() + i3, i5);
if (StringUtils.isValidString(substring)) {
if (!shouldCancelHtmlCachingIfShown || !eVar.hasShown()) {
if (aK) {
if (eVar.d().equals(next + substring)) {
if (v.a()) {
vVar = this.h;
str3 = this.g;
sb = android.support.v4.media.c.m("Postponing caching for \"", substring);
str2 = "\" video resource";
} else {
i4 = i5;
}
}
}
Uri a2 = a(next, substring);
if (a2 != null) {
sb2.replace(i3, i5, a2.toString());
eVar.b(a2);
this.i.b();
} else {
if (H.contains(next + substring)) {
h();
this.f4j = true;
}
this.i.c();
}
i4 = i5;
} else {
if (v.a()) {
this.h.b(this.g, "Cancelling HTML caching due to ad being shown already");
}
this.i.a();
return str;
}
} else if (v.a()) {
vVar = this.h;
str3 = this.g;
str2 = substring;
sb = b.q("Skip caching of non-resource ");
} else {
i4 = i5;
}
sb.append(str2);
vVar.b(str3, sb.toString());
i4 = i5;
}
}
return sb2.toString();
}

public void a() {
this.f.al().b(this);
}

public void a(a aVar) {
if (aVar.f().equalsIgnoreCase(this.a.N())) {
if (v.a()) {
this.h.e(this.g, "Updating flag for timeout...");
}
this.f4j = true;
}
this.f.al().b(this);
}

public void a(AppLovinAdBase appLovinAdBase) {
d.a(this.i, appLovinAdBase, this.f);
}

public Uri b(String str, List<String> list, boolean z) {
if (!StringUtils.isValidString(str)) {
return null;
}
if (v.a()) {
v vVar = this.h;
String str2 = this.g;
vVar.b(str2, "Caching video " + str + "...");
}
String a2 = this.d.a(f(), str, this.a.L(), list, z, this.a.shouldUrlEncodeResourcePath(), this.i);
if (StringUtils.isValidString(a2)) {
File a3 = this.d.a(a2, f());
if (a3 != null) {
Uri fromFile = Uri.fromFile(a3);
if (fromFile != null) {
if (v.a()) {
v vVar2 = this.h;
String str3 = this.g;
StringBuilder q = b.q("Finish caching video for ad #");
q.append(this.a.getAdIdNumber());
q.append(". Updating ad with cachedVideoFilename = ");
q.append(a2);
vVar2.b(str3, q.toString());
}
return fromFile;
} else if (!v.a()) {
return null;
} else {
v vVar3 = this.h;
String str4 = this.g;
vVar3.e(str4, "Unable to create URI from cached video file = " + a3);
return null;
}
} else if (!v.a()) {
return null;
} else {
v vVar4 = this.h;
String str5 = this.g;
vVar4.e(str5, "Unable to cache video = " + str + "Video file was missing or null");
return null;
}
} else {
if (v.a()) {
this.h.e(this.g, "Failed to cache video");
}
h();
Bundle bundle = new Bundle();
bundle.putLong("ad_id", this.a.getAdIdNumber());
bundle.putInt("load_response_code", this.i.e());
Exception d2 = this.i.d();
if (d2 != null) {
bundle.putString("load_exception_message", d2.getMessage());
}
this.f.X().a(bundle, "video_caching_failed");
return null;
}
}

public String b(String str) {
if (!StringUtils.isValidString(str)) {
return null;
}
com.applovin.impl.sdk.network.c a2 = com.applovin.impl.sdk.network.c.a(this.f).a(str).b("GET").a(BuildConfig.FLAVOR).a(0).a();
AtomicReference atomicReference = new AtomicReference((Object) null);
this.f.M().a(a2, new b.a(), new c.1(this, atomicReference, str));
String str2 = (String) atomicReference.get();
if (str2 != null) {
this.i.a((long) str2.length());
}
return str2;
}

public boolean b() {
return this.f4j;
}

public Uri c(String str, List<String> list, boolean z) {
if (this.d != null) {
return d(str, list, z);
}
try {
String a2 = this.c.a(f(), str, this.a.L(), list, z, this.a.shouldUrlEncodeResourcePath(), this.i);
if (!StringUtils.isValidString(a2)) {
return null;
}
File a3 = this.c.a(a2, f());
if (a3 != null) {
Uri fromFile = Uri.fromFile(a3);
if (fromFile != null) {
return fromFile;
}
if (!v.a()) {
return null;
}
this.h.e(this.g, "Unable to extract Uri from image file");
return null;
} else if (!v.a()) {
return null;
} else {
v vVar = this.h;
String str2 = this.g;
vVar.e(str2, "Unable to retrieve File from cached image filename = " + a2);
return null;
}
} catch (Throwable th) {
if (!v.a()) {
return null;
}
v vVar2 = this.h;
String str3 = this.g;
vVar2.b(str3, "Failed to cache image at url = " + str, th);
return null;
}
}

public void c() {
if (v.a()) {
this.h.b(this.g, "Caching mute images...");
}
Uri a2 = a(this.a.aC(), "mute");
if (a2 != null) {
this.a.c(a2);
}
Uri a3 = a(this.a.aD(), "unmute");
if (a3 != null) {
this.a.d(a3);
}
if (v.a()) {
v vVar = this.h;
String str = this.g;
StringBuilder q = android.support.v4.media.b.q("Ad updated with muteImageFilename = ");
q.append(this.a.aC());
q.append(", unmuteImageFilename = ");
q.append(this.a.aD());
vVar.b(str, q.toString());
}
}

public Uri d(String str, List<String> list, boolean z) {
try {
String a2 = this.d.a(f(), str, this.a.L(), list, z, this.a.shouldUrlEncodeResourcePath(), this.i);
if (!StringUtils.isValidString(a2)) {
return null;
}
File a3 = this.d.a(a2, f());
if (a3 != null) {
Uri fromFile = Uri.fromFile(a3);
if (fromFile != null) {
return fromFile;
}
if (!v.a()) {
return null;
}
this.h.e(this.g, "Unable to extract Uri from image file");
return null;
} else if (!v.a()) {
return null;
} else {
v vVar = this.h;
String str2 = this.g;
vVar.e(str2, "Unable to retrieve File from cached image filename = " + a2);
return null;
}
} catch (Throwable th) {
if (!v.a()) {
return null;
}
v vVar2 = this.h;
String str3 = this.g;
vVar2.b(str3, "Failed to cache image at url = " + str, th);
return null;
}
}

public String e(String str, List<String> list, boolean z) {
Throwable th;
InputStream inputStream;
if (this.d != null) {
return f(str, list, z);
}
if (StringUtils.isValidString(str)) {
Uri parse = Uri.parse(str);
if (parse == null) {
if (v.a()) {
this.h.b(this.g, "Nothing to cache, skipping...");
}
return null;
}
String fileName = ((Boolean) this.f.a(com.applovin.impl.sdk.c.b.fn)).booleanValue() ? Utils.getFileName(parse) : parse.getLastPathSegment();
if (z) {
fileName = StringUtils.encodeUriString(fileName, this.f);
}
int intValue = ((Integer) this.f.a(com.applovin.impl.sdk.c.b.bG)).intValue();
int length = StringUtils.emptyIfNull(this.a.L()).length() + StringUtils.emptyIfNull(fileName).length();
if (length > intValue && StringUtils.isValidString(fileName)) {
fileName = fileName.substring(length - intValue);
}
if (StringUtils.isValidString(this.a.L())) {
fileName = this.a.L() + fileName;
}
try {
File a2 = this.c.a(fileName, f());
if (a2 != null && a2.exists()) {
return this.c.a(a2);
}
inputStream = this.c.a(str, list, true, this.i);
if (inputStream != null) {
try {
this.c.b(inputStream, a2);
} catch (Throwable th2) {
th = th2;
}
}
Utils.close(inputStream, this.f);
return this.c.a(a2);
} catch (Throwable th3) {
if (v.a()) {
this.h.b(this.g, android.support.v4.media.a.k("Resource at ", str, " failed to load."), th3);
}
}
}
return null;
}

public String f(String str, List<String> list, boolean z) {
if (StringUtils.isValidString(str)) {
Uri parse = Uri.parse(str);
if (parse == null) {
if (v.a()) {
this.h.b(this.g, "Nothing to cache, skipping...");
}
return null;
}
String fileName = ((Boolean) this.f.a(com.applovin.impl.sdk.c.b.fn)).booleanValue() ? Utils.getFileName(parse) : parse.getLastPathSegment();
if (z) {
fileName = StringUtils.encodeUriString(fileName, this.f);
}
int intValue = ((Integer) this.f.a(com.applovin.impl.sdk.c.b.bG)).intValue();
int length = StringUtils.emptyIfNull(this.a.L()).length() + StringUtils.emptyIfNull(fileName).length();
if (length > intValue && StringUtils.isValidString(fileName)) {
fileName = fileName.substring(length - intValue);
}
if (StringUtils.isValidString(this.a.L())) {
fileName = this.a.L() + fileName;
}
File a2 = this.d.a(fileName, f());
ByteArrayOutputStream a3 = (a2 == null || !a2.exists()) ? null : this.d.a(a2);
if (a3 == null) {
a3 = this.d.a(str, list, true, this.i);
if (a3 != null) {
this.d.a(a3, a2);
this.i.a((long) a3.size());
}
} else {
this.i.b((long) a3.size());
}
try {
return a3.toString("UTF-8");
} catch (UnsupportedEncodingException e2) {
if (v.a()) {
this.h.b(this.g, "UTF-8 encoding not supported.", e2);
}
} catch (Throwable th) {
if (v.a()) {
this.h.b(this.g, android.support.v4.media.a.k("String resource at ", str, " failed to load."), th);
}
return null;
}
}
return null;
}

public void h() {
AppLovinAdLoadListener appLovinAdLoadListener = this.b;
if (appLovinAdLoadListener != null) {
appLovinAdLoadListener.failedToReceiveAd(-202);
this.b = null;
}
}

public void i() {
if (v.a()) {
v vVar = this.h;
String str = this.g;
StringBuilder q = android.support.v4.media.b.q("Rendered new ad:");
q.append(this.a);
vVar.b(str, q.toString());
}
AppLovinSdkUtils.runOnUiThread(new c.2(this));
}

public void run() {
if (this.a.M()) {
if (v.a()) {
this.h.b(this.g, "Subscribing to timeout events...");
}
this.f.al().a(this);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\d.java

package com.applovin.impl.sdk.e;

import android.net.Uri;
import android.support.v4.media.b;
import com.applovin.impl.sdk.AppLovinAdBase;
import com.applovin.impl.sdk.ad.a;
import com.applovin.impl.sdk.ad.e;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.v;
import com.applovin.sdk.AppLovinAdLoadListener;
import java.util.List;

public class d extends c {
private final a b;
private boolean c;
private boolean d;

public d(a aVar, n nVar, AppLovinAdLoadListener appLovinAdLoadListener) {
super("TaskCacheAppLovinAd", aVar, nVar, appLovinAdLoadListener);
this.b = aVar;
}

private void j() {
if (v.a()) {
this.h.b(this.g, "Caching HTML resources...");
}
String a = a(this.b.b(), (List<String>) this.b.I(), (e) this.b);
if (this.b.q() && this.b.isOpenMeasurementEnabled()) {
a = this.f.ab().a(a);
}
this.b.a(a);
this.b.a(true);
if (v.a()) {
v vVar = this.h;
String str = this.g;
StringBuilder q = b.q("Finish caching non-video resources for ad #");
q.append(this.b.getAdIdNumber());
vVar.b(str, q.toString());
}
v vVar2 = this.h;
String str2 = this.g;
StringBuilder q2 = b.q("Ad updated with cachedHTML = ");
q2.append(this.b.b());
vVar2.a(str2, q2.toString());
}

private void k() {
Uri a;
if (!b() && (a = a(this.b.i())) != null) {
if (this.b.aK()) {
this.b.a(this.b.b().replaceFirst(this.b.e(), a.toString()));
if (v.a()) {
this.h.b(this.g, "Replaced video URL with cached video URI in HTML for web video ad");
}
}
this.b.g();
this.b.a(a);
}
}

public void a(boolean z) {
this.c = z;
}

public void b(boolean z) {
this.d = z;
}

public void run() {
super.run();
boolean f = this.b.f();
boolean z = this.d;
if (f || z) {
if (v.a()) {
v vVar = this.h;
String str = this.g;
StringBuilder q = b.q("Begin caching for streaming ad #");
q.append(this.b.getAdIdNumber());
q.append("...");
vVar.b(str, q.toString());
}
c();
if (f) {
if (this.c) {
i();
}
j();
if (!this.c) {
i();
}
k();
} else {
i();
j();
}
} else {
if (v.a()) {
v vVar2 = this.h;
String str2 = this.g;
StringBuilder q2 = b.q("Begin processing for non-streaming ad #");
q2.append(this.b.getAdIdNumber());
q2.append("...");
vVar2.b(str2, q2.toString());
}
c();
j();
k();
i();
}
long currentTimeMillis = System.currentTimeMillis() - this.b.getCreatedAtMillis();
com.applovin.impl.sdk.d.d.a(this.b, this.f);
com.applovin.impl.sdk.d.d.a(currentTimeMillis, this.b, this.f);
a((AppLovinAdBase) this.b);
a();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\e.java
private final a b;

public e(a aVar, n nVar, AppLovinAdLoadListener appLovinAdLoadListener) {
super("TaskCacheVastAd", aVar, nVar, appLovinAdLoadListener);
this.b = aVar;
}

private void j() {
String str;
String str2;
v vVar;
String str3;
String str4;
v vVar2;
String str5;
String str6;
v vVar3;
if (!b()) {
if (this.b.aU()) {
d aO = this.b.aO();
if (aO != null) {
i b2 = aO.b();
if (b2 != null) {
Uri b3 = b2.b();
String uri = b3 != null ? b3.toString() : BuildConfig.FLAVOR;
String c = b2.c();
if (URLUtil.isValidUrl(uri) || StringUtils.isValidString(c)) {
if (b2.a() == i.a.b) {
if (v.a()) {
v vVar4 = this.h;
String str7 = this.g;
vVar4.b(str7, "Caching static companion ad at " + uri + "...");
}
Uri c2 = c(uri, Collections.emptyList(), false);
if (c2 != null) {
b2.a(c2);
} else if (v.a()) {
vVar2 = this.h;
str4 = this.g;
str3 = uRjqWirfauAxx.CCVNEXFgbC;
} else {
return;
}
} else if (b2.a() == i.a.d) {
if (StringUtils.isValidString(uri)) {
if (v.a()) {
v vVar5 = this.h;
String str8 = this.g;
vVar5.b(str8, "Begin caching HTML companion ad. Fetching from " + uri + "...");
}
c = b(uri);
if (StringUtils.isValidString(c)) {
if (v.a()) {
vVar3 = this.h;
str6 = this.g;
str5 = "HTML fetched. Caching HTML now...";
}
b2.a(a(c, (List<String>) Collections.emptyList(), (com.applovin.impl.sdk.ad.e) this.b));
} else if (v.a()) {
v vVar6 = this.h;
String str9 = this.g;
vVar6.e(str9, "Unable to load companion ad resources from " + uri);
return;
} else {
return;
}
} else {
if (v.a()) {
vVar3 = this.h;
str6 = this.g;
str5 = b.k("Caching provided HTML for companion ad. No fetch required. HTML: ", c);
}
b2.a(a(c, (List<String>) Collections.emptyList(), (com.applovin.impl.sdk.ad.e) this.b));
}
vVar3.b(str6, str5);
b2.a(a(c, (List<String>) Collections.emptyList(), (com.applovin.impl.sdk.ad.e) this.b));
} else if (b2.a() == i.a.c && v.a()) {
vVar = this.h;
str2 = this.g;
str = "Skip caching of iFrame resource...";
} else {
return;
}
this.b.a(true);
return;
} else if (v.a()) {
this.h.d(this.g, "Companion ad does not have any resources attached. Skipping...");
return;
} else {
return;
}
} else if (v.a()) {
vVar2 = this.h;
str4 = this.g;
str3 = "Failed to retrieve non-video resources from companion ad. Skipping...";
} else {
return;
}
vVar2.e(str4, str3);
return;
} else if (v.a()) {
vVar = this.h;
str2 = this.g;
str = "No companion ad provided. Skipping...";
} else {
return;
}
} else if (v.a()) {
vVar = this.h;
str2 = this.g;
str = "Companion ad caching disabled. Skipping...";
} else {
return;
}
vVar.b(str2, str);
}
}

private void k() {
o aN;
Uri b2;
if (!b()) {
if (this.b.aV()) {
if (this.b.aM() != null && (aN = this.b.aN()) != null && (b2 = aN.b()) != null) {
Uri a = a(b2.toString(), (List<String>) Collections.emptyList(), false);
if (a != null) {
if (v.a()) {
v vVar = this.h;
String str = this.g;
vVar.b(str, "Video file successfully cached into: " + a);
}
aN.a(a);
} else if (v.a()) {
v vVar2 = this.h;
String str2 = this.g;
vVar2.e(str2, "Failed to cache video file: " + aN);
}
}
} else if (v.a()) {
this.h.b(this.g, "Video caching disabled. Skipping...");
}
}
}

private void l() {
String str;
String str2;
String str3;
v vVar;
if (!b()) {
if (this.b.aT() != null) {
if (v.a()) {
v vVar2 = this.h;
String str4 = this.g;
StringBuilder q = b.q("Begin caching HTML template. Fetching from ");
q.append(this.b.aT());
q.append("...");
vVar2.b(str4, q.toString());
}
str = e(this.b.aT().toString(), this.b.I(), this.b.shouldUrlEncodeResourcePath());
} else {
str = this.b.aS();
}
if (StringUtils.isValidString(str)) {
String a = a(str, (List<String>) this.b.I(), this.a);
if (this.b.q() && this.b.isOpenMeasurementEnabled()) {
a = this.f.ab().a(a);
}
this.b.a(a);
if (v.a()) {
vVar = this.h;
str3 = this.g;
StringBuilder q2 = b.q("Finish caching HTML template ");
q2.append(this.b.aS());
q2.append(" for ad #");
q2.append(this.b.getAdIdNumber());
str2 = q2.toString();
} else {
return;
}
} else if (v.a()) {
vVar = this.h;
str3 = this.g;
str2 = "Unable to load HTML template";
} else {
return;
}
vVar.b(str3, str2);
}
}

public void h() {
this.b.g().e();
super.h();
}

public void i() {
this.b.g().c();
super.i();
}

public void run() {
super.run();
if (this.b.f()) {
if (v.a()) {
v vVar = this.h;
String str = this.g;
StringBuilder q = b.q("Begin caching for VAST streaming ad #");
q.append(this.a.getAdIdNumber());
q.append("...");
vVar.b(str, q.toString());
}
c();
if (this.b.m()) {
i();
}
a.b l = this.b.l();
a.b bVar = a.b.a;
if (l == bVar) {
j();
l();
} else {
k();
}
if (!this.b.m()) {
i();
}
if (this.b.l() == bVar) {
k();
} else {
j();
l();
}
} else {
if (v.a()) {
v vVar2 = this.h;
String str2 = this.g;
StringBuilder q2 = b.q("Begin caching for VAST ad #");
q2.append(this.a.getAdIdNumber());
q2.append("...");
vVar2.b(str2, q2.toString());
}
c();
j();
k();
l();
i();
}
if (v.a()) {
v vVar3 = this.h;
String str3 = this.g;
StringBuilder q3 = b.q("Finished caching VAST ad #");
q3.append(this.b.getAdIdNumber());
vVar3.b(str3, q3.toString());
}
long currentTimeMillis = System.currentTimeMillis() - this.b.getCreatedAtMillis();
com.applovin.impl.sdk.d.d.a(this.b, this.f);
com.applovin.impl.sdk.d.d.a(currentTimeMillis, this.b, this.f);
a((AppLovinAdBase) this.b);
this.b.b();
a();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\f.java

package com.applovin.impl.sdk.e;

import com.applovin.impl.sdk.n;

public class f extends a {
private final a a;

public f(n nVar, a aVar) {
super("TaskCollectAdvertisingId", nVar, true);
this.a = aVar;
}

public void run() {
this.a.a(this.f.O().k());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\g.java

package com.applovin.impl.sdk.e;

import com.applovin.impl.adview.d;
import com.applovin.impl.sdk.c.b;
import com.applovin.impl.sdk.e.o;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.network.l;
import com.applovin.impl.sdk.utils.StringUtils;
import com.applovin.impl.sdk.v;
import com.applovin.sdk.AppLovinPostbackListener;

public class g extends a {
/* access modifiers changed from: private */
public final l a;
/* access modifiers changed from: private */
public final AppLovinPostbackListener b;
private final o.a c;

public g(l lVar, o.a aVar, n nVar, AppLovinPostbackListener appLovinPostbackListener) {
super("TaskDispatchPostback", nVar);
if (lVar != null) {
this.a = lVar;
this.b = appLovinPostbackListener;
this.c = aVar;
return;
}
throw new IllegalArgumentException("No request specified");
}

/* access modifiers changed from: private */
public void a() {
2 r0 = new 2(this, this.a, d());
r0.a(this.c);
d().K().a((a) r0);
}

public void run() {
if (!StringUtils.isValidString(this.a.a())) {
if (v.a()) {
this.h.c(this.g, "Requested URL is not valid; nothing to do...");
}
AppLovinPostbackListener appLovinPostbackListener = this.b;
if (appLovinPostbackListener != null) {
appLovinPostbackListener.onPostbackFailure(this.a.a(), -900);
}
} else if (this.a.r()) {
1 r0 = new 1(this);
if (((Boolean) d().a(b.fA)).booleanValue()) {
d().W().a(this.a, r0);
} else {
d.a(this.a, d(), r0);
}
} else {
a();
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\h.java

package com.applovin.impl.sdk.e;

import com.applovin.impl.sdk.ad.d;
import com.applovin.impl.sdk.c.b;
import com.applovin.impl.sdk.d.f;
import com.applovin.impl.sdk.d.g;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.network.c;
import com.applovin.impl.sdk.utils.CollectionUtils;
import com.applovin.impl.sdk.utils.JsonUtils;
import com.applovin.impl.sdk.utils.Utils;
import com.applovin.impl.sdk.utils.i;
import com.applovin.impl.sdk.v;
import java.util.Map;
import java.util.UUID;
import java.util.concurrent.TimeUnit;
import org.json.JSONObject;

public abstract class h extends a {
public final d a;

public h(d dVar, String str, n nVar) {
super(str, nVar);
this.a = dVar;
}

private void a(g gVar) {
f fVar = f.d;
long b = gVar.b(fVar);
long currentTimeMillis = System.currentTimeMillis();
if (currentTimeMillis - b > TimeUnit.MINUTES.toMillis((long) ((Integer) this.f.a(b.dA)).intValue())) {
gVar.b(fVar, currentTimeMillis);
gVar.c(f.e);
gVar.c(f.f);
}
}

private Map<String, String> i() {
Map<String, String> map = CollectionUtils.map(3);
map.put("AppLovin-Zone-Id", this.a.a());
if (this.a.c() != null) {
map.put("AppLovin-Ad-Size", this.a.c().getLabel());
}
if (this.a.d() != null) {
map.put("AppLovin-Ad-Type", this.a.d().getLabel());
}
return map;
}

public abstract a a(JSONObject jSONObject);

public Map<String, String> a() {
Map<String, String> map = CollectionUtils.map(4);
map.put("zone_id", this.a.a());
if (this.a.c() != null) {
map.put("size", this.a.c().getLabel());
}
if (this.a.d() != null) {
map.put("require", this.a.d().getLabel());
}
return map;
}

public void a(int i, String str) {
if (v.a()) {
v vVar = this.h;
String str2 = this.g;
StringBuilder q = android.support.v4.media.b.q("Unable to fetch ");
q.append(this.a);
q.append(" ad: server returned ");
q.append(i);
vVar.e(str2, q.toString());
}
if (i == -800) {
this.f.N().a(f.j);
}
}

public abstract String b();

public void b(JSONObject jSONObject) {
i.d(jSONObject, this.f);
i.c(jSONObject, this.f);
i.e(jSONObject, this.f);
d.a(jSONObject);
this.f.K().a(a(jSONObject));
}

public abstract String c();

public com.applovin.impl.sdk.ad.b h() {
return this.a.e() ? com.applovin.impl.sdk.ad.b.b : com.applovin.impl.sdk.ad.b.c;
}

public void run() {
JSONObject jSONObject;
Map map;
if (v.a()) {
v vVar = this.h;
String str = this.g;
StringBuilder q = android.support.v4.media.b.q("Fetching next ad of zone: ");
q.append(this.a);
vVar.b(str, q.toString());
}
if (((Boolean) this.f.a(b.dX)).booleanValue() && Utils.isVPNConnected() && v.a()) {
this.h.b(this.g, "User is connected to a VPN");
}
g N = this.f.N();
N.a(f.a);
f fVar = f.d;
if (N.b(fVar) == 0) {
N.b(fVar, System.currentTimeMillis());
}
JSONObject jSONObject2 = null;
try {
JSONObject andResetCustomPostBody = this.f.D().getAndResetCustomPostBody();
String str2 = "POST";
if (((Boolean) this.f.a(b.du)).booleanValue()) {
jSONObject = new JSONObject(this.f.O().a(a(), false, true));
map = CollectionUtils.map();
map.put("rid", UUID.randomUUID().toString());
if (!((Boolean) this.f.a(b.eJ)).booleanValue()) {
map.put("sdk_key", this.f.A());
}
if (andResetCustomPostBody != null) {
JsonUtils.putAll(jSONObject, andResetCustomPostBody);
}
} else {
Map stringifyObjectMap = Utils.stringifyObjectMap(this.f.O().a(a(), false, false));
if (andResetCustomPostBody != null) {
jSONObject2 = andResetCustomPostBody;
} else {
str2 = "GET";
}
jSONObject = jSONObject2;
map = stringifyObjectMap;
}
if (Utils.isDspDemoApp(f())) {
map.putAll(this.f.D().getAndResetCustomQueryParams());
}
a(N);
c.a b = c.a(this.f).a(b()).c(c()).a(map).b(str2).b(i()).a(new JSONObject()).a(((Integer) this.f.a(b.di)).intValue()).a(((Boolean) this.f.a(b.dj)).booleanValue()).b(((Boolean) this.f.a(b.dk)).booleanValue()).b(((Integer) this.f.a(b.dh)).intValue());
if (jSONObject != null) {
b.a(jSONObject);
b.d(((Boolean) this.f.a(b.eR)).booleanValue());
}
1 r1 = new 1(this, b.a(), this.f);
r1.a(b.bf);
r1.b(b.bg);
this.f.K().a((a) r1);
} catch (Throwable th) {
if (v.a()) {
v vVar2 = this.h;
String str3 = this.g;
StringBuilder q2 = android.support.v4.media.b.q("Unable to fetch ad ");
q2.append(this.a);
vVar2.b(str3, q2.toString(), th);
}
a(0, th.getMessage());
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\i.java

package com.applovin.impl.sdk.e;

import com.applovin.impl.sdk.c.b;
import com.applovin.impl.sdk.e.o;
import com.applovin.impl.sdk.k;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.network.c;
import com.applovin.impl.sdk.utils.CollectionUtils;
import com.applovin.impl.sdk.utils.h;
import com.applovin.impl.sdk.v;
import com.google.android.gms.security.ProviderInstaller;
import java.util.Map;
import java.util.UUID;
import java.util.concurrent.atomic.AtomicBoolean;
import org.json.JSONObject;

public class i extends a {
private static final AtomicBoolean a = new AtomicBoolean();
private final int b;
/* access modifiers changed from: private */
public final Object c = new Object();
/* access modifiers changed from: private */
public a d;

public i(int i, n nVar, a aVar) {
super("TaskFetchBasicSettings", nVar, true);
this.b = i;
this.d = aVar;
}

/* access modifiers changed from: private */
public void a(JSONObject jSONObject) {
synchronized (this.c) {
a aVar = this.d;
if (aVar != null) {
aVar.a(jSONObject);
this.d = null;
}
}
}

private String c() {
return com.applovin.impl.sdk.utils.i.a((String) this.f.a(b.bd), "5.0/i", d());
}

private String h() {
return com.applovin.impl.sdk.utils.i.a((String) this.f.a(b.be), "5.0/i", d());
}

public Map<String, String> a() {
Map<String, String> map = CollectionUtils.map();
map.put("rid", UUID.randomUUID().toString());
if (!((Boolean) this.f.a(b.eJ)).booleanValue()) {
map.put("sdk_key", this.f.A());
}
Boolean a2 = k.b().a(f());
if (a2 != null) {
map.put("huc", a2.toString());
}
Boolean a3 = k.a().a(f());
if (a3 != null) {
map.put("aru", a3.toString());
}
Boolean a5 = k.c().a(f());
if (a5 != null) {
map.put("dns", a5.toString());
}
return map;
}

/* JADX WARNING: Can't wrap try/catch for region: R(36:0|1|2|(1:4)|5|(1:7)|8|(1:10)|11|(1:13)|14|(1:18)|19|(1:21)|22|23|(1:25)|26|27|(1:29)|30|(1:36)|37|(1:42)|43|(1:45)|46|(1:48)|49|(1:51)|52|(1:54)|55|(1:57)|58|63) */
/* JADX WARNING: Missing exception handler attribute for start block: B:26:0x01c0 */
/* JADX WARNING: Removed duplicated region for block: B:29:0x01d0 A[Catch:{ JSONException -> 0x02e7 }] */
/* JADX WARNING: Removed duplicated region for block: B:45:0x026b A[Catch:{ JSONException -> 0x02e7 }] */
/* JADX WARNING: Removed duplicated region for block: B:48:0x0286 A[Catch:{ JSONException -> 0x02e7 }] */
/* JADX WARNING: Removed duplicated region for block: B:51:0x02a1 A[Catch:{ JSONException -> 0x02e7 }] */
/* JADX WARNING: Removed duplicated region for block: B:54:0x02b8 A[Catch:{ JSONException -> 0x02e7 }] */
/* JADX WARNING: Removed duplicated region for block: B:57:0x02cd A[Catch:{ JSONException -> 0x02e7 }] */
/* Code decompiled incorrectly, please refer to instructions dump. */
public org.json.JSONObject b() {
/*
r23 = this;
r1 = r23
java.lang.String r0 = "screen_size_in"
java.lang.String r2 = "is_tablet"
java.lang.String r3 = "revision"
java.lang.String r4 = "model"
java.lang.String r5 = "hardware"
java.lang.String r6 = "brand_name"
java.lang.String r7 = "brand"
java.lang.String r8 = "locale"
java.lang.String r9 = "os"
java.lang.String r10 = "platform"
java.lang.String r11 = "IABTCF_gdprApplies"
java.lang.String r12 = "IABTCF_TCString"
java.lang.String r13 = "target_sdk"
java.lang.String r14 = "tg"
java.lang.String r15 = "debug"
r16 = r0
java.lang.String r0 = "test_ads"
r17 = r2
r2 = 0
java.lang.String r2 = androidx.media2.exoplayer.external.extractor.ogg.ztAH.PYxhM.RnKViZG
r18 = r3
java.lang.String r3 = "package_name"
r19 = r4
org.json.JSONObject r4 = new org.json.JSONObject
r4.<init>()
r20 = r5
java.lang.String r5 = "sdk_version"
r21 = r6
java.lang.String r6 = com.applovin.sdk.AppLovinSdk.VERSION     // Catch:{ JSONException -> 0x02e7 }
r4.put(r5, r6)     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r5 = "is_cross_promo"
com.applovin.impl.sdk.n r6 = r1.f     // Catch:{ JSONException -> 0x02e7 }
boolean r6 = r6.e()     // Catch:{ JSONException -> 0x02e7 }
r4.put(r5, r6)     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r5 = "init_count"
int r6 = r1.b     // Catch:{ JSONException -> 0x02e7 }
r4.put(r5, r6)     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r5 = "server_installed_at"
com.applovin.impl.sdk.n r6 = r1.f     // Catch:{ JSONException -> 0x02e7 }
r22 = r7
com.applovin.impl.sdk.c.b r7 = com.applovin.impl.sdk.c.b.an     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r6 = r6.a(r7)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r5, r6)     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.n r5 = r1.f     // Catch:{ JSONException -> 0x02e7 }
boolean r5 = r5.aq()     // Catch:{ JSONException -> 0x02e7 }
r6 = 1
if (r5 == 0) goto L_0x006e
java.lang.String r5 = "first_install"
r4.put(r5, r6)     // Catch:{ JSONException -> 0x02e7 }
L_0x006e:
com.applovin.impl.sdk.n r5 = r1.f     // Catch:{ JSONException -> 0x02e7 }
boolean r5 = r5.u()     // Catch:{ JSONException -> 0x02e7 }
if (r5 != 0) goto L_0x007b
java.lang.String r5 = "first_install_v2"
r4.put(r5, r6)     // Catch:{ JSONException -> 0x02e7 }
L_0x007b:
com.applovin.impl.sdk.n r5 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.c.b r7 = com.applovin.impl.sdk.c.b.dR     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r5 = r5.a(r7)     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r5 = (java.lang.String) r5     // Catch:{ JSONException -> 0x02e7 }
boolean r7 = com.applovin.impl.sdk.utils.StringUtils.isValidString(r5)     // Catch:{ JSONException -> 0x02e7 }
if (r7 == 0) goto L_0x0090
java.lang.String r7 = "plugin_version"
r4.put(r7, r5)     // Catch:{ JSONException -> 0x02e7 }
L_0x0090:
com.applovin.impl.sdk.n r5 = r1.f     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r5 = r5.r()     // Catch:{ JSONException -> 0x02e7 }
boolean r7 = com.applovin.impl.sdk.utils.StringUtils.isValidString(r5)     // Catch:{ JSONException -> 0x02e7 }
if (r7 == 0) goto L_0x00a1
java.lang.String r7 = "mediation_provider"
r4.put(r7, r5)     // Catch:{ JSONException -> 0x02e7 }
L_0x00a1:
java.lang.String r5 = "installed_mediation_adapters"
com.applovin.impl.sdk.n r7 = r1.f     // Catch:{ JSONException -> 0x02e7 }
org.json.JSONArray r7 = com.applovin.impl.mediation.d.c.a(r7)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r5, r7)     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.n r5 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.o r5 = r5.O()     // Catch:{ JSONException -> 0x02e7 }
java.util.Map r5 = r5.h()     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r7 = r5.get(r3)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r3, r7)     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r3 = r5.get(r2)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r3)     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r2 = r5.get(r0)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r0, r2)     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r0 = r5.get(r15)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r15, r0)     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r0 = r5.get(r14)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r14, r0)     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r0 = r5.get(r13)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r13, r0)     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.n r0 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.sdk.AppLovinSdkSettings r0 = r0.B()     // Catch:{ JSONException -> 0x02e7 }
java.util.List r0 = r0.getInitializationAdUnitIds()     // Catch:{ JSONException -> 0x02e7 }
if (r0 == 0) goto L_0x0103
int r2 = r0.size()     // Catch:{ JSONException -> 0x02e7 }
if (r2 <= 0) goto L_0x0103
java.util.List r0 = com.applovin.impl.sdk.utils.CollectionUtils.removeTrimmedEmptyStrings(r0)     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r2 = "ad_unit_ids"
int r3 = r0.size()     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r0 = com.applovin.impl.sdk.utils.CollectionUtils.implode(r0, r3)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r0)     // Catch:{ JSONException -> 0x02e7 }
L_0x0103:
java.lang.Object r0 = r5.get(r12)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r12, r0)     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r0 = r5.get(r11)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r11, r0)     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.n r0 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.o r0 = r0.O()     // Catch:{ JSONException -> 0x02e7 }
java.util.Map r0 = r0.b()     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r2 = r0.get(r10)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r10, r2)     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r2 = r0.get(r9)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r9, r2)     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r2 = r0.get(r8)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r8, r2)     // Catch:{ JSONException -> 0x02e7 }
r2 = r22
java.lang.Object r3 = r0.get(r2)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r3)     // Catch:{ JSONException -> 0x02e7 }
r2 = r21
java.lang.Object r3 = r0.get(r2)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r3)     // Catch:{ JSONException -> 0x02e7 }
r2 = r20
java.lang.Object r3 = r0.get(r2)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r3)     // Catch:{ JSONException -> 0x02e7 }
r2 = r19
java.lang.Object r3 = r0.get(r2)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r3)     // Catch:{ JSONException -> 0x02e7 }
r2 = r18
java.lang.Object r3 = r0.get(r2)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r3)     // Catch:{ JSONException -> 0x02e7 }
r2 = r17
java.lang.Object r3 = r0.get(r2)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r3)     // Catch:{ JSONException -> 0x02e7 }
r2 = r16
java.lang.Object r0 = r0.get(r2)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r0)     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.n r0 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.c.b r2 = com.applovin.impl.sdk.c.b.ea     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r0 = r0.a(r2)     // Catch:{ JSONException -> 0x02e7 }
java.lang.Boolean r0 = (java.lang.Boolean) r0     // Catch:{ JSONException -> 0x02e7 }
boolean r0 = r0.booleanValue()     // Catch:{ JSONException -> 0x02e7 }
if (r0 == 0) goto L_0x018e
java.lang.String r0 = "mtl"
com.applovin.impl.sdk.n r2 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.SessionTracker r2 = r2.U()     // Catch:{ JSONException -> 0x02e7 }
int r2 = r2.getLastTrimMemoryLevel()     // Catch:{ JSONException -> 0x02e7 }
r4.put(r0, r2)     // Catch:{ JSONException -> 0x02e7 }
L_0x018e:
android.content.Context r0 = com.applovin.impl.sdk.n.x()     // Catch:{ all -> 0x01c0 }
java.lang.String r2 = "activity"
java.lang.Object r0 = r0.getSystemService(r2)     // Catch:{ all -> 0x01c0 }
android.app.ActivityManager r0 = (android.app.ActivityManager) r0     // Catch:{ all -> 0x01c0 }
android.app.ActivityManager$MemoryInfo r2 = new android.app.ActivityManager$MemoryInfo     // Catch:{ all -> 0x01c0 }
r2.<init>()     // Catch:{ all -> 0x01c0 }
if (r0 == 0) goto L_0x01c0
r0.getMemoryInfo(r2)     // Catch:{ all -> 0x01c0 }
java.lang.String r0 = "fm"
long r7 = r2.availMem     // Catch:{ all -> 0x01c0 }
r4.put(r0, r7)     // Catch:{ all -> 0x01c0 }
java.lang.String r0 = "tm"
long r7 = r2.totalMem     // Catch:{ all -> 0x01c0 }
r4.put(r0, r7)     // Catch:{ all -> 0x01c0 }
java.lang.String r0 = "lmt"
long r7 = r2.threshold     // Catch:{ all -> 0x01c0 }
r4.put(r0, r7)     // Catch:{ all -> 0x01c0 }
java.lang.String r0 = "lm"
boolean r2 = r2.lowMemory     // Catch:{ all -> 0x01c0 }
r4.put(r0, r2)     // Catch:{ all -> 0x01c0 }
L_0x01c0:
com.applovin.impl.sdk.n r0 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.AppLovinTargetingDataImpl r0 = r0.q()     // Catch:{ JSONException -> 0x02e7 }
java.util.Map r0 = r0.getAllData()     // Catch:{ JSONException -> 0x02e7 }
boolean r2 = r0.isEmpty()     // Catch:{ JSONException -> 0x02e7 }
if (r2 != 0) goto L_0x01da
java.lang.String r2 = "targeting_data"
org.json.JSONObject r3 = new org.json.JSONObject     // Catch:{ JSONException -> 0x02e7 }
r3.<init>(r0)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r3)     // Catch:{ JSONException -> 0x02e7 }
L_0x01da:
com.applovin.impl.sdk.n r0 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.o r0 = r0.O()     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.o$a r0 = r0.k()     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r2 = "dnt"
boolean r3 = r0.a     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r3)     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r2 = "dnt_code"
com.applovin.impl.sdk.o$d r3 = r0.c     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r3 = r3.a()     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r3)     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.k$a r2 = com.applovin.impl.sdk.k.a()     // Catch:{ JSONException -> 0x02e7 }
android.content.Context r3 = r23.f()     // Catch:{ JSONException -> 0x02e7 }
java.lang.Boolean r2 = r2.a(r3)     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.n r3 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.c.b r5 = com.applovin.impl.sdk.c.b.dN     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r3 = r3.a(r5)     // Catch:{ JSONException -> 0x02e7 }
java.lang.Boolean r3 = (java.lang.Boolean) r3     // Catch:{ JSONException -> 0x02e7 }
boolean r3 = r3.booleanValue()     // Catch:{ JSONException -> 0x02e7 }
if (r3 == 0) goto L_0x0229
java.lang.String r3 = r0.b     // Catch:{ JSONException -> 0x02e7 }
boolean r3 = com.applovin.impl.sdk.utils.StringUtils.isValidString(r3)     // Catch:{ JSONException -> 0x02e7 }
if (r3 == 0) goto L_0x0229
java.lang.Boolean r3 = java.lang.Boolean.TRUE     // Catch:{ JSONException -> 0x02e7 }
boolean r3 = r3.equals(r2)     // Catch:{ JSONException -> 0x02e7 }
if (r3 != 0) goto L_0x0229
java.lang.String r3 = "idfa"
java.lang.String r0 = r0.b     // Catch:{ JSONException -> 0x02e7 }
r4.put(r3, r0)     // Catch:{ JSONException -> 0x02e7 }
L_0x0229:
com.applovin.impl.sdk.n r0 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.o r0 = r0.O()     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.o$b r0 = r0.l()     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.n r3 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.c.b r5 = com.applovin.impl.sdk.c.b.dG     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r3 = r3.a(r5)     // Catch:{ JSONException -> 0x02e7 }
java.lang.Boolean r3 = (java.lang.Boolean) r3     // Catch:{ JSONException -> 0x02e7 }
boolean r3 = r3.booleanValue()     // Catch:{ JSONException -> 0x02e7 }
if (r3 == 0) goto L_0x025b
if (r0 == 0) goto L_0x025b
java.lang.Boolean r3 = java.lang.Boolean.TRUE     // Catch:{ JSONException -> 0x02e7 }
boolean r2 = r3.equals(r2)     // Catch:{ JSONException -> 0x02e7 }
if (r2 != 0) goto L_0x025b
java.lang.String r2 = "idfv"
java.lang.String r3 = r0.a     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r3)     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r2 = "idfv_scope"
int r0 = r0.b     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r0)     // Catch:{ JSONException -> 0x02e7 }
L_0x025b:
com.applovin.impl.sdk.n r0 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.sdk.AppLovinUserSegment r0 = r0.C()     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r0 = r0.getName()     // Catch:{ JSONException -> 0x02e7 }
boolean r2 = com.applovin.impl.sdk.utils.StringUtils.isValidString(r0)     // Catch:{ JSONException -> 0x02e7 }
if (r2 == 0) goto L_0x0276
java.lang.String r2 = "user_segment_name"
com.applovin.impl.sdk.n r3 = r1.f     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r0 = com.applovin.impl.sdk.utils.StringUtils.encodeUriString(r0, r3)     // Catch:{ JSONException -> 0x02e7 }
r4.put(r2, r0)     // Catch:{ JSONException -> 0x02e7 }
L_0x0276:
com.applovin.impl.sdk.n r0 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.c.b r2 = com.applovin.impl.sdk.c.b.dJ     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r0 = r0.a(r2)     // Catch:{ JSONException -> 0x02e7 }
java.lang.Boolean r0 = (java.lang.Boolean) r0     // Catch:{ JSONException -> 0x02e7 }
boolean r0 = r0.booleanValue()     // Catch:{ JSONException -> 0x02e7 }
if (r0 == 0) goto L_0x0291
java.lang.String r0 = "compass_random_token"
com.applovin.impl.sdk.n r2 = r1.f     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r2 = r2.o()     // Catch:{ JSONException -> 0x02e7 }
r4.put(r0, r2)     // Catch:{ JSONException -> 0x02e7 }
L_0x0291:
com.applovin.impl.sdk.n r0 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.c.b r2 = com.applovin.impl.sdk.c.b.dL     // Catch:{ JSONException -> 0x02e7 }
java.lang.Object r0 = r0.a(r2)     // Catch:{ JSONException -> 0x02e7 }
java.lang.Boolean r0 = (java.lang.Boolean) r0     // Catch:{ JSONException -> 0x02e7 }
boolean r0 = r0.booleanValue()     // Catch:{ JSONException -> 0x02e7 }
if (r0 == 0) goto L_0x02ac
java.lang.String r0 = "applovin_random_token"
com.applovin.impl.sdk.n r2 = r1.f     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r2 = r2.p()     // Catch:{ JSONException -> 0x02e7 }
r4.put(r0, r2)     // Catch:{ JSONException -> 0x02e7 }
L_0x02ac:
com.applovin.impl.sdk.n r0 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.mediation.debugger.ui.testmode.c r0 = r0.ap()     // Catch:{ JSONException -> 0x02e7 }
boolean r0 = r0.a()     // Catch:{ JSONException -> 0x02e7 }
if (r0 == 0) goto L_0x02bd
java.lang.String r0 = "test_mode"
r4.put(r0, r6)     // Catch:{ JSONException -> 0x02e7 }
L_0x02bd:
com.applovin.impl.sdk.n r0 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.mediation.debugger.ui.testmode.c r0 = r0.ap()     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r0 = r0.c()     // Catch:{ JSONException -> 0x02e7 }
boolean r2 = com.applovin.impl.sdk.utils.StringUtils.isValidString(r0)     // Catch:{ JSONException -> 0x02e7 }
if (r2 == 0) goto L_0x02d2
java.lang.String r2 = "test_mode_network"
r4.put(r2, r0)     // Catch:{ JSONException -> 0x02e7 }
L_0x02d2:
org.json.JSONObject r0 = new org.json.JSONObject     // Catch:{ JSONException -> 0x02e7 }
com.applovin.impl.sdk.n r2 = r1.f     // Catch:{ JSONException -> 0x02e7 }
com.applovin.sdk.AppLovinSdkSettings r2 = r2.B()     // Catch:{ JSONException -> 0x02e7 }
java.util.Map r2 = r2.getExtraParameters()     // Catch:{ JSONException -> 0x02e7 }
r0.<init>(r2)     // Catch:{ JSONException -> 0x02e7 }
java.lang.String r2 = "sdk_extra_parameters"
r4.put(r2, r0)     // Catch:{ JSONException -> 0x02e7 }
goto L_0x02f7
L_0x02e7:
r0 = move-exception
boolean r2 = com.applovin.impl.sdk.v.a()
if (r2 == 0) goto L_0x02f7
com.applovin.impl.sdk.v r2 = r1.h
java.lang.String r3 = r1.g
java.lang.String r5 = "Failed to construct JSON body"
r2.b(r3, r5, r0)
L_0x02f7:
return r4
*/
throw new UnsupportedOperationException("Method not decompiled: com.applovin.impl.sdk.e.i.b():org.json.JSONObject");
}

public void run() {
if (!h.i() && a.compareAndSet(false, true)) {
try {
ProviderInstaller.installIfNeeded(n.x());
} catch (Throwable th) {
if (v.a()) {
this.h.b(this.g, "Cannot update security provider", th);
}
}
}
Map<String, String> a2 = a();
c.a c2 = c.a(this.f).a(c()).c(h()).a(a2).a(b()).d(((Boolean) this.f.a(b.eP)).booleanValue()).b("POST").a(new JSONObject()).a(((Integer) this.f.a(b.do)).intValue()).c(((Integer) this.f.a(b.dr)).intValue());
n nVar = this.f;
b bVar = b.dn;
c a3 = c2.b(((Integer) nVar.a(bVar)).intValue()).a();
this.f.K().a((a) new b(this, this.f), o.a.b, ((long) ((Integer) this.f.a(bVar)).intValue()) + 250);
1 r1 = new 1(this, a3, this.f, g());
r1.a(b.bd);
r1.b(b.be);
this.f.K().a((a) r1);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\j.java

package com.applovin.impl.sdk.e;

import com.applovin.impl.sdk.ad.b;
import com.applovin.impl.sdk.ad.d;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.utils.CollectionUtils;
import com.applovin.sdk.AppLovinAdLoadListener;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public class j extends k {
private final List<String> b;

public j(List<String> list, AppLovinAdLoadListener appLovinAdLoadListener, n nVar) {
super(d.a(a(list)), appLovinAdLoadListener, "TaskFetchMultizoneAd", nVar);
this.b = Collections.unmodifiableList(list);
}

private static String a(List<String> list) {
if (list != null && !list.isEmpty()) {
return list.get(0);
}
throw new IllegalArgumentException("No zone identifiers specified");
}

public Map<String, String> a() {
Map<String, String> map = CollectionUtils.map(1);
List<String> list = this.b;
map.put("zone_ids", CollectionUtils.implode(list, list.size()));
return map;
}

public b h() {
return b.d;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\k.java

package com.applovin.impl.sdk.e;

import com.applovin.impl.sdk.AppLovinError;
import com.applovin.impl.sdk.ad.d;
import com.applovin.impl.sdk.ad.h;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.utils.i;
import com.applovin.sdk.AppLovinAdLoadListener;
import org.json.JSONObject;

public class k extends h {
private final AppLovinAdLoadListener b;

public k(d dVar, AppLovinAdLoadListener appLovinAdLoadListener, n nVar) {
this(dVar, appLovinAdLoadListener, "TaskFetchNextAd", nVar);
}

public k(d dVar, AppLovinAdLoadListener appLovinAdLoadListener, String str, n nVar) {
super(dVar, str, nVar);
this.b = appLovinAdLoadListener;
}

public a a(JSONObject jSONObject) {
return new p(jSONObject, this.a, h(), this.b, this.f);
}

public void a(int i, String str) {
super.a(i, str);
AppLovinAdLoadListener appLovinAdLoadListener = this.b;
if (appLovinAdLoadListener instanceof h) {
this.b.failedToReceiveAdV2(new AppLovinError(i, str));
return;
}
appLovinAdLoadListener.failedToReceiveAd(i);
}

public String b() {
return i.h(this.f);
}

public String c() {
return i.i(this.f);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\l.java

package com.applovin.impl.sdk.e;

import com.applovin.impl.sdk.ad.b;
import com.applovin.impl.sdk.ad.c;
import com.applovin.impl.sdk.ad.d;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.utils.CollectionUtils;
import com.applovin.sdk.AppLovinAdLoadListener;
import java.util.Map;

public class l extends k {
private final c b;

public l(c cVar, AppLovinAdLoadListener appLovinAdLoadListener, n nVar) {
super(d.a("adtoken_zone"), appLovinAdLoadListener, "TaskFetchTokenAd", nVar);
this.b = cVar;
}

public Map<String, String> a() {
Map<String, String> map = CollectionUtils.map(2);
map.put("adtoken", this.b.a());
map.put("adtoken_prefix", this.b.c());
return map;
}

public b h() {
return b.e;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\m.java

package com.applovin.impl.sdk.e;

import com.applovin.impl.sdk.c.b;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.network.c;
import com.applovin.impl.sdk.utils.Utils;
import com.applovin.impl.sdk.utils.i;
import java.util.Map;
import org.json.JSONObject;

public class m extends a {
/* access modifiers changed from: private */
public final a a;

public m(n nVar, a aVar) {
super("TaskFetchVariables", nVar);
this.a = aVar;
}

private Map<String, String> a() {
return Utils.stringifyObjectMap(this.f.O().a((Map) null, false, false));
}

public void run() {
1 r1 = new 1(this, c.a(this.f).a(i.l(this.f)).c(i.m(this.f)).a(a()).b("GET").a(new JSONObject()).b(((Integer) this.f.a(b.ds)).intValue()).a(), this.f);
r1.a(b.bl);
r1.b(b.bm);
this.f.K().a((a) r1);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\n.java

package com.applovin.impl.sdk.e;

import android.app.Activity;
import android.support.v4.media.a;
import com.applovin.impl.sdk.array.TfY.tSunVnGU;
import com.applovin.impl.sdk.c.b;
import com.applovin.impl.sdk.e;
import com.applovin.impl.sdk.e.o;
import com.applovin.impl.sdk.k;
import com.applovin.impl.sdk.utils.Utils;
import com.applovin.impl.sdk.utils.l;
import com.applovin.impl.sdk.utils.q;
import com.applovin.impl.sdk.v;
import com.applovin.sdk.AppLovinSdk;
import java.util.Map;
import java.util.concurrent.TimeUnit;

public class n extends a {
/* access modifiers changed from: private */
public final com.applovin.impl.sdk.n a;

public n(com.applovin.impl.sdk.n nVar) {
super("TaskInitializeSdk", nVar);
this.a = nVar;
}

private void a() {
if (!this.a.ai().a()) {
Activity w = this.a.w();
if (w != null) {
this.a.ai().a(w);
} else {
this.a.K().a((a) new z(this.a, true, new 2(this)), o.a.a, TimeUnit.SECONDS.toMillis(1));
}
}
}

private void b() {
if (!this.a.e()) {
boolean d = this.a.L().d();
String p = d ? a.p(new StringBuilder(), this.a.O().k().b, tSunVnGU.xkX) : "<Enable verbose logging to see the GAID to use for test devices - https://monetization-support.applovin.com/hc/en-us/articles/236114328-How-can-I-expose-verbose-logging-for-the-SDK>";
Map d2 = this.a.O().d();
Map c = this.a.O().c();
l lVar = new l();
lVar.a().a("=====AppLovin SDK=====");
lVar.a("===SDK Versions===").a("Version", AppLovinSdk.VERSION).a("Plugin Version", this.a.a(b.dR)).a("Ad Review Version", e.a()).a("OM SDK Version", this.a.ab().c());
lVar.a("===Device Info===").a("OS", Utils.getAndroidOSInfo()).a("GAID", p).a("Model", d2.get("model")).a("Locale", d2.get("locale")).a("Emulator", d2.get("sim")).a("Tablet", d2.get("is_tablet"));
lVar.a("===App Info===").a("Application ID", c.get("package_name")).a("Target SDK", c.get("target_sdk")).a("ExoPlayer Version", Integer.valueOf(Utils.getExoPlayerVersionCode()));
lVar.a("===SDK Settings===").a("SDK Key", this.a.A()).a("Mediation Provider", this.a.r()).a("TG", q.a(this.a)).a("AEI", this.a.a(b.az)).a("MEI", this.a.a(b.aA)).a("Test Mode On", Boolean.valueOf(this.a.ap().a())).a("Verbose Logging On", Boolean.valueOf(d));
lVar.a("===Privacy States===\nPlease review AppLovin MAX documentation to be compliant with regional privacy policies.").a(k.a(f()));
lVar.a();
v.f("AppLovinSdk", lVar.toString());
}
}

/* JADX WARNING: Code restructure failed: missing block: B:27:0x0170, code lost:
if (r12.a.d() != false) goto L_0x01cd;
*/
/* JADX WARNING: Code restructure failed: missing block: B:38:0x01c9, code lost:
if (r12.a.d() != false) goto L_0x01cd;
*/
/* JADX WARNING: Code restructure failed: missing block: B:39:0x01cc, code lost:
r2 = "failed";
*/
/* JADX WARNING: Code restructure failed: missing block: B:40:0x01cd, code lost:
r5.append(r2);
r5.append(" in ");
r5.append(java.lang.System.currentTimeMillis() - r6);
r5.append("ms");
r8.b(r9, r5.toString());
*/
/* JADX WARNING: Code restructure failed: missing block: B:52:?, code lost:
return;
*/
/* Code decompiled incorrectly, please refer to instructions dump. */
public void run() {
/*
r12 = this;
java.lang.String r0 = "ms"
java.lang.String r1 = " in "
java.lang.String r2 = "succeeded"
java.lang.String r3 = "failed"
java.lang.String r4 = " initialization "
java.lang.String r5 = "AppLovin SDK "
long r6 = java.lang.System.currentTimeMillis()
boolean r8 = com.applovin.impl.sdk.v.a()
if (r8 == 0) goto L_0x0031
com.applovin.impl.sdk.v r8 = r12.h
java.lang.String r9 = r12.g
java.lang.String r10 = "Initializing AppLovin SDK v"
java.lang.StringBuilder r10 = android.support.v4.media.b.q(r10)
java.lang.String r11 = com.applovin.sdk.AppLovinSdk.VERSION
r10.append(r11)
java.lang.String r11 = "..."
r10.append(r11)
java.lang.String r10 = r10.toString()
r8.b(r9, r10)
L_0x0031:
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.d.g r8 = r8.N()     // Catch:{ all -> 0x0173 }
r8.d()     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.d.g r8 = r8.N()     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.d.f r9 = com.applovin.impl.sdk.d.f.e     // Catch:{ all -> 0x0173 }
r8.c(r9)     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.d.g r8 = r8.N()     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.d.f r9 = com.applovin.impl.sdk.d.f.f     // Catch:{ all -> 0x0173 }
r8.c(r9)     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.r r8 = r8.S()     // Catch:{ all -> 0x0173 }
android.content.Context r9 = r12.f()     // Catch:{ all -> 0x0173 }
r8.a(r9)     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.r r8 = r8.S()     // Catch:{ all -> 0x0173 }
android.content.Context r9 = r12.f()     // Catch:{ all -> 0x0173 }
r8.b(r9)     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.e.o r8 = r8.K()     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.e.b r9 = new com.applovin.impl.sdk.e.b     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r10 = r12.a     // Catch:{ all -> 0x0173 }
r9.<init>(r10)     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.e.o$a r10 = com.applovin.impl.sdk.e.o.a.a     // Catch:{ all -> 0x0173 }
r8.a((com.applovin.impl.sdk.e.a) r9, (com.applovin.impl.sdk.e.o.a) r10)     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.o r8 = r8.O()     // Catch:{ all -> 0x0173 }
r8.e()     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.utils.o r8 = r8.Y()     // Catch:{ all -> 0x0173 }
r8.a()     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.a.a.a r8 = r8.aa()     // Catch:{ all -> 0x0173 }
r8.a()     // Catch:{ all -> 0x0173 }
android.content.Context r8 = r12.f()     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r9 = r12.a     // Catch:{ all -> 0x0173 }
boolean r8 = com.applovin.impl.sdk.utils.Utils.isPubInDebugMode(r8, r9)     // Catch:{ all -> 0x0173 }
if (r8 == 0) goto L_0x00a8
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
r8.h()     // Catch:{ all -> 0x0173 }
L_0x00a8:
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.array.ArrayService r8 = r8.ad()     // Catch:{ all -> 0x0173 }
r8.collectAppHubData()     // Catch:{ all -> 0x0173 }
r12.b()     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.c.b r9 = com.applovin.impl.sdk.c.b.el     // Catch:{ all -> 0x0173 }
java.lang.Object r8 = r8.a(r9)     // Catch:{ all -> 0x0173 }
java.lang.Boolean r8 = (java.lang.Boolean) r8     // Catch:{ all -> 0x0173 }
boolean r8 = r8.booleanValue()     // Catch:{ all -> 0x0173 }
if (r8 == 0) goto L_0x00cc
com.applovin.impl.sdk.e.n$1 r8 = new com.applovin.impl.sdk.e.n$1     // Catch:{ all -> 0x0173 }
r8.<init>(r12)     // Catch:{ all -> 0x0173 }
com.applovin.sdk.AppLovinSdkUtils.runOnUiThread(r8)     // Catch:{ all -> 0x0173 }
L_0x00cc:
r12.a()     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
r9 = 1
r8.a(r9)     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.network.k r8 = r8.af()     // Catch:{ all -> 0x0173 }
r8.c()     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.EventServiceImpl r8 = r8.F()     // Catch:{ all -> 0x0173 }
r8.maybeTrackAppOpenEvent()     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.mediation.debugger.b r8 = r8.am()     // Catch:{ all -> 0x0173 }
boolean r8 = r8.b()     // Catch:{ all -> 0x0173 }
if (r8 == 0) goto L_0x00fb
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
boolean r8 = r8.e()     // Catch:{ all -> 0x0173 }
if (r8 == 0) goto L_0x011f
L_0x00fb:
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.c.b r9 = com.applovin.impl.sdk.c.a.h     // Catch:{ all -> 0x0173 }
java.lang.Object r8 = r8.a(r9)     // Catch:{ all -> 0x0173 }
java.lang.Boolean r8 = (java.lang.Boolean) r8     // Catch:{ all -> 0x0173 }
boolean r8 = r8.booleanValue()     // Catch:{ all -> 0x0173 }
if (r8 == 0) goto L_0x0128
android.content.Context r8 = com.applovin.impl.sdk.n.x()     // Catch:{ all -> 0x0173 }
com.applovin.impl.sdk.n r9 = r12.a     // Catch:{ all -> 0x0173 }
boolean r8 = com.applovin.impl.sdk.utils.Utils.isPubInDebugMode(r8, r9)     // Catch:{ all -> 0x0173 }
if (r8 == 0) goto L_0x0128
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
boolean r8 = r8.f()     // Catch:{ all -> 0x0173 }
if (r8 == 0) goto L_0x0128
L_0x011f:
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x0173 }
com.applovin.impl.mediation.debugger.b r8 = r8.am()     // Catch:{ all -> 0x0173 }
r8.a()     // Catch:{ all -> 0x0173 }
L_0x0128:
com.applovin.impl.sdk.n r8 = r12.a
com.applovin.impl.sdk.a.f r8 = r8.ab()
r8.a()
com.applovin.impl.sdk.n r8 = r12.a
com.applovin.impl.sdk.c.b r9 = com.applovin.impl.sdk.c.b.aN
java.lang.Object r8 = r8.a(r9)
java.lang.Boolean r8 = (java.lang.Boolean) r8
boolean r8 = r8.booleanValue()
if (r8 == 0) goto L_0x0154
com.applovin.impl.sdk.n r8 = r12.a
com.applovin.impl.sdk.c.b r9 = com.applovin.impl.sdk.c.b.aO
java.lang.Object r8 = r8.a(r9)
java.lang.Long r8 = (java.lang.Long) r8
long r8 = r8.longValue()
com.applovin.impl.sdk.n r10 = r12.a
r10.a(r8)
L_0x0154:
boolean r8 = com.applovin.impl.sdk.v.a()
if (r8 == 0) goto L_0x01e5
com.applovin.impl.sdk.v r8 = r12.h
java.lang.String r9 = r12.g
java.lang.StringBuilder r5 = android.support.v4.media.b.q(r5)
java.lang.String r10 = com.applovin.sdk.AppLovinSdk.VERSION
r5.append(r10)
r5.append(r4)
com.applovin.impl.sdk.n r4 = r12.a
boolean r4 = r4.d()
if (r4 == 0) goto L_0x01cc
goto L_0x01cd
L_0x0173:
r8 = move-exception
java.lang.String r9 = "AppLovinSdk"
java.lang.String r10 = "Failed to initialize SDK!"
com.applovin.impl.sdk.v.c(r9, r10, r8)     // Catch:{ all -> 0x01e6 }
com.applovin.impl.sdk.n r8 = r12.a     // Catch:{ all -> 0x01e6 }
r9 = 0
r8.a(r9)     // Catch:{ all -> 0x01e6 }
com.applovin.impl.sdk.n r8 = r12.a
com.applovin.impl.sdk.a.f r8 = r8.ab()
r8.a()
com.applovin.impl.sdk.n r8 = r12.a
com.applovin.impl.sdk.c.b r9 = com.applovin.impl.sdk.c.b.aN
java.lang.Object r8 = r8.a(r9)
java.lang.Boolean r8 = (java.lang.Boolean) r8
boolean r8 = r8.booleanValue()
if (r8 == 0) goto L_0x01ad
com.applovin.impl.sdk.n r8 = r12.a
com.applovin.impl.sdk.c.b r9 = com.applovin.impl.sdk.c.b.aO
java.lang.Object r8 = r8.a(r9)
java.lang.Long r8 = (java.lang.Long) r8
long r8 = r8.longValue()
com.applovin.impl.sdk.n r10 = r12.a
r10.a(r8)
L_0x01ad:
boolean r8 = com.applovin.impl.sdk.v.a()
if (r8 == 0) goto L_0x01e5
com.applovin.impl.sdk.v r8 = r12.h
java.lang.String r9 = r12.g
java.lang.StringBuilder r5 = android.support.v4.media.b.q(r5)
java.lang.String r10 = com.applovin.sdk.AppLovinSdk.VERSION
r5.append(r10)
r5.append(r4)
com.applovin.impl.sdk.n r4 = r12.a
boolean r4 = r4.d()
if (r4 == 0) goto L_0x01cc
goto L_0x01cd
L_0x01cc:
r2 = r3
L_0x01cd:
r5.append(r2)
r5.append(r1)
long r1 = java.lang.System.currentTimeMillis()
long r1 = r1 - r6
r5.append(r1)
r5.append(r0)
java.lang.String r0 = r5.toString()
r8.b(r9, r0)
L_0x01e5:
return
L_0x01e6:
r8 = move-exception
com.applovin.impl.sdk.n r9 = r12.a
com.applovin.impl.sdk.a.f r9 = r9.ab()
r9.a()
com.applovin.impl.sdk.n r9 = r12.a
com.applovin.impl.sdk.c.b r10 = com.applovin.impl.sdk.c.b.aN
java.lang.Object r9 = r9.a(r10)
java.lang.Boolean r9 = (java.lang.Boolean) r9
boolean r9 = r9.booleanValue()
if (r9 == 0) goto L_0x0213
com.applovin.impl.sdk.n r9 = r12.a
com.applovin.impl.sdk.c.b r10 = com.applovin.impl.sdk.c.b.aO
java.lang.Object r9 = r9.a(r10)
java.lang.Long r9 = (java.lang.Long) r9
long r9 = r9.longValue()
com.applovin.impl.sdk.n r11 = r12.a
r11.a(r9)
L_0x0213:
boolean r9 = com.applovin.impl.sdk.v.a()
if (r9 == 0) goto L_0x024b
com.applovin.impl.sdk.v r9 = r12.h
java.lang.String r10 = r12.g
java.lang.StringBuilder r5 = android.support.v4.media.b.q(r5)
java.lang.String r11 = com.applovin.sdk.AppLovinSdk.VERSION
r5.append(r11)
r5.append(r4)
com.applovin.impl.sdk.n r4 = r12.a
boolean r4 = r4.d()
if (r4 == 0) goto L_0x0232
goto L_0x0233
L_0x0232:
r2 = r3
L_0x0233:
r5.append(r2)
r5.append(r1)
long r1 = java.lang.System.currentTimeMillis()
long r1 = r1 - r6
r5.append(r1)
r5.append(r0)
java.lang.String r0 = r5.toString()
r9.b(r10, r0)
L_0x024b:
throw r8
*/
throw new UnsupportedOperationException("Method not decompiled: com.applovin.impl.sdk.e.n.run():void");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\o.java

package com.applovin.impl.sdk.e;

import android.support.v4.media.a;
import com.applovin.impl.sdk.c.b;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.utils.Utils;
import com.applovin.impl.sdk.utils.f;
import com.applovin.impl.sdk.v;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

public class o {
private static final ExecutorService a = Executors.newFixedThreadPool(4);
/* access modifiers changed from: private */
public final n b;
/* access modifiers changed from: private */
public final v c;
private final ScheduledThreadPoolExecutor d;
/* access modifiers changed from: private */
public final ScheduledThreadPoolExecutor e;
private final List<c> f = new ArrayList(5);
private final Object g = new Object();
private boolean h;

public o(n nVar) {
this.b = nVar;
this.c = nVar.J();
this.d = a("auxiliary_operations", ((Integer) nVar.a(b.cr)).intValue());
this.e = a("shared_thread_pool", ((Integer) nVar.a(b.au)).intValue());
}

private ScheduledThreadPoolExecutor a(String str, int i) {
return new ScheduledThreadPoolExecutor(i, new b(this, str));
}

private void a(Runnable runnable, long j2, boolean z) {
if (j2 <= 0) {
this.e.submit(runnable);
} else if (z) {
f.a(j2, this.b, new 1(this, runnable));
} else {
this.e.schedule(runnable, j2, TimeUnit.MILLISECONDS);
}
}

private boolean a(c cVar) {
if (c.a(cVar).g()) {
return false;
}
synchronized (this.g) {
if (this.h) {
return false;
}
this.f.add(cVar);
return true;
}
}

public void a(a aVar) {
if (aVar != null) {
try {
if (!Utils.isMainThread() || !((Boolean) this.b.a(b.fy)).booleanValue()) {
aVar.run();
} else {
this.e.submit(aVar);
}
} catch (Throwable th) {
if (v.a()) {
this.c.b(aVar.e(), "Task failed execution", th);
}
}
} else if (v.a()) {
this.c.e("TaskManager", "Attempted to execute null task immediately");
}
}

public void a(a aVar, a aVar2) {
a(aVar, aVar2, 0);
}

public void a(a aVar, a aVar2, long j2) {
a(aVar, aVar2, j2, false);
}

public void a(a aVar, a aVar2, long j2, boolean z) {
if (aVar == null) {
throw new IllegalArgumentException("No task specified");
} else if (j2 < 0) {
throw new IllegalArgumentException(a.i("Invalid delay (millis) specified: ", j2));
} else if (!a(new c(this.b, aVar, aVar2))) {
a((Runnable) aVar, j2, z);
} else if (v.a()) {
this.c.c(aVar.e(), "Task execution delayed until after init");
}
}

public void a(Runnable runnable) {
this.d.submit(runnable);
}

public boolean a() {
return this.h;
}

public Executor b() {
return this.e;
}

public ExecutorService c() {
return a;
}

public void d() {
synchronized (this.g) {
this.h = false;
}
}

public void e() {
synchronized (this.g) {
this.h = true;
for (c next : this.f) {
a(c.a(next), c.b(next));
}
this.f.clear();
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\p.java

package com.applovin.impl.sdk.e;

import androidx.dynamicanimation.TV.pbKVib;
import com.applovin.impl.sdk.AppLovinError;
import com.applovin.impl.sdk.ad.b;
import com.applovin.impl.sdk.ad.d;
import com.applovin.impl.sdk.ad.h;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.utils.JsonUtils;
import com.applovin.impl.sdk.utils.Utils;
import com.applovin.impl.sdk.v;
import com.applovin.sdk.AppLovinAd;
import com.applovin.sdk.AppLovinAdLoadListener;
import com.google.firebase.installations.interop.BuildConfig;
import org.json.JSONArray;
import org.json.JSONObject;

public class p extends a implements h {
private final JSONObject a;
private final d b;
private final b c;
private final AppLovinAdLoadListener d;

public p(JSONObject jSONObject, d dVar, b bVar, AppLovinAdLoadListener appLovinAdLoadListener, n nVar) {
super("TaskProcessAdResponse", nVar);
if (jSONObject == null) {
throw new IllegalArgumentException("No response specified");
} else if (dVar != null) {
this.a = jSONObject;
this.b = dVar;
this.c = bVar;
this.d = appLovinAdLoadListener;
} else {
throw new IllegalArgumentException("No zone specified");
}
}

/* JADX WARNING: type inference failed for: r0v2, types: [com.applovin.impl.sdk.e.a] */
/* JADX WARNING: type inference failed for: r3v3, types: [com.applovin.impl.sdk.e.q] */
/* JADX WARNING: type inference failed for: r3v4, types: [com.applovin.impl.sdk.e.s] */
/* JADX WARNING: Multi-variable type inference failed */
/* Code decompiled incorrectly, please refer to instructions dump. */
private void a(org.json.JSONObject r10) {
/*
r9 = this;
java.lang.String r0 = "type"
java.lang.String r1 = "undefined"
java.lang.String r0 = com.applovin.impl.sdk.utils.JsonUtils.getString(r10, r0, r1)
java.lang.String r1 = "applovin"
boolean r1 = r1.equalsIgnoreCase(r0)
if (r1 == 0) goto L_0x002e
boolean r0 = com.applovin.impl.sdk.v.a()
if (r0 == 0) goto L_0x001f
com.applovin.impl.sdk.v r0 = r9.h
java.lang.String r1 = r9.g
java.lang.String r2 = "Starting task for AppLovin ad..."
r0.b(r1, r2)
L_0x001f:
com.applovin.impl.sdk.e.s r0 = new com.applovin.impl.sdk.e.s
org.json.JSONObject r5 = r9.a
com.applovin.impl.sdk.ad.b r6 = r9.c
com.applovin.impl.sdk.n r8 = r9.f
r3 = r0
r4 = r10
r7 = r9
r3.<init>(r4, r5, r6, r7, r8)
goto L_0x007e
L_0x002e:
java.lang.String r1 = "vast"
boolean r1 = r1.equalsIgnoreCase(r0)
if (r1 == 0) goto L_0x0059
boolean r0 = com.applovin.impl.sdk.v.a()
if (r0 == 0) goto L_0x0045
com.applovin.impl.sdk.v r0 = r9.h
java.lang.String r1 = r9.g
java.lang.String r2 = "Starting task for VAST ad..."
r0.b(r1, r2)
L_0x0045:
org.json.JSONObject r0 = r9.a
com.applovin.impl.sdk.ad.b r1 = r9.c
com.applovin.impl.sdk.n r2 = r9.f
com.applovin.impl.sdk.e.r r10 = com.applovin.impl.sdk.e.r.a(r10, r0, r1, r9, r2)
com.applovin.impl.sdk.n r0 = r9.f
com.applovin.impl.sdk.e.o r0 = r0.K()
r0.a((com.applovin.impl.sdk.e.a) r10)
goto L_0x00b6
L_0x0059:
java.lang.String r1 = "js_tag"
boolean r1 = r1.equalsIgnoreCase(r0)
if (r1 == 0) goto L_0x0088
boolean r0 = com.applovin.impl.sdk.v.a()
if (r0 == 0) goto L_0x0070
com.applovin.impl.sdk.v r0 = r9.h
java.lang.String r1 = r9.g
java.lang.String r2 = "Starting task for JS tag ad..."
r0.b(r1, r2)
L_0x0070:
com.applovin.impl.sdk.e.q r0 = new com.applovin.impl.sdk.e.q
org.json.JSONObject r5 = r9.a
com.applovin.impl.sdk.ad.b r6 = r9.c
com.applovin.impl.sdk.n r8 = r9.f
r3 = r0
r4 = r10
r7 = r9
r3.<init>(r4, r5, r6, r7, r8)
L_0x007e:
com.applovin.impl.sdk.n r10 = r9.f
com.applovin.impl.sdk.e.o r10 = r10.K()
r10.a((com.applovin.impl.sdk.e.a) r0)
goto L_0x00b6
L_0x0088:
boolean r10 = com.applovin.impl.sdk.v.a()
if (r10 == 0) goto L_0x00a6
com.applovin.impl.sdk.v r10 = r9.h
java.lang.String r1 = r9.g
java.lang.StringBuilder r2 = new java.lang.StringBuilder
r2.<init>()
java.lang.String r3 = "Unable to process ad of unknown type: "
r2.append(r3)
r2.append(r0)
java.lang.String r2 = r2.toString()
r10.e(r1, r2)
L_0x00a6:
com.applovin.impl.sdk.AppLovinError r10 = new com.applovin.impl.sdk.AppLovinError
r1 = -800(0xfffffffffffffce0, float:NaN)
java.lang.String r2 = "Unknown ad type: "
java.lang.String r0 = android.support.v4.media.b.k(r2, r0)
r10.<init>(r1, r0)
r9.failedToReceiveAdV2(r10)
L_0x00b6:
return
*/
throw new UnsupportedOperationException("Method not decompiled: com.applovin.impl.sdk.e.p.a(org.json.JSONObject):void");
}

public void adReceived(AppLovinAd appLovinAd) {
AppLovinAdLoadListener appLovinAdLoadListener = this.d;
if (appLovinAdLoadListener != null) {
appLovinAdLoadListener.adReceived(appLovinAd);
}
}

public void failedToReceiveAd(int i) {
failedToReceiveAdV2(new AppLovinError(i, BuildConfig.FLAVOR));
}

public void failedToReceiveAdV2(AppLovinError appLovinError) {
h hVar = this.d;
if (hVar != null) {
if (hVar instanceof h) {
hVar.failedToReceiveAdV2(appLovinError);
} else {
hVar.failedToReceiveAd(appLovinError.getCode());
}
}
}

public void run() {
JSONArray jSONArray = JsonUtils.getJSONArray(this.a, "ads", new JSONArray());
if (jSONArray.length() > 0) {
if (v.a()) {
this.h.b(this.g, pbKVib.txnQVpsvfHLOk);
}
a(JsonUtils.getJSONObject(jSONArray, 0, new JSONObject()));
return;
}
if (v.a()) {
this.h.d(this.g, "No ads were returned from the server");
}
Utils.maybeHandleNoFillResponseForPublisher(this.b.a(), this.b.b(), this.a, this.f);
failedToReceiveAdV2(AppLovinError.NO_FILL);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\q.java

package com.applovin.impl.sdk.e;

import com.applovin.impl.adview.d;
import com.applovin.impl.mediation.h;
import com.applovin.impl.sdk.ad.a;
import com.applovin.impl.sdk.ad.b;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.v;
import com.applovin.sdk.AppLovinAdLoadListener;
import com.applovin.sdk.AppLovinSdkUtils;
import org.json.JSONObject;

public class q extends a implements h.a {
/* access modifiers changed from: private */
public final a a;
/* access modifiers changed from: private */
public AppLovinAdLoadListener b;
/* access modifiers changed from: private */
public d c;

public q(JSONObject jSONObject, JSONObject jSONObject2, b bVar, AppLovinAdLoadListener appLovinAdLoadListener, n nVar) {
super("TaskProcessJavaScriptTagAd", nVar);
this.a = new a(jSONObject, jSONObject2, bVar, nVar);
this.b = appLovinAdLoadListener;
nVar.al().a(this);
}

public void a(com.applovin.impl.mediation.a.a aVar) {
if (aVar.f().equalsIgnoreCase(this.a.N())) {
this.f.al().b(this);
AppLovinAdLoadListener appLovinAdLoadListener = this.b;
if (appLovinAdLoadListener != null) {
appLovinAdLoadListener.adReceived(this.a);
this.b = null;
}
}
}

public void run() {
if (v.a()) {
v vVar = this.h;
String str = this.g;
StringBuilder q = android.support.v4.media.b.q("Rendering AppLovin ad #");
q.append(this.a.getAdIdNumber());
vVar.b(str, q.toString());
}
AppLovinSdkUtils.runOnUiThread(new 1(this));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\r.java

package com.applovin.impl.sdk.e;

import androidx.annotation.Nullable;
import com.applovin.impl.b.e;
import com.applovin.impl.b.f;
import com.applovin.impl.b.m;
import com.applovin.impl.sdk.ad.b;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.utils.s;
import com.applovin.impl.sdk.utils.t;
import com.applovin.impl.sdk.v;
import com.applovin.sdk.AppLovinAdLoadListener;
import org.json.JSONObject;

public abstract class r extends a {
private final AppLovinAdLoadListener a;
private final a b;

public r(e eVar, AppLovinAdLoadListener appLovinAdLoadListener, n nVar) {
super("TaskProcessVastResponse", nVar);
if (eVar != null) {
this.a = appLovinAdLoadListener;
this.b = (a) eVar;
return;
}
throw new IllegalArgumentException("No context specified.");
}

public static r a(s sVar, e eVar, AppLovinAdLoadListener appLovinAdLoadListener, n nVar) {
return new d(sVar, eVar, appLovinAdLoadListener, nVar);
}

public static r a(String str, JSONObject jSONObject, JSONObject jSONObject2, b bVar, AppLovinAdLoadListener appLovinAdLoadListener, n nVar) {
return new b(str, new a(jSONObject, jSONObject2, bVar, nVar), appLovinAdLoadListener, nVar);
}

public static r a(JSONObject jSONObject, JSONObject jSONObject2, b bVar, AppLovinAdLoadListener appLovinAdLoadListener, n nVar) {
return new c(new a(jSONObject, jSONObject2, bVar, nVar), appLovinAdLoadListener, nVar);
}

@Nullable
public s a(String str) {
try {
return t.a(str, this.f);
} catch (Throwable th) {
if (v.a()) {
this.h.b(this.g, "Failed to process VAST response", th);
}
a(f.e);
return null;
}
}

public void a(f fVar) {
if (v.a()) {
v vVar = this.h;
String str = this.g;
vVar.e(str, "Failed to process VAST response due to VAST error code " + fVar);
}
m.a(this.b, this.a, fVar, -6, this.f);
}

public void a(s sVar) {
f fVar;
x xVar;
int a2 = this.b.a();
if (v.a()) {
v vVar = this.h;
String str = this.g;
vVar.b(str, "Finished parsing XML at depth " + a2);
}
this.b.a(sVar);
if (m.a(sVar)) {
int intValue = ((Integer) this.f.a(com.applovin.impl.sdk.c.b.eA)).intValue();
if (a2 < intValue) {
if (v.a()) {
this.h.b(this.g, "VAST response is wrapper. Resolving...");
}
xVar = new x(this.b, this.a, this.f);
} else {
if (v.a()) {
v vVar2 = this.h;
String str2 = this.g;
vVar2.e(str2, "Reached beyond max wrapper depth of " + intValue);
}
fVar = f.h;
a(fVar);
return;
}
} else if (m.b(sVar)) {
if (v.a()) {
this.h.b(this.g, "VAST response is inline. Rendering ad...");
}
xVar = new t(this.b, this.a, this.f);
} else {
if (v.a()) {
this.h.e(this.g, "VAST response is an error");
}
fVar = f.i;
a(fVar);
return;
}
this.f.K().a((a) xVar);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\e\s.java

package com.applovin.impl.sdk.e;

import com.applovin.impl.sdk.ad.a;
import com.applovin.impl.sdk.ad.b;
import com.applovin.impl.sdk.e.o;
import com.applovin.impl.sdk.n;
import com.applovin.impl.sdk.utils.JsonUtils;
import com.applovin.impl.sdk.v;
import com.applovin.sdk.AppLovinAdLoadListener;
import com.applovin.sdk.AppLovinAdSize;
import com.applovin.sdk.AppLovinAdType;
import org.json.JSONObject;

public class s extends a {
private final JSONObject a;
private final JSONObject b;
private final AppLovinAdLoadListener c;
private final b d;

public s(JSONObject jSONObject, JSONObject jSONObject2, b bVar, AppLovinAdLoadListener appLovinAdLoadListener, n nVar) {
super("TaskRenderAppLovinAd", nVar);
this.a = jSONObject;
this.b = jSONObject2;
this.d = bVar;
this.c = appLovinAdLoadListener;
}

public void run() {
if (v.a()) {
this.h.b(this.g, "Rendering ad...");
}
a aVar = new a(this.a, this.b, this.d, this.f);
boolean booleanValue = JsonUtils.getBoolean(this.a, "gs_load_immediately", Boolean.FALSE).booleanValue();
boolean booleanValue2 = JsonUtils.getBoolean(this.a, "vs_load_immediately", Boolean.TRUE).booleanValue();
d dVar = new d(aVar, this.f, this.c);
dVar.a(booleanValue2);
dVar.b(booleanValue);
o.a aVar2 = o.a.h;
if (((Boolean) this.f.a(com.applovin.impl.sdk.c.b.bw)).booleanValue()) {
AppLovinAdSize size = aVar.getSize();
AppLovinAdSize appLovinAdSize = AppLovinAdSize.INTERSTITIAL;
if (size == appLovinAdSize && aVar.getType() == AppLovinAdType.REGULAR) {
aVar2 = o.a.f;
} else if (aVar.getSize() == appLovinAdSize && aVar.getType() == AppLovinAdType.INCENTIVIZED) {
aVar2 = o.a.g;
}
}
this.f.K().a((a) dVar, aVar2);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\nativeAd\AppLovinNativeAdImpl$1.java

package com.applovin.impl.sdk.nativeAd;

import com.applovin.impl.adview.d;

public class AppLovinNativeAdImpl$1 implements Runnable {
public final /* synthetic */ d a;
public final /* synthetic */ AppLovinNativeAdImpl b;

public AppLovinNativeAdImpl$1(AppLovinNativeAdImpl appLovinNativeAdImpl, d dVar) {
this.b = appLovinNativeAdImpl;
this.a = dVar;
}

public void run() {
this.a.stopLoading();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\impl\sdk\utils\j$a.java

package com.applovin.impl.sdk.utils;

public interface j$a {
void d();

void e();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\mediation\adapter\parameters\MaxAdapterResponseParameters.java

package com.applovin.mediation.adapter.parameters;

public interface MaxAdapterResponseParameters extends MaxAdapterParameters {
long getBidExpirationMillis();

String getBidResponse();

String getThirdPartyAdPlacementId();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\mediation\adapters\AppLovinAdapterRewardedInterstitialListener.java

package com.applovin.mediation.adapters;

import com.applovin.impl.sdk.AppLovinError;
import com.applovin.impl.sdk.ad.g;
import com.applovin.impl.sdk.ad.h;
import com.applovin.mediation.MaxReward;
import com.applovin.mediation.adapter.MaxAdapterError;
import com.applovin.mediation.adapter.listeners.MaxRewardedInterstitialAdapterListener;
import com.applovin.sdk.AppLovinAd;
import com.applovin.sdk.AppLovinAdClickListener;
import com.applovin.sdk.AppLovinAdRewardListener;
import com.applovin.sdk.AppLovinAdVideoPlaybackListener;
import com.google.firebase.installations.interop.BuildConfig;
import java.util.Map;

public class AppLovinAdapterRewardedInterstitialListener implements g, h, AppLovinAdClickListener, AppLovinAdRewardListener, AppLovinAdVideoPlaybackListener {
private boolean hasGrantedReward;
private final MaxRewardedInterstitialAdapterListener listener;
private final AppLovinMediationAdapter parentAdapter;

public AppLovinAdapterRewardedInterstitialListener(AppLovinMediationAdapter appLovinMediationAdapter, MaxRewardedInterstitialAdapterListener maxRewardedInterstitialAdapterListener) {
this.parentAdapter = appLovinMediationAdapter;
this.listener = maxRewardedInterstitialAdapterListener;
}

public void adClicked(AppLovinAd appLovinAd) {
this.parentAdapter.log("Rewarded interstitial ad clicked");
this.listener.onRewardedInterstitialAdClicked(AppLovinMediationAdapter.getExtraInfo(appLovinAd));
}

public void adDisplayed(AppLovinAd appLovinAd) {
this.parentAdapter.log("Rewarded interstitial ad shown");
this.listener.onRewardedInterstitialAdDisplayed();
}

public void adHidden(AppLovinAd appLovinAd) {
if (this.hasGrantedReward || this.parentAdapter.shouldAlwaysRewardUser()) {
MaxReward reward = this.parentAdapter.getReward();
AppLovinMediationAdapter appLovinMediationAdapter = this.parentAdapter;
appLovinMediationAdapter.log("Rewarded interstitial rewarded user with reward: " + reward);
this.listener.onUserRewarded(reward);
}
this.parentAdapter.log("Rewarded interstitial ad hidden");
this.listener.onRewardedInterstitialAdHidden(AppLovinMediationAdapter.getExtraInfo(appLovinAd));
}

public void adReceived(AppLovinAd appLovinAd) {
this.parentAdapter.log("Rewarded interstitial ad loaded");
this.parentAdapter.loadedRewardedInterstitialAd = appLovinAd;
this.listener.onRewardedInterstitialAdLoaded();
}

public void failedToReceiveAd(int i) {
failedToReceiveAdV2(new AppLovinError(i, BuildConfig.FLAVOR));
}

public void failedToReceiveAdV2(AppLovinError appLovinError) {
AppLovinMediationAdapter appLovinMediationAdapter = this.parentAdapter;
appLovinMediationAdapter.log("Rewarded interstitial ad failed to load with error: " + appLovinError);
this.listener.onRewardedInterstitialAdLoadFailed(AppLovinMediationAdapter.toMaxError(appLovinError));
}

public void onAdDisplayFailed(String str) {
AppLovinMediationAdapter appLovinMediationAdapter = this.parentAdapter;
appLovinMediationAdapter.log("Rewarded interstitial ad failed to display with error: " + str);
this.listener.onRewardedInterstitialAdDisplayFailed(new MaxAdapterError(-5200, str));
}

public void userOverQuota(AppLovinAd appLovinAd, Map<String, String> map) {
AppLovinMediationAdapter appLovinMediationAdapter = this.parentAdapter;
appLovinMediationAdapter.log("User is over quota: " + map);
}

public void userRewardRejected(AppLovinAd appLovinAd, Map<String, String> map) {
AppLovinMediationAdapter appLovinMediationAdapter = this.parentAdapter;
appLovinMediationAdapter.log("Reward rejected: " + map);
}

public void userRewardVerified(AppLovinAd appLovinAd, Map<String, String> map) {
this.parentAdapter.log("Reward verified");
}

public void validationRequestFailed(AppLovinAd appLovinAd, int i) {
AppLovinMediationAdapter appLovinMediationAdapter = this.parentAdapter;
appLovinMediationAdapter.log("Reward validation request failed with code: " + i);
}

public void videoPlaybackBegan(AppLovinAd appLovinAd) {
this.parentAdapter.log("Rewarded interstitial ad video started");
this.listener.onRewardedInterstitialAdVideoStarted();
}

public void videoPlaybackEnded(AppLovinAd appLovinAd, double d, boolean z) {
AppLovinMediationAdapter appLovinMediationAdapter = this.parentAdapter;
appLovinMediationAdapter.log("Rewarded interstitial ad video ended at " + d + "% and is fully watched: " + z);
this.hasGrantedReward = z;
this.listener.onRewardedInterstitialAdVideoCompleted();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\mediation\adapters\VungleMediationAdapter$MaxVungleNativeAd.java

package com.applovin.mediation.adapters;

import android.view.View;
import com.applovin.mediation.nativeAds.MaxNativeAd;
import com.applovin.mediation.nativeAds.MaxNativeAd$Builder;
import com.applovin.mediation.nativeAds.MaxNativeAdView;
import com.applovin.sdk.AppLovinSdkUtils;
import com.vungle.warren.NativeAd;
import com.vungle.warren.NativeAdLayout;
import java.util.ArrayList;

public class VungleMediationAdapter$MaxVungleNativeAd extends MaxNativeAd {
public final /* synthetic */ VungleMediationAdapter this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public VungleMediationAdapter$MaxVungleNativeAd(VungleMediationAdapter vungleMediationAdapter, MaxNativeAd$Builder maxNativeAd$Builder) {
super(maxNativeAd$Builder);
this.this$0 = vungleMediationAdapter;
}

public void prepareViewForInteraction(MaxNativeAdView maxNativeAdView) {
NativeAd access$300 = VungleMediationAdapter.access$300(this.this$0);
if (access$300 == null) {
this.this$0.e("Failed to register native ad views: native ad is null.");
return;
}
NativeAdLayout nativeAdLayout = new NativeAdLayout(maxNativeAdView.getContext());
View mainView = maxNativeAdView.getMainView();
maxNativeAdView.removeView(mainView);
nativeAdLayout.addView(mainView);
maxNativeAdView.addView(nativeAdLayout);
ArrayList arrayList = new ArrayList();
if (AppLovinSdkUtils.isValidString(getTitle()) && maxNativeAdView.getTitleTextView() != null) {
arrayList.add(maxNativeAdView.getTitleTextView());
}
if (AppLovinSdkUtils.isValidString(getAdvertiser()) && maxNativeAdView.getAdvertiserTextView() != null) {
arrayList.add(maxNativeAdView.getAdvertiserTextView());
}
if (AppLovinSdkUtils.isValidString(getBody()) && maxNativeAdView.getBodyTextView() != null) {
arrayList.add(maxNativeAdView.getBodyTextView());
}
if (AppLovinSdkUtils.isValidString(getCallToAction()) && maxNativeAdView.getCallToActionButton() != null) {
arrayList.add(maxNativeAdView.getCallToActionButton());
}
if (!(getIcon() == null || maxNativeAdView.getIconImageView() == null)) {
arrayList.add(maxNativeAdView.getIconImageView());
}
if (!(getMediaView() == null || maxNativeAdView.getMediaContentViewGroup() == null)) {
arrayList.add(maxNativeAdView.getMediaContentViewGroup());
}
access$300.registerViewForInteraction(nativeAdLayout, getMediaView(), maxNativeAdView.getIconImageView(), arrayList);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\mediation\adapters\bytedance\R$dimen.java

package com.applovin.mediation.adapters.bytedance;

public final class R$dimen {
public static final int abc_action_bar_content_inset_material = 2131165184;
public static final int abc_action_bar_content_inset_with_nav = 2131165185;
public static final int abc_action_bar_default_height_material = 2131165186;
public static final int abc_action_bar_default_padding_end_material = 2131165187;
public static final int abc_action_bar_default_padding_start_material = 2131165188;
public static final int abc_action_bar_elevation_material = 2131165189;
public static final int abc_action_bar_icon_vertical_padding_material = 2131165190;
public static final int abc_action_bar_overflow_padding_end_material = 2131165191;
public static final int abc_action_bar_overflow_padding_start_material = 2131165192;
public static final int abc_action_bar_stacked_max_height = 2131165193;
public static final int abc_action_bar_stacked_tab_max_width = 2131165194;
public static final int abc_action_bar_subtitle_bottom_margin_material = 2131165195;
public static final int abc_action_bar_subtitle_top_margin_material = 2131165196;
public static final int abc_action_button_min_height_material = 2131165197;
public static final int abc_action_button_min_width_material = 2131165198;
public static final int abc_action_button_min_width_overflow_material = 2131165199;
public static final int abc_alert_dialog_button_bar_height = 2131165200;
public static final int abc_alert_dialog_button_dimen = 2131165201;
public static final int abc_button_inset_horizontal_material = 2131165202;
public static final int abc_button_inset_vertical_material = 2131165203;
public static final int abc_button_padding_horizontal_material = 2131165204;
public static final int abc_button_padding_vertical_material = 2131165205;
public static final int abc_cascading_menus_min_smallest_width = 2131165206;
public static final int abc_config_prefDialogWidth = 2131165207;
public static final int abc_control_corner_material = 2131165208;
public static final int abc_control_inset_material = 2131165209;
public static final int abc_control_padding_material = 2131165210;
public static final int abc_dialog_corner_radius_material = 2131165211;
public static final int abc_dialog_fixed_height_major = 2131165212;
public static final int abc_dialog_fixed_height_minor = 2131165213;
public static final int abc_dialog_fixed_width_major = 2131165214;
public static final int abc_dialog_fixed_width_minor = 2131165215;
public static final int abc_dialog_list_padding_bottom_no_buttons = 2131165216;
public static final int abc_dialog_list_padding_top_no_title = 2131165217;
public static final int abc_dialog_min_width_major = 2131165218;
public static final int abc_dialog_min_width_minor = 2131165219;
public static final int abc_dialog_padding_material = 2131165220;
public static final int abc_dialog_padding_top_material = 2131165221;
public static final int abc_dialog_title_divider_material = 2131165222;
public static final int abc_disabled_alpha_material_dark = 2131165223;
public static final int abc_disabled_alpha_material_light = 2131165224;
public static final int abc_dropdownitem_icon_width = 2131165225;
public static final int abc_dropdownitem_text_padding_left = 2131165226;
public static final int abc_dropdownitem_text_padding_right = 2131165227;
public static final int abc_edit_text_inset_bottom_material = 2131165228;
public static final int abc_edit_text_inset_horizontal_material = 2131165229;
public static final int abc_edit_text_inset_top_material = 2131165230;
public static final int abc_floating_window_z = 2131165231;
public static final int abc_list_item_height_large_material = 2131165232;
public static final int abc_list_item_height_material = 2131165233;
public static final int abc_list_item_height_small_material = 2131165234;
public static final int abc_list_item_padding_horizontal_material = 2131165235;
public static final int abc_panel_menu_list_width = 2131165236;
public static final int abc_progress_bar_height_material = 2131165237;
public static final int abc_search_view_preferred_height = 2131165238;
public static final int abc_search_view_preferred_width = 2131165239;
public static final int abc_seekbar_track_background_height_material = 2131165240;
public static final int abc_seekbar_track_progress_height_material = 2131165241;
public static final int abc_select_dialog_padding_start_material = 2131165242;
public static final int abc_star_big = 2131165243;
public static final int abc_star_medium = 2131165244;
public static final int abc_star_small = 2131165245;
public static final int abc_switch_padding = 2131165246;
public static final int abc_text_size_body_1_material = 2131165247;
public static final int abc_text_size_body_2_material = 2131165248;
public static final int abc_text_size_button_material = 2131165249;
public static final int abc_text_size_caption_material = 2131165250;
public static final int abc_text_size_display_1_material = 2131165251;
public static final int abc_text_size_display_2_material = 2131165252;
public static final int abc_text_size_display_3_material = 2131165253;
public static final int abc_text_size_display_4_material = 2131165254;
public static final int abc_text_size_headline_material = 2131165255;
public static final int abc_text_size_large_material = 2131165256;
public static final int abc_text_size_medium_material = 2131165257;
public static final int abc_text_size_menu_header_material = 2131165258;
public static final int abc_text_size_menu_material = 2131165259;
public static final int abc_text_size_small_material = 2131165260;
public static final int abc_text_size_subhead_material = 2131165261;
public static final int abc_text_size_subtitle_material_toolbar = 2131165262;
public static final int abc_text_size_title_material = 2131165263;
public static final int abc_text_size_title_material_toolbar = 2131165264;
public static final int al_exo_error_message_height = 2131165266;
public static final int al_exo_error_message_margin_bottom = 2131165267;
public static final int al_exo_error_message_text_padding_horizontal = 2131165268;
public static final int al_exo_error_message_text_padding_vertical = 2131165269;
public static final int al_exo_error_message_text_size = 2131165270;
public static final int al_exo_icon_horizontal_margin = 2131165271;
public static final int al_exo_icon_padding = 2131165272;
public static final int al_exo_icon_padding_bottom = 2131165273;
public static final int al_exo_icon_size = 2131165274;
public static final int al_exo_icon_text_size = 2131165275;
public static final int al_exo_media_button_height = 2131165276;
public static final int al_exo_media_button_width = 2131165277;
public static final int al_exo_setting_width = 2131165278;
public static final int al_exo_settings_height = 2131165279;
public static final int al_exo_settings_icon_size = 2131165280;
public static final int al_exo_settings_main_text_size = 2131165281;
public static final int al_exo_settings_offset = 2131165282;
public static final int al_exo_settings_sub_text_size = 2131165283;
public static final int al_exo_settings_text_height = 2131165284;
public static final int al_exo_small_icon_height = 2131165285;
public static final int al_exo_small_icon_horizontal_margin = 2131165286;
public static final int al_exo_small_icon_padding_horizontal = 2131165287;
public static final int al_exo_small_icon_padding_vertical = 2131165288;
public static final int al_exo_small_icon_width = 2131165289;
public static final int al_exo_styled_bottom_bar_height = 2131165290;
public static final int al_exo_styled_bottom_bar_margin_top = 2131165291;
public static final int al_exo_styled_bottom_bar_time_padding = 2131165292;
public static final int al_exo_styled_controls_padding = 2131165293;
public static final int al_exo_styled_minimal_controls_margin_bottom = 2131165294;
public static final int al_exo_styled_progress_bar_height = 2131165295;
public static final int al_exo_styled_progress_dragged_thumb_size = 2131165296;
public static final int al_exo_styled_progress_enabled_thumb_size = 2131165297;
public static final int al_exo_styled_progress_layout_height = 2131165298;
public static final int al_exo_styled_progress_margin_bottom = 2131165299;
public static final int al_exo_styled_progress_touch_target_height = 2131165300;
public static final int applovin_sdk_actionBarHeight = 2131165302;
public static final int applovin_sdk_adControlButton_height = 2131165303;
public static final int applovin_sdk_adControlButton_width = 2131165304;
public static final int applovin_sdk_mediationDebuggerDetailListItemTextSize = 2131165305;
public static final int applovin_sdk_mediationDebuggerSectionHeight = 2131165306;
public static final int applovin_sdk_mediationDebuggerSectionTextSize = 2131165307;
public static final int applovin_sdk_mrec_height = 2131165308;
public static final int applovin_sdk_mrec_width = 2131165309;
public static final int browser_actions_context_menu_max_width = 2131165310;
public static final int browser_actions_context_menu_min_padding = 2131165311;
public static final int compat_button_inset_horizontal_material = 2131165316;
public static final int compat_button_inset_vertical_material = 2131165317;
public static final int compat_button_padding_horizontal_material = 2131165318;
public static final int compat_button_padding_vertical_material = 2131165319;
public static final int compat_control_corner_material = 2131165320;
public static final int compat_notification_large_icon_max_height = 2131165321;
public static final int compat_notification_large_icon_max_width = 2131165322;
public static final int default_margin = 2131165327;
public static final int disabled_alpha_material_dark = 2131165376;
public static final int disabled_alpha_material_light = 2131165377;
public static final int fastscroll_default_thickness = 2131165778;
public static final int fastscroll_margin = 2131165779;
public static final int fastscroll_minimum_range = 2131165780;
public static final int highlight_alpha_material_colored = 2131165803;
public static final int highlight_alpha_material_dark = 2131165804;
public static final int highlight_alpha_material_light = 2131165805;
public static final int hint_alpha_material_dark = 2131165806;
public static final int hint_alpha_material_light = 2131165807;
public static final int hint_pressed_alpha_material_dark = 2131165808;
public static final int hint_pressed_alpha_material_light = 2131165809;
public static final int item_touch_helper_max_drag_scroll_per_frame = 2131165810;
public static final int item_touch_helper_swipe_escape_max_velocity = 2131165811;
public static final int item_touch_helper_swipe_escape_velocity = 2131165812;
public static final int notification_action_icon_size = 2131166209;
public static final int notification_action_text_size = 2131166210;
public static final int notification_big_circle_margin = 2131166211;
public static final int notification_content_margin_start = 2131166212;
public static final int notification_large_icon_height = 2131166213;
public static final int notification_large_icon_width = 2131166214;
public static final int notification_main_column_padding_top = 2131166215;
public static final int notification_media_narrow_margin = 2131166216;
public static final int notification_right_icon_size = 2131166217;
public static final int notification_right_side_padding_top = 2131166218;
public static final int notification_small_icon_background_padding = 2131166219;
public static final int notification_small_icon_size_as_large = 2131166220;
public static final int notification_subtext_size = 2131166221;
public static final int notification_top_pad = 2131166222;
public static final int notification_top_pad_large_text = 2131166223;
public static final int text_margin = 2131166274;
public static final int tooltip_corner_radius = 2131166275;
public static final int tooltip_horizontal_padding = 2131166276;
public static final int tooltip_margin = 2131166277;
public static final int tooltip_precise_anchor_extra_offset = 2131166278;
public static final int tooltip_precise_anchor_threshold = 2131166279;
public static final int tooltip_vertical_padding = 2131166280;
public static final int tooltip_y_offset_non_touch = 2131166281;
public static final int tooltip_y_offset_touch = 2131166282;
public static final int tt_video_container_maxheight = 2131166283;
public static final int tt_video_container_minheight = 2131166284;
public static final int tt_video_cover_padding_horizon = 2131166285;
public static final int tt_video_cover_padding_vertical = 2131166286;

private R$dimen() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\mediation\adapters\google\R$layout.java

package com.applovin.mediation.adapters.google;

public final class R$layout {
public static final int abc_action_bar_title_item = 2131558400;
public static final int abc_action_bar_up_container = 2131558401;
public static final int abc_action_menu_item_layout = 2131558402;
public static final int abc_action_menu_layout = 2131558403;
public static final int abc_action_mode_bar = 2131558404;
public static final int abc_action_mode_close_item_material = 2131558405;
public static final int abc_activity_chooser_view = 2131558406;
public static final int abc_activity_chooser_view_list_item = 2131558407;
public static final int abc_alert_dialog_button_bar_material = 2131558408;
public static final int abc_alert_dialog_material = 2131558409;
public static final int abc_alert_dialog_title_material = 2131558410;
public static final int abc_cascading_menu_item_layout = 2131558411;
public static final int abc_dialog_title_material = 2131558412;
public static final int abc_expanded_menu_layout = 2131558413;
public static final int abc_list_menu_item_checkbox = 2131558414;
public static final int abc_list_menu_item_icon = 2131558415;
public static final int abc_list_menu_item_layout = 2131558416;
public static final int abc_list_menu_item_radio = 2131558417;
public static final int abc_popup_menu_header_item_layout = 2131558418;
public static final int abc_popup_menu_item_layout = 2131558419;
public static final int abc_screen_content_include = 2131558420;
public static final int abc_screen_simple = 2131558421;
public static final int abc_screen_simple_overlay_action_mode = 2131558422;
public static final int abc_screen_toolbar = 2131558423;
public static final int abc_search_dropdown_item_icons_2line = 2131558424;
public static final int abc_search_view = 2131558425;
public static final int abc_select_dialog_material = 2131558426;
public static final int abc_tooltip = 2131558427;
public static final int admob_empty_layout = 2131558447;
public static final int applovin_debugger_list_item_detail = 2131558448;
public static final int applovin_exo_list_divider = 2131558449;
public static final int applovin_exo_player_control_view = 2131558450;
public static final int applovin_exo_player_view = 2131558451;
public static final int applovin_exo_styled_player_control_ffwd_button = 2131558452;
public static final int applovin_exo_styled_player_control_rewind_button = 2131558453;
public static final int applovin_exo_styled_player_control_view = 2131558454;
public static final int applovin_exo_styled_player_view = 2131558455;
public static final int applovin_exo_styled_settings_list = 2131558456;
public static final int applovin_exo_styled_settings_list_item = 2131558457;
public static final int applovin_exo_styled_sub_settings_list_item = 2131558458;
public static final int applovin_exo_track_selection_dialog = 2131558459;
public static final int applovin_native_ad_media_view = 2131558460;
public static final int browser_actions_context_menu_page = 2131558461;
public static final int browser_actions_context_menu_row = 2131558462;
public static final int creative_debugger_displayed_ad_detail_activity = 2131558471;
public static final int custom_dialog = 2131558473;
public static final int max_hybrid_native_ad_view = 2131558629;
public static final int max_native_ad_banner_icon_and_text_layout = 2131558630;
public static final int max_native_ad_banner_view = 2131558631;
public static final int max_native_ad_leader_view = 2131558632;
public static final int max_native_ad_media_banner_view = 2131558633;
public static final int max_native_ad_medium_template_1 = 2131558634;
public static final int max_native_ad_mrec_view = 2131558635;
public static final int max_native_ad_recycler_view_item = 2131558636;
public static final int max_native_ad_small_template_1 = 2131558637;
public static final int max_native_ad_vertical_banner_view = 2131558638;
public static final int max_native_ad_vertical_leader_view = 2131558639;
public static final int max_native_ad_vertical_media_banner_view = 2131558640;
public static final int mediation_debugger_ad_unit_detail_activity = 2131558641;
public static final int mediation_debugger_list_item_right_detail = 2131558642;
public static final int mediation_debugger_list_section = 2131558643;
public static final int mediation_debugger_list_section_centered = 2131558644;
public static final int mediation_debugger_list_view = 2131558645;
public static final int mediation_debugger_multi_ad_activity = 2131558646;
public static final int notification_action = 2131558677;
public static final int notification_action_tombstone = 2131558678;
public static final int notification_template_custom_big = 2131558685;
public static final int notification_template_icon_group = 2131558686;
public static final int notification_template_part_chronometer = 2131558690;
public static final int notification_template_part_time = 2131558691;
public static final int select_dialog_item_material = 2131558711;
public static final int select_dialog_multichoice_material = 2131558712;
public static final int select_dialog_singlechoice_material = 2131558713;
public static final int support_simple_spinner_dropdown_item = 2131558715;

private R$layout() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\mediation\adapters\googleadmanager\R$drawable.java

package com.applovin.mediation.adapters.googleadmanager;

public final class R$drawable {
public static final int abc_ab_share_pack_mtrl_alpha = 2131230736;
public static final int abc_action_bar_item_background_material = 2131230737;
public static final int abc_btn_borderless_material = 2131230738;
public static final int abc_btn_check_material = 2131230739;
public static final int abc_btn_check_material_anim = 2131230740;
public static final int abc_btn_check_to_on_mtrl_000 = 2131230741;
public static final int abc_btn_check_to_on_mtrl_015 = 2131230742;
public static final int abc_btn_colored_material = 2131230743;
public static final int abc_btn_default_mtrl_shape = 2131230744;
public static final int abc_btn_radio_material = 2131230745;
public static final int abc_btn_radio_material_anim = 2131230746;
public static final int abc_btn_radio_to_on_mtrl_000 = 2131230747;
public static final int abc_btn_radio_to_on_mtrl_015 = 2131230748;
public static final int abc_btn_switch_to_on_mtrl_00001 = 2131230749;
public static final int abc_btn_switch_to_on_mtrl_00012 = 2131230750;
public static final int abc_cab_background_internal_bg = 2131230751;
public static final int abc_cab_background_top_material = 2131230752;
public static final int abc_cab_background_top_mtrl_alpha = 2131230753;
public static final int abc_control_background_material = 2131230754;
public static final int abc_dialog_material_background = 2131230755;
public static final int abc_edit_text_material = 2131230756;
public static final int abc_ic_ab_back_material = 2131230757;
public static final int abc_ic_arrow_drop_right_black_24dp = 2131230758;
public static final int abc_ic_clear_material = 2131230759;
public static final int abc_ic_commit_search_api_mtrl_alpha = 2131230760;
public static final int abc_ic_go_search_api_material = 2131230761;
public static final int abc_ic_menu_copy_mtrl_am_alpha = 2131230762;
public static final int abc_ic_menu_cut_mtrl_alpha = 2131230763;
public static final int abc_ic_menu_overflow_material = 2131230764;
public static final int abc_ic_menu_paste_mtrl_am_alpha = 2131230765;
public static final int abc_ic_menu_selectall_mtrl_alpha = 2131230766;
public static final int abc_ic_menu_share_mtrl_alpha = 2131230767;
public static final int abc_ic_search_api_material = 2131230768;
public static final int abc_ic_voice_search_api_material = 2131230769;
public static final int abc_item_background_holo_dark = 2131230770;
public static final int abc_item_background_holo_light = 2131230771;
public static final int abc_list_divider_material = 2131230772;
public static final int abc_list_divider_mtrl_alpha = 2131230773;
public static final int abc_list_focused_holo = 2131230774;
public static final int abc_list_longpressed_holo = 2131230775;
public static final int abc_list_pressed_holo_dark = 2131230776;
public static final int abc_list_pressed_holo_light = 2131230777;
public static final int abc_list_selector_background_transition_holo_dark = 2131230778;
public static final int abc_list_selector_background_transition_holo_light = 2131230779;
public static final int abc_list_selector_disabled_holo_dark = 2131230780;
public static final int abc_list_selector_disabled_holo_light = 2131230781;
public static final int abc_list_selector_holo_dark = 2131230782;
public static final int abc_list_selector_holo_light = 2131230783;
public static final int abc_menu_hardkey_panel_mtrl_mult = 2131230784;
public static final int abc_popup_background_mtrl_mult = 2131230785;
public static final int abc_ratingbar_indicator_material = 2131230786;
public static final int abc_ratingbar_material = 2131230787;
public static final int abc_ratingbar_small_material = 2131230788;
public static final int abc_scrubber_control_off_mtrl_alpha = 2131230789;
public static final int abc_scrubber_control_to_pressed_mtrl_000 = 2131230790;
public static final int abc_scrubber_control_to_pressed_mtrl_005 = 2131230791;
public static final int abc_scrubber_primary_mtrl_alpha = 2131230792;
public static final int abc_scrubber_track_mtrl_alpha = 2131230793;
public static final int abc_seekbar_thumb_material = 2131230794;
public static final int abc_seekbar_tick_mark_material = 2131230795;
public static final int abc_seekbar_track_material = 2131230796;
public static final int abc_spinner_mtrl_am_alpha = 2131230797;
public static final int abc_spinner_textfield_background_material = 2131230798;
public static final int abc_switch_thumb_material = 2131230801;
public static final int abc_switch_track_mtrl_alpha = 2131230802;
public static final int abc_tab_indicator_material = 2131230803;
public static final int abc_tab_indicator_mtrl_alpha = 2131230804;
public static final int abc_text_cursor_material = 2131230805;
public static final int abc_textfield_activated_mtrl_alpha = 2131230809;
public static final int abc_textfield_default_mtrl_alpha = 2131230810;
public static final int abc_textfield_search_activated_mtrl_alpha = 2131230811;
public static final int abc_textfield_search_default_mtrl_alpha = 2131230812;
public static final int abc_textfield_search_material = 2131230813;
public static final int abc_vector_test = 2131230814;
public static final int admob_close_button_black_circle_white_cross = 2131230815;
public static final int admob_close_button_white_circle_black_cross = 2131230816;
public static final int al_exo_controls_fastforward = 2131230817;
public static final int al_exo_controls_fullscreen_enter = 2131230818;
public static final int al_exo_controls_fullscreen_exit = 2131230819;
public static final int al_exo_controls_next = 2131230820;
public static final int al_exo_controls_pause = 2131230821;
public static final int al_exo_controls_play = 2131230822;
public static final int al_exo_controls_previous = 2131230823;
public static final int al_exo_controls_repeat_all = 2131230824;
public static final int al_exo_controls_repeat_off = 2131230825;
public static final int al_exo_controls_repeat_one = 2131230826;
public static final int al_exo_controls_rewind = 2131230827;
public static final int al_exo_controls_shuffle_off = 2131230828;
public static final int al_exo_controls_shuffle_on = 2131230829;
public static final int al_exo_controls_vr = 2131230830;
public static final int al_exo_notification_fastforward = 2131230831;
public static final int al_exo_notification_next = 2131230832;
public static final int al_exo_notification_pause = 2131230833;
public static final int al_exo_notification_play = 2131230834;
public static final int al_exo_notification_previous = 2131230835;
public static final int al_exo_notification_rewind = 2131230836;
public static final int al_exo_notification_small_icon = 2131230837;
public static final int al_exo_notification_stop = 2131230838;
public static final int al_exo_styled_controls_audiotrack = 2131230839;
public static final int al_exo_styled_controls_check = 2131230840;
public static final int al_exo_styled_controls_fastforward = 2131230841;
public static final int al_exo_styled_controls_fullscreen_enter = 2131230842;
public static final int al_exo_styled_controls_fullscreen_exit = 2131230843;
public static final int al_exo_styled_controls_next = 2131230844;
public static final int al_exo_styled_controls_overflow_hide = 2131230845;
public static final int al_exo_styled_controls_overflow_show = 2131230846;
public static final int al_exo_styled_controls_pause = 2131230847;
public static final int al_exo_styled_controls_play = 2131230848;
public static final int al_exo_styled_controls_previous = 2131230849;
public static final int al_exo_styled_controls_repeat_all = 2131230850;
public static final int al_exo_styled_controls_repeat_off = 2131230851;
public static final int al_exo_styled_controls_repeat_one = 2131230852;
public static final int al_exo_styled_controls_rewind = 2131230853;
public static final int al_exo_styled_controls_settings = 2131230854;
public static final int al_exo_styled_controls_shuffle_off = 2131230855;
public static final int al_exo_styled_controls_shuffle_on = 2131230856;
public static final int al_exo_styled_controls_speed = 2131230857;
public static final int al_exo_styled_controls_subtitle_off = 2131230858;
public static final int al_exo_styled_controls_subtitle_on = 2131230859;
public static final int al_exo_styled_controls_vr = 2131230860;
public static final int applovin_creative_debugger_report_ad_rounded_button = 2131230861;
public static final int applovin_exo_edit_mode_logo = 2131230862;
public static final int applovin_exo_ic_audiotrack = 2131230863;
public static final int applovin_exo_ic_check = 2131230864;
public static final int applovin_exo_ic_chevron_left = 2131230865;
public static final int applovin_exo_ic_chevron_right = 2131230866;
public static final int applovin_exo_ic_default_album_image = 2131230867;
public static final int applovin_exo_ic_forward = 2131230868;
public static final int applovin_exo_ic_fullscreen_enter = 2131230869;
public static final int applovin_exo_ic_fullscreen_exit = 2131230870;
public static final int applovin_exo_ic_pause_circle_filled = 2131230871;
public static final int applovin_exo_ic_play_circle_filled = 2131230872;
public static final int applovin_exo_ic_rewind = 2131230873;
public static final int applovin_exo_ic_settings = 2131230874;
public static final int applovin_exo_ic_skip_next = 2131230875;
public static final int applovin_exo_ic_skip_previous = 2131230876;
public static final int applovin_exo_ic_speed = 2131230877;
public static final int applovin_exo_ic_subtitle_off = 2131230878;
public static final int applovin_exo_ic_subtitle_on = 2131230879;
public static final int applovin_exo_icon_circular_play = 2131230880;
public static final int applovin_exo_icon_fastforward = 2131230881;
public static final int applovin_exo_icon_fullscreen_enter = 2131230882;
public static final int applovin_exo_icon_fullscreen_exit = 2131230883;
public static final int applovin_exo_icon_next = 2131230884;
public static final int applovin_exo_icon_pause = 2131230885;
public static final int applovin_exo_icon_play = 2131230886;
public static final int applovin_exo_icon_previous = 2131230887;
public static final int applovin_exo_icon_repeat_all = 2131230888;
public static final int applovin_exo_icon_repeat_off = 2131230889;
public static final int applovin_exo_icon_repeat_one = 2131230890;
public static final int applovin_exo_icon_rewind = 2131230891;
public static final int applovin_exo_icon_shuffle_off = 2131230892;
public static final int applovin_exo_icon_shuffle_on = 2131230893;
public static final int applovin_exo_icon_stop = 2131230894;
public static final int applovin_exo_icon_vr = 2131230895;
public static final int applovin_exo_rounded_rectangle = 2131230896;
public static final int applovin_ic_check_mark_bordered = 2131230897;
public static final int applovin_ic_check_mark_borderless = 2131230898;
public static final int applovin_ic_disclosure_arrow = 2131230899;
public static final int applovin_ic_mediation_adcolony = 2131230900;
public static final int applovin_ic_mediation_admob = 2131230901;
public static final int applovin_ic_mediation_amazon_marketplace = 2131230902;
public static final int applovin_ic_mediation_amazon_tam = 2131230903;
public static final int applovin_ic_mediation_applovin = 2131230904;
public static final int applovin_ic_mediation_bidmachine = 2131230905;
public static final int applovin_ic_mediation_chartboost = 2131230906;
public static final int applovin_ic_mediation_criteo = 2131230907;
public static final int applovin_ic_mediation_facebook = 2131230908;
public static final int applovin_ic_mediation_fyber = 2131230909;
public static final int applovin_ic_mediation_google_ad_manager = 2131230910;
public static final int applovin_ic_mediation_hyprmx = 2131230911;
public static final int applovin_ic_mediation_inmobi = 2131230912;
public static final int applovin_ic_mediation_ironsource = 2131230913;
public static final int applovin_ic_mediation_line = 2131230914;
public static final int applovin_ic_mediation_maio = 2131230915;
public static final int applovin_ic_mediation_mintegral = 2131230916;
public static final int applovin_ic_mediation_mobilefuse = 2131230917;
public static final int applovin_ic_mediation_mopub = 2131230918;
public static final int applovin_ic_mediation_mytarget = 2131230919;
public static final int applovin_ic_mediation_nend = 2131230920;
public static final int applovin_ic_mediation_ogury_presage = 2131230921;
public static final int applovin_ic_mediation_pangle = 2131230922;
public static final int applovin_ic_mediation_placeholder = 2131230923;
public static final int applovin_ic_mediation_smaato = 2131230924;
public static final int applovin_ic_mediation_snap = 2131230925;
public static final int applovin_ic_mediation_tapjoy = 2131230926;
public static final int applovin_ic_mediation_tiktok = 2131230927;
public static final int applovin_ic_mediation_unity = 2131230928;
public static final int applovin_ic_mediation_verizon = 2131230929;
public static final int applovin_ic_mediation_verve = 2131230930;
public static final int applovin_ic_mediation_vungle = 2131230931;
public static final int applovin_ic_mediation_yandex = 2131230932;
public static final int applovin_ic_mute_to_unmute = 2131230933;
public static final int applovin_ic_privacy_icon = 2131230934;
public static final int applovin_ic_privacy_icon_layered_list = 2131230935;
public static final int applovin_ic_share = 2131230936;
public static final int applovin_ic_unmute_to_mute = 2131230937;
public static final int applovin_ic_warning = 2131230938;
public static final int applovin_ic_white_small = 2131230939;
public static final int applovin_ic_x_mark = 2131230940;
public static final int applovin_rounded_button = 2131230941;
public static final int applovin_rounded_text_view_border = 2131230942;
public static final int btn_checkbox_checked_mtrl = 2131231013;
public static final int btn_checkbox_checked_to_unchecked_mtrl_animation = 2131231014;
public static final int btn_checkbox_unchecked_mtrl = 2131231015;
public static final int btn_checkbox_unchecked_to_checked_mtrl_animation = 2131231016;
public static final int btn_radio_off_mtrl = 2131231017;
public static final int btn_radio_off_to_on_mtrl_animation = 2131231018;
public static final int btn_radio_on_mtrl = 2131231019;
public static final int btn_radio_on_to_off_mtrl_animation = 2131231020;
public static final int common_full_open_on_phone = 2131231030;
public static final int common_google_signin_btn_icon_dark = 2131231031;
public static final int common_google_signin_btn_icon_dark_focused = 2131231032;
public static final int common_google_signin_btn_icon_dark_normal = 2131231033;
public static final int common_google_signin_btn_icon_dark_normal_background = 2131231034;
public static final int common_google_signin_btn_icon_disabled = 2131231035;
public static final int common_google_signin_btn_icon_light = 2131231036;
public static final int common_google_signin_btn_icon_light_focused = 2131231037;
public static final int common_google_signin_btn_icon_light_normal = 2131231038;
public static final int common_google_signin_btn_icon_light_normal_background = 2131231039;
public static final int common_google_signin_btn_text_dark = 2131231040;
public static final int common_google_signin_btn_text_dark_focused = 2131231041;
public static final int common_google_signin_btn_text_dark_normal = 2131231042;
public static final int common_google_signin_btn_text_dark_normal_background = 2131231043;
public static final int common_google_signin_btn_text_disabled = 2131231044;
public static final int common_google_signin_btn_text_light = 2131231045;
public static final int common_google_signin_btn_text_light_focused = 2131231046;
public static final int common_google_signin_btn_text_light_normal = 2131231047;
public static final int common_google_signin_btn_text_light_normal_background = 2131231048;
public static final int googleg_disabled_color_18 = 2131231110;
public static final int googleg_standard_color_18 = 2131231111;
public static final int notification_action_background = 2131231401;
public static final int notification_bg = 2131231402;
public static final int notification_bg_low = 2131231403;
public static final int notification_bg_low_normal = 2131231404;
public static final int notification_bg_low_pressed = 2131231405;
public static final int notification_bg_normal = 2131231406;
public static final int notification_bg_normal_pressed = 2131231407;
public static final int notification_icon_background = 2131231408;
public static final int notification_template_icon_bg = 2131231409;
public static final int notification_template_icon_low_bg = 2131231410;
public static final int notification_tile_bg = 2131231411;
public static final int notify_panel_notification_icon_bg = 2131231412;
public static final int tooltip_frame_dark = 2131231461;
public static final int tooltip_frame_light = 2131231462;

private R$drawable() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\mediation\adapters\vungle\R$drawable.java

package com.applovin.mediation.adapters.vungle;

public final class R$drawable {
public static final int abc_ab_share_pack_mtrl_alpha = 2131230736;
public static final int abc_action_bar_item_background_material = 2131230737;
public static final int abc_btn_borderless_material = 2131230738;
public static final int abc_btn_check_material = 2131230739;
public static final int abc_btn_check_material_anim = 2131230740;
public static final int abc_btn_check_to_on_mtrl_000 = 2131230741;
public static final int abc_btn_check_to_on_mtrl_015 = 2131230742;
public static final int abc_btn_colored_material = 2131230743;
public static final int abc_btn_default_mtrl_shape = 2131230744;
public static final int abc_btn_radio_material = 2131230745;
public static final int abc_btn_radio_material_anim = 2131230746;
public static final int abc_btn_radio_to_on_mtrl_000 = 2131230747;
public static final int abc_btn_radio_to_on_mtrl_015 = 2131230748;
public static final int abc_btn_switch_to_on_mtrl_00001 = 2131230749;
public static final int abc_btn_switch_to_on_mtrl_00012 = 2131230750;
public static final int abc_cab_background_internal_bg = 2131230751;
public static final int abc_cab_background_top_material = 2131230752;
public static final int abc_cab_background_top_mtrl_alpha = 2131230753;
public static final int abc_control_background_material = 2131230754;
public static final int abc_dialog_material_background = 2131230755;
public static final int abc_edit_text_material = 2131230756;
public static final int abc_ic_ab_back_material = 2131230757;
public static final int abc_ic_arrow_drop_right_black_24dp = 2131230758;
public static final int abc_ic_clear_material = 2131230759;
public static final int abc_ic_commit_search_api_mtrl_alpha = 2131230760;
public static final int abc_ic_go_search_api_material = 2131230761;
public static final int abc_ic_menu_copy_mtrl_am_alpha = 2131230762;
public static final int abc_ic_menu_cut_mtrl_alpha = 2131230763;
public static final int abc_ic_menu_overflow_material = 2131230764;
public static final int abc_ic_menu_paste_mtrl_am_alpha = 2131230765;
public static final int abc_ic_menu_selectall_mtrl_alpha = 2131230766;
public static final int abc_ic_menu_share_mtrl_alpha = 2131230767;
public static final int abc_ic_search_api_material = 2131230768;
public static final int abc_ic_voice_search_api_material = 2131230769;
public static final int abc_item_background_holo_dark = 2131230770;
public static final int abc_item_background_holo_light = 2131230771;
public static final int abc_list_divider_material = 2131230772;
public static final int abc_list_divider_mtrl_alpha = 2131230773;
public static final int abc_list_focused_holo = 2131230774;
public static final int abc_list_longpressed_holo = 2131230775;
public static final int abc_list_pressed_holo_dark = 2131230776;
public static final int abc_list_pressed_holo_light = 2131230777;
public static final int abc_list_selector_background_transition_holo_dark = 2131230778;
public static final int abc_list_selector_background_transition_holo_light = 2131230779;
public static final int abc_list_selector_disabled_holo_dark = 2131230780;
public static final int abc_list_selector_disabled_holo_light = 2131230781;
public static final int abc_list_selector_holo_dark = 2131230782;
public static final int abc_list_selector_holo_light = 2131230783;
public static final int abc_menu_hardkey_panel_mtrl_mult = 2131230784;
public static final int abc_popup_background_mtrl_mult = 2131230785;
public static final int abc_ratingbar_indicator_material = 2131230786;
public static final int abc_ratingbar_material = 2131230787;
public static final int abc_ratingbar_small_material = 2131230788;
public static final int abc_scrubber_control_off_mtrl_alpha = 2131230789;
public static final int abc_scrubber_control_to_pressed_mtrl_000 = 2131230790;
public static final int abc_scrubber_control_to_pressed_mtrl_005 = 2131230791;
public static final int abc_scrubber_primary_mtrl_alpha = 2131230792;
public static final int abc_scrubber_track_mtrl_alpha = 2131230793;
public static final int abc_seekbar_thumb_material = 2131230794;
public static final int abc_seekbar_tick_mark_material = 2131230795;
public static final int abc_seekbar_track_material = 2131230796;
public static final int abc_spinner_mtrl_am_alpha = 2131230797;
public static final int abc_spinner_textfield_background_material = 2131230798;
public static final int abc_switch_thumb_material = 2131230801;
public static final int abc_switch_track_mtrl_alpha = 2131230802;
public static final int abc_tab_indicator_material = 2131230803;
public static final int abc_tab_indicator_mtrl_alpha = 2131230804;
public static final int abc_text_cursor_material = 2131230805;
public static final int abc_textfield_activated_mtrl_alpha = 2131230809;
public static final int abc_textfield_default_mtrl_alpha = 2131230810;
public static final int abc_textfield_search_activated_mtrl_alpha = 2131230811;
public static final int abc_textfield_search_default_mtrl_alpha = 2131230812;
public static final int abc_textfield_search_material = 2131230813;
public static final int abc_vector_test = 2131230814;
public static final int al_exo_controls_fastforward = 2131230817;
public static final int al_exo_controls_fullscreen_enter = 2131230818;
public static final int al_exo_controls_fullscreen_exit = 2131230819;
public static final int al_exo_controls_next = 2131230820;
public static final int al_exo_controls_pause = 2131230821;
public static final int al_exo_controls_play = 2131230822;
public static final int al_exo_controls_previous = 2131230823;
public static final int al_exo_controls_repeat_all = 2131230824;
public static final int al_exo_controls_repeat_off = 2131230825;
public static final int al_exo_controls_repeat_one = 2131230826;
public static final int al_exo_controls_rewind = 2131230827;
public static final int al_exo_controls_shuffle_off = 2131230828;
public static final int al_exo_controls_shuffle_on = 2131230829;
public static final int al_exo_controls_vr = 2131230830;
public static final int al_exo_notification_fastforward = 2131230831;
public static final int al_exo_notification_next = 2131230832;
public static final int al_exo_notification_pause = 2131230833;
public static final int al_exo_notification_play = 2131230834;
public static final int al_exo_notification_previous = 2131230835;
public static final int al_exo_notification_rewind = 2131230836;
public static final int al_exo_notification_small_icon = 2131230837;
public static final int al_exo_notification_stop = 2131230838;
public static final int al_exo_styled_controls_audiotrack = 2131230839;
public static final int al_exo_styled_controls_check = 2131230840;
public static final int al_exo_styled_controls_fastforward = 2131230841;
public static final int al_exo_styled_controls_fullscreen_enter = 2131230842;
public static final int al_exo_styled_controls_fullscreen_exit = 2131230843;
public static final int al_exo_styled_controls_next = 2131230844;
public static final int al_exo_styled_controls_overflow_hide = 2131230845;
public static final int al_exo_styled_controls_overflow_show = 2131230846;
public static final int al_exo_styled_controls_pause = 2131230847;
public static final int al_exo_styled_controls_play = 2131230848;
public static final int al_exo_styled_controls_previous = 2131230849;
public static final int al_exo_styled_controls_repeat_all = 2131230850;
public static final int al_exo_styled_controls_repeat_off = 2131230851;
public static final int al_exo_styled_controls_repeat_one = 2131230852;
public static final int al_exo_styled_controls_rewind = 2131230853;
public static final int al_exo_styled_controls_settings = 2131230854;
public static final int al_exo_styled_controls_shuffle_off = 2131230855;
public static final int al_exo_styled_controls_shuffle_on = 2131230856;
public static final int al_exo_styled_controls_speed = 2131230857;
public static final int al_exo_styled_controls_subtitle_off = 2131230858;
public static final int al_exo_styled_controls_subtitle_on = 2131230859;
public static final int al_exo_styled_controls_vr = 2131230860;
public static final int applovin_creative_debugger_report_ad_rounded_button = 2131230861;
public static final int applovin_exo_edit_mode_logo = 2131230862;
public static final int applovin_exo_ic_audiotrack = 2131230863;
public static final int applovin_exo_ic_check = 2131230864;
public static final int applovin_exo_ic_chevron_left = 2131230865;
public static final int applovin_exo_ic_chevron_right = 2131230866;
public static final int applovin_exo_ic_default_album_image = 2131230867;
public static final int applovin_exo_ic_forward = 2131230868;
public static final int applovin_exo_ic_fullscreen_enter = 2131230869;
public static final int applovin_exo_ic_fullscreen_exit = 2131230870;
public static final int applovin_exo_ic_pause_circle_filled = 2131230871;
public static final int applovin_exo_ic_play_circle_filled = 2131230872;
public static final int applovin_exo_ic_rewind = 2131230873;
public static final int applovin_exo_ic_settings = 2131230874;
public static final int applovin_exo_ic_skip_next = 2131230875;
public static final int applovin_exo_ic_skip_previous = 2131230876;
public static final int applovin_exo_ic_speed = 2131230877;
public static final int applovin_exo_ic_subtitle_off = 2131230878;
public static final int applovin_exo_ic_subtitle_on = 2131230879;
public static final int applovin_exo_icon_circular_play = 2131230880;
public static final int applovin_exo_icon_fastforward = 2131230881;
public static final int applovin_exo_icon_fullscreen_enter = 2131230882;
public static final int applovin_exo_icon_fullscreen_exit = 2131230883;
public static final int applovin_exo_icon_next = 2131230884;
public static final int applovin_exo_icon_pause = 2131230885;
public static final int applovin_exo_icon_play = 2131230886;
public static final int applovin_exo_icon_previous = 2131230887;
public static final int applovin_exo_icon_repeat_all = 2131230888;
public static final int applovin_exo_icon_repeat_off = 2131230889;
public static final int applovin_exo_icon_repeat_one = 2131230890;
public static final int applovin_exo_icon_rewind = 2131230891;
public static final int applovin_exo_icon_shuffle_off = 2131230892;
public static final int applovin_exo_icon_shuffle_on = 2131230893;
public static final int applovin_exo_icon_stop = 2131230894;
public static final int applovin_exo_icon_vr = 2131230895;
public static final int applovin_exo_rounded_rectangle = 2131230896;
public static final int applovin_ic_check_mark_bordered = 2131230897;
public static final int applovin_ic_check_mark_borderless = 2131230898;
public static final int applovin_ic_disclosure_arrow = 2131230899;
public static final int applovin_ic_mediation_adcolony = 2131230900;
public static final int applovin_ic_mediation_admob = 2131230901;
public static final int applovin_ic_mediation_amazon_marketplace = 2131230902;
public static final int applovin_ic_mediation_amazon_tam = 2131230903;
public static final int applovin_ic_mediation_applovin = 2131230904;
public static final int applovin_ic_mediation_bidmachine = 2131230905;
public static final int applovin_ic_mediation_chartboost = 2131230906;
public static final int applovin_ic_mediation_criteo = 2131230907;
public static final int applovin_ic_mediation_facebook = 2131230908;
public static final int applovin_ic_mediation_fyber = 2131230909;
public static final int applovin_ic_mediation_google_ad_manager = 2131230910;
public static final int applovin_ic_mediation_hyprmx = 2131230911;
public static final int applovin_ic_mediation_inmobi = 2131230912;
public static final int applovin_ic_mediation_ironsource = 2131230913;
public static final int applovin_ic_mediation_line = 2131230914;
public static final int applovin_ic_mediation_maio = 2131230915;
public static final int applovin_ic_mediation_mintegral = 2131230916;
public static final int applovin_ic_mediation_mobilefuse = 2131230917;
public static final int applovin_ic_mediation_mopub = 2131230918;
public static final int applovin_ic_mediation_mytarget = 2131230919;
public static final int applovin_ic_mediation_nend = 2131230920;
public static final int applovin_ic_mediation_ogury_presage = 2131230921;
public static final int applovin_ic_mediation_pangle = 2131230922;
public static final int applovin_ic_mediation_placeholder = 2131230923;
public static final int applovin_ic_mediation_smaato = 2131230924;
public static final int applovin_ic_mediation_snap = 2131230925;
public static final int applovin_ic_mediation_tapjoy = 2131230926;
public static final int applovin_ic_mediation_tiktok = 2131230927;
public static final int applovin_ic_mediation_unity = 2131230928;
public static final int applovin_ic_mediation_verizon = 2131230929;
public static final int applovin_ic_mediation_verve = 2131230930;
public static final int applovin_ic_mediation_vungle = 2131230931;
public static final int applovin_ic_mediation_yandex = 2131230932;
public static final int applovin_ic_mute_to_unmute = 2131230933;
public static final int applovin_ic_privacy_icon = 2131230934;
public static final int applovin_ic_privacy_icon_layered_list = 2131230935;
public static final int applovin_ic_share = 2131230936;
public static final int applovin_ic_unmute_to_mute = 2131230937;
public static final int applovin_ic_warning = 2131230938;
public static final int applovin_ic_white_small = 2131230939;
public static final int applovin_ic_x_mark = 2131230940;
public static final int applovin_rounded_button = 2131230941;
public static final int applovin_rounded_text_view_border = 2131230942;
public static final int btn_checkbox_checked_mtrl = 2131231013;
public static final int btn_checkbox_checked_to_unchecked_mtrl_animation = 2131231014;
public static final int btn_checkbox_unchecked_mtrl = 2131231015;
public static final int btn_checkbox_unchecked_to_checked_mtrl_animation = 2131231016;
public static final int btn_radio_off_mtrl = 2131231017;
public static final int btn_radio_off_to_on_mtrl_animation = 2131231018;
public static final int btn_radio_on_mtrl = 2131231019;
public static final int btn_radio_on_to_off_mtrl_animation = 2131231020;
public static final int common_full_open_on_phone = 2131231030;
public static final int common_google_signin_btn_icon_dark = 2131231031;
public static final int common_google_signin_btn_icon_dark_focused = 2131231032;
public static final int common_google_signin_btn_icon_dark_normal = 2131231033;
public static final int common_google_signin_btn_icon_dark_normal_background = 2131231034;
public static final int common_google_signin_btn_icon_disabled = 2131231035;
public static final int common_google_signin_btn_icon_light = 2131231036;
public static final int common_google_signin_btn_icon_light_focused = 2131231037;
public static final int common_google_signin_btn_icon_light_normal = 2131231038;
public static final int common_google_signin_btn_icon_light_normal_background = 2131231039;
public static final int common_google_signin_btn_text_dark = 2131231040;
public static final int common_google_signin_btn_text_dark_focused = 2131231041;
public static final int common_google_signin_btn_text_dark_normal = 2131231042;
public static final int common_google_signin_btn_text_dark_normal_background = 2131231043;
public static final int common_google_signin_btn_text_disabled = 2131231044;
public static final int common_google_signin_btn_text_light = 2131231045;
public static final int common_google_signin_btn_text_light_focused = 2131231046;
public static final int common_google_signin_btn_text_light_normal = 2131231047;
public static final int common_google_signin_btn_text_light_normal_background = 2131231048;
public static final int googleg_disabled_color_18 = 2131231110;
public static final int googleg_standard_color_18 = 2131231111;
public static final int notification_action_background = 2131231401;
public static final int notification_bg = 2131231402;
public static final int notification_bg_low = 2131231403;
public static final int notification_bg_low_normal = 2131231404;
public static final int notification_bg_low_pressed = 2131231405;
public static final int notification_bg_normal = 2131231406;
public static final int notification_bg_normal_pressed = 2131231407;
public static final int notification_icon_background = 2131231408;
public static final int notification_template_icon_bg = 2131231409;
public static final int notification_template_icon_low_bg = 2131231410;
public static final int notification_tile_bg = 2131231411;
public static final int notify_panel_notification_icon_bg = 2131231412;
public static final int tooltip_frame_dark = 2131231461;
public static final int tooltip_frame_light = 2131231462;

private R$drawable() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\mediation\nativeAds\MaxNativeAd$Builder.java

package com.applovin.mediation.nativeAds;

import android.view.View;
import com.applovin.mediation.MaxAdFormat;
import com.applovin.mediation.nativeAds.MaxNativeAd;

public class MaxNativeAd$Builder {
/* access modifiers changed from: private */
public MaxAdFormat a;
/* access modifiers changed from: private */
public String b;
/* access modifiers changed from: private */
public String c;
/* access modifiers changed from: private */
public String d;
/* access modifiers changed from: private */
public String e;
/* access modifiers changed from: private */
public MaxNativeAd.MaxNativeAdImage f;
/* access modifiers changed from: private */
public View g;
/* access modifiers changed from: private */
public View h;
/* access modifiers changed from: private */
public View i;
/* access modifiers changed from: private */

/* renamed from: j  reason: collision with root package name */
public MaxNativeAd.MaxNativeAdImage f5j;
/* access modifiers changed from: private */
public float k;
/* access modifiers changed from: private */
public Double l;

public MaxNativeAd build() {
return new MaxNativeAd(this);
}

public MaxNativeAd$Builder setAdFormat(MaxAdFormat maxAdFormat) {
this.a = maxAdFormat;
return this;
}

public MaxNativeAd$Builder setAdvertiser(String str) {
this.c = str;
return this;
}

public MaxNativeAd$Builder setBody(String str) {
this.d = str;
return this;
}

public MaxNativeAd$Builder setCallToAction(String str) {
this.e = str;
return this;
}

public MaxNativeAd$Builder setIcon(MaxNativeAd.MaxNativeAdImage maxNativeAdImage) {
this.f = maxNativeAdImage;
return this;
}

public MaxNativeAd$Builder setIconView(View view) {
this.g = view;
return this;
}

public MaxNativeAd$Builder setMainImage(MaxNativeAd.MaxNativeAdImage maxNativeAdImage) {
this.f5j = maxNativeAdImage;
return this;
}

public MaxNativeAd$Builder setMediaContentAspectRatio(float f2) {
this.k = f2;
return this;
}

public MaxNativeAd$Builder setMediaView(View view) {
this.i = view;
return this;
}

public MaxNativeAd$Builder setOptionsView(View view) {
this.h = view;
return this;
}

public MaxNativeAd$Builder setStarRating(Double d2) {
this.l = d2;
return this;
}

public MaxNativeAd$Builder setTitle(String str) {
this.b = str;
return this;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\applovin\sdk\R$plurals.java

package com.applovin.sdk;

public final class R$plurals {
public static final int al_exo_controls_fastforward_by_amount_description = 2131755008;
public static final int al_exo_controls_rewind_by_amount_description = 2131755009;

private R$plurals() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\Registry$NoImageHeaderParserException.java

package com.bumptech.glide;

import com.bumptech.glide.Registry;

public final class Registry$NoImageHeaderParserException extends Registry.MissingComponentException {
public Registry$NoImageHeaderParserException() {
super("Failed to find image header parser.");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\load\data\ExifOrientationStream.java

package com.bumptech.glide.load.data;

import android.support.v4.media.b;
import androidx.annotation.NonNull;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;

public final class ExifOrientationStream extends FilterInputStream {
private static final byte[] EXIF_SEGMENT;
private static final int ORIENTATION_POSITION;
private static final int SEGMENT_LENGTH;
private static final int SEGMENT_START_POSITION = 2;
private final byte orientation;
private int position;

static {
byte[] bArr = {-1, -31, 0, 28, 69, 120, 105, 102, 0, 0, 77, 77, 0, 0, 0, 0, 0, 8, 0, 1, 1, 18, 0, 2, 0, 0, 0, 1, 0};
EXIF_SEGMENT = bArr;
int length = bArr.length;
SEGMENT_LENGTH = length;
ORIENTATION_POSITION = length + 2;
}

public ExifOrientationStream(InputStream inputStream, int i) {
super(inputStream);
if (i < -1 || i > 8) {
throw new IllegalArgumentException(b.g("Cannot add invalid orientation: ", i));
}
this.orientation = (byte) i;
}

public void mark(int i) {
throw new UnsupportedOperationException();
}

public boolean markSupported() {
return false;
}

public int read() throws IOException {
int i;
int i3 = this.position;
int read = (i3 < 2 || i3 > (i = ORIENTATION_POSITION)) ? super.read() : i3 == i ? this.orientation : EXIF_SEGMENT[i3 - 2] & 255;
if (read != -1) {
this.position++;
}
return read;
}

public int read(@NonNull byte[] bArr, int i, int i3) throws IOException {
int i4;
int i5 = this.position;
int i6 = ORIENTATION_POSITION;
if (i5 > i6) {
i4 = super.read(bArr, i, i3);
} else if (i5 == i6) {
bArr[i] = this.orientation;
i4 = 1;
} else if (i5 < 2) {
i4 = super.read(bArr, i, 2 - i5);
} else {
int min = Math.min(i6 - i5, i3);
System.arraycopy(EXIF_SEGMENT, this.position - 2, bArr, i, min);
i4 = min;
}
if (i4 > 0) {
this.position += i4;
}
return i4;
}

public void reset() throws IOException {
throw new UnsupportedOperationException();
}

public long skip(long j2) throws IOException {
long skip = super.skip(j2);
if (skip > 0) {
this.position = (int) (((long) this.position) + skip);
}
return skip;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\load\data\mediastore\ThumbnailStreamOpener.java
private static final FileService DEFAULT_SERVICE = new FileService();
private static final String TAG = "ThumbStreamOpener";
private final ArrayPool byteArrayPool;
private final ContentResolver contentResolver;
private final List<ImageHeaderParser> parsers;
private final ThumbnailQuery query;
private final FileService service;

public ThumbnailStreamOpener(List<ImageHeaderParser> list, FileService fileService, ThumbnailQuery thumbnailQuery, ArrayPool arrayPool, ContentResolver contentResolver2) {
this.service = fileService;
this.query = thumbnailQuery;
this.byteArrayPool = arrayPool;
this.contentResolver = contentResolver2;
this.parsers = list;
}

public ThumbnailStreamOpener(List<ImageHeaderParser> list, ThumbnailQuery thumbnailQuery, ArrayPool arrayPool, ContentResolver contentResolver2) {
this(list, DEFAULT_SERVICE, thumbnailQuery, arrayPool, contentResolver2);
}

/* JADX WARNING: Removed duplicated region for block: B:21:0x002d A[Catch:{ all -> 0x0047 }] */
/* JADX WARNING: Removed duplicated region for block: B:23:0x0043  */
/* JADX WARNING: Removed duplicated region for block: B:28:0x004b  */
@androidx.annotation.Nullable
/* Code decompiled incorrectly, please refer to instructions dump. */
private java.lang.String getPath(@androidx.annotation.NonNull android.net.Uri r7) {
/*
r6 = this;
java.lang.String r0 = "ThumbStreamOpener"
r1 = 0
com.bumptech.glide.load.data.mediastore.ThumbnailQuery r2 = r6.query     // Catch:{ SecurityException -> 0x0024, all -> 0x0022 }
android.database.Cursor r2 = r2.query(r7)     // Catch:{ SecurityException -> 0x0024, all -> 0x0022 }
if (r2 == 0) goto L_0x001c
boolean r3 = r2.moveToFirst()     // Catch:{ SecurityException -> 0x001a }
if (r3 == 0) goto L_0x001c
r3 = 0
java.lang.String r7 = r2.getString(r3)     // Catch:{ SecurityException -> 0x001a }
r2.close()
return r7
L_0x001a:
r3 = move-exception
goto L_0x0026
L_0x001c:
if (r2 == 0) goto L_0x0021
r2.close()
L_0x0021:
return r1
L_0x0022:
r7 = move-exception
goto L_0x0049
L_0x0024:
r3 = move-exception
r2 = r1
L_0x0026:
r4 = 3
boolean r4 = android.util.Log.isLoggable(r0, r4)     // Catch:{ all -> 0x0047 }
if (r4 == 0) goto L_0x0041
java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ all -> 0x0047 }
r4.<init>()     // Catch:{ all -> 0x0047 }
java.lang.String r5 = "Failed to query for thumbnail for Uri: "
r4.append(r5)     // Catch:{ all -> 0x0047 }
r4.append(r7)     // Catch:{ all -> 0x0047 }
java.lang.String r7 = r4.toString()     // Catch:{ all -> 0x0047 }
android.util.Log.d(r0, r7, r3)     // Catch:{ all -> 0x0047 }
L_0x0041:
if (r2 == 0) goto L_0x0046
r2.close()
L_0x0046:
return r1
L_0x0047:
r7 = move-exception
r1 = r2
L_0x0049:
if (r1 == 0) goto L_0x004e
r1.close()
L_0x004e:
throw r7
*/
throw new UnsupportedOperationException("Method not decompiled: com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener.getPath(android.net.Uri):java.lang.String");
}

private boolean isValid(File file) {
return this.service.exists(file) && 0 < this.service.length(file);
}

public int getOrientation(Uri uri) {
InputStream inputStream = null;
try {
InputStream openInputStream = this.contentResolver.openInputStream(uri);
int orientation = ImageHeaderParserUtils.getOrientation(this.parsers, openInputStream, this.byteArrayPool);
if (openInputStream != null) {
try {
openInputStream.close();
} catch (IOException unused) {
}
}
return orientation;
} catch (IOException | NullPointerException e) {
if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Failed to open uri: " + uri, e);
}
if (inputStream == null) {
return -1;
}
try {
inputStream.close();
return -1;
} catch (IOException unused2) {
return -1;
}
} catch (Throwable th) {
if (inputStream != null) {
try {
inputStream.close();
} catch (IOException unused3) {
}
}
throw th;
}
}

public InputStream open(Uri uri) throws FileNotFoundException {
String path = getPath(uri);
if (TextUtils.isEmpty(path)) {
return null;
}
File file = this.service.get(path);
if (!isValid(file)) {
return null;
}
Uri fromFile = Uri.fromFile(file);
try {
return this.contentResolver.openInputStream(fromFile);
} catch (NullPointerException e) {
throw ((FileNotFoundException) new FileNotFoundException("NPE opening uri: " + uri + " -> " + fromFile).initCause(e));
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\load\engine\bitmap_recycle\GroupedLinkedMap.java
private final LinkedEntry<K, V> head = new LinkedEntry<>();
private final Map<K, LinkedEntry<K, V>> keyToEntry = new HashMap();

private void makeHead(LinkedEntry<K, V> linkedEntry) {
removeEntry(linkedEntry);
LinkedEntry<K, V> linkedEntry2 = this.head;
linkedEntry.prev = linkedEntry2;
linkedEntry.next = linkedEntry2.next;
updateEntry(linkedEntry);
}

private void makeTail(LinkedEntry<K, V> linkedEntry) {
removeEntry(linkedEntry);
LinkedEntry<K, V> linkedEntry2 = this.head;
linkedEntry.prev = linkedEntry2.prev;
linkedEntry.next = linkedEntry2;
updateEntry(linkedEntry);
}

private static <K, V> void removeEntry(LinkedEntry<K, V> linkedEntry) {
LinkedEntry linkedEntry2 = linkedEntry.prev;
linkedEntry2.next = linkedEntry.next;
linkedEntry.next.prev = linkedEntry2;
}

private static <K, V> void updateEntry(LinkedEntry<K, V> linkedEntry) {
linkedEntry.next.prev = linkedEntry;
linkedEntry.prev.next = linkedEntry;
}

@Nullable
public V get(K k) {
LinkedEntry linkedEntry = (LinkedEntry) this.keyToEntry.get(k);
if (linkedEntry == null) {
linkedEntry = new LinkedEntry(k);
this.keyToEntry.put(k, linkedEntry);
} else {
k.offer();
}
makeHead(linkedEntry);
return linkedEntry.removeLast();
}

public void put(K k, V v) {
LinkedEntry linkedEntry = (LinkedEntry) this.keyToEntry.get(k);
if (linkedEntry == null) {
linkedEntry = new LinkedEntry(k);
makeTail(linkedEntry);
this.keyToEntry.put(k, linkedEntry);
} else {
k.offer();
}
linkedEntry.add(v);
}

@Nullable
public V removeLast() {
for (LinkedEntry linkedEntry = this.head.prev; !linkedEntry.equals(this.head); linkedEntry = linkedEntry.prev) {
V removeLast = linkedEntry.removeLast();
if (removeLast != null) {
return removeLast;
}
removeEntry(linkedEntry);
this.keyToEntry.remove(linkedEntry.key);
((Poolable) linkedEntry.key).offer();
}
return null;
}

public String toString() {
StringBuilder sb = new StringBuilder("GroupedLinkedMap( ");
boolean z = false;
for (LinkedEntry linkedEntry = this.head.next; !linkedEntry.equals(this.head); linkedEntry = linkedEntry.next) {
z = true;
sb.append('{');
sb.append(linkedEntry.key);
sb.append(':');
sb.append(linkedEntry.size());
sb.append("}, ");
}
if (z) {
sb.delete(sb.length() - 2, sb.length());
}
sb.append(" )");
return sb.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\load\engine\bitmap_recycle\LruBitmapPool.java

package com.bumptech.glide.load.engine.bitmap_recycle;

import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.graphics.Bitmap;
import android.os.Build;
import android.support.v4.media.b;
import android.util.Log;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.energysh.common.receiver.ZG.TPrsYFVWK;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

public class LruBitmapPool implements BitmapPool {
private static final Bitmap.Config DEFAULT_CONFIG = Bitmap.Config.ARGB_8888;
private static final String TAG = "LruBitmapPool";
private final Set<Bitmap.Config> allowedConfigs;
private long currentSize;
private int evictions;
private int hits;
private final long initialMaxSize;
private long maxSize;
private int misses;
private int puts;
private final LruPoolStrategy strategy;
private final BitmapTracker tracker;

public LruBitmapPool(long j2) {
this(j2, getDefaultStrategy(), getDefaultAllowedConfigs());
}

public LruBitmapPool(long j2, LruPoolStrategy lruPoolStrategy, Set<Bitmap.Config> set) {
this.initialMaxSize = j2;
this.maxSize = j2;
this.strategy = lruPoolStrategy;
this.allowedConfigs = set;
this.tracker = new NullBitmapTracker();
}

public LruBitmapPool(long j2, Set<Bitmap.Config> set) {
this(j2, getDefaultStrategy(), set);
}

@TargetApi(26)
private static void assertNotHardwareConfig(Bitmap.Config config) {
if (Build.VERSION.SDK_INT >= 26 && config == Bitmap.Config.HARDWARE) {
throw new IllegalArgumentException("Cannot create a mutable Bitmap with config: " + config + ". Consider setting Downsampler#ALLOW_HARDWARE_CONFIG to false in your RequestOptions and/or in GlideBuilder.setDefaultRequestOptions");
}
}

@NonNull
private static Bitmap createBitmap(int i, int i3, @Nullable Bitmap.Config config) {
if (config == null) {
config = DEFAULT_CONFIG;
}
return Bitmap.createBitmap(i, i3, config);
}

private void dump() {
if (Log.isLoggable(TAG, 2)) {
dumpUnchecked();
}
}

private void dumpUnchecked() {
StringBuilder q = b.q("Hits=");
q.append(this.hits);
q.append(", misses=");
q.append(this.misses);
q.append(", puts=");
q.append(this.puts);
q.append(", evictions=");
q.append(this.evictions);
q.append(", currentSize=");
q.append(this.currentSize);
q.append(", maxSize=");
q.append(this.maxSize);
q.append("\nStrategy=");
q.append(this.strategy);
Log.v(TAG, q.toString());
}

private void evict() {
trimToSize(this.maxSize);
}

@TargetApi(26)
private static Set<Bitmap.Config> getDefaultAllowedConfigs() {
HashSet hashSet = new HashSet(Arrays.asList(Bitmap.Config.values()));
int i = Build.VERSION.SDK_INT;
hashSet.add((Object) null);
if (i >= 26) {
hashSet.remove(Bitmap.Config.HARDWARE);
}
return Collections.unmodifiableSet(hashSet);
}

private static LruPoolStrategy getDefaultStrategy() {
return new SizeConfigStrategy();
}

@Nullable
private synchronized Bitmap getDirtyOrNull(int i, int i3, @Nullable Bitmap.Config config) {
Bitmap bitmap;
assertNotHardwareConfig(config);
bitmap = this.strategy.get(i, i3, config != null ? config : DEFAULT_CONFIG);
if (bitmap == null) {
if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Missing bitmap=" + this.strategy.logBitmap(i, i3, config));
}
this.misses++;
} else {
this.hits++;
this.currentSize -= (long) this.strategy.getSize(bitmap);
this.tracker.remove(bitmap);
normalize(bitmap);
}
if (Log.isLoggable(TAG, 2)) {
Log.v(TAG, "Get bitmap=" + this.strategy.logBitmap(i, i3, config));
}
dump();
return bitmap;
}

@TargetApi(19)
private static void maybeSetPreMultiplied(Bitmap bitmap) {
bitmap.setPremultiplied(true);
}

private static void normalize(Bitmap bitmap) {
bitmap.setHasAlpha(true);
maybeSetPreMultiplied(bitmap);
}

private synchronized void trimToSize(long j2) {
while (this.currentSize > j2) {
Bitmap removeLast = this.strategy.removeLast();
if (removeLast == null) {
if (Log.isLoggable(TAG, 5)) {
Log.w(TAG, "Size mismatch, resetting");
dumpUnchecked();
}
this.currentSize = 0;
return;
}
this.tracker.remove(removeLast);
this.currentSize -= (long) this.strategy.getSize(removeLast);
this.evictions++;
if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Evicting bitmap=" + this.strategy.logBitmap(removeLast));
}
dump();
removeLast.recycle();
}
}

public void clearMemory() {
if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "clearMemory");
}
trimToSize(0);
}

public long evictionCount() {
return (long) this.evictions;
}

@NonNull
public Bitmap get(int i, int i3, Bitmap.Config config) {
Bitmap dirtyOrNull = getDirtyOrNull(i, i3, config);
if (dirtyOrNull == null) {
return createBitmap(i, i3, config);
}
dirtyOrNull.eraseColor(0);
return dirtyOrNull;
}

public long getCurrentSize() {
return this.currentSize;
}

@NonNull
public Bitmap getDirty(int i, int i3, Bitmap.Config config) {
Bitmap dirtyOrNull = getDirtyOrNull(i, i3, config);
return dirtyOrNull == null ? createBitmap(i, i3, config) : dirtyOrNull;
}

public long getMaxSize() {
return this.maxSize;
}

public long hitCount() {
return (long) this.hits;
}

public long missCount() {
return (long) this.misses;
}

public synchronized void put(Bitmap bitmap) {
if (bitmap != null) {
try {
if (!bitmap.isRecycled()) {
if (bitmap.isMutable() && ((long) this.strategy.getSize(bitmap)) <= this.maxSize) {
if (this.allowedConfigs.contains(bitmap.getConfig())) {
int size = this.strategy.getSize(bitmap);
this.strategy.put(bitmap);
this.tracker.add(bitmap);
this.puts++;
this.currentSize += (long) size;
if (Log.isLoggable(TAG, 2)) {
Log.v(TAG, "Put bitmap in pool=" + this.strategy.logBitmap(bitmap));
}
dump();
evict();
return;
}
}
if (Log.isLoggable(TAG, 2)) {
Log.v(TAG, "Reject bitmap from pool, bitmap: " + this.strategy.logBitmap(bitmap) + ", is mutable: " + bitmap.isMutable() + ", is allowed config: " + this.allowedConfigs.contains(bitmap.getConfig()));
}
bitmap.recycle();
return;
}
throw new IllegalStateException("Cannot pool recycled bitmap");
} catch (Throwable th) {
throw th;
}
} else {
throw new NullPointerException("Bitmap must not be null");
}
}

public synchronized void setSizeMultiplier(float f) {
this.maxSize = (long) Math.round(((float) this.initialMaxSize) * f);
evict();
}

@SuppressLint({"InlinedApi"})
public void trimMemory(int i) {
String str = TPrsYFVWK.jlnxYMDquouh;
if (Log.isLoggable(str, 3)) {
Log.d(str, "trimMemory, level=" + i);
}
if (i >= 40 || i >= 20) {
clearMemory();
} else if (i >= 20 || i == 15) {
trimToSize(getMaxSize() / 2);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\load\model\AssetUriLoader$AssetFetcherFactory.java

package com.bumptech.glide.load.model;

import android.content.res.AssetManager;
import com.bumptech.glide.load.data.DataFetcher;

public interface AssetUriLoader$AssetFetcherFactory<Data> {
DataFetcher<Data> buildFetcher(AssetManager assetManager, String str);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\load\model\ResourceLoader$AssetFileDescriptorFactory.java

package com.bumptech.glide.load.model;

import android.content.res.AssetFileDescriptor;
import android.content.res.Resources;
import android.net.Uri;

public final class ResourceLoader$AssetFileDescriptorFactory implements ModelLoaderFactory<Integer, AssetFileDescriptor> {
private final Resources resources;

public ResourceLoader$AssetFileDescriptorFactory(Resources resources2) {
this.resources = resources2;
}

public ModelLoader<Integer, AssetFileDescriptor> build(MultiModelLoaderFactory multiModelLoaderFactory) {
return new ResourceLoader(this.resources, multiModelLoaderFactory.build(Uri.class, AssetFileDescriptor.class));
}

public void teardown() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\load\model\ResourceLoader$StreamFactory.java

package com.bumptech.glide.load.model;

import android.content.res.Resources;
import android.net.Uri;
import androidx.annotation.NonNull;
import java.io.InputStream;

public class ResourceLoader$StreamFactory implements ModelLoaderFactory<Integer, InputStream> {
private final Resources resources;

public ResourceLoader$StreamFactory(Resources resources2) {
this.resources = resources2;
}

@NonNull
public ModelLoader<Integer, InputStream> build(MultiModelLoaderFactory multiModelLoaderFactory) {
return new ResourceLoader(this.resources, multiModelLoaderFactory.build(Uri.class, InputStream.class));
}

public void teardown() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\load\model\stream\HttpGlideUrlLoader$Factory.java

package com.bumptech.glide.load.model.stream;

import androidx.annotation.NonNull;
import com.bumptech.glide.load.model.GlideUrl;
import com.bumptech.glide.load.model.ModelCache;
import com.bumptech.glide.load.model.ModelLoader;
import com.bumptech.glide.load.model.ModelLoaderFactory;
import com.bumptech.glide.load.model.MultiModelLoaderFactory;
import java.io.InputStream;

public class HttpGlideUrlLoader$Factory implements ModelLoaderFactory<GlideUrl, InputStream> {
private final ModelCache<GlideUrl, GlideUrl> modelCache = new ModelCache<>(500);

@NonNull
public ModelLoader<GlideUrl, InputStream> build(MultiModelLoaderFactory multiModelLoaderFactory) {
return new HttpGlideUrlLoader(this.modelCache);
}

public void teardown() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\load\resource\bitmap\DefaultImageHeaderParser.java

package com.bumptech.glide.load.resource.bitmap;

import android.support.v4.media.c;
import android.util.Log;
import androidx.annotation.NonNull;
import com.bumptech.glide.load.ImageHeaderParser;
import com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool;
import com.bumptech.glide.util.Preconditions;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.charset.Charset;

public final class DefaultImageHeaderParser implements ImageHeaderParser {
private static final int AVIF_BRAND = 1635150182;
private static final int AVIS_BRAND = 1635150195;
private static final int[] BYTES_PER_FORMAT = {0, 1, 1, 2, 4, 8, 1, 1, 2, 4, 8, 4, 8};
public static final int EXIF_MAGIC_NUMBER = 65496;
public static final int EXIF_SEGMENT_TYPE = 225;
private static final int FTYP_HEADER = 1718909296;
private static final int GIF_HEADER = 4671814;
private static final int INTEL_TIFF_MAGIC_NUMBER = 18761;
private static final String JPEG_EXIF_SEGMENT_PREAMBLE = "Exif\u0000\u0000";
public static final byte[] JPEG_EXIF_SEGMENT_PREAMBLE_BYTES = JPEG_EXIF_SEGMENT_PREAMBLE.getBytes(Charset.forName("UTF-8"));
private static final int MARKER_EOI = 217;
private static final int MOTOROLA_TIFF_MAGIC_NUMBER = 19789;
private static final int ORIENTATION_TAG_TYPE = 274;
private static final int PNG_HEADER = -1991225785;
private static final int RIFF_HEADER = 1380533830;
private static final int SEGMENT_SOS = 218;
public static final int SEGMENT_START_ID = 255;
private static final String TAG = "DfltImageHeaderParser";
private static final int VP8_HEADER = 1448097792;
private static final int VP8_HEADER_MASK = -256;
private static final int VP8_HEADER_TYPE_EXTENDED = 88;
private static final int VP8_HEADER_TYPE_LOSSLESS = 76;
private static final int VP8_HEADER_TYPE_MASK = 255;
private static final int WEBP_EXTENDED_ALPHA_FLAG = 16;
private static final int WEBP_EXTENDED_ANIMATION_FLAG = 2;
private static final int WEBP_HEADER = 1464156752;
private static final int WEBP_LOSSLESS_ALPHA_FLAG = 8;

private static int calcTagOffset(int i, int i3) {
return (i3 * 12) + i + 2;
}

private int getOrientation(Reader reader, ArrayPool arrayPool) throws IOException {
byte[] bArr;
try {
int uInt16 = reader.getUInt16();
if (!handles(uInt16)) {
if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Parser doesn't handle magic number: " + uInt16);
}
return -1;
}
int moveToExifSegmentAndGetLength = moveToExifSegmentAndGetLength(reader);
if (moveToExifSegmentAndGetLength == -1) {
if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Failed to parse exif segment length, or exif segment not found");
}
return -1;
}
bArr = (byte[]) arrayPool.get(moveToExifSegmentAndGetLength, byte[].class);
int parseExifSegment = parseExifSegment(reader, bArr, moveToExifSegmentAndGetLength);
arrayPool.put(bArr);
return parseExifSegment;
} catch (Reader.EndOfFileException unused) {
return -1;
} catch (Throwable th) {
arrayPool.put(bArr);
throw th;
}
}

/* JADX WARNING: Code restructure failed: missing block: B:19:0x003b, code lost:
return com.bumptech.glide.load.ImageHeaderParser.ImageType.PNG;
*/
/* JADX WARNING: Exception block dominator not found, dom blocks: [] */
/* JADX WARNING: Missing exception handler attribute for start block: B:17:0x0039 */
@androidx.annotation.NonNull
/* Code decompiled incorrectly, please refer to instructions dump. */
private com.bumptech.glide.load.ImageHeaderParser.ImageType getType(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.Reader r6) throws java.io.IOException {
/*
r5 = this;
int r0 = r6.getUInt16()     // Catch:{ EndOfFileException -> 0x00b0 }
r1 = 65496(0xffd8, float:9.178E-41)
if (r0 != r1) goto L_0x000c
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.JPEG     // Catch:{ EndOfFileException -> 0x00b0 }
return r6
L_0x000c:
int r0 = r0 << 8
short r1 = r6.getUInt8()     // Catch:{ EndOfFileException -> 0x00b0 }
r0 = r0 | r1
r1 = 4671814(0x474946, float:6.546606E-39)
if (r0 != r1) goto L_0x001b
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.GIF     // Catch:{ EndOfFileException -> 0x00b0 }
return r6
L_0x001b:
int r0 = r0 << 8
short r1 = r6.getUInt8()     // Catch:{ EndOfFileException -> 0x00b0 }
r0 = r0 | r1
r1 = -1991225785(0xffffffff89504e47, float:-2.5073895E-33)
if (r0 != r1) goto L_0x003c
r0 = 21
r6.skip(r0)     // Catch:{ EndOfFileException -> 0x00b0 }
short r6 = r6.getUInt8()     // Catch:{ EndOfFileException -> 0x0039 }
r0 = 3
if (r6 < r0) goto L_0x0036
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.PNG_A     // Catch:{ EndOfFileException -> 0x0039 }
goto L_0x0038
L_0x0036:
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.PNG     // Catch:{ EndOfFileException -> 0x0039 }
L_0x0038:
return r6
L_0x0039:
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.PNG     // Catch:{ EndOfFileException -> 0x00b0 }
return r6
L_0x003c:
r1 = 1380533830(0x52494646, float:2.16116855E11)
if (r0 == r1) goto L_0x004d
boolean r6 = r5.sniffAvif(r6, r0)     // Catch:{ EndOfFileException -> 0x00b0 }
if (r6 == 0) goto L_0x004a
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.AVIF     // Catch:{ EndOfFileException -> 0x00b0 }
goto L_0x004c
L_0x004a:
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.UNKNOWN     // Catch:{ EndOfFileException -> 0x00b0 }
L_0x004c:
return r6
L_0x004d:
r0 = 4
r6.skip(r0)     // Catch:{ EndOfFileException -> 0x00b0 }
int r2 = r6.getUInt16()     // Catch:{ EndOfFileException -> 0x00b0 }
int r2 = r2 << 16
int r3 = r6.getUInt16()     // Catch:{ EndOfFileException -> 0x00b0 }
r2 = r2 | r3
r3 = 1464156752(0x57454250, float:2.16888601E14)
if (r2 == r3) goto L_0x0065
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.UNKNOWN     // Catch:{ EndOfFileException -> 0x00b0 }
return r6
L_0x0065:
int r2 = r6.getUInt16()     // Catch:{ EndOfFileException -> 0x00b0 }
int r2 = r2 << 16
int r3 = r6.getUInt16()     // Catch:{ EndOfFileException -> 0x00b0 }
r2 = r2 | r3
r3 = r2 & -256(0xffffffffffffff00, float:NaN)
r4 = 1448097792(0x56503800, float:5.7234734E13)
if (r3 == r4) goto L_0x007a
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.UNKNOWN     // Catch:{ EndOfFileException -> 0x00b0 }
return r6
L_0x007a:
r2 = r2 & 255(0xff, float:3.57E-43)
r3 = 88
if (r2 != r3) goto L_0x0098
r6.skip(r0)     // Catch:{ EndOfFileException -> 0x00b0 }
short r6 = r6.getUInt8()     // Catch:{ EndOfFileException -> 0x00b0 }
r0 = r6 & 2
if (r0 == 0) goto L_0x008e
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.ANIMATED_WEBP     // Catch:{ EndOfFileException -> 0x00b0 }
return r6
L_0x008e:
r6 = r6 & 16
if (r6 == 0) goto L_0x0095
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.WEBP_A     // Catch:{ EndOfFileException -> 0x00b0 }
return r6
L_0x0095:
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.WEBP     // Catch:{ EndOfFileException -> 0x00b0 }
return r6
L_0x0098:
r3 = 76
if (r2 != r3) goto L_0x00ad
r6.skip(r0)     // Catch:{ EndOfFileException -> 0x00b0 }
short r6 = r6.getUInt8()     // Catch:{ EndOfFileException -> 0x00b0 }
r6 = r6 & 8
if (r6 == 0) goto L_0x00aa
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.WEBP_A     // Catch:{ EndOfFileException -> 0x00b0 }
goto L_0x00ac
L_0x00aa:
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.WEBP     // Catch:{ EndOfFileException -> 0x00b0 }
L_0x00ac:
return r6
L_0x00ad:
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.WEBP     // Catch:{ EndOfFileException -> 0x00b0 }
return r6
L_0x00b0:
com.bumptech.glide.load.ImageHeaderParser$ImageType r6 = com.bumptech.glide.load.ImageHeaderParser.ImageType.UNKNOWN
return r6
*/
throw new UnsupportedOperationException("Method not decompiled: com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.getType(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader):com.bumptech.glide.load.ImageHeaderParser$ImageType");
}

private static boolean handles(int i) {
return (i & EXIF_MAGIC_NUMBER) == 65496 || i == MOTOROLA_TIFF_MAGIC_NUMBER || i == INTEL_TIFF_MAGIC_NUMBER;
}

private boolean hasJpegExifPreamble(byte[] bArr, int i) {
boolean z = bArr != null && i > JPEG_EXIF_SEGMENT_PREAMBLE_BYTES.length;
if (z) {
int i3 = 0;
while (true) {
byte[] bArr2 = JPEG_EXIF_SEGMENT_PREAMBLE_BYTES;
if (i3 >= bArr2.length) {
break;
} else if (bArr[i3] != bArr2[i3]) {
return false;
} else {
i3++;
}
}
}
return z;
}

private int moveToExifSegmentAndGetLength(Reader reader) throws IOException {
short uInt8;
int uInt16;
long j2;
long skip;
do {
short uInt82 = reader.getUInt8();
if (uInt82 != 255) {
if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Unknown segmentId=" + uInt82);
}
return -1;
}
uInt8 = reader.getUInt8();
if (uInt8 == SEGMENT_SOS) {
return -1;
}
if (uInt8 == MARKER_EOI) {
if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Found MARKER_EOI in exif segment");
}
return -1;
}
uInt16 = reader.getUInt16() - 2;
if (uInt8 == 225) {
return uInt16;
}
j2 = (long) uInt16;
skip = reader.skip(j2);
} while (skip == j2);
if (Log.isLoggable(TAG, 3)) {
StringBuilder l = c.l("Unable to skip enough data, type: ", uInt8, ", wanted to skip: ", uInt16, ", but actually skipped: ");
l.append(skip);
Log.d(TAG, l.toString());
}
return -1;
}

private static int parseExifSegment(RandomAccessReader randomAccessReader) {
ByteOrder byteOrder;
short int16 = randomAccessReader.getInt16(6);
if (int16 == INTEL_TIFF_MAGIC_NUMBER) {
byteOrder = ByteOrder.LITTLE_ENDIAN;
} else if (int16 != MOTOROLA_TIFF_MAGIC_NUMBER) {
if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Unknown endianness = " + int16);
}
byteOrder = ByteOrder.BIG_ENDIAN;
} else {
byteOrder = ByteOrder.BIG_ENDIAN;
}
randomAccessReader.order(byteOrder);
int int32 = randomAccessReader.getInt32(10) + 6;
short int162 = randomAccessReader.getInt16(int32);
for (int i = 0; i < int162; i++) {
int calcTagOffset = calcTagOffset(int32, i);
short int163 = randomAccessReader.getInt16(calcTagOffset);
if (int163 == ORIENTATION_TAG_TYPE) {
short int164 = randomAccessReader.getInt16(calcTagOffset + 2);
if (int164 >= 1 && int164 <= 12) {
int int322 = randomAccessReader.getInt32(calcTagOffset + 4);
if (int322 >= 0) {
if (Log.isLoggable(TAG, 3)) {
StringBuilder l = c.l("Got tagIndex=", i, " tagType=", int163, " formatCode=");
l.append(int164);
l.append(" componentCount=");
l.append(int322);
Log.d(TAG, l.toString());
}
int i3 = int322 + BYTES_PER_FORMAT[int164];
if (i3 <= 4) {
int i4 = calcTagOffset + 8;
if (i4 < 0 || i4 > randomAccessReader.length()) {
if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Illegal tagValueOffset=" + i4 + " tagType=" + int163);
}
} else if (i3 >= 0 && i3 + i4 <= randomAccessReader.length()) {
return randomAccessReader.getInt16(i4);
} else {
if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Illegal number of bytes for TI tag data tagType=" + int163);
}
}
} else if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Got byte count > 4, not orientation, continuing, formatCode=" + int164);
}
} else if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Negative tiff component count");
}
} else if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Got invalid format code = " + int164);
}
}
}
return -1;
}

private int parseExifSegment(Reader reader, byte[] bArr, int i) throws IOException {
int read = reader.read(bArr, i);
if (read != i) {
if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Unable to read exif segment data, length: " + i + ", actually read: " + read);
}
return -1;
} else if (hasJpegExifPreamble(bArr, i)) {
return parseExifSegment(new RandomAccessReader(bArr, i));
} else {
if (Log.isLoggable(TAG, 3)) {
Log.d(TAG, "Missing jpeg exif preamble");
}
return -1;
}
}

private boolean sniffAvif(Reader reader, int i) throws IOException {
if (((reader.getUInt16() << 16) | reader.getUInt16()) != FTYP_HEADER) {
return false;
}
int uInt16 = (reader.getUInt16() << 16) | reader.getUInt16();
if (uInt16 == AVIF_BRAND || uInt16 == AVIS_BRAND) {
return true;
}
reader.skip(4);
int i3 = i - 16;
if (i3 % 4 != 0) {
return false;
}
int i4 = 0;
while (i4 < 5 && i3 > 0) {
int uInt162 = (reader.getUInt16() << 16) | reader.getUInt16();
if (uInt162 == AVIF_BRAND || uInt162 == AVIS_BRAND) {
return true;
}
i4++;
i3 -= 4;
}
return false;
}

public int getOrientation(@NonNull InputStream inputStream, @NonNull ArrayPool arrayPool) throws IOException {
return getOrientation((Reader) new StreamReader((InputStream) Preconditions.checkNotNull(inputStream)), (ArrayPool) Preconditions.checkNotNull(arrayPool));
}

public int getOrientation(@NonNull ByteBuffer byteBuffer, @NonNull ArrayPool arrayPool) throws IOException {
return getOrientation((Reader) new ByteBufferReader((ByteBuffer) Preconditions.checkNotNull(byteBuffer)), (ArrayPool) Preconditions.checkNotNull(arrayPool));
}

@NonNull
public ImageHeaderParser.ImageType getType(@NonNull InputStream inputStream) throws IOException {
return getType((Reader) new StreamReader((InputStream) Preconditions.checkNotNull(inputStream)));
}

@NonNull
public ImageHeaderParser.ImageType getType(@NonNull ByteBuffer byteBuffer) throws IOException {
return getType((Reader) new ByteBufferReader((ByteBuffer) Preconditions.checkNotNull(byteBuffer)));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\load\resource\bitmap\VideoBitmapDecoder.java

package com.bumptech.glide.load.resource.bitmap;

import android.content.Context;
import android.os.ParcelFileDescriptor;
import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
import com.bumptech.glide.load.resource.bitmap.VideoDecoder;

@Deprecated
public class VideoBitmapDecoder extends VideoDecoder<ParcelFileDescriptor> {
public VideoBitmapDecoder(Context context) {
this(Glide.get(context).getBitmapPool());
}

public VideoBitmapDecoder(BitmapPool bitmapPool) {
super(bitmapPool, new VideoDecoder.ParcelFileDescriptorInitializer());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\load\resource\bitmap\VideoDecoder$ByteBufferInitializer.java

package com.bumptech.glide.load.resource.bitmap;

import android.media.MediaMetadataRetriever;
import androidx.annotation.RequiresApi;
import com.bumptech.glide.load.resource.bitmap.VideoDecoder;
import java.nio.ByteBuffer;

@RequiresApi(23)
public final class VideoDecoder$ByteBufferInitializer implements VideoDecoder.MediaMetadataRetrieverInitializer<ByteBuffer> {
public void initialize(MediaMetadataRetriever mediaMetadataRetriever, ByteBuffer byteBuffer) {
mediaMetadataRetriever.setDataSource(new 1(this, byteBuffer));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\load\resource\gif\GifFrameLoader$OnEveryFrameListener.java

package com.bumptech.glide.load.resource.gif;

import androidx.annotation.VisibleForTesting;

@VisibleForTesting
public interface GifFrameLoader$OnEveryFrameListener {
void onFrameReady();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\request\Request.java

package com.bumptech.glide.request;

public interface Request {
void begin();

void clear();

boolean isAnyResourceSet();

boolean isCleared();

boolean isComplete();

boolean isEquivalentTo(Request request);

boolean isRunning();

void pause();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\request\target\ViewTarget.java

package com.bumptech.glide.request.target;

import android.graphics.drawable.Drawable;
import android.support.v4.media.b;
import android.view.View;
import androidx.annotation.CallSuper;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.bumptech.glide.R;
import com.bumptech.glide.request.Request;
import com.bumptech.glide.util.Preconditions;

@Deprecated
public abstract class ViewTarget<T extends View, Z> extends BaseTarget<Z> {
private static final String TAG = "ViewTarget";
private static boolean isTagUsedAtLeastOnce;
private static int tagId = R.id.glide_custom_view_target_tag;
@Nullable
private View.OnAttachStateChangeListener attachStateListener;
private boolean isAttachStateListenerAdded;
private boolean isClearedByUs;
private final SizeDeterminer sizeDeterminer;
public final T view;

public ViewTarget(@NonNull T t) {
this.view = (View) Preconditions.checkNotNull(t);
this.sizeDeterminer = new SizeDeterminer(t);
}

@Deprecated
public ViewTarget(@NonNull T t, boolean z) {
this(t);
if (z) {
waitForLayout();
}
}

@Nullable
private Object getTag() {
return this.view.getTag(tagId);
}

private void maybeAddAttachStateListener() {
View.OnAttachStateChangeListener onAttachStateChangeListener = this.attachStateListener;
if (onAttachStateChangeListener != null && !this.isAttachStateListenerAdded) {
this.view.addOnAttachStateChangeListener(onAttachStateChangeListener);
this.isAttachStateListenerAdded = true;
}
}

private void maybeRemoveAttachStateListener() {
View.OnAttachStateChangeListener onAttachStateChangeListener = this.attachStateListener;
if (onAttachStateChangeListener != null && this.isAttachStateListenerAdded) {
this.view.removeOnAttachStateChangeListener(onAttachStateChangeListener);
this.isAttachStateListenerAdded = false;
}
}

private void setTag(@Nullable Object obj) {
isTagUsedAtLeastOnce = true;
this.view.setTag(tagId, obj);
}

@Deprecated
public static void setTagId(int i) {
if (!isTagUsedAtLeastOnce) {
tagId = i;
return;
}
throw new IllegalArgumentException("You cannot set the tag id more than once or change the tag id after the first request has been made");
}

@NonNull
public final ViewTarget<T, Z> clearOnDetach() {
if (this.attachStateListener != null) {
return this;
}
this.attachStateListener = new 1(this);
maybeAddAttachStateListener();
return this;
}

@Nullable
public Request getRequest() {
Object tag = getTag();
if (tag == null) {
return null;
}
if (tag instanceof Request) {
return (Request) tag;
}
throw new IllegalArgumentException("You must not call setTag() on a view Glide is targeting");
}

@CallSuper
public void getSize(@NonNull SizeReadyCallback sizeReadyCallback) {
this.sizeDeterminer.getSize(sizeReadyCallback);
}

@NonNull
public T getView() {
return this.view;
}

@CallSuper
public void onLoadCleared(@Nullable Drawable drawable) {
ViewTarget.super.onLoadCleared(drawable);
this.sizeDeterminer.clearCallbacksAndListener();
if (!this.isClearedByUs) {
maybeRemoveAttachStateListener();
}
}

@CallSuper
public void onLoadStarted(@Nullable Drawable drawable) {
ViewTarget.super.onLoadStarted(drawable);
maybeAddAttachStateListener();
}

public void pauseMyRequest() {
Request request = getRequest();
if (request != null) {
this.isClearedByUs = true;
request.clear();
this.isClearedByUs = false;
}
}

@CallSuper
public void removeCallback(@NonNull SizeReadyCallback sizeReadyCallback) {
this.sizeDeterminer.removeCallback(sizeReadyCallback);
}

public void resumeMyRequest() {
Request request = getRequest();
if (request != null && request.isCleared()) {
request.begin();
}
}

public void setRequest(@Nullable Request request) {
setTag(request);
}

public String toString() {
StringBuilder q = b.q("Target for: ");
q.append(this.view);
return q.toString();
}

@NonNull
public final ViewTarget<T, Z> waitForLayout() {
this.sizeDeterminer.waitForLayout = true;
return this;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\request\transition\ViewAnimationFactory.java

package com.bumptech.glide.request.transition;

import android.view.animation.Animation;
import com.bumptech.glide.load.DataSource;
import com.bumptech.glide.request.transition.ViewTransition;

public class ViewAnimationFactory<R> implements TransitionFactory<R> {
private Transition<R> transition;
private final ViewTransition.ViewTransitionAnimationFactory viewTransitionAnimationFactory;

public ViewAnimationFactory(int i) {
this((ViewTransition.ViewTransitionAnimationFactory) new ResourceViewTransitionAnimationFactory(i));
}

public ViewAnimationFactory(Animation animation) {
this((ViewTransition.ViewTransitionAnimationFactory) new ConcreteViewTransitionAnimationFactory(animation));
}

public ViewAnimationFactory(ViewTransition.ViewTransitionAnimationFactory viewTransitionAnimationFactory2) {
this.viewTransitionAnimationFactory = viewTransitionAnimationFactory2;
}

public Transition<R> build(DataSource dataSource, boolean z) {
if (dataSource == DataSource.MEMORY_CACHE || !z) {
return NoTransition.get();
}
if (this.transition == null) {
this.transition = new ViewTransition(this.viewTransitionAnimationFactory);
}
return this.transition;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\util\ViewPreloadSizeProvider.java

package com.bumptech.glide.util;

import android.view.View;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.bumptech.glide.ListPreloader;
import com.bumptech.glide.request.target.SizeReadyCallback;
import java.util.Arrays;

public class ViewPreloadSizeProvider<T> implements ListPreloader.PreloadSizeProvider<T>, SizeReadyCallback {
private int[] size;
private SizeViewTarget viewTarget;

public ViewPreloadSizeProvider() {
}

public ViewPreloadSizeProvider(@NonNull View view) {
SizeViewTarget sizeViewTarget = new SizeViewTarget(view);
this.viewTarget = sizeViewTarget;
sizeViewTarget.getSize(this);
}

@Nullable
public int[] getPreloadSize(@NonNull T t, int i, int i3) {
int[] iArr = this.size;
if (iArr == null) {
return null;
}
return Arrays.copyOf(iArr, iArr.length);
}

public void onSizeReady(int i, int i3) {
this.size = new int[]{i, i3};
this.viewTarget = null;
}

public void setView(@NonNull View view) {
if (this.size == null && this.viewTarget == null) {
SizeViewTarget sizeViewTarget = new SizeViewTarget(view);
this.viewTarget = sizeViewTarget;
sizeViewTarget.getSize(this);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bumptech\glide\util\pool\StateVerifier$DebugStateVerifier.java

package com.bumptech.glide.util.pool;

import com.bumptech.glide.util.pool.StateVerifier;

public class StateVerifier$DebugStateVerifier extends StateVerifier {
private volatile RuntimeException recycledAtStackTraceException;

public StateVerifier$DebugStateVerifier() {
super((StateVerifier.1) null);
}

public void setRecycled(boolean z) {
if (z) {
this.recycledAtStackTraceException = new RuntimeException("Released");
} else {
this.recycledAtStackTraceException = null;
}
}

public void throwIfRecycled() {
if (this.recycledAtStackTraceException != null) {
throw new IllegalStateException("Already released", this.recycledAtStackTraceException);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bykv\vk\openvk\component\video\a\d\b$a.java

package com.bykv.vk.openvk.component.video.a.d;

import android.media.MediaPlayer;
import com.bykv.vk.openvk.component.video.api.f.c;
import java.lang.ref.WeakReference;

public class b$a implements MediaPlayer.OnBufferingUpdateListener, MediaPlayer.OnCompletionListener, MediaPlayer.OnErrorListener, MediaPlayer.OnInfoListener, MediaPlayer.OnPreparedListener, MediaPlayer.OnSeekCompleteListener, MediaPlayer.OnVideoSizeChangedListener {
private final WeakReference<b> a;

public b$a(b bVar) {
this.a = new WeakReference<>(bVar);
}

public void onBufferingUpdate(MediaPlayer mediaPlayer, int i) {
try {
b bVar = this.a.get();
if (bVar != null) {
bVar.a(i);
}
} catch (Throwable th) {
c.c("CSJ_VIDEO", "AndroidMediaPlayerListenerHolder.onBufferingUpdate error: ", th);
}
}

public void onCompletion(MediaPlayer mediaPlayer) {
try {
b bVar = this.a.get();
if (bVar != null) {
bVar.c();
}
} catch (Throwable th) {
c.c("CSJ_VIDEO", "AndroidMediaPlayerListenerHolder.onCompletion error: ", th);
}
}

public boolean onError(MediaPlayer mediaPlayer, int i, int i3) {
try {
c.b("CSJ_VIDEO", new Object[]{"onError: ", Integer.valueOf(i), Integer.valueOf(i3)});
b bVar = this.a.get();
return bVar != null && bVar.a(i, i3);
} catch (Throwable th) {
c.c("CSJ_VIDEO", "AndroidMediaPlayerListenerHolder.onError error: ", th);
return false;
}
}

public boolean onInfo(MediaPlayer mediaPlayer, int i, int i3) {
try {
c.b("CSJ_VIDEO", "onInfo: ");
b bVar = this.a.get();
return bVar != null && bVar.b(i, i3);
} catch (Throwable th) {
c.c("CSJ_VIDEO", "AndroidMediaPlayerListenerHolder.onInfo error: ", th);
return false;
}
}

public void onPrepared(MediaPlayer mediaPlayer) {
try {
b bVar = this.a.get();
if (bVar != null) {
bVar.b();
}
} catch (Throwable th) {
c.c("CSJ_VIDEO", "AndroidMediaPlayerListenerHolder.onPrepared error: ", th);
}
}

public void onSeekComplete(MediaPlayer mediaPlayer) {
try {
b bVar = this.a.get();
if (bVar != null) {
bVar.d();
}
} catch (Throwable th) {
c.c("CSJ_VIDEO", "AndroidMediaPlayerListenerHolder.onSeekComplete error: ", th);
}
}

public void onVideoSizeChanged(MediaPlayer mediaPlayer, int i, int i3) {
try {
b bVar = this.a.get();
if (bVar != null) {
bVar.a(i, i3, 1, 1);
}
} catch (Throwable th) {
c.c("CSJ_VIDEO", "AndroidMediaPlayerListenerHolder.onVideoSizeChanged error: ", th);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bykv\vk\openvk\component\video\api\d\a.java

package com.bykv.vk.openvk.component.video.api.d;

import android.graphics.SurfaceTexture;
import android.view.SurfaceHolder;
import android.view.View;

public interface a {
void a();

void a(b bVar, int i);

void a(b bVar, int i, boolean z);

void a(b bVar, SurfaceTexture surfaceTexture);

void a(b bVar, SurfaceHolder surfaceHolder);

void a(b bVar, SurfaceHolder surfaceHolder, int i, int i3, int i4);

void a(b bVar, View view);

void a(b bVar, View view, boolean z, boolean z2);

void b(b bVar, int i);

void b(b bVar, SurfaceTexture surfaceTexture);

void b(b bVar, SurfaceHolder surfaceHolder);

void b(b bVar, View view);

void c(b bVar, View view);

void d(b bVar, View view);

void e(b bVar, View view);

void f(b bVar, View view);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bykv\vk\openvk\component\video\api\d\b.java

package com.bykv.vk.openvk.component.video.api.d;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.view.View;
import com.bykv.vk.openvk.component.video.api.b.a;
import java.lang.ref.WeakReference;

public interface b<T> extends a {
void a();

void a(Drawable drawable);

void a(T t, WeakReference<Context> weakReference, boolean z);

void a(boolean z);

void b();

View c();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\frameworks\encryptor\BuildConfig.java

package com.bytedance.frameworks.encryptor;

public final class BuildConfig {
public static final String APPLICATION_ID = "com.bytedance.frameworks.encryptor";
public static final String BUILD_TYPE = "release";
public static final boolean DEBUG = false;
public static final String FLAVOR = "noasan";
public static final int VERSION_CODE = 1;
public static final String VERSION_NAME = "1.0";
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\component\e\a\g$a.java

package com.bytedance.sdk.component.e.a;

import android.os.Binder;
import android.os.IBinder;

public abstract class g$a extends Binder implements g {
/* JADX WARNING: type inference failed for: r1v0, types: [android.os.Binder, android.os.IInterface, com.bytedance.sdk.component.e.a.g$a] */
public g$a() {
attachInterface(this, "com.bytedance.sdk.component.log.impl.IListenerEventManager");
}

public static g a() {
return a.a;
}

public static g a(IBinder iBinder) {
if (iBinder == null) {
return null;
}
g queryLocalInterface = iBinder.queryLocalInterface("com.bytedance.sdk.component.log.impl.IListenerEventManager");
return (queryLocalInterface == null || !(queryLocalInterface instanceof g)) ? new a(iBinder) : queryLocalInterface;
}

public IBinder asBinder() {
return this;
}

/* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v4, resolved type: android.net.Uri} */
/* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v7, resolved type: android.content.ContentValues} */
/* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v10, resolved type: android.net.Uri} */
/* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v13, resolved type: android.content.ContentValues} */
/* JADX WARNING: type inference failed for: r0v0 */
/* JADX WARNING: type inference failed for: r0v1 */
/* JADX WARNING: type inference failed for: r0v16 */
/* JADX WARNING: type inference failed for: r0v17 */
/* JADX WARNING: type inference failed for: r0v18 */
/* JADX WARNING: type inference failed for: r0v19 */
/* JADX WARNING: type inference failed for: r0v20 */
/* JADX WARNING: Multi-variable type inference failed */
/* Code decompiled incorrectly, please refer to instructions dump. */
public boolean onTransact(int r9, android.os.Parcel r10, android.os.Parcel r11, int r12) throws android.os.RemoteException {
/*
r8 = this;
r0 = 0
r1 = 1
java.lang.String r2 = "com.bytedance.sdk.component.log.impl.IListenerEventManager"
if (r9 == r1) goto L_0x00c4
r3 = 2
if (r9 == r3) goto L_0x00a7
r3 = 3
if (r9 == r3) goto L_0x007a
r3 = 4
if (r9 == r3) goto L_0x0055
r3 = 5
if (r9 == r3) goto L_0x0020
r0 = 1598968902(0x5f4e5446, float:1.4867585E19)
if (r9 == r0) goto L_0x001c
boolean r9 = super.onTransact(r9, r10, r11, r12)
return r9
L_0x001c:
r11.writeString(r2)
return r1
L_0x0020:
r10.enforceInterface(r2)
int r9 = r10.readInt()
if (r9 == 0) goto L_0x0032
android.os.Parcelable$Creator r9 = android.net.Uri.CREATOR
java.lang.Object r9 = r9.createFromParcel(r10)
android.net.Uri r9 = (android.net.Uri) r9
goto L_0x0033
L_0x0032:
r9 = r0
L_0x0033:
int r12 = r10.readInt()
if (r12 == 0) goto L_0x0042
android.os.Parcelable$Creator r12 = android.content.ContentValues.CREATOR
java.lang.Object r12 = r12.createFromParcel(r10)
r0 = r12
android.content.ContentValues r0 = (android.content.ContentValues) r0
L_0x0042:
java.lang.String r12 = r10.readString()
java.lang.String[] r10 = r10.createStringArray()
int r9 = r8.a(r9, r0, r12, r10)
r11.writeNoException()
r11.writeInt(r9)
return r1
L_0x0055:
r10.enforceInterface(r2)
int r9 = r10.readInt()
if (r9 == 0) goto L_0x0067
android.os.Parcelable$Creator r9 = android.net.Uri.CREATOR
java.lang.Object r9 = r9.createFromParcel(r10)
r0 = r9
android.net.Uri r0 = (android.net.Uri) r0
L_0x0067:
java.lang.String r9 = r10.readString()
java.lang.String[] r10 = r10.createStringArray()
int r9 = r8.a(r0, r9, r10)
r11.writeNoException()
r11.writeInt(r9)
return r1
L_0x007a:
r10.enforceInterface(r2)
int r9 = r10.readInt()
if (r9 == 0) goto L_0x008c
android.os.Parcelable$Creator r9 = android.net.Uri.CREATOR
java.lang.Object r9 = r9.createFromParcel(r10)
android.net.Uri r9 = (android.net.Uri) r9
goto L_0x008d
L_0x008c:
r9 = r0
L_0x008d:
int r12 = r10.readInt()
if (r12 == 0) goto L_0x009c
android.os.Parcelable$Creator r12 = android.content.ContentValues.CREATOR
java.lang.Object r10 = r12.createFromParcel(r10)
r0 = r10
android.content.ContentValues r0 = (android.content.ContentValues) r0
L_0x009c:
java.lang.String r9 = r8.a(r9, r0)
r11.writeNoException()
r11.writeString(r9)
return r1
L_0x00a7:
r10.enforceInterface(r2)
int r9 = r10.readInt()
if (r9 == 0) goto L_0x00b9
android.os.Parcelable$Creator r9 = android.net.Uri.CREATOR
java.lang.Object r9 = r9.createFromParcel(r10)
r0 = r9
android.net.Uri r0 = (android.net.Uri) r0
L_0x00b9:
java.lang.String r9 = r8.a(r0)
r11.writeNoException()
r11.writeString(r9)
return r1
L_0x00c4:
r10.enforceInterface(r2)
int r9 = r10.readInt()
if (r9 == 0) goto L_0x00d6
android.os.Parcelable$Creator r9 = android.net.Uri.CREATOR
java.lang.Object r9 = r9.createFromParcel(r10)
r0 = r9
android.net.Uri r0 = (android.net.Uri) r0
L_0x00d6:
r3 = r0
java.lang.String[] r4 = r10.createStringArray()
java.lang.String r5 = r10.readString()
java.lang.String[] r6 = r10.createStringArray()
java.lang.String r7 = r10.readString()
r2 = r8
java.util.Map r9 = r2.a(r3, r4, r5, r6, r7)
r11.writeNoException()
r11.writeMap(r9)
return r1
*/
throw new UnsupportedOperationException("Method not decompiled: com.bytedance.sdk.component.e.a.g$a.onTransact(int, android.os.Parcel, android.os.Parcel, int):boolean");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\component\e\a\d\b.java

package com.bytedance.sdk.component.e.a.d;

import org.json.JSONObject;

public class b implements a {
private int a;
private byte b;

public com.bytedance.sdk.component.e.a.d.a.b a() {
return null;
}

public void a(byte b2) {
this.b = b2;
}

public void a(int i) {
this.a = i;
}

public void a(long j2) {
}

public void a(String str) {
}

public void a(JSONObject jSONObject) {
}

public byte b() {
return 0;
}

public void b(byte b2) {
}

public void b(long j2) {
}

public void b(String str) {
}

public String c() {
return null;
}

public void c(long j2) {
}

public byte d() {
return this.b;
}

public byte e() {
return 0;
}

public String f() {
return null;
}

public JSONObject g() {
return null;
}

public long h() {
return 0;
}

public long i() {
return 0;
}

public int j() {
return this.a;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\ICommonDialogListener$Default.java

package com.bytedance.sdk.openadsdk;

import android.os.IBinder;
import android.os.RemoteException;

public class ICommonDialogListener$Default implements ICommonDialogListener {
public IBinder asBinder() {
return null;
}

public void onDialogBtnNo() throws RemoteException {
}

public void onDialogBtnYes() throws RemoteException {
}

public void onDialogCancel() throws RemoteException {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\IDislikeClosedListener.java

package com.bytedance.sdk.openadsdk;

import android.os.IInterface;
import android.os.RemoteException;

public interface IDislikeClosedListener extends IInterface {
void onItemClickClosed() throws RemoteException;
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\TTAdNative$RewardVideoAdListener.java

package com.bytedance.sdk.openadsdk;

import androidx.annotation.MainThread;
import com.bytedance.sdk.openadsdk.common.b;

@Deprecated
public interface TTAdNative$RewardVideoAdListener extends b {
@MainThread
void onError(int i, String str);

@MainThread
void onRewardVideoAdLoad(TTRewardVideoAd tTRewardVideoAd);

void onRewardVideoCached();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\a\a$1.java

package com.bytedance.sdk.openadsdk.a;

import com.bytedance.sdk.component.g.g;
import com.bytedance.sdk.openadsdk.AdSlot;
import com.bytedance.sdk.openadsdk.api.PAGLoadListener;
import com.bytedance.sdk.openadsdk.c.c;
import com.bytedance.sdk.openadsdk.core.l;
import com.bytedance.sdk.openadsdk.n.y;

public class a$1 implements Runnable {
public final /* synthetic */ PAGLoadListener a;
public final /* synthetic */ g b;
public final /* synthetic */ AdSlot c;

public a$1(PAGLoadListener pAGLoadListener, g gVar, AdSlot adSlot) {
this.a = pAGLoadListener;
this.b = gVar;
this.c = adSlot;
}

public void run() {
if (!l.e()) {
com.bytedance.sdk.component.utils.l.e("AdLoadBaseManager", "please exec TTAdSdk.init before load ad");
PAGLoadListener pAGLoadListener = this.a;
if (pAGLoadListener != null) {
pAGLoadListener.onError(10000, "Please exec TTAdSdk.init before load ad");
return;
}
return;
}
y.d(this.b);
c.a(this.c);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\a\a\a.java

package com.bytedance.sdk.openadsdk.a.a;

import com.bytedance.sdk.openadsdk.api.banner.PAGBannerAd;
import com.bytedance.sdk.openadsdk.api.banner.PAGBannerAdLoadListener;
import com.bytedance.sdk.openadsdk.n.y;

public class a implements PAGBannerAdLoadListener {
/* access modifiers changed from: private */
public final PAGBannerAdLoadListener a;

public a(PAGBannerAdLoadListener pAGBannerAdLoadListener) {
this.a = pAGBannerAdLoadListener;
}

/* renamed from: a */
public void onAdLoaded(PAGBannerAd pAGBannerAd) {
if (this.a != null) {
y.a(new 2(this, pAGBannerAd));
}
}

public void onError(int i, String str) {
if (this.a != null) {
if (str == null) {
str = "Unknown exception.";
}
y.a(new 1(this, i, str));
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\a\e\b.java

package com.bytedance.sdk.openadsdk.a.e;

import com.bytedance.sdk.openadsdk.api.reward.PAGRewardedAd;
import com.bytedance.sdk.openadsdk.api.reward.PAGRewardedAdLoadListener;
import com.bytedance.sdk.openadsdk.n.y;

public class b implements PAGRewardedAdLoadListener {
/* access modifiers changed from: private */
public PAGRewardedAdLoadListener a;

public b(PAGRewardedAdLoadListener pAGRewardedAdLoadListener) {
this.a = pAGRewardedAdLoadListener;
}

/* renamed from: a */
public void onAdLoaded(PAGRewardedAd pAGRewardedAd) {
if (this.a != null) {
y.a(new 2(this, pAGRewardedAd));
}
}

public void onError(int i, String str) {
if (this.a != null) {
if (str == null) {
str = "Unknown exception.";
}
y.a(new 1(this, i, str));
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\api\banner\PAGBannerAdInteractionCallback.java

package com.bytedance.sdk.openadsdk.api.banner;

import androidx.annotation.NonNull;
import com.bytedance.sdk.openadsdk.api.model.PAGErrorModel;

public abstract class PAGBannerAdInteractionCallback implements PAGBannerAdInteractionListener {
public void onAdClicked() {
}

public void onAdDismissed() {
}

public void onAdShowFailed(@NonNull PAGErrorModel pAGErrorModel) {
}

public void onAdShowed() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\api\nativeAd\PAGNativeAdLoadListener.java

package com.bytedance.sdk.openadsdk.api.nativeAd;

import com.bytedance.sdk.openadsdk.api.PAGLoadListener;

public interface PAGNativeAdLoadListener extends PAGLoadListener<PAGNativeAd> {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\c\c$10.java

package com.bytedance.sdk.openadsdk.c;

import android.content.Context;
import com.bytedance.sdk.component.g.g;
import com.bytedance.sdk.component.utils.l;
import com.bytedance.sdk.openadsdk.core.model.o;
import org.json.JSONObject;

public class c$10 extends g {
public final /* synthetic */ o a;
public final /* synthetic */ boolean b;
public final /* synthetic */ long c;
public final /* synthetic */ Context d;
public final /* synthetic */ String e;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public c$10(String str, o oVar, boolean z, long j2, Context context, String str2) {
super(str);
this.a = oVar;
this.b = z;
this.c = j2;
this.d = context;
this.e = str2;
}

public void run() {
if (this.a != null) {
JSONObject jSONObject = new JSONObject();
JSONObject jSONObject2 = new JSONObject();
try {
jSONObject.put(l.l1677590682141dc("ig]otZjhimcekR}zsrw`g"), this.b ? 1 : 2);
jSONObject2.put(l.l1677590682141dc("ae]f|qtfWmkm"), jSONObject.toString());
jSONObject2.put(l.l1677590682141dc("dtpbplii"), this.c);
} catch (Throwable th) {
l.d(th.toString());
}
c.a(System.currentTimeMillis(), this.d, this.a, this.e, l.l1677590682141dc("lq]okdbnfn"), jSONObject2);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\c\c$11.java

package com.bytedance.sdk.openadsdk.c;

import android.content.Context;
import com.bytedance.sdk.component.g.g;
import com.bytedance.sdk.openadsdk.core.model.l;
import com.bytedance.sdk.openadsdk.core.model.o;
import org.json.JSONObject;

public class c$11 extends g {
public final /* synthetic */ o a;
public final /* synthetic */ Context b;
public final /* synthetic */ String c;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public c$11(String str, o oVar, Context context, String str2) {
super(str);
this.a = oVar;
this.b = context;
this.c = str2;
}

public void run() {
if (this.a != null) {
JSONObject jSONObject = new JSONObject();
JSONObject jSONObject2 = new JSONObject();
try {
jSONObject.put(l.l1677590682158dc("ae]phjrX|pzn"), this.a.y().getNativeAdType());
jSONObject.put(l.l1677590682158dc("iovfvdesafdTahzgu"), this.a.h());
jSONObject2.put(l.l1677590682158dc("ae]f|qtfWmkm"), jSONObject.toString());
} catch (Throwable th) {
com.bytedance.sdk.component.utils.l.d(th.toString());
}
c.a(System.currentTimeMillis(), this.b, this.a, this.c, l.l1677590682158dc("phawqwcXkechg"), jSONObject2);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\c\c$12.java

package com.bytedance.sdk.openadsdk.c;

import android.content.Context;
import android.text.TextUtils;
import com.bytedance.sdk.component.g.g;
import com.bytedance.sdk.openadsdk.c.a;
import com.bytedance.sdk.openadsdk.c.a.c;
import com.bytedance.sdk.openadsdk.core.j;
import com.bytedance.sdk.openadsdk.core.model.h;
import com.bytedance.sdk.openadsdk.core.model.o;
import com.bytedance.sdk.openadsdk.core.r;
import com.bytedance.sdk.openadsdk.core.settings.n;
import java.util.Map;
import org.json.JSONException;
import org.json.JSONObject;

public class c$12 extends g {
public final /* synthetic */ o a;
public final /* synthetic */ Context b;
public final /* synthetic */ h c;
public final /* synthetic */ boolean d;
public final /* synthetic */ int e;
public final /* synthetic */ Map f;
public final /* synthetic */ long g;
public final /* synthetic */ String h;
public final /* synthetic */ String i;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public c$12(String str, o oVar, Context context, h hVar, boolean z, int i3, Map map, long j2, String str2, String str3) {
super(str);
this.a = oVar;
this.b = context;
this.c = hVar;
this.d = z;
this.e = i3;
this.f = map;
this.g = j2;
this.h = str2;
this.i = str3;
}

public void run() {
if (this.a != null) {
if (this.b == null) {
com.bytedance.sdk.openadsdk.core.o.a();
}
JSONObject jSONObject = new JSONObject();
try {
h hVar = this.c;
if (hVar != null) {
JSONObject a2 = hVar.a();
a2.put(n.n1677590682143dc("ir]ueioc"), this.d);
int i3 = this.e;
if (i3 >= 1 && i3 <= 2) {
a2.put(n.n1677590682143dc("urgq[gcoicd~Rzv`t"), this.e);
}
Map map = this.f;
if (map != null) {
for (Map.Entry entry : map.entrySet()) {
a2.put((String) entry.getKey(), entry.getValue());
}
}
a2.put(n.n1677590682143dc("iovfvdesafdTahzgu"), this.a.h());
jSONObject.put(n.n1677590682143dc("ae]f|qtfWmkm"), a2.toString());
}
jSONObject.putOpt(n.n1677590682143dc("lne\\a}rui"), this.a.ac());
float floatValue = Double.valueOf(((double) (System.currentTimeMillis() / 1000)) - this.a.aZ()).floatValue();
String n1677590682143dc = n.n1677590682143dc("simt[qojm");
if (floatValue <= 0.0f) {
floatValue = 0.0f;
}
jSONObject.putOpt(n1677590682143dc, Float.valueOf(floatValue));
jSONObject.putOpt(n.n1677590682143dc("u`]skiodq"), Integer.valueOf(this.a.G()));
} catch (JSONException unused) {
}
new a.a(this.g).b(this.h).c(this.i).f(this.a.Y()).a(this.a.Z()).a(jSONObject).h(this.a.bb()).a((com.bytedance.sdk.openadsdk.c.b.a) null);
if (!TextUtils.isEmpty(j.a(com.bytedance.sdk.openadsdk.core.o.a())) && n.n1677590682143dc("cmk`o").equals(this.i)) {
c.a(com.bytedance.sdk.openadsdk.m.a.a(this.a.T(), true));
}
if (n.n1677590682143dc("cmk`o").equals(this.i)) {
r.c(this.a);
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\c\c$13.java

package com.bytedance.sdk.openadsdk.c;

import com.bytedance.sdk.component.g.g;
import com.bytedance.sdk.openadsdk.c.a;
import com.bytedance.sdk.openadsdk.core.model.o;
import com.bytedance.sdk.openadsdk.n.aa;
import org.json.JSONException;
import org.json.JSONObject;

public class c$13 extends g {
public final /* synthetic */ o a;
public final /* synthetic */ long b;
public final /* synthetic */ String c;
public final /* synthetic */ String d;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public c$13(String str, o oVar, long j2, String str2, String str3) {
super(str);
this.a = oVar;
this.b = j2;
this.c = str2;
this.d = str3;
}

public void run() {
JSONObject jSONObject = new JSONObject();
try {
jSONObject.putOpt(aa.aa1677590682138dc("lne\\a}rui"), this.a.ac());
jSONObject.putOpt(aa.aa1677590682138dc("u`]skiodq"), Integer.valueOf(this.a.G()));
} catch (JSONException unused) {
}
new a.a(this.b).b(this.c).c(this.d).f(this.a.Y()).a(this.a.Z()).a(jSONObject).h(this.a.bb()).a((com.bytedance.sdk.openadsdk.c.b.a) null);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\c\c$14.java

package com.bytedance.sdk.openadsdk.c;

import android.content.Context;
import com.bytedance.sdk.component.g.g;
import com.bytedance.sdk.component.utils.l;
import com.bytedance.sdk.openadsdk.core.model.a;
import com.bytedance.sdk.openadsdk.core.model.o;
import com.bytedance.sdk.openadsdk.n.z;
import com.google.firebase.installations.interop.BuildConfig;
import org.json.JSONObject;

public class c$14 extends g {
public final /* synthetic */ Context a;
public final /* synthetic */ z b;
public final /* synthetic */ String c;
public final /* synthetic */ long d;
public final /* synthetic */ o e;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public c$14(String str, Context context, z zVar, String str2, long j2, o oVar) {
super(str);
this.a = context;
this.b = zVar;
this.c = str2;
this.d = j2;
this.e = oVar;
}

public void run() {
String str;
String l1677590682141dc;
if (this.a != null && com.bytedance.sdk.openadsdk.core.o.d().Q()) {
JSONObject jSONObject = new JSONObject();
try {
jSONObject.put(a.a1677590682125dc("dtpbplii"), this.b.c());
} catch (Throwable th) {
th.printStackTrace();
}
String str2 = this.c;
char c2 = 65535;
switch (str2.hashCode()) {
case -1695837674:
if (str2.equals(l.l1677590682141dc("b`lmawYfl"))) {
c2 = 0;
break;
}
break;
case -1364000502:
if (str2.equals(l.l1677590682141dc("rdubvaccWcoib"))) {
c2 = 3;
break;
}
break;
case -764631662:
if (str2.equals(l.l1677590682141dc("ftnowftbmgUbbyk}ce{g}tzHy}"))) {
c2 = 4;
break;
}
break;
case -712491894:
if (str2.equals(l.l1677590682141dc("el`f``bXim"))) {
c2 = 2;
break;
}
break;
case 1844104722:
if (str2.equals(l.l1677590682141dc("iovfvdesafd"))) {
c2 = 1;
break;
}
break;
case 1912999166:
if (str2.equals(a.a1677590682125dc("dsct[db"))) {
c2 = 5;
break;
}
break;
}
if (c2 != 0) {
if (c2 == 1) {
str = "iovfvdesafdT`bokdxv";
} else if (c2 == 2) {
str = "el`f``bXimUgclj{y|w";
} else if (c2 == 3) {
str = "rdubvaccWcoibQcpvg}xs";
} else if (c2 != 4) {
l1677590682141dc = c2 != 5 ? BuildConfig.FLAVOR : a.a1677590682125dc("dsct[dbXdfkoxdcj");
} else {
str = "ftnowftbmgUbbyk}ce{g}tzHy}Ews|zkILG";
}
l1677590682141dc = l.l1677590682141dc(str);
} else {
str = "b`lmawYflVfdmizf}t";
l1677590682141dc = l.l1677590682141dc(str);
}
c.a(this.d, this.a, this.e, this.c, l1677590682141dc, jSONObject);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\c\n$11.java

package com.bytedance.sdk.openadsdk.c;

import java.util.Iterator;
import org.json.JSONObject;

public class n$11 implements Runnable {
public final /* synthetic */ JSONObject a;
public final /* synthetic */ n b;

public n$11(n nVar, JSONObject jSONObject) {
this.b = nVar;
this.a = jSONObject;
}

public void run() {
JSONObject jSONObject;
if (n.b(this.b) != null && (jSONObject = this.a) != null) {
Iterator<String> keys = jSONObject.keys();
while (keys.hasNext()) {
String next = keys.next();
n nVar = this.b;
n.a(nVar, n.b(nVar), next, this.a.opt(next));
}
n.a(this.b, Boolean.TRUE);
this.b.m();
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\c\n$12.java

package com.bytedance.sdk.openadsdk.c;

import org.json.JSONObject;

public class n$12 implements Runnable {
public final /* synthetic */ n a;

public n$12(n nVar) {
this.a = nVar;
}

public void run() {
long currentTimeMillis = System.currentTimeMillis();
JSONObject jSONObject = new JSONObject();
n.a(this.a, jSONObject, "ts", Long.valueOf(currentTimeMillis));
n nVar = this.a;
n.a(nVar, n.b(nVar), "render_success", jSONObject);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\c\n$13.java

package com.bytedance.sdk.openadsdk.c;

import com.bytedance.sdk.component.utils.l;
import com.bytedance.sdk.openadsdk.core.h;
import com.bytedance.sdk.openadsdk.core.o;
import java.util.HashMap;

public class n$13 implements Runnable {
public final /* synthetic */ n a;

public n$13(n nVar) {
this.a = nVar;
}

public void run() {
if (n.e(this.a)) {
if (!(n.c(this.a) == null || n.c(this.a).length() == 0)) {
try {
n.b(this.a).put("native_switchBackgroundAndForeground", n.c(this.a));
} catch (Exception unused) {
}
}
if (!(n.d(this.a) == null || n.d(this.a).length() == 0)) {
try {
n.b(this.a).put("intercept_source", n.d(this.a));
} catch (Exception unused2) {
}
}
HashMap hashMap = new HashMap();
hashMap.put("webview_time_track", n.b(this.a));
if (h.b().q() && n.b(this.a) != null) {
l.b("WebviewTimeTrack", n.b(this.a).toString());
}
c.d(o.a(), n.a(this.a), n.f(this.a), "webview_time_track", hashMap);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\c\n$14.java

package com.bytedance.sdk.openadsdk.c;

import org.json.JSONObject;

public class n$14 implements Runnable {
public final /* synthetic */ String a;
public final /* synthetic */ n b;

public n$14(n nVar, String str) {
this.b = nVar;
this.a = str;
}

public void run() {
long currentTimeMillis = System.currentTimeMillis();
JSONObject jSONObject = new JSONObject();
n.a(this.b, jSONObject, "ts", Long.valueOf(currentTimeMillis));
n nVar = this.b;
n.a(nVar, n.b(nVar), this.a, jSONObject);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\c\n$15.java

package com.bytedance.sdk.openadsdk.c;

import org.json.JSONObject;

public class n$15 implements Runnable {
public final /* synthetic */ int a;
public final /* synthetic */ String b;
public final /* synthetic */ n c;

public n$15(n nVar, int i, String str) {
this.c = nVar;
this.a = i;
this.b = str;
}

public void run() {
long currentTimeMillis = System.currentTimeMillis();
JSONObject jSONObject = new JSONObject();
n.a(this.c, jSONObject, "ts", Long.valueOf(currentTimeMillis));
n.a(this.c, jSONObject, "code", Integer.valueOf(this.a));
n nVar = this.c;
n.a(nVar, n.b(nVar), this.b, jSONObject);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\c\n$16.java

package com.bytedance.sdk.openadsdk.c;

import org.json.JSONObject;

public class n$16 implements Runnable {
public final /* synthetic */ n a;

public n$16(n nVar) {
this.a = nVar;
}

public void run() {
long currentTimeMillis = System.currentTimeMillis();
JSONObject jSONObject = new JSONObject();
n.a(this.a, jSONObject, "ts", Long.valueOf(currentTimeMillis));
n nVar = this.a;
n.a(nVar, n.b(nVar), "native_render_end", jSONObject);
long currentTimeMillis2 = System.currentTimeMillis();
JSONObject jSONObject2 = new JSONObject();
n.a(this.a, jSONObject2, "ts", Long.valueOf(currentTimeMillis2));
n nVar2 = this.a;
n.a(nVar2, n.b(nVar2), "render_success", jSONObject2);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\c\n$17.java

package com.bytedance.sdk.openadsdk.c;

import org.json.JSONObject;

public class n$17 implements Runnable {
public final /* synthetic */ n a;

public n$17(n nVar) {
this.a = nVar;
}

public void run() {
long currentTimeMillis = System.currentTimeMillis();
JSONObject jSONObject = new JSONObject();
n.a(this.a, jSONObject, "ts", Long.valueOf(currentTimeMillis));
n nVar = this.a;
n.a(nVar, n.b(nVar), "no_native_render", jSONObject);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\c\n$18.java

package com.bytedance.sdk.openadsdk.c;

import org.json.JSONObject;

public class n$18 implements Runnable {
public final /* synthetic */ n a;

public n$18(n nVar) {
this.a = nVar;
}

public void run() {
long currentTimeMillis = System.currentTimeMillis();
JSONObject jSONObject = new JSONObject();
n.a(this.a, jSONObject, "ts", Long.valueOf(currentTimeMillis));
n nVar = this.a;
n.a(nVar, n.b(nVar), "render_failed", jSONObject);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\c\n$19.java

package com.bytedance.sdk.openadsdk.c;

import org.json.JSONObject;

public class n$19 implements Runnable {
public final /* synthetic */ String a;
public final /* synthetic */ n b;

public n$19(n nVar, String str) {
this.b = nVar;
this.a = str;
}

public void run() {
long currentTimeMillis = System.currentTimeMillis();
JSONObject jSONObject = new JSONObject();
n.a(this.b, jSONObject, "ts", Long.valueOf(currentTimeMillis));
n nVar = this.b;
n.a(nVar, n.b(nVar), this.a, jSONObject);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\core\bannerexpress\BannerExpressView$1.java

package com.bytedance.sdk.openadsdk.core.bannerexpress;

import android.view.View;
import com.bytedance.sdk.openadsdk.api.banner.PAGBannerAdWrapperListener;
import com.bytedance.sdk.openadsdk.core.nativeexpress.NativeExpressView;

public class BannerExpressView$1 implements PAGBannerAdWrapperListener {
public final /* synthetic */ BannerExpressView a;

public BannerExpressView$1(BannerExpressView bannerExpressView) {
this.a = bannerExpressView;
}

public void onAdClicked(View view, int i) {
BannerExpressView bannerExpressView = this.a;
PAGBannerAdWrapperListener pAGBannerAdWrapperListener = bannerExpressView.f;
if (pAGBannerAdWrapperListener != null) {
pAGBannerAdWrapperListener.onAdClicked(bannerExpressView, i);
}
}

public void onAdDismissed() {
}

public void onAdShow(View view, int i) {
}

public void onRenderFail(View view, String str, int i) {
}

public void onRenderSuccess(View view, float f, float f2) {
this.a.a(f, f2);
NativeExpressView nativeExpressView = this.a.c;
if (nativeExpressView != null) {
nativeExpressView.setSoundMute(true);
}
this.a.e();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\core\bannerexpress\BannerExpressView$2.java

package com.bytedance.sdk.openadsdk.core.bannerexpress;

import android.view.View;
import com.bytedance.sdk.openadsdk.api.banner.PAGBannerAdWrapperListener;
import com.bytedance.sdk.openadsdk.core.nativeexpress.NativeExpressView;

public class BannerExpressView$2 implements PAGBannerAdWrapperListener {
public final /* synthetic */ BannerExpressView a;

public BannerExpressView$2(BannerExpressView bannerExpressView) {
this.a = bannerExpressView;
}

public void onAdClicked(View view, int i) {
BannerExpressView bannerExpressView = this.a;
PAGBannerAdWrapperListener pAGBannerAdWrapperListener = bannerExpressView.f;
if (pAGBannerAdWrapperListener != null) {
pAGBannerAdWrapperListener.onAdClicked(bannerExpressView, i);
}
}

public void onAdDismissed() {
}

public void onAdShow(View view, int i) {
}

public void onRenderFail(View view, String str, int i) {
BannerExpressView bannerExpressView = this.a;
PAGBannerAdWrapperListener pAGBannerAdWrapperListener = bannerExpressView.f;
if (pAGBannerAdWrapperListener != null) {
pAGBannerAdWrapperListener.onRenderFail(bannerExpressView, str, i);
}
}

public void onRenderSuccess(View view, float f, float f2) {
NativeExpressView nativeExpressView = this.a.b;
if (nativeExpressView != null) {
nativeExpressView.setSoundMute(true);
}
this.a.a(f, f2);
BannerExpressView bannerExpressView = this.a;
PAGBannerAdWrapperListener pAGBannerAdWrapperListener = bannerExpressView.f;
if (pAGBannerAdWrapperListener != null) {
pAGBannerAdWrapperListener.onRenderSuccess(bannerExpressView, f, f2);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\core\bannerexpress\BannerExpressView$3.java

package com.bytedance.sdk.openadsdk.core.bannerexpress;

import android.animation.Animator;

public class BannerExpressView$3 implements Animator.AnimatorListener {
public final /* synthetic */ BannerExpressView a;

public BannerExpressView$3(BannerExpressView bannerExpressView) {
this.a = bannerExpressView;
}

public void onAnimationCancel(Animator animator) {
}

public void onAnimationEnd(Animator animator) {
BannerExpressView bannerExpressView = this.a;
bannerExpressView.h = false;
BannerExpressView.a(bannerExpressView);
}

public void onAnimationRepeat(Animator animator) {
}

public void onAnimationStart(Animator animator) {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\core\g\a\b$a.java

package com.bytedance.sdk.openadsdk.core.g.a;

public class b$a {
public int a;
public int b;
public boolean c;
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\d\a$2$1.java

package com.bytedance.sdk.openadsdk.d;

import com.bytedance.sdk.component.g.g;
import com.bytedance.sdk.openadsdk.AdSlot;
import com.bytedance.sdk.openadsdk.a.a.a;
import com.bytedance.sdk.openadsdk.core.nativeexpress.c;
import com.bytedance.sdk.openadsdk.core.o;
import com.bytedance.sdk.openadsdk.d.a;
import com.bytedance.sdk.openadsdk.tool.b;

public class a$2$1 extends g {
public final /* synthetic */ a a;
public final /* synthetic */ AdSlot b;
public final /* synthetic */ a.2 c;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public a$2$1(a.2 r1, String str, com.bytedance.sdk.openadsdk.a.a.a aVar, AdSlot adSlot) {
super(str);
this.c = r1;
this.a = aVar;
this.b = adSlot;
}

public void run() {
if (!com.bytedance.sdk.openadsdk.a.a.a(this.a)) {
this.b.setNativeAdType(1);
this.b.setDurationSlotType(1);
b.a(1, "banner");
c.a(o.a()).a(this.b, 1, this.a, 5000);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\dislike\TTDislikeListView$1.java

package com.bytedance.sdk.openadsdk.dislike;

import android.text.TextUtils;
import android.view.View;
import android.widget.AdapterView;
import com.bytedance.sdk.openadsdk.FilterWord;
import com.bytedance.sdk.openadsdk.core.bannerexpress.a;
import com.bytedance.sdk.openadsdk.core.h;
import com.bytedance.sdk.openadsdk.multipro.b;
import java.util.ArrayList;

public class TTDislikeListView$1 implements AdapterView.OnItemClickListener {
public final /* synthetic */ TTDislikeListView a;

public TTDislikeListView$1(TTDislikeListView tTDislikeListView) {
this.a = tTDislikeListView;
}

public void onItemClick(AdapterView<?> adapterView, View view, int i, long j2) {
if (this.a.getAdapter() == null || this.a.getAdapter().getItem(i) == null || !(this.a.getAdapter().getItem(i) instanceof FilterWord)) {
throw new IllegalArgumentException("Adapter data is abnormal, it must be FilterWord");
}
FilterWord filterWord = (FilterWord) this.a.getAdapter().getItem(i);
if (!filterWord.hasSecondOptions()) {
ArrayList arrayList = new ArrayList();
arrayList.add(filterWord);
if (!TextUtils.isEmpty(TTDislikeListView.a(this.a))) {
a.a().a(TTDislikeListView.a(this.a), arrayList);
}
if (!TextUtils.isEmpty(TTDislikeListView.b(this.a))) {
if (b.c()) {
TTDislikeListView.a(this.a, "onItemClickClosed");
} else {
a.a e = h.b().e(TTDislikeListView.b(this.a));
if (e != null) {
e.a();
h.b().f(TTDislikeListView.b(this.a));
}
}
}
}
try {
if (TTDislikeListView.c(this.a) != null) {
TTDislikeListView.c(this.a).onItemClick(adapterView, view, i, j2);
}
} catch (Throwable unused) {
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\dislike\TTDislikeListView$2.java

package com.bytedance.sdk.openadsdk.dislike;

import android.text.TextUtils;
import com.bytedance.sdk.component.g.g;
import com.bytedance.sdk.component.utils.l;

public class TTDislikeListView$2 extends g {
public final /* synthetic */ String a;
public final /* synthetic */ TTDislikeListView b;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public TTDislikeListView$2(TTDislikeListView tTDislikeListView, String str, String str2) {
super(str);
this.b = tTDislikeListView;
this.a = str2;
}

public void run() {
try {
if (!TextUtils.isEmpty(TTDislikeListView.b(this.b))) {
this.b.a(6).executeDisLikeClosedCallback(TTDislikeListView.b(this.b), this.a);
}
} catch (Throwable th) {
l.c("TTDislikeListView", "executeRewardVideoCallback execute throw Exception : ", th);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\dislike\TTDislikeListView$3.java

package com.bytedance.sdk.openadsdk.dislike;

import android.os.RemoteException;
import com.bytedance.sdk.component.g.g;
import com.bytedance.sdk.component.utils.l;
import com.bytedance.sdk.openadsdk.IListenerManager;
import com.bytedance.sdk.openadsdk.core.bannerexpress.a;
import com.bytedance.sdk.openadsdk.core.o;
import com.bytedance.sdk.openadsdk.multipro.aidl.b.b;

public class TTDislikeListView$3 extends g {
public final /* synthetic */ int a;
public final /* synthetic */ a.a b;
public final /* synthetic */ String c;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public TTDislikeListView$3(String str, int i, a.a aVar, String str2) {
super(str);
this.a = i;
this.b = aVar;
this.c = str2;
}

public void run() {
com.bytedance.sdk.openadsdk.multipro.aidl.a a2 = com.bytedance.sdk.openadsdk.multipro.aidl.a.a(o.a());
if (this.a == 6 && this.b != null) {
try {
l.b("TTDislikeListView", "start registerDislikeClickCloseListener ! ");
b bVar = new b(this.c, this.b);
IListenerManager asInterface = IListenerManager.Stub.asInterface(a2.a(6));
if (asInterface != null) {
asInterface.registerDisLikeClosedListener(this.c, bVar);
l.b("TTDislikeListView", "end registerDislikeClickCloseListener ! ");
}
} catch (RemoteException e) {
e.printStackTrace();
l.b("TTDislikeListView", "multiProcess registerDislikeClickCloseListener error");
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\dislike\TTDislikeListView$4.java

package com.bytedance.sdk.openadsdk.dislike;

import android.os.RemoteException;
import com.bytedance.sdk.component.g.g;
import com.bytedance.sdk.component.utils.l;
import com.bytedance.sdk.openadsdk.IListenerManager;
import com.bytedance.sdk.openadsdk.core.o;
import com.bytedance.sdk.openadsdk.multipro.aidl.a;
import com.energysh.librecommend.net.OS.uRjqWirfauAxx;

public class TTDislikeListView$4 extends g {
public final /* synthetic */ int a;
public final /* synthetic */ String b;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public TTDislikeListView$4(String str, int i, String str2) {
super(str);
this.a = i;
this.b = str2;
}

public void run() {
a a2 = a.a(o.a());
if (this.a == 6) {
try {
l.b("TTDislikeListView", "start unregisterDislikeClickCloseListener ! ");
IListenerManager asInterface = IListenerManager.Stub.asInterface(a2.a(6));
if (asInterface != null) {
asInterface.unregisterDisLikeClosedListener(this.b);
l.b("TTDislikeListView", uRjqWirfauAxx.yMVkOXV);
}
} catch (RemoteException unused) {
l.b("TTDislikeListView", "multiProcess unregisterMultiProcessListener error");
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\bytedance\sdk\openadsdk\k\g$6.java

package com.bytedance.sdk.openadsdk.k;

public class g$6 implements Runnable {
public final /* synthetic */ g a;

public g$6(g gVar) {
this.a = gVar;
}

public void run() {
g.h(this.a);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\chad\library\adapter\base\BaseQuickAdapter$Companion.java

package com.chad.library.adapter.base;

import kotlin.jvm.internal.m;

public final class BaseQuickAdapter$Companion {
private BaseQuickAdapter$Companion() {
}

public /* synthetic */ BaseQuickAdapter$Companion(m mVar) {
this();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\chad\library\adapter\base\delegate\BaseMultiTypeDelegate.java

package com.chad.library.adapter.base.delegate;

import android.support.v4.media.b;
import android.util.SparseIntArray;
import androidx.annotation.LayoutRes;
import java.util.List;
import kotlin.jvm.internal.m;
import kotlin.jvm.internal.o;
import org.jetbrains.annotations.NotNull;

public abstract class BaseMultiTypeDelegate<T> {
private boolean autoMode;
@NotNull
private SparseIntArray layouts;
private boolean selfMode;

public BaseMultiTypeDelegate() {
this((SparseIntArray) null, 1, (m) null);
}

public BaseMultiTypeDelegate(@NotNull SparseIntArray sparseIntArray) {
o.f(sparseIntArray, "layouts");
this.layouts = sparseIntArray;
}

/* JADX INFO: this call moved to the top of the method (can break code semantics) */
public /* synthetic */ BaseMultiTypeDelegate(SparseIntArray sparseIntArray, int i, m mVar) {
this((i & 1) != 0 ? new SparseIntArray() : sparseIntArray);
}

private final void checkMode(boolean z) {
if (!(!z)) {
throw new IllegalArgumentException("Don't mess two register mode".toString());
}
}

private final void registerItemType(int i, @LayoutRes int i3) {
this.layouts.put(i, i3);
}

@NotNull
public final BaseMultiTypeDelegate<T> addItemType(int i, @LayoutRes int i3) {
this.selfMode = true;
checkMode(this.autoMode);
registerItemType(i, i3);
return this;
}

@NotNull
public final BaseMultiTypeDelegate<T> addItemTypeAutoIncrease(@NotNull @LayoutRes int... iArr) {
o.f(iArr, "layoutResIds");
this.autoMode = true;
checkMode(this.selfMode);
int length = iArr.length;
for (int i = 0; i < length; i++) {
registerItemType(i, iArr[i]);
}
return this;
}

public abstract int getItemType(@NotNull List<? extends T> list, int i);

public final int getLayoutId(int i) {
int i3 = this.layouts.get(i);
if (i3 != 0) {
return i3;
}
throw new IllegalArgumentException(b.h("ViewType: ", i, " found layoutResId，please use registerItemType() first!").toString());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\chad\library\adapter\base\entity\JSectionEntity.java

package com.chad.library.adapter.base.entity;

public abstract class JSectionEntity implements SectionEntity {
public int getItemType() {
return isHeader() ? -99 : -100;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\ad\adbase\interfaces\d$a.java

package com.energysh.ad.adbase.interfaces;

import android.content.Context;
import com.energysh.ad.adbase.bean.AdBean;
import com.energysh.ad.adbase.interfaces.AdLoader;
import h0.a;
import kotlin.coroutines.c;
import kotlinx.coroutines.TimeoutKt;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class d$a {
@Nullable
public static Object a(@NotNull a aVar, @NotNull Context context, @NotNull AdBean adBean, @NotNull c cVar) {
return TimeoutKt.b(10000, new AdLoader.loadByStrategy.2(adBean, aVar, context, (c) null), cVar);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\R$style.java

package com.energysh.aichat;

public final class R$style {
public static final int AlertDialog_AppCompat = 2131951616;
public static final int AlertDialog_AppCompat_Light = 2131951617;
public static final int AndroidThemeColorAccentYellow = 2131951618;
public static final int Animation_AppCompat_Dialog = 2131951619;
public static final int Animation_AppCompat_DropDownUp = 2131951620;
public static final int Animation_AppCompat_Tooltip = 2131951621;
public static final int Animation_Design_BottomSheetDialog = 2131951622;
public static final int Animation_MaterialComponents_BottomSheetDialog = 2131951623;
public static final int AppLovinExoMediaButton = 2131951624;
public static final int AppLovinExoMediaButton_FastForward = 2131951625;
public static final int AppLovinExoMediaButton_Next = 2131951626;
public static final int AppLovinExoMediaButton_Pause = 2131951627;
public static final int AppLovinExoMediaButton_Play = 2131951628;
public static final int AppLovinExoMediaButton_Previous = 2131951629;
public static final int AppLovinExoMediaButton_Rewind = 2131951630;
public static final int AppLovinExoMediaButton_VR = 2131951631;
public static final int AppLovinExoStyledControls = 2131951632;
public static final int AppLovinExoStyledControls_Button = 2131951633;
public static final int AppLovinExoStyledControls_ButtonText = 2131951651;
public static final int AppLovinExoStyledControls_Button_Bottom = 2131951634;
public static final int AppLovinExoStyledControls_Button_Bottom_AudioTrack = 2131951635;
public static final int AppLovinExoStyledControls_Button_Bottom_CC = 2131951636;
public static final int AppLovinExoStyledControls_Button_Bottom_FullScreen = 2131951637;
public static final int AppLovinExoStyledControls_Button_Bottom_OverflowHide = 2131951638;
public static final int AppLovinExoStyledControls_Button_Bottom_OverflowShow = 2131951639;
public static final int AppLovinExoStyledControls_Button_Bottom_PlaybackSpeed = 2131951640;
public static final int AppLovinExoStyledControls_Button_Bottom_RepeatToggle = 2131951641;
public static final int AppLovinExoStyledControls_Button_Bottom_Settings = 2131951642;
public static final int AppLovinExoStyledControls_Button_Bottom_Shuffle = 2131951643;
public static final int AppLovinExoStyledControls_Button_Bottom_VR = 2131951644;
public static final int AppLovinExoStyledControls_Button_Center = 2131951645;
public static final int AppLovinExoStyledControls_Button_Center_FfwdWithAmount = 2131951646;
public static final int AppLovinExoStyledControls_Button_Center_Next = 2131951647;
public static final int AppLovinExoStyledControls_Button_Center_PlayPause = 2131951648;
public static final int AppLovinExoStyledControls_Button_Center_Previous = 2131951649;
public static final int AppLovinExoStyledControls_Button_Center_RewWithAmount = 2131951650;
public static final int AppLovinExoStyledControls_TimeBar = 2131951652;
public static final int AppLovinExoStyledControls_TimeText = 2131951653;
public static final int AppLovinExoStyledControls_TimeText_Duration = 2131951654;
public static final int AppLovinExoStyledControls_TimeText_Position = 2131951655;
public static final int AppLovinExoStyledControls_TimeText_Separator = 2131951656;
public static final int AppTheme = 2131951657;
public static final int AppTheme_DarkTheme = 2131951658;
public static final int AppTheme_Dialog = 2131951659;
public static final int AppTheme_Dialog_Transparent = 2131951660;
public static final int AppTheme_Dialog_Transparent_AnimationAlpha = 2131951661;
public static final int AppTheme_LightTheme = 2131951662;
public static final int AppTheme_SplashStyle = 2131951663;
public static final int AppTheme_VipDialogStyle = 2131951664;
public static final int AppTheme_VipDialogStyle_WindowAnimStyle = 2131951665;
public static final int Base_AlertDialog_AppCompat = 2131951666;
public static final int Base_AlertDialog_AppCompat_Light = 2131951667;
public static final int Base_Animation_AppCompat_Dialog = 2131951668;
public static final int Base_Animation_AppCompat_DropDownUp = 2131951669;
public static final int Base_Animation_AppCompat_Tooltip = 2131951670;
public static final int Base_CardView = 2131951671;
public static final int Base_DialogWindowTitleBackground_AppCompat = 2131951673;
public static final int Base_DialogWindowTitle_AppCompat = 2131951672;
public static final int Base_MaterialAlertDialog_MaterialComponents_Title_Icon = 2131951674;
public static final int Base_MaterialAlertDialog_MaterialComponents_Title_Panel = 2131951675;
public static final int Base_MaterialAlertDialog_MaterialComponents_Title_Text = 2131951676;
public static final int Base_TextAppearance_AppCompat = 2131951677;
public static final int Base_TextAppearance_AppCompat_Body1 = 2131951678;
public static final int Base_TextAppearance_AppCompat_Body2 = 2131951679;
public static final int Base_TextAppearance_AppCompat_Button = 2131951680;
public static final int Base_TextAppearance_AppCompat_Caption = 2131951681;
public static final int Base_TextAppearance_AppCompat_Display1 = 2131951682;
public static final int Base_TextAppearance_AppCompat_Display2 = 2131951683;
public static final int Base_TextAppearance_AppCompat_Display3 = 2131951684;
public static final int Base_TextAppearance_AppCompat_Display4 = 2131951685;
public static final int Base_TextAppearance_AppCompat_Headline = 2131951686;
public static final int Base_TextAppearance_AppCompat_Inverse = 2131951687;
public static final int Base_TextAppearance_AppCompat_Large = 2131951688;
public static final int Base_TextAppearance_AppCompat_Large_Inverse = 2131951689;
public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large = 2131951690;
public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small = 2131951691;
public static final int Base_TextAppearance_AppCompat_Medium = 2131951692;
public static final int Base_TextAppearance_AppCompat_Medium_Inverse = 2131951693;
public static final int Base_TextAppearance_AppCompat_Menu = 2131951694;
public static final int Base_TextAppearance_AppCompat_SearchResult = 2131951695;
public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle = 2131951696;
public static final int Base_TextAppearance_AppCompat_SearchResult_Title = 2131951697;
public static final int Base_TextAppearance_AppCompat_Small = 2131951698;
public static final int Base_TextAppearance_AppCompat_Small_Inverse = 2131951699;
public static final int Base_TextAppearance_AppCompat_Subhead = 2131951700;
public static final int Base_TextAppearance_AppCompat_Subhead_Inverse = 2131951701;
public static final int Base_TextAppearance_AppCompat_Title = 2131951702;
public static final int Base_TextAppearance_AppCompat_Title_Inverse = 2131951703;
public static final int Base_TextAppearance_AppCompat_Tooltip = 2131951704;
public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu = 2131951705;
public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle = 2131951706;
public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse = 2131951707;
public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title = 2131951708;
public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse = 2131951709;
public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle = 2131951710;
public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title = 2131951711;
public static final int Base_TextAppearance_AppCompat_Widget_Button = 2131951712;
public static final int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored = 2131951713;
public static final int Base_TextAppearance_AppCompat_Widget_Button_Colored = 2131951714;
public static final int Base_TextAppearance_AppCompat_Widget_Button_Inverse = 2131951715;
public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem = 2131951716;
public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header = 2131951717;
public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large = 2131951718;
public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small = 2131951719;
public static final int Base_TextAppearance_AppCompat_Widget_Switch = 2131951720;
public static final int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem = 2131951721;
public static final int Base_TextAppearance_MaterialComponents_Badge = 2131951722;
public static final int Base_TextAppearance_MaterialComponents_Button = 2131951723;
public static final int Base_TextAppearance_MaterialComponents_Headline6 = 2131951724;
public static final int Base_TextAppearance_MaterialComponents_Subtitle2 = 2131951725;
public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item = 2131951726;
public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle = 2131951727;
public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title = 2131951728;
public static final int Base_ThemeOverlay_AppCompat = 2131951771;
public static final int Base_ThemeOverlay_AppCompat_ActionBar = 2131951772;
public static final int Base_ThemeOverlay_AppCompat_Dark = 2131951773;
public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar = 2131951774;
public static final int Base_ThemeOverlay_AppCompat_Dialog = 2131951775;
public static final int Base_ThemeOverlay_AppCompat_Dialog_Alert = 2131951776;
public static final int Base_ThemeOverlay_AppCompat_Light = 2131951777;
public static final int Base_ThemeOverlay_Material3_AutoCompleteTextView = 2131951778;
public static final int Base_ThemeOverlay_Material3_BottomSheetDialog = 2131951779;
public static final int Base_ThemeOverlay_Material3_Dialog = 2131951780;
public static final int Base_ThemeOverlay_Material3_TextInputEditText = 2131951781;
public static final int Base_ThemeOverlay_MaterialComponents_Dialog = 2131951782;
public static final int Base_ThemeOverlay_MaterialComponents_Dialog_Alert = 2131951783;
public static final int Base_ThemeOverlay_MaterialComponents_Dialog_Alert_Framework = 2131951784;
public static final int Base_ThemeOverlay_MaterialComponents_Light_Dialog_Alert_Framework = 2131951785;
public static final int Base_ThemeOverlay_MaterialComponents_MaterialAlertDialog = 2131951786;
public static final int Base_Theme_AppCompat = 2131951729;
public static final int Base_Theme_AppCompat_CompactMenu = 2131951730;
public static final int Base_Theme_AppCompat_Dialog = 2131951731;
public static final int Base_Theme_AppCompat_DialogWhenLarge = 2131951735;
public static final int Base_Theme_AppCompat_Dialog_Alert = 2131951732;
public static final int Base_Theme_AppCompat_Dialog_FixedSize = 2131951733;
public static final int Base_Theme_AppCompat_Dialog_MinWidth = 2131951734;
public static final int Base_Theme_AppCompat_Light = 2131951736;
public static final int Base_Theme_AppCompat_Light_DarkActionBar = 2131951737;
public static final int Base_Theme_AppCompat_Light_Dialog = 2131951738;
public static final int Base_Theme_AppCompat_Light_DialogWhenLarge = 2131951742;
public static final int Base_Theme_AppCompat_Light_Dialog_Alert = 2131951739;
public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize = 2131951740;
public static final int Base_Theme_AppCompat_Light_Dialog_MinWidth = 2131951741;
public static final int Base_Theme_Material3_Dark = 2131951743;
public static final int Base_Theme_Material3_Dark_BottomSheetDialog = 2131951744;
public static final int Base_Theme_Material3_Dark_Dialog = 2131951745;
public static final int Base_Theme_Material3_Light = 2131951746;
public static final int Base_Theme_Material3_Light_BottomSheetDialog = 2131951747;
public static final int Base_Theme_Material3_Light_Dialog = 2131951748;
public static final int Base_Theme_MaterialComponents = 2131951749;
public static final int Base_Theme_MaterialComponents_Bridge = 2131951750;
public static final int Base_Theme_MaterialComponents_CompactMenu = 2131951751;
public static final int Base_Theme_MaterialComponents_Dialog = 2131951752;
public static final int Base_Theme_MaterialComponents_DialogWhenLarge = 2131951757;
public static final int Base_Theme_MaterialComponents_Dialog_Alert = 2131951753;
public static final int Base_Theme_MaterialComponents_Dialog_Bridge = 2131951754;
public static final int Base_Theme_MaterialComponents_Dialog_FixedSize = 2131951755;
public static final int Base_Theme_MaterialComponents_Dialog_MinWidth = 2131951756;
public static final int Base_Theme_MaterialComponents_Light = 2131951758;
public static final int Base_Theme_MaterialComponents_Light_Bridge = 2131951759;
public static final int Base_Theme_MaterialComponents_Light_DarkActionBar = 2131951760;
public static final int Base_Theme_MaterialComponents_Light_DarkActionBar_Bridge = 2131951761;
public static final int Base_Theme_MaterialComponents_Light_Dialog = 2131951762;
public static final int Base_Theme_MaterialComponents_Light_DialogWhenLarge = 2131951767;
public static final int Base_Theme_MaterialComponents_Light_Dialog_Alert = 2131951763;
public static final int Base_Theme_MaterialComponents_Light_Dialog_Bridge = 2131951764;
public static final int Base_Theme_MaterialComponents_Light_Dialog_FixedSize = 2131951765;
public static final int Base_Theme_MaterialComponents_Light_Dialog_MinWidth = 2131951766;
public static final int Base_Theme_SplashScreen = 2131951768;
public static final int Base_Theme_SplashScreen_DayNight = 2131951769;
public static final int Base_Theme_SplashScreen_Light = 2131951770;
public static final int Base_V14_ThemeOverlay_Material3_BottomSheetDialog = 2131951802;
public static final int Base_V14_ThemeOverlay_MaterialComponents_BottomSheetDialog = 2131951803;
public static final int Base_V14_ThemeOverlay_MaterialComponents_Dialog = 2131951804;
public static final int Base_V14_ThemeOverlay_MaterialComponents_Dialog_Alert = 2131951805;
public static final int Base_V14_ThemeOverlay_MaterialComponents_MaterialAlertDialog = 2131951806;
public static final int Base_V14_Theme_Material3_Dark = 2131951787;
public static final int Base_V14_Theme_Material3_Dark_BottomSheetDialog = 2131951788;
public static final int Base_V14_Theme_Material3_Dark_Dialog = 2131951789;
public static final int Base_V14_Theme_Material3_Light = 2131951790;
public static final int Base_V14_Theme_Material3_Light_BottomSheetDialog = 2131951791;
public static final int Base_V14_Theme_Material3_Light_Dialog = 2131951792;
public static final int Base_V14_Theme_MaterialComponents = 2131951793;
public static final int Base_V14_Theme_MaterialComponents_Bridge = 2131951794;
public static final int Base_V14_Theme_MaterialComponents_Dialog = 2131951795;
public static final int Base_V14_Theme_MaterialComponents_Dialog_Bridge = 2131951796;
public static final int Base_V14_Theme_MaterialComponents_Light = 2131951797;
public static final int Base_V14_Theme_MaterialComponents_Light_Bridge = 2131951798;
public static final int Base_V14_Theme_MaterialComponents_Light_DarkActionBar_Bridge = 2131951799;
public static final int Base_V14_Theme_MaterialComponents_Light_Dialog = 2131951800;
public static final int Base_V14_Theme_MaterialComponents_Light_Dialog_Bridge = 2131951801;
public static final int Base_V21_ThemeOverlay_AppCompat_Dialog = 2131951815;
public static final int Base_V21_ThemeOverlay_Material3_BottomSheetDialog = 2131951816;
public static final int Base_V21_ThemeOverlay_MaterialComponents_BottomSheetDialog = 2131951817;
public static final int Base_V21_Theme_AppCompat = 2131951807;
public static final int Base_V21_Theme_AppCompat_Dialog = 2131951808;
public static final int Base_V21_Theme_AppCompat_Light = 2131951809;
public static final int Base_V21_Theme_AppCompat_Light_Dialog = 2131951810;
public static final int Base_V21_Theme_MaterialComponents = 2131951811;
public static final int Base_V21_Theme_MaterialComponents_Dialog = 2131951812;
public static final int Base_V21_Theme_MaterialComponents_Light = 2131951813;
public static final int Base_V21_Theme_MaterialComponents_Light_Dialog = 2131951814;
public static final int Base_V22_Theme_AppCompat = 2131951818;
public static final int Base_V22_Theme_AppCompat_Light = 2131951819;
public static final int Base_V23_Theme_AppCompat = 2131951820;
public static final int Base_V23_Theme_AppCompat_Light = 2131951821;
public static final int Base_V24_Theme_Material3_Dark = 2131951822;
public static final int Base_V24_Theme_Material3_Dark_Dialog = 2131951823;
public static final int Base_V24_Theme_Material3_Light = 2131951824;
public static final int Base_V24_Theme_Material3_Light_Dialog = 2131951825;
public static final int Base_V26_Theme_AppCompat = 2131951826;
public static final int Base_V26_Theme_AppCompat_Light = 2131951827;
public static final int Base_V26_Widget_AppCompat_Toolbar = 2131951828;
public static final int Base_V28_Theme_AppCompat = 2131951829;
public static final int Base_V28_Theme_AppCompat_Light = 2131951830;
public static final int Base_V7_ThemeOverlay_AppCompat_Dialog = 2131951835;
public static final int Base_V7_Theme_AppCompat = 2131951831;
public static final int Base_V7_Theme_AppCompat_Dialog = 2131951832;
public static final int Base_V7_Theme_AppCompat_Light = 2131951833;
public static final int Base_V7_Theme_AppCompat_Light_Dialog = 2131951834;
public static final int Base_V7_Widget_AppCompat_AutoCompleteTextView = 2131951836;
public static final int Base_V7_Widget_AppCompat_EditText = 2131951837;
public static final int Base_V7_Widget_AppCompat_Toolbar = 2131951838;
public static final int Base_Widget_AppCompat_ActionBar = 2131951839;
public static final int Base_Widget_AppCompat_ActionBar_Solid = 2131951840;
public static final int Base_Widget_AppCompat_ActionBar_TabBar = 2131951841;
public static final int Base_Widget_AppCompat_ActionBar_TabText = 2131951842;
public static final int Base_Widget_AppCompat_ActionBar_TabView = 2131951843;
public static final int Base_Widget_AppCompat_ActionButton = 2131951844;
public static final int Base_Widget_AppCompat_ActionButton_CloseMode = 2131951845;
public static final int Base_Widget_AppCompat_ActionButton_Overflow = 2131951846;
public static final int Base_Widget_AppCompat_ActionMode = 2131951847;
public static final int Base_Widget_AppCompat_ActivityChooserView = 2131951848;
public static final int Base_Widget_AppCompat_AutoCompleteTextView = 2131951849;
public static final int Base_Widget_AppCompat_Button = 2131951850;
public static final int Base_Widget_AppCompat_ButtonBar = 2131951856;
public static final int Base_Widget_AppCompat_ButtonBar_AlertDialog = 2131951857;
public static final int Base_Widget_AppCompat_Button_Borderless = 2131951851;
public static final int Base_Widget_AppCompat_Button_Borderless_Colored = 2131951852;
public static final int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog = 2131951853;
public static final int Base_Widget_AppCompat_Button_Colored = 2131951854;
public static final int Base_Widget_AppCompat_Button_Small = 2131951855;
public static final int Base_Widget_AppCompat_CompoundButton_CheckBox = 2131951858;
public static final int Base_Widget_AppCompat_CompoundButton_RadioButton = 2131951859;
public static final int Base_Widget_AppCompat_CompoundButton_Switch = 2131951860;
public static final int Base_Widget_AppCompat_DrawerArrowToggle = 2131951861;
public static final int Base_Widget_AppCompat_DrawerArrowToggle_Common = 2131951862;
public static final int Base_Widget_AppCompat_DropDownItem_Spinner = 2131951863;
public static final int Base_Widget_AppCompat_EditText = 2131951864;
public static final int Base_Widget_AppCompat_ImageButton = 2131951865;
public static final int Base_Widget_AppCompat_Light_ActionBar = 2131951866;
public static final int Base_Widget_AppCompat_Light_ActionBar_Solid = 2131951867;
public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar = 2131951868;
public static final int Base_Widget_AppCompat_Light_ActionBar_TabText = 2131951869;
public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse = 2131951870;
public static final int Base_Widget_AppCompat_Light_ActionBar_TabView = 2131951871;
public static final int Base_Widget_AppCompat_Light_PopupMenu = 2131951872;
public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow = 2131951873;
public static final int Base_Widget_AppCompat_ListMenuView = 2131951874;
public static final int Base_Widget_AppCompat_ListPopupWindow = 2131951875;
public static final int Base_Widget_AppCompat_ListView = 2131951876;
public static final int Base_Widget_AppCompat_ListView_DropDown = 2131951877;
public static final int Base_Widget_AppCompat_ListView_Menu = 2131951878;
public static final int Base_Widget_AppCompat_PopupMenu = 2131951879;
public static final int Base_Widget_AppCompat_PopupMenu_Overflow = 2131951880;
public static final int Base_Widget_AppCompat_PopupWindow = 2131951881;
public static final int Base_Widget_AppCompat_ProgressBar = 2131951882;
public static final int Base_Widget_AppCompat_ProgressBar_Horizontal = 2131951883;
public static final int Base_Widget_AppCompat_RatingBar = 2131951884;
public static final int Base_Widget_AppCompat_RatingBar_Indicator = 2131951885;
public static final int Base_Widget_AppCompat_RatingBar_Small = 2131951886;
public static final int Base_Widget_AppCompat_SearchView = 2131951887;
public static final int Base_Widget_AppCompat_SearchView_ActionBar = 2131951888;
public static final int Base_Widget_AppCompat_SeekBar = 2131951889;
public static final int Base_Widget_AppCompat_SeekBar_Discrete = 2131951890;
public static final int Base_Widget_AppCompat_Spinner = 2131951891;
public static final int Base_Widget_AppCompat_Spinner_Underlined = 2131951892;
public static final int Base_Widget_AppCompat_TextView = 2131951893;
public static final int Base_Widget_AppCompat_TextView_SpinnerItem = 2131951894;
public static final int Base_Widget_AppCompat_Toolbar = 2131951895;
public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation = 2131951896;
public static final int Base_Widget_Design_TabLayout = 2131951897;
public static final int Base_Widget_Material3_ActionBar_Solid = 2131951898;
public static final int Base_Widget_Material3_ActionMode = 2131951899;
public static final int Base_Widget_Material3_CardView = 2131951900;
public static final int Base_Widget_Material3_Chip = 2131951901;
public static final int Base_Widget_Material3_CollapsingToolbar = 2131951902;
public static final int Base_Widget_Material3_CompoundButton_CheckBox = 2131951903;
public static final int Base_Widget_Material3_CompoundButton_RadioButton = 2131951904;
public static final int Base_Widget_Material3_CompoundButton_Switch = 2131951905;
public static final int Base_Widget_Material3_ExtendedFloatingActionButton = 2131951906;
public static final int Base_Widget_Material3_ExtendedFloatingActionButton_Icon = 2131951907;
public static final int Base_Widget_Material3_FloatingActionButton = 2131951908;
public static final int Base_Widget_Material3_FloatingActionButton_Large = 2131951909;
public static final int Base_Widget_Material3_Light_ActionBar_Solid = 2131951910;
public static final int Base_Widget_Material3_MaterialCalendar_NavigationButton = 2131951911;
public static final int Base_Widget_Material3_Snackbar = 2131951912;
public static final int Base_Widget_Material3_TabLayout = 2131951913;
public static final int Base_Widget_Material3_TabLayout_OnSurface = 2131951914;
public static final int Base_Widget_Material3_TabLayout_Secondary = 2131951915;
public static final int Base_Widget_MaterialComponents_AutoCompleteTextView = 2131951916;
public static final int Base_Widget_MaterialComponents_CheckedTextView = 2131951917;
public static final int Base_Widget_MaterialComponents_Chip = 2131951918;
public static final int Base_Widget_MaterialComponents_MaterialCalendar_HeaderToggleButton = 2131951919;
public static final int Base_Widget_MaterialComponents_MaterialCalendar_NavigationButton = 2131951920;
public static final int Base_Widget_MaterialComponents_PopupMenu = 2131951921;
public static final int Base_Widget_MaterialComponents_PopupMenu_ContextMenu = 2131951922;
public static final int Base_Widget_MaterialComponents_PopupMenu_ListPopupWindow = 2131951923;
public static final int Base_Widget_MaterialComponents_PopupMenu_Overflow = 2131951924;
public static final int Base_Widget_MaterialComponents_Slider = 2131951925;
public static final int Base_Widget_MaterialComponents_Snackbar = 2131951926;
public static final int Base_Widget_MaterialComponents_TextInputEditText = 2131951927;
public static final int Base_Widget_MaterialComponents_TextInputLayout = 2131951928;
public static final int Base_Widget_MaterialComponents_TextView = 2131951929;
public static final int Base_v21_Theme_SplashScreen = 2131951930;
public static final int Base_v21_Theme_SplashScreen_Light = 2131951931;
public static final int Base_v27_Theme_SplashScreen = 2131951932;
public static final int Base_v27_Theme_SplashScreen_Light = 2131951933;
public static final int CPB = 2131951934;
public static final int CardView = 2131951935;
public static final int CardView_Dark = 2131951936;
public static final int CardView_Light = 2131951937;
public static final int CircularProgressBar = 2131951938;
public static final int DialogTranslateAnimation = 2131951941;
public static final int Dialog_Animation = 2131951939;
public static final int Dialog_Animation_Alpha = 2131951940;
public static final int EditTextStyle = 2131951942;
public static final int EmptyTheme = 2131951943;
public static final int GreatSeekBar = 2131951944;
public static final int HomeStyle = 2131951945;
public static final int LargeIconView = 2131951946;
public static final int MaterialAdAttribution = 2131951947;
public static final int MaterialAlertDialog_Material3 = 2131951948;
public static final int MaterialAlertDialog_Material3_Body_Text = 2131951949;
public static final int MaterialAlertDialog_Material3_Body_Text_CenterStacked = 2131951950;
public static final int MaterialAlertDialog_Material3_Title_Icon = 2131951951;
public static final int MaterialAlertDialog_Material3_Title_Icon_CenterStacked = 2131951952;
public static final int MaterialAlertDialog_Material3_Title_Panel = 2131951953;
public static final int MaterialAlertDialog_Material3_Title_Panel_CenterStacked = 2131951954;
public static final int MaterialAlertDialog_Material3_Title_Text = 2131951955;
public static final int MaterialAlertDialog_Material3_Title_Text_CenterStacked = 2131951956;
public static final int MaterialAlertDialog_MaterialComponents = 2131951957;
public static final int MaterialAlertDialog_MaterialComponents_Body_Text = 2131951958;
public static final int MaterialAlertDialog_MaterialComponents_Picker_Date_Calendar = 2131951959;
public static final int MaterialAlertDialog_MaterialComponents_Picker_Date_Spinner = 2131951960;
public static final int MaterialAlertDialog_MaterialComponents_Title_Icon = 2131951961;
public static final int MaterialAlertDialog_MaterialComponents_Title_Icon_CenterStacked = 2131951962;
public static final int MaterialAlertDialog_MaterialComponents_Title_Panel = 2131951963;
public static final int MaterialAlertDialog_MaterialComponents_Title_Panel_CenterStacked = 2131951964;
public static final int MaterialAlertDialog_MaterialComponents_Title_Text = 2131951965;
public static final int MaterialAlertDialog_MaterialComponents_Title_Text_CenterStacked = 2131951966;
public static final int MaterialAppTheme = 2131951967;
public static final int MaterialAppTheme_Dark = 2131951968;
public static final int MaterialAppTheme_DarkTheme_TabLayout = 2131951969;
public static final int MaterialAppTheme_LightBackground = 2131951970;
public static final int MaterialAppTheme_LightDialog = 2131951971;
public static final int MaterialAppTheme_OrangeSeekBar = 2131951972;
public static final int MaterialAppTheme_ToolBar = 2131951973;
public static final int MaterialAppTheme_ToolBar_DarkToolBar = 2131951974;
public static final int MaterialTabLayoutTextAppearance = 2131951975;
public static final int MyTabLayout = 2131951976;
public static final int Platform_AppCompat = 2131951977;
public static final int Platform_AppCompat_Light = 2131951978;
public static final int Platform_MaterialComponents = 2131951979;
public static final int Platform_MaterialComponents_Dialog = 2131951980;
public static final int Platform_MaterialComponents_Light = 2131951981;
public static final int Platform_MaterialComponents_Light_Dialog = 2131951982;
public static final int Platform_ThemeOverlay_AppCompat = 2131951983;
public static final int Platform_ThemeOverlay_AppCompat_Dark = 2131951984;
public static final int Platform_ThemeOverlay_AppCompat_Light = 2131951985;
public static final int Platform_V21_AppCompat = 2131951986;
public static final int Platform_V21_AppCompat_Light = 2131951987;
public static final int Platform_V25_AppCompat = 2131951988;
public static final int Platform_V25_AppCompat_Light = 2131951989;
public static final int Platform_Widget_AppCompat_Spinner = 2131951990;
public static final int RtlOverlay_DialogWindowTitle_AppCompat = 2131951991;
public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem = 2131951992;
public static final int RtlOverlay_Widget_AppCompat_DialogTitle_Icon = 2131951993;
public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem = 2131951994;
public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup = 2131951995;
public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut = 2131951996;
public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow = 2131951997;
public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text = 2131951998;
public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title = 2131951999;
public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon = 2131952005;
public static final int RtlOverlay_Widget_AppCompat_Search_DropDown = 2131952000;
public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 = 2131952001;
public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 = 2131952002;
public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query = 2131952003;
public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text = 2131952004;
public static final int RtlUnderlay_Widget_AppCompat_ActionButton = 2131952006;
public static final int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow = 2131952007;
public static final int SearchStyle = 2131952008;
public static final int ShapeAppearanceOverlay = 2131952038;
public static final int ShapeAppearanceOverlay_BottomLeftDifferentCornerSize = 2131952039;
public static final int ShapeAppearanceOverlay_BottomRightCut = 2131952040;
public static final int ShapeAppearanceOverlay_Cut = 2131952041;
public static final int ShapeAppearanceOverlay_DifferentCornerSize = 2131952042;
public static final int ShapeAppearanceOverlay_Material3_Button = 2131952043;
public static final int ShapeAppearanceOverlay_Material3_Chip = 2131952044;
public static final int ShapeAppearanceOverlay_Material3_FloatingActionButton = 2131952045;
public static final int ShapeAppearanceOverlay_Material3_NavigationView_Item = 2131952046;
public static final int ShapeAppearanceOverlay_Material3_TextField_Filled = 2131952047;
public static final int ShapeAppearanceOverlay_MaterialAlertDialog_Material3 = 2131952048;
public static final int ShapeAppearanceOverlay_MaterialComponents_BottomSheet = 2131952049;
public static final int ShapeAppearanceOverlay_MaterialComponents_Chip = 2131952050;
public static final int ShapeAppearanceOverlay_MaterialComponents_ExtendedFloatingActionButton = 2131952051;
public static final int ShapeAppearanceOverlay_MaterialComponents_FloatingActionButton = 2131952052;
public static final int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Day = 2131952053;
public static final int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Window_Fullscreen = 2131952054;
public static final int ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Year = 2131952055;
public static final int ShapeAppearanceOverlay_MaterialComponents_TextInputLayout_FilledBox = 2131952056;
public static final int ShapeAppearanceOverlay_TopLeftCut = 2131952057;
public static final int ShapeAppearanceOverlay_TopRightDifferentCornerSize = 2131952058;
public static final int ShapeAppearance_M3_Sys_Shape_Corner_ExtraLarge = 2131952009;
public static final int ShapeAppearance_M3_Sys_Shape_Corner_ExtraLarge_Top = 2131952010;
public static final int ShapeAppearance_M3_Sys_Shape_Corner_ExtraSmall = 2131952011;
public static final int ShapeAppearance_M3_Sys_Shape_Corner_ExtraSmall_Top = 2131952012;
public static final int ShapeAppearance_M3_Sys_Shape_Corner_Full = 2131952013;
public static final int ShapeAppearance_M3_Sys_Shape_Corner_Large = 2131952014;
public static final int ShapeAppearance_M3_Sys_Shape_Corner_Large_End = 2131952015;
public static final int ShapeAppearance_M3_Sys_Shape_Corner_Large_Top = 2131952016;
public static final int ShapeAppearance_M3_Sys_Shape_Corner_Medium = 2131952017;
public static final int ShapeAppearance_M3_Sys_Shape_Corner_None = 2131952018;
public static final int ShapeAppearance_M3_Sys_Shape_Corner_Small = 2131952019;
public static final int ShapeAppearance_Material3_Corner_ExtraLarge = 2131952020;
public static final int ShapeAppearance_Material3_Corner_ExtraSmall = 2131952021;
public static final int ShapeAppearance_Material3_Corner_Full = 2131952022;
public static final int ShapeAppearance_Material3_Corner_Large = 2131952023;
public static final int ShapeAppearance_Material3_Corner_Medium = 2131952024;
public static final int ShapeAppearance_Material3_Corner_None = 2131952025;
public static final int ShapeAppearance_Material3_Corner_Small = 2131952026;
public static final int ShapeAppearance_Material3_LargeComponent = 2131952027;
public static final int ShapeAppearance_Material3_MediumComponent = 2131952028;
public static final int ShapeAppearance_Material3_NavigationBarView_ActiveIndicator = 2131952029;
public static final int ShapeAppearance_Material3_SmallComponent = 2131952030;
public static final int ShapeAppearance_Material3_Tooltip = 2131952031;
public static final int ShapeAppearance_MaterialComponents = 2131952032;
public static final int ShapeAppearance_MaterialComponents_LargeComponent = 2131952033;
public static final int ShapeAppearance_MaterialComponents_MediumComponent = 2131952034;
public static final int ShapeAppearance_MaterialComponents_SmallComponent = 2131952035;
public static final int ShapeAppearance_MaterialComponents_Test = 2131952036;
public static final int ShapeAppearance_MaterialComponents_Tooltip = 2131952037;
public static final int SmallIconView = 2131952059;
public static final int Splash = 2131952060;
public static final int TabLayoutText = 2131952061;
public static final int TestStyleWithLineHeight = 2131952067;
public static final int TestStyleWithLineHeightAppearance = 2131952068;
public static final int TestStyleWithThemeLineHeightAttribute = 2131952069;
public static final int TestStyleWithoutLineHeight = 2131952070;
public static final int TestThemeWithLineHeight = 2131952071;
public static final int TestThemeWithLineHeightDisabled = 2131952072;
public static final int Test_ShapeAppearanceOverlay_MaterialComponents_MaterialCalendar_Day = 2131952062;
public static final int Test_Theme_MaterialComponents_MaterialCalendar = 2131952063;
public static final int Test_Widget_MaterialComponents_MaterialCalendar = 2131952064;
public static final int Test_Widget_MaterialComponents_MaterialCalendar_Day = 2131952065;
public static final int Test_Widget_MaterialComponents_MaterialCalendar_Day_Selected = 2131952066;
public static final int TextAppearance_AppCompat = 2131952073;
public static final int TextAppearance_AppCompat_Body1 = 2131952074;
public static final int TextAppearance_AppCompat_Body2 = 2131952075;
public static final int TextAppearance_AppCompat_Button = 2131952076;
public static final int TextAppearance_AppCompat_Caption = 2131952077;
public static final int TextAppearance_AppCompat_Display1 = 2131952078;
public static final int TextAppearance_AppCompat_Display2 = 2131952079;
public static final int TextAppearance_AppCompat_Display3 = 2131952080;
public static final int TextAppearance_AppCompat_Display4 = 2131952081;
public static final int TextAppearance_AppCompat_Headline = 2131952082;
public static final int TextAppearance_AppCompat_Inverse = 2131952083;
public static final int TextAppearance_AppCompat_Large = 2131952084;
public static final int TextAppearance_AppCompat_Large_Inverse = 2131952085;
public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle = 2131952086;
public static final int TextAppearance_AppCompat_Light_SearchResult_Title = 2131952087;
public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large = 2131952088;
public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small = 2131952089;
public static final int TextAppearance_AppCompat_Medium = 2131952090;
public static final int TextAppearance_AppCompat_Medium_Inverse = 2131952091;
public static final int TextAppearance_AppCompat_Menu = 2131952092;
public static final int TextAppearance_AppCompat_SearchResult_Subtitle = 2131952093;
public static final int TextAppearance_AppCompat_SearchResult_Title = 2131952094;
public static final int TextAppearance_AppCompat_Small = 2131952095;
public static final int TextAppearance_AppCompat_Small_Inverse = 2131952096;
public static final int TextAppearance_AppCompat_Subhead = 2131952097;
public static final int TextAppearance_AppCompat_Subhead_Inverse = 2131952098;
public static final int TextAppearance_AppCompat_Title = 2131952099;
public static final int TextAppearance_AppCompat_Title_Inverse = 2131952100;
public static final int TextAppearance_AppCompat_Tooltip = 2131952101;
public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu = 2131952102;
public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle = 2131952103;
public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse = 2131952104;
public static final int TextAppearance_AppCompat_Widget_ActionBar_Title = 2131952105;
public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse = 2131952106;
public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle = 2131952107;
public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse = 2131952108;
public static final int TextAppearance_AppCompat_Widget_ActionMode_Title = 2131952109;
public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse = 2131952110;
public static final int TextAppearance_AppCompat_Widget_Button = 2131952111;
public static final int TextAppearance_AppCompat_Widget_Button_Borderless_Colored = 2131952112;
public static final int TextAppearance_AppCompat_Widget_Button_Colored = 2131952113;
public static final int TextAppearance_AppCompat_Widget_Button_Inverse = 2131952114;
public static final int TextAppearance_AppCompat_Widget_DropDownItem = 2131952115;
public static final int TextAppearance_AppCompat_Widget_PopupMenu_Header = 2131952116;
public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large = 2131952117;
public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small = 2131952118;
public static final int TextAppearance_AppCompat_Widget_Switch = 2131952119;
public static final int TextAppearance_AppCompat_Widget_TextView_SpinnerItem = 2131952120;
public static final int TextAppearance_Compat_Notification = 2131952121;
public static final int TextAppearance_Compat_Notification_Info = 2131952122;
public static final int TextAppearance_Compat_Notification_Info_Media = 2131952123;
public static final int TextAppearance_Compat_Notification_Line2 = 2131952124;
public static final int TextAppearance_Compat_Notification_Line2_Media = 2131952125;
public static final int TextAppearance_Compat_Notification_Media = 2131952126;
public static final int TextAppearance_Compat_Notification_Time = 2131952127;
public static final int TextAppearance_Compat_Notification_Time_Media = 2131952128;
public static final int TextAppearance_Compat_Notification_Title = 2131952129;
public static final int TextAppearance_Compat_Notification_Title_Media = 2131952130;
public static final int TextAppearance_Design_CollapsingToolbar_Expanded = 2131952131;
public static final int TextAppearance_Design_Counter = 2131952132;
public static final int TextAppearance_Design_Counter_Overflow = 2131952133;
public static final int TextAppearance_Design_Error = 2131952134;
public static final int TextAppearance_Design_HelperText = 2131952135;
public static final int TextAppearance_Design_Hint = 2131952136;
public static final int TextAppearance_Design_Placeholder = 2131952137;
public static final int TextAppearance_Design_Prefix = 2131952138;
public static final int TextAppearance_Design_Snackbar_Message = 2131952139;
public static final int TextAppearance_Design_Suffix = 2131952140;
public static final int TextAppearance_Design_Tab = 2131952141;
public static final int TextAppearance_M3_Sys_Typescale_BodyLarge = 2131952142;
public static final int TextAppearance_M3_Sys_Typescale_BodyMedium = 2131952143;
public static final int TextAppearance_M3_Sys_Typescale_BodySmall = 2131952144;
public static final int TextAppearance_M3_Sys_Typescale_DisplayLarge = 2131952145;
public static final int TextAppearance_M3_Sys_Typescale_DisplayMedium = 2131952146;
public static final int TextAppearance_M3_Sys_Typescale_DisplaySmall = 2131952147;
public static final int TextAppearance_M3_Sys_Typescale_HeadlineLarge = 2131952148;
public static final int TextAppearance_M3_Sys_Typescale_HeadlineMedium = 2131952149;
public static final int TextAppearance_M3_Sys_Typescale_HeadlineSmall = 2131952150;
public static final int TextAppearance_M3_Sys_Typescale_LabelLarge = 2131952151;
public static final int TextAppearance_M3_Sys_Typescale_LabelMedium = 2131952152;
public static final int TextAppearance_M3_Sys_Typescale_LabelSmall = 2131952153;
public static final int TextAppearance_M3_Sys_Typescale_TitleLarge = 2131952154;
public static final int TextAppearance_M3_Sys_Typescale_TitleMedium = 2131952155;
public static final int TextAppearance_M3_Sys_Typescale_TitleSmall = 2131952156;
public static final int TextAppearance_Material3_ActionBar_Subtitle = 2131952157;
public static final int TextAppearance_Material3_ActionBar_Title = 2131952158;
public static final int TextAppearance_Material3_BodyLarge = 2131952159;
public static final int TextAppearance_Material3_BodyMedium = 2131952160;
public static final int TextAppearance_Material3_BodySmall = 2131952161;
public static final int TextAppearance_Material3_DisplayLarge = 2131952162;
public static final int TextAppearance_Material3_DisplayMedium = 2131952163;
public static final int TextAppearance_Material3_DisplaySmall = 2131952164;
public static final int TextAppearance_Material3_HeadlineLarge = 2131952165;
public static final int TextAppearance_Material3_HeadlineMedium = 2131952166;
public static final int TextAppearance_Material3_HeadlineSmall = 2131952167;
public static final int TextAppearance_Material3_LabelLarge = 2131952168;
public static final int TextAppearance_Material3_LabelMedium = 2131952169;
public static final int TextAppearance_Material3_LabelSmall = 2131952170;
public static final int TextAppearance_Material3_MaterialTimePicker_Title = 2131952171;
public static final int TextAppearance_Material3_TitleLarge = 2131952172;
public static final int TextAppearance_Material3_TitleMedium = 2131952173;
public static final int TextAppearance_Material3_TitleSmall = 2131952174;
public static final int TextAppearance_MaterialComponents_Badge = 2131952175;
public static final int TextAppearance_MaterialComponents_Body1 = 2131952176;
public static final int TextAppearance_MaterialComponents_Body2 = 2131952177;
public static final int TextAppearance_MaterialComponents_Button = 2131952178;
public static final int TextAppearance_MaterialComponents_Caption = 2131952179;
public static final int TextAppearance_MaterialComponents_Chip = 2131952180;
public static final int TextAppearance_MaterialComponents_Headline1 = 2131952181;
public static final int TextAppearance_MaterialComponents_Headline2 = 2131952182;
public static final int TextAppearance_MaterialComponents_Headline3 = 2131952183;
public static final int TextAppearance_MaterialComponents_Headline4 = 2131952184;
public static final int TextAppearance_MaterialComponents_Headline5 = 2131952185;
public static final int TextAppearance_MaterialComponents_Headline6 = 2131952186;
public static final int TextAppearance_MaterialComponents_Overline = 2131952187;
public static final int TextAppearance_MaterialComponents_Subtitle1 = 2131952188;
public static final int TextAppearance_MaterialComponents_Subtitle2 = 2131952189;
public static final int TextAppearance_MaterialComponents_TimePicker_Title = 2131952190;
public static final int TextAppearance_MaterialComponents_Tooltip = 2131952191;
public static final int TextAppearance_Test_NoTextSize = 2131952192;
public static final int TextAppearance_Test_UsesDp = 2131952193;
public static final int TextAppearance_Test_UsesSP = 2131952194;
public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item = 2131952195;
public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle = 2131952196;
public static final int TextAppearance_Widget_AppCompat_Toolbar_Title = 2131952197;
public static final int TextGreatSeekBar = 2131952198;
public static final int TextGreatSettingSeekBar = 2131952199;
public static final int ThemeOverlayColorAccentRed = 2131952409;
public static final int ThemeOverlay_AppCompat = 2131952310;
public static final int ThemeOverlay_AppCompat_ActionBar = 2131952311;
public static final int ThemeOverlay_AppCompat_Dark = 2131952312;
public static final int ThemeOverlay_AppCompat_Dark_ActionBar = 2131952313;
public static final int ThemeOverlay_AppCompat_DayNight = 2131952314;
public static final int ThemeOverlay_AppCompat_DayNight_ActionBar = 2131952315;
public static final int ThemeOverlay_AppCompat_Dialog = 2131952316;
public static final int ThemeOverlay_AppCompat_Dialog_Alert = 2131952317;
public static final int ThemeOverlay_AppCompat_Light = 2131952318;
public static final int ThemeOverlay_Design_TextInputEditText = 2131952319;
public static final int ThemeOverlay_Material3 = 2131952320;
public static final int ThemeOverlay_Material3_ActionBar = 2131952321;
public static final int ThemeOverlay_Material3_AutoCompleteTextView = 2131952322;
public static final int ThemeOverlay_Material3_AutoCompleteTextView_FilledBox = 2131952323;
public static final int ThemeOverlay_Material3_AutoCompleteTextView_FilledBox_Dense = 2131952324;
public static final int ThemeOverlay_Material3_AutoCompleteTextView_OutlinedBox = 2131952325;
public static final int ThemeOverlay_Material3_AutoCompleteTextView_OutlinedBox_Dense = 2131952326;
public static final int ThemeOverlay_Material3_BottomAppBar = 2131952327;
public static final int ThemeOverlay_Material3_BottomSheetDialog = 2131952328;
public static final int ThemeOverlay_Material3_Button = 2131952329;
public static final int ThemeOverlay_Material3_Button_ElevatedButton = 2131952330;
public static final int ThemeOverlay_Material3_Button_TextButton = 2131952331;
public static final int ThemeOverlay_Material3_Button_TextButton_Snackbar = 2131952332;
public static final int ThemeOverlay_Material3_Button_TonalButton = 2131952333;
public static final int ThemeOverlay_Material3_Chip = 2131952334;
public static final int ThemeOverlay_Material3_Chip_Assist = 2131952335;
public static final int ThemeOverlay_Material3_Dark = 2131952336;
public static final int ThemeOverlay_Material3_Dark_ActionBar = 2131952337;
public static final int ThemeOverlay_Material3_DayNight_BottomSheetDialog = 2131952338;
public static final int ThemeOverlay_Material3_Dialog = 2131952339;
public static final int ThemeOverlay_Material3_Dialog_Alert = 2131952340;
public static final int ThemeOverlay_Material3_Dialog_Alert_Framework = 2131952341;
public static final int ThemeOverlay_Material3_DynamicColors_Dark = 2131952342;
public static final int ThemeOverlay_Material3_DynamicColors_DayNight = 2131952343;
public static final int ThemeOverlay_Material3_DynamicColors_Light = 2131952344;
public static final int ThemeOverlay_Material3_FloatingActionButton_Primary = 2131952345;
public static final int ThemeOverlay_Material3_FloatingActionButton_Secondary = 2131952346;
public static final int ThemeOverlay_Material3_FloatingActionButton_Surface = 2131952347;
public static final int ThemeOverlay_Material3_FloatingActionButton_Tertiary = 2131952348;
public static final int ThemeOverlay_Material3_HarmonizedColors = 2131952349;
public static final int ThemeOverlay_Material3_HarmonizedColors_Empty = 2131952350;
public static final int ThemeOverlay_Material3_Light = 2131952351;
public static final int ThemeOverlay_Material3_Light_Dialog_Alert_Framework = 2131952352;
public static final int ThemeOverlay_Material3_MaterialAlertDialog = 2131952353;
public static final int ThemeOverlay_Material3_MaterialAlertDialog_Centered = 2131952354;
public static final int ThemeOverlay_Material3_MaterialCalendar = 2131952355;
public static final int ThemeOverlay_Material3_MaterialCalendar_Fullscreen = 2131952356;
public static final int ThemeOverlay_Material3_MaterialCalendar_HeaderCancelButton = 2131952357;
public static final int ThemeOverlay_Material3_MaterialTimePicker = 2131952358;
public static final int ThemeOverlay_Material3_MaterialTimePicker_Display_TextInputEditText = 2131952359;
public static final int ThemeOverlay_Material3_NavigationView = 2131952360;
public static final int ThemeOverlay_Material3_Snackbar = 2131952361;
public static final int ThemeOverlay_Material3_TextInputEditText = 2131952362;
public static final int ThemeOverlay_Material3_TextInputEditText_FilledBox = 2131952363;
public static final int ThemeOverlay_Material3_TextInputEditText_FilledBox_Dense = 2131952364;
public static final int ThemeOverlay_Material3_TextInputEditText_OutlinedBox = 2131952365;
public static final int ThemeOverlay_Material3_TextInputEditText_OutlinedBox_Dense = 2131952366;
public static final int ThemeOverlay_Material3_Toolbar_Surface = 2131952367;
public static final int ThemeOverlay_MaterialAlertDialog_Material3_Title_Icon = 2131952368;
public static final int ThemeOverlay_MaterialComponents = 2131952369;
public static final int ThemeOverlay_MaterialComponents_ActionBar = 2131952370;
public static final int ThemeOverlay_MaterialComponents_ActionBar_Primary = 2131952371;
public static final int ThemeOverlay_MaterialComponents_ActionBar_Surface = 2131952372;
public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView = 2131952373;
public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_FilledBox = 2131952374;
public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_FilledBox_Dense = 2131952375;
public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_OutlinedBox = 2131952376;
public static final int ThemeOverlay_MaterialComponents_AutoCompleteTextView_OutlinedBox_Dense = 2131952377;
public static final int ThemeOverlay_MaterialComponents_BottomAppBar_Primary = 2131952378;
public static final int ThemeOverlay_MaterialComponents_BottomAppBar_Surface = 2131952379;
public static final int ThemeOverlay_MaterialComponents_BottomSheetDialog = 2131952380;
public static final int ThemeOverlay_MaterialComponents_Dark = 2131952381;
public static final int ThemeOverlay_MaterialComponents_Dark_ActionBar = 2131952382;
public static final int ThemeOverlay_MaterialComponents_DayNight_BottomSheetDialog = 2131952383;
public static final int ThemeOverlay_MaterialComponents_Dialog = 2131952384;
public static final int ThemeOverlay_MaterialComponents_Dialog_Alert = 2131952385;
public static final int ThemeOverlay_MaterialComponents_Dialog_Alert_Framework = 2131952386;
public static final int ThemeOverlay_MaterialComponents_Light = 2131952387;
public static final int ThemeOverlay_MaterialComponents_Light_Dialog_Alert_Framework = 2131952388;
public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog = 2131952389;
public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Centered = 2131952390;
public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date = 2131952391;
public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Calendar = 2131952392;
public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Header_Text = 2131952393;
public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Header_Text_Day = 2131952394;
public static final int ThemeOverlay_MaterialComponents_MaterialAlertDialog_Picker_Date_Spinner = 2131952395;
public static final int ThemeOverlay_MaterialComponents_MaterialCalendar = 2131952396;
public static final int ThemeOverlay_MaterialComponents_MaterialCalendar_Fullscreen = 2131952397;
public static final int ThemeOverlay_MaterialComponents_TextInputEditText = 2131952398;
public static final int ThemeOverlay_MaterialComponents_TextInputEditText_FilledBox = 2131952399;
public static final int ThemeOverlay_MaterialComponents_TextInputEditText_FilledBox_Dense = 2131952400;
public static final int ThemeOverlay_MaterialComponents_TextInputEditText_OutlinedBox = 2131952401;
public static final int ThemeOverlay_MaterialComponents_TextInputEditText_OutlinedBox_Dense = 2131952402;
public static final int ThemeOverlay_MaterialComponents_TimePicker = 2131952403;
public static final int ThemeOverlay_MaterialComponents_TimePicker_Display = 2131952404;
public static final int ThemeOverlay_MaterialComponents_TimePicker_Display_TextInputEditText = 2131952405;
public static final int ThemeOverlay_MaterialComponents_Toolbar_Popup_Primary = 2131952406;
public static final int ThemeOverlay_MaterialComponents_Toolbar_Primary = 2131952407;
public static final int ThemeOverlay_MaterialComponents_Toolbar_Surface = 2131952408;
public static final int Theme_AppCompat = 2131952201;
public static final int Theme_AppCompat_CompactMenu = 2131952202;
public static final int Theme_AppCompat_DayNight = 2131952203;
public static final int Theme_AppCompat_DayNight_DarkActionBar = 2131952204;
public static final int Theme_AppCompat_DayNight_Dialog = 2131952205;
public static final int Theme_AppCompat_DayNight_DialogWhenLarge = 2131952208;
public static final int Theme_AppCompat_DayNight_Dialog_Alert = 2131952206;
public static final int Theme_AppCompat_DayNight_Dialog_MinWidth = 2131952207;
public static final int Theme_AppCompat_DayNight_NoActionBar = 2131952209;
public static final int Theme_AppCompat_Dialog = 2131952210;
public static final int Theme_AppCompat_DialogWhenLarge = 2131952213;
public static final int Theme_AppCompat_Dialog_Alert = 2131952211;
public static final int Theme_AppCompat_Dialog_MinWidth = 2131952212;
public static final int Theme_AppCompat_Empty = 2131952214;
public static final int Theme_AppCompat_Light = 2131952215;
public static final int Theme_AppCompat_Light_DarkActionBar = 2131952216;
public static final int Theme_AppCompat_Light_Dialog = 2131952217;
public static final int Theme_AppCompat_Light_DialogWhenLarge = 2131952220;
public static final int Theme_AppCompat_Light_Dialog_Alert = 2131952218;
public static final int Theme_AppCompat_Light_Dialog_MinWidth = 2131952219;
public static final int Theme_AppCompat_Light_NoActionBar = 2131952221;
public static final int Theme_AppCompat_NoActionBar = 2131952222;
public static final int Theme_App_SplashScreen = 2131952200;
public static final int Theme_AudioDialog = 2131952410;
public static final int Theme_CollageMaker = 2131952223;
public static final int Theme_Design = 2131952224;
public static final int Theme_Design_BottomSheetDialog = 2131952225;
public static final int Theme_Design_Light = 2131952226;
public static final int Theme_Design_Light_BottomSheetDialog = 2131952227;
public static final int Theme_Design_Light_NoActionBar = 2131952228;
public static final int Theme_Design_NoActionBar = 2131952229;
public static final int Theme_Dialog_TTDownload = 2131952230;
public static final int Theme_Dialog_TTDownloadOld = 2131952231;
public static final int Theme_IAPTheme = 2131952232;
public static final int Theme_Material3_Dark = 2131952233;
public static final int Theme_Material3_Dark_BottomSheetDialog = 2131952234;
public static final int Theme_Material3_Dark_Dialog = 2131952235;
public static final int Theme_Material3_Dark_DialogWhenLarge = 2131952238;
public static final int Theme_Material3_Dark_Dialog_Alert = 2131952236;
public static final int Theme_Material3_Dark_Dialog_MinWidth = 2131952237;
public static final int Theme_Material3_Dark_NoActionBar = 2131952239;
public static final int Theme_Material3_DayNight = 2131952240;
public static final int Theme_Material3_DayNight_BottomSheetDialog = 2131952241;
public static final int Theme_Material3_DayNight_Dialog = 2131952242;
public static final int Theme_Material3_DayNight_DialogWhenLarge = 2131952245;
public static final int Theme_Material3_DayNight_Dialog_Alert = 2131952243;
public static final int Theme_Material3_DayNight_Dialog_MinWidth = 2131952244;
public static final int Theme_Material3_DayNight_NoActionBar = 2131952246;
public static final int Theme_Material3_DynamicColors_Dark = 2131952247;
public static final int Theme_Material3_DynamicColors_DayNight = 2131952248;
public static final int Theme_Material3_DynamicColors_Light = 2131952249;
public static final int Theme_Material3_Light = 2131952250;
public static final int Theme_Material3_Light_BottomSheetDialog = 2131952251;
public static final int Theme_Material3_Light_Dialog = 2131952252;
public static final int Theme_Material3_Light_DialogWhenLarge = 2131952255;
public static final int Theme_Material3_Light_Dialog_Alert = 2131952253;
public static final int Theme_Material3_Light_Dialog_MinWidth = 2131952254;
public static final int Theme_Material3_Light_NoActionBar = 2131952256;
public static final int Theme_MaterialComponents = 2131952257;
public static final int Theme_MaterialComponents_BottomSheetDialog = 2131952258;
public static final int Theme_MaterialComponents_Bridge = 2131952259;
public static final int Theme_MaterialComponents_CompactMenu = 2131952260;
public static final int Theme_MaterialComponents_DayNight = 2131952261;
public static final int Theme_MaterialComponents_DayNight_BottomSheetDialog = 2131952262;
public static final int Theme_MaterialComponents_DayNight_Bridge = 2131952263;
public static final int Theme_MaterialComponents_DayNight_DarkActionBar = 2131952264;
public static final int Theme_MaterialComponents_DayNight_DarkActionBar_Bridge = 2131952265;
public static final int Theme_MaterialComponents_DayNight_Dialog = 2131952266;
public static final int Theme_MaterialComponents_DayNight_DialogWhenLarge = 2131952274;
public static final int Theme_MaterialComponents_DayNight_Dialog_Alert = 2131952267;
public static final int Theme_MaterialComponents_DayNight_Dialog_Alert_Bridge = 2131952268;
public static final int Theme_MaterialComponents_DayNight_Dialog_Bridge = 2131952269;
public static final int Theme_MaterialComponents_DayNight_Dialog_FixedSize = 2131952270;
public static final int Theme_MaterialComponents_DayNight_Dialog_FixedSize_Bridge = 2131952271;
public static final int Theme_MaterialComponents_DayNight_Dialog_MinWidth = 2131952272;
public static final int Theme_MaterialComponents_DayNight_Dialog_MinWidth_Bridge = 2131952273;
public static final int Theme_MaterialComponents_DayNight_NoActionBar = 2131952275;
public static final int Theme_MaterialComponents_DayNight_NoActionBar_Bridge = 2131952276;
public static final int Theme_MaterialComponents_Dialog = 2131952277;
public static final int Theme_MaterialComponents_DialogWhenLarge = 2131952285;
public static final int Theme_MaterialComponents_Dialog_Alert = 2131952278;
public static final int Theme_MaterialComponents_Dialog_Alert_Bridge = 2131952279;
public static final int Theme_MaterialComponents_Dialog_Bridge = 2131952280;
public static final int Theme_MaterialComponents_Dialog_FixedSize = 2131952281;
public static final int Theme_MaterialComponents_Dialog_FixedSize_Bridge = 2131952282;
public static final int Theme_MaterialComponents_Dialog_MinWidth = 2131952283;
public static final int Theme_MaterialComponents_Dialog_MinWidth_Bridge = 2131952284;
public static final int Theme_MaterialComponents_Light = 2131952286;
public static final int Theme_MaterialComponents_Light_BarSize = 2131952287;
public static final int Theme_MaterialComponents_Light_BottomSheetDialog = 2131952288;
public static final int Theme_MaterialComponents_Light_Bridge = 2131952289;
public static final int Theme_MaterialComponents_Light_DarkActionBar = 2131952290;
public static final int Theme_MaterialComponents_Light_DarkActionBar_Bridge = 2131952291;
public static final int Theme_MaterialComponents_Light_Dialog = 2131952292;
public static final int Theme_MaterialComponents_Light_DialogWhenLarge = 2131952300;
public static final int Theme_MaterialComponents_Light_Dialog_Alert = 2131952293;
public static final int Theme_MaterialComponents_Light_Dialog_Alert_Bridge = 2131952294;
public static final int Theme_MaterialComponents_Light_Dialog_Bridge = 2131952295;
public static final int Theme_MaterialComponents_Light_Dialog_FixedSize = 2131952296;
public static final int Theme_MaterialComponents_Light_Dialog_FixedSize_Bridge = 2131952297;
public static final int Theme_MaterialComponents_Light_Dialog_MinWidth = 2131952298;
public static final int Theme_MaterialComponents_Light_Dialog_MinWidth_Bridge = 2131952299;
public static final int Theme_MaterialComponents_Light_LargeTouch = 2131952301;
public static final int Theme_MaterialComponents_Light_NoActionBar = 2131952302;
public static final int Theme_MaterialComponents_Light_NoActionBar_Bridge = 2131952303;
public static final int Theme_MaterialComponents_NoActionBar = 2131952304;
public static final int Theme_MaterialComponents_NoActionBar_Bridge = 2131952305;
public static final int Theme_SmoothProgressBarDefaults = 2131952306;
public static final int Theme_SplashScreen = 2131952307;
public static final int Theme_SplashScreen_Common = 2131952308;
public static final int Theme_SplashScreen_IconBackground = 2131952309;
public static final int TransparentBackgroundBottomSheetDialog = 2131952411;
public static final int TransparentBackgroundBottomSheetStyleWrapper = 2131952412;
public static final int Widget_AppCompat_ActionBar = 2131952413;
public static final int Widget_AppCompat_ActionBar_Solid = 2131952414;
public static final int Widget_AppCompat_ActionBar_TabBar = 2131952415;
public static final int Widget_AppCompat_ActionBar_TabText = 2131952416;
public static final int Widget_AppCompat_ActionBar_TabView = 2131952417;
public static final int Widget_AppCompat_ActionButton = 2131952418;
public static final int Widget_AppCompat_ActionButton_CloseMode = 2131952419;
public static final int Widget_AppCompat_ActionButton_Overflow = 2131952420;
public static final int Widget_AppCompat_ActionMode = 2131952421;
public static final int Widget_AppCompat_ActivityChooserView = 2131952422;
public static final int Widget_AppCompat_AutoCompleteTextView = 2131952423;
public static final int Widget_AppCompat_Button = 2131952424;
public static final int Widget_AppCompat_ButtonBar = 2131952430;
public static final int Widget_AppCompat_ButtonBar_AlertDialog = 2131952431;
public static final int Widget_AppCompat_Button_Borderless = 2131952425;
public static final int Widget_AppCompat_Button_Borderless_Colored = 2131952426;
public static final int Widget_AppCompat_Button_ButtonBar_AlertDialog = 2131952427;
public static final int Widget_AppCompat_Button_Colored = 2131952428;
public static final int Widget_AppCompat_Button_Small = 2131952429;
public static final int Widget_AppCompat_CompoundButton_CheckBox = 2131952432;
public static final int Widget_AppCompat_CompoundButton_RadioButton = 2131952433;
public static final int Widget_AppCompat_CompoundButton_Switch = 2131952434;
public static final int Widget_AppCompat_DrawerArrowToggle = 2131952435;
public static final int Widget_AppCompat_DropDownItem_Spinner = 2131952436;
public static final int Widget_AppCompat_EditText = 2131952437;
public static final int Widget_AppCompat_ImageButton = 2131952438;
public static final int Widget_AppCompat_Light_ActionBar = 2131952439;
public static final int Widget_AppCompat_Light_ActionBar_Solid = 2131952440;
public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse = 2131952441;
public static final int Widget_AppCompat_Light_ActionBar_TabBar = 2131952442;
public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse = 2131952443;
public static final int Widget_AppCompat_Light_ActionBar_TabText = 2131952444;
public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse = 2131952445;
public static final int Widget_AppCompat_Light_ActionBar_TabView = 2131952446;
public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse = 2131952447;
public static final int Widget_AppCompat_Light_ActionButton = 2131952448;
public static final int Widget_AppCompat_Light_ActionButton_CloseMode = 2131952449;
public static final int Widget_AppCompat_Light_ActionButton_Overflow = 2131952450;
public static final int Widget_AppCompat_Light_ActionMode_Inverse = 2131952451;
public static final int Widget_AppCompat_Light_ActivityChooserView = 2131952452;
public static final int Widget_AppCompat_Light_AutoCompleteTextView = 2131952453;
public static final int Widget_AppCompat_Light_DropDownItem_Spinner = 2131952454;
public static final int Widget_AppCompat_Light_ListPopupWindow = 2131952455;
public static final int Widget_AppCompat_Light_ListView_DropDown = 2131952456;
public static final int Widget_AppCompat_Light_PopupMenu = 2131952457;
public static final int Widget_AppCompat_Light_PopupMenu_Overflow = 2131952458;
public static final int Widget_AppCompat_Light_SearchView = 2131952459;
public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar = 2131952460;
public static final int Widget_AppCompat_ListMenuView = 2131952461;
public static final int Widget_AppCompat_ListPopupWindow = 2131952462;
public static final int Widget_AppCompat_ListView = 2131952463;
public static final int Widget_AppCompat_ListView_DropDown = 2131952464;
public static final int Widget_AppCompat_ListView_Menu = 2131952465;
public static final int Widget_AppCompat_PopupMenu = 2131952466;
public static final int Widget_AppCompat_PopupMenu_Overflow = 2131952467;
public static final int Widget_AppCompat_PopupWindow = 2131952468;
public static final int Widget_AppCompat_ProgressBar = 2131952469;
public static final int Widget_AppCompat_ProgressBar_Horizontal = 2131952470;
public static final int Widget_AppCompat_RatingBar = 2131952471;
public static final int Widget_AppCompat_RatingBar_Indicator = 2131952472;
public static final int Widget_AppCompat_RatingBar_Small = 2131952473;
public static final int Widget_AppCompat_SearchView = 2131952474;
public static final int Widget_AppCompat_SearchView_ActionBar = 2131952475;
public static final int Widget_AppCompat_SeekBar = 2131952476;
public static final int Widget_AppCompat_SeekBar_Discrete = 2131952477;
public static final int Widget_AppCompat_Spinner = 2131952478;
public static final int Widget_AppCompat_Spinner_DropDown = 2131952479;
public static final int Widget_AppCompat_Spinner_DropDown_ActionBar = 2131952480;
public static final int Widget_AppCompat_Spinner_Underlined = 2131952481;
public static final int Widget_AppCompat_TextView = 2131952482;
public static final int Widget_AppCompat_TextView_SpinnerItem = 2131952483;
public static final int Widget_AppCompat_Toolbar = 2131952484;
public static final int Widget_AppCompat_Toolbar_Button_Navigation = 2131952485;
public static final int Widget_Compat_NotificationActionContainer = 2131952486;
public static final int Widget_Compat_NotificationActionText = 2131952487;
public static final int Widget_Design_AppBarLayout = 2131952488;
public static final int Widget_Design_BottomNavigationView = 2131952489;
public static final int Widget_Design_BottomSheet_Modal = 2131952490;
public static final int Widget_Design_CollapsingToolbar = 2131952491;
public static final int Widget_Design_FloatingActionButton = 2131952492;
public static final int Widget_Design_NavigationView = 2131952493;
public static final int Widget_Design_ScrimInsetsFrameLayout = 2131952494;
public static final int Widget_Design_Snackbar = 2131952495;
public static final int Widget_Design_TabLayout = 2131952496;
public static final int Widget_Design_TextInputEditText = 2131952497;
public static final int Widget_Design_TextInputLayout = 2131952498;
public static final int Widget_Material3_ActionBar_Solid = 2131952499;
public static final int Widget_Material3_ActionMode = 2131952500;
public static final int Widget_Material3_AppBarLayout = 2131952501;
public static final int Widget_Material3_AutoCompleteTextView_FilledBox = 2131952502;
public static final int Widget_Material3_AutoCompleteTextView_FilledBox_Dense = 2131952503;
public static final int Widget_Material3_AutoCompleteTextView_OutlinedBox = 2131952504;
public static final int Widget_Material3_AutoCompleteTextView_OutlinedBox_Dense = 2131952505;
public static final int Widget_Material3_Badge = 2131952506;
public static final int Widget_Material3_BottomAppBar = 2131952507;
public static final int Widget_Material3_BottomNavigationView = 2131952508;
public static final int Widget_Material3_BottomNavigationView_ActiveIndicator = 2131952509;
public static final int Widget_Material3_BottomSheet = 2131952510;
public static final int Widget_Material3_BottomSheet_Modal = 2131952511;
public static final int Widget_Material3_Button = 2131952512;
public static final int Widget_Material3_Button_ElevatedButton = 2131952513;
public static final int Widget_Material3_Button_ElevatedButton_Icon = 2131952514;
public static final int Widget_Material3_Button_Icon = 2131952515;
public static final int Widget_Material3_Button_IconButton = 2131952516;
public static final int Widget_Material3_Button_OutlinedButton = 2131952517;
public static final int Widget_Material3_Button_OutlinedButton_Icon = 2131952518;
public static final int Widget_Material3_Button_TextButton = 2131952519;
public static final int Widget_Material3_Button_TextButton_Dialog = 2131952520;
public static final int Widget_Material3_Button_TextButton_Dialog_Flush = 2131952521;
public static final int Widget_Material3_Button_TextButton_Dialog_Icon = 2131952522;
public static final int Widget_Material3_Button_TextButton_Icon = 2131952523;
public static final int Widget_Material3_Button_TextButton_Snackbar = 2131952524;
public static final int Widget_Material3_Button_TonalButton = 2131952525;
public static final int Widget_Material3_Button_TonalButton_Icon = 2131952526;
public static final int Widget_Material3_Button_UnelevatedButton = 2131952527;
public static final int Widget_Material3_CardView_Elevated = 2131952528;
public static final int Widget_Material3_CardView_Filled = 2131952529;
public static final int Widget_Material3_CardView_Outlined = 2131952530;
public static final int Widget_Material3_CheckedTextView = 2131952531;
public static final int Widget_Material3_ChipGroup = 2131952542;
public static final int Widget_Material3_Chip_Assist = 2131952532;
public static final int Widget_Material3_Chip_Assist_Elevated = 2131952533;
public static final int Widget_Material3_Chip_Filter = 2131952534;
public static final int Widget_Material3_Chip_Filter_Elevated = 2131952535;
public static final int Widget_Material3_Chip_Input = 2131952536;
public static final int Widget_Material3_Chip_Input_Elevated = 2131952537;
public static final int Widget_Material3_Chip_Input_Icon = 2131952538;
public static final int Widget_Material3_Chip_Input_Icon_Elevated = 2131952539;
public static final int Widget_Material3_Chip_Suggestion = 2131952540;
public static final int Widget_Material3_Chip_Suggestion_Elevated = 2131952541;
public static final int Widget_Material3_CircularProgressIndicator = 2131952543;
public static final int Widget_Material3_CircularProgressIndicator_ExtraSmall = 2131952544;
public static final int Widget_Material3_CircularProgressIndicator_Medium = 2131952545;
public static final int Widget_Material3_CircularProgressIndicator_Small = 2131952546;
public static final int Widget_Material3_CollapsingToolbar = 2131952547;
public static final int Widget_Material3_CollapsingToolbar_Large = 2131952548;
public static final int Widget_Material3_CollapsingToolbar_Medium = 2131952549;
public static final int Widget_Material3_CompoundButton_CheckBox = 2131952550;
public static final int Widget_Material3_CompoundButton_RadioButton = 2131952551;
public static final int Widget_Material3_CompoundButton_Switch = 2131952552;
public static final int Widget_Material3_DrawerLayout = 2131952553;
public static final int Widget_Material3_ExtendedFloatingActionButton_Icon_Primary = 2131952554;
public static final int Widget_Material3_ExtendedFloatingActionButton_Icon_Secondary = 2131952555;
public static final int Widget_Material3_ExtendedFloatingActionButton_Icon_Surface = 2131952556;
public static final int Widget_Material3_ExtendedFloatingActionButton_Icon_Tertiary = 2131952557;
public static final int Widget_Material3_ExtendedFloatingActionButton_Primary = 2131952558;
public static final int Widget_Material3_ExtendedFloatingActionButton_Secondary = 2131952559;
public static final int Widget_Material3_ExtendedFloatingActionButton_Surface = 2131952560;
public static final int Widget_Material3_ExtendedFloatingActionButton_Tertiary = 2131952561;
public static final int Widget_Material3_FloatingActionButton_Large_Primary = 2131952562;
public static final int Widget_Material3_FloatingActionButton_Large_Secondary = 2131952563;
public static final int Widget_Material3_FloatingActionButton_Large_Surface = 2131952564;
public static final int Widget_Material3_FloatingActionButton_Large_Tertiary = 2131952565;
public static final int Widget_Material3_FloatingActionButton_Primary = 2131952566;
public static final int Widget_Material3_FloatingActionButton_Secondary = 2131952567;
public static final int Widget_Material3_FloatingActionButton_Surface = 2131952568;
public static final int Widget_Material3_FloatingActionButton_Tertiary = 2131952569;
public static final int Widget_Material3_Light_ActionBar_Solid = 2131952570;
public static final int Widget_Material3_LinearProgressIndicator = 2131952571;
public static final int Widget_Material3_MaterialCalendar = 2131952572;
public static final int Widget_Material3_MaterialCalendar_Day = 2131952573;
public static final int Widget_Material3_MaterialCalendar_DayOfWeekLabel = 2131952577;
public static final int Widget_Material3_MaterialCalendar_DayTextView = 2131952578;
public static final int Widget_Material3_MaterialCalendar_Day_Invalid = 2131952574;
public static final int Widget_Material3_MaterialCalendar_Day_Selected = 2131952575;
public static final int Widget_Material3_MaterialCalendar_Day_Today = 2131952576;
public static final int Widget_Material3_MaterialCalendar_Fullscreen = 2131952579;
public static final int Widget_Material3_MaterialCalendar_HeaderCancelButton = 2131952580;
public static final int Widget_Material3_MaterialCalendar_HeaderDivider = 2131952581;
public static final int Widget_Material3_MaterialCalendar_HeaderLayout = 2131952582;
public static final int Widget_Material3_MaterialCalendar_HeaderSelection = 2131952583;
public static final int Widget_Material3_MaterialCalendar_HeaderSelection_Fullscreen = 2131952584;
public static final int Widget_Material3_MaterialCalendar_HeaderTitle = 2131952585;
public static final int Widget_Material3_MaterialCalendar_HeaderToggleButton = 2131952586;
public static final int Widget_Material3_MaterialCalendar_Item = 2131952587;
public static final int Widget_Material3_MaterialCalendar_MonthNavigationButton = 2131952588;
public static final int Widget_Material3_MaterialCalendar_MonthTextView = 2131952589;
public static final int Widget_Material3_MaterialCalendar_Year = 2131952590;
public static final int Widget_Material3_MaterialCalendar_YearNavigationButton = 2131952593;
public static final int Widget_Material3_MaterialCalendar_Year_Selected = 2131952591;
public static final int Widget_Material3_MaterialCalendar_Year_Today = 2131952592;
public static final int Widget_Material3_MaterialDivider = 2131952594;
public static final int Widget_Material3_MaterialDivider_Heavy = 2131952595;
public static final int Widget_Material3_MaterialTimePicker = 2131952596;
public static final int Widget_Material3_MaterialTimePicker_Button = 2131952597;
public static final int Widget_Material3_MaterialTimePicker_Clock = 2131952598;
public static final int Widget_Material3_MaterialTimePicker_Display = 2131952599;
public static final int Widget_Material3_MaterialTimePicker_Display_Divider = 2131952600;
public static final int Widget_Material3_MaterialTimePicker_Display_HelperText = 2131952601;
public static final int Widget_Material3_MaterialTimePicker_Display_TextInputEditText = 2131952602;
public static final int Widget_Material3_MaterialTimePicker_Display_TextInputLayout = 2131952603;
public static final int Widget_Material3_MaterialTimePicker_ImageButton = 2131952604;
public static final int Widget_Material3_NavigationRailView = 2131952605;
public static final int Widget_Material3_NavigationRailView_ActiveIndicator = 2131952606;
public static final int Widget_Material3_NavigationView = 2131952607;
public static final int Widget_Material3_PopupMenu = 2131952608;
public static final int Widget_Material3_PopupMenu_ContextMenu = 2131952609;
public static final int Widget_Material3_PopupMenu_ListPopupWindow = 2131952610;
public static final int Widget_Material3_PopupMenu_Overflow = 2131952611;
public static final int Widget_Material3_Slider = 2131952612;
public static final int Widget_Material3_Snackbar = 2131952613;
public static final int Widget_Material3_Snackbar_FullWidth = 2131952614;
public static final int Widget_Material3_Snackbar_TextView = 2131952615;
public static final int Widget_Material3_TabLayout = 2131952616;
public static final int Widget_Material3_TabLayout_OnSurface = 2131952617;
public static final int Widget_Material3_TabLayout_Secondary = 2131952618;
public static final int Widget_Material3_TextInputEditText_FilledBox = 2131952619;
public static final int Widget_Material3_TextInputEditText_FilledBox_Dense = 2131952620;
public static final int Widget_Material3_TextInputEditText_OutlinedBox = 2131952621;
public static final int Widget_Material3_TextInputEditText_OutlinedBox_Dense = 2131952622;
public static final int Widget_Material3_TextInputLayout_FilledBox = 2131952623;
public static final int Widget_Material3_TextInputLayout_FilledBox_Dense = 2131952624;
public static final int Widget_Material3_TextInputLayout_FilledBox_Dense_ExposedDropdownMenu = 2131952625;
public static final int Widget_Material3_TextInputLayout_FilledBox_ExposedDropdownMenu = 2131952626;
public static final int Widget_Material3_TextInputLayout_OutlinedBox = 2131952627;
public static final int Widget_Material3_TextInputLayout_OutlinedBox_Dense = 2131952628;
public static final int Widget_Material3_TextInputLayout_OutlinedBox_Dense_ExposedDropdownMenu = 2131952629;
public static final int Widget_Material3_TextInputLayout_OutlinedBox_ExposedDropdownMenu = 2131952630;
public static final int Widget_Material3_Toolbar = 2131952631;
public static final int Widget_Material3_Toolbar_OnSurface = 2131952632;
public static final int Widget_Material3_Toolbar_Surface = 2131952633;
public static final int Widget_Material3_Tooltip = 2131952634;
public static final int Widget_MaterialComponents_ActionBar_Primary = 2131952635;
public static final int Widget_MaterialComponents_ActionBar_PrimarySurface = 2131952636;
public static final int Widget_MaterialComponents_ActionBar_Solid = 2131952637;
public static final int Widget_MaterialComponents_ActionBar_Surface = 2131952638;
public static final int Widget_MaterialComponents_ActionMode = 2131952639;
public static final int Widget_MaterialComponents_AppBarLayout_Primary = 2131952640;
public static final int Widget_MaterialComponents_AppBarLayout_PrimarySurface = 2131952641;
public static final int Widget_MaterialComponents_AppBarLayout_Surface = 2131952642;
public static final int Widget_MaterialComponents_AutoCompleteTextView_FilledBox = 2131952643;
public static final int Widget_MaterialComponents_AutoCompleteTextView_FilledBox_Dense = 2131952644;
public static final int Widget_MaterialComponents_AutoCompleteTextView_OutlinedBox = 2131952645;
public static final int Widget_MaterialComponents_AutoCompleteTextView_OutlinedBox_Dense = 2131952646;
public static final int Widget_MaterialComponents_Badge = 2131952647;
public static final int Widget_MaterialComponents_BottomAppBar = 2131952648;
public static final int Widget_MaterialComponents_BottomAppBar_Colored = 2131952649;
public static final int Widget_MaterialComponents_BottomAppBar_PrimarySurface = 2131952650;
public static final int Widget_MaterialComponents_BottomNavigationView = 2131952651;
public static final int Widget_MaterialComponents_BottomNavigationView_Colored = 2131952652;
public static final int Widget_MaterialComponents_BottomNavigationView_PrimarySurface = 2131952653;
public static final int Widget_MaterialComponents_BottomSheet = 2131952654;
public static final int Widget_MaterialComponents_BottomSheet_Modal = 2131952655;
public static final int Widget_MaterialComponents_Button = 2131952656;
public static final int Widget_MaterialComponents_Button_Icon = 2131952657;
public static final int Widget_MaterialComponents_Button_OutlinedButton = 2131952658;
public static final int Widget_MaterialComponents_Button_OutlinedButton_Icon = 2131952659;
public static final int Widget_MaterialComponents_Button_TextButton = 2131952660;
public static final int Widget_MaterialComponents_Button_TextButton_Dialog = 2131952661;
public static final int Widget_MaterialComponents_Button_TextButton_Dialog_Flush = 2131952662;
public static final int Widget_MaterialComponents_Button_TextButton_Dialog_Icon = 2131952663;
public static final int Widget_MaterialComponents_Button_TextButton_Icon = 2131952664;
public static final int Widget_MaterialComponents_Button_TextButton_Snackbar = 2131952665;
public static final int Widget_MaterialComponents_Button_UnelevatedButton = 2131952666;
public static final int Widget_MaterialComponents_Button_UnelevatedButton_Icon = 2131952667;
public static final int Widget_MaterialComponents_CardView = 2131952668;
public static final int Widget_MaterialComponents_CheckedTextView = 2131952669;
public static final int Widget_MaterialComponents_ChipGroup = 2131952674;
public static final int Widget_MaterialComponents_Chip_Action = 2131952670;
public static final int Widget_MaterialComponents_Chip_Choice = 2131952671;
public static final int Widget_MaterialComponents_Chip_Entry = 2131952672;
public static final int Widget_MaterialComponents_Chip_Filter = 2131952673;
public static final int Widget_MaterialComponents_CircularProgressIndicator = 2131952675;
public static final int Widget_MaterialComponents_CircularProgressIndicator_ExtraSmall = 2131952676;
public static final int Widget_MaterialComponents_CircularProgressIndicator_Medium = 2131952677;
public static final int Widget_MaterialComponents_CircularProgressIndicator_Small = 2131952678;
public static final int Widget_MaterialComponents_CollapsingToolbar = 2131952679;
public static final int Widget_MaterialComponents_CompoundButton_CheckBox = 2131952680;
public static final int Widget_MaterialComponents_CompoundButton_RadioButton = 2131952681;
public static final int Widget_MaterialComponents_CompoundButton_Switch = 2131952682;
public static final int Widget_MaterialComponents_ExtendedFloatingActionButton = 2131952683;
public static final int Widget_MaterialComponents_ExtendedFloatingActionButton_Icon = 2131952684;
public static final int Widget_MaterialComponents_FloatingActionButton = 2131952685;
public static final int Widget_MaterialComponents_Light_ActionBar_Solid = 2131952686;
public static final int Widget_MaterialComponents_LinearProgressIndicator = 2131952687;
public static final int Widget_MaterialComponents_MaterialButtonToggleGroup = 2131952688;
public static final int Widget_MaterialComponents_MaterialCalendar = 2131952689;
public static final int Widget_MaterialComponents_MaterialCalendar_Day = 2131952690;
public static final int Widget_MaterialComponents_MaterialCalendar_DayOfWeekLabel = 2131952694;
public static final int Widget_MaterialComponents_MaterialCalendar_DayTextView = 2131952695;
public static final int Widget_MaterialComponents_MaterialCalendar_Day_Invalid = 2131952691;
public static final int Widget_MaterialComponents_MaterialCalendar_Day_Selected = 2131952692;
public static final int Widget_MaterialComponents_MaterialCalendar_Day_Today = 2131952693;
public static final int Widget_MaterialComponents_MaterialCalendar_Fullscreen = 2131952696;
public static final int Widget_MaterialComponents_MaterialCalendar_HeaderCancelButton = 2131952697;
public static final int Widget_MaterialComponents_MaterialCalendar_HeaderConfirmButton = 2131952698;
public static final int Widget_MaterialComponents_MaterialCalendar_HeaderDivider = 2131952699;
public static final int Widget_MaterialComponents_MaterialCalendar_HeaderLayout = 2131952700;
public static final int Widget_MaterialComponents_MaterialCalendar_HeaderSelection = 2131952701;
public static final int Widget_MaterialComponents_MaterialCalendar_HeaderSelection_Fullscreen = 2131952702;
public static final int Widget_MaterialComponents_MaterialCalendar_HeaderTitle = 2131952703;
public static final int Widget_MaterialComponents_MaterialCalendar_HeaderToggleButton = 2131952704;
public static final int Widget_MaterialComponents_MaterialCalendar_Item = 2131952705;
public static final int Widget_MaterialComponents_MaterialCalendar_MonthNavigationButton = 2131952706;
public static final int Widget_MaterialComponents_MaterialCalendar_MonthTextView = 2131952707;
public static final int Widget_MaterialComponents_MaterialCalendar_Year = 2131952708;
public static final int Widget_MaterialComponents_MaterialCalendar_YearNavigationButton = 2131952711;
public static final int Widget_MaterialComponents_MaterialCalendar_Year_Selected = 2131952709;
public static final int Widget_MaterialComponents_MaterialCalendar_Year_Today = 2131952710;
public static final int Widget_MaterialComponents_MaterialDivider = 2131952712;
public static final int Widget_MaterialComponents_NavigationRailView = 2131952713;
public static final int Widget_MaterialComponents_NavigationRailView_Colored = 2131952714;
public static final int Widget_MaterialComponents_NavigationRailView_Colored_Compact = 2131952715;
public static final int Widget_MaterialComponents_NavigationRailView_Compact = 2131952716;
public static final int Widget_MaterialComponents_NavigationRailView_PrimarySurface = 2131952717;
public static final int Widget_MaterialComponents_NavigationView = 2131952718;
public static final int Widget_MaterialComponents_PopupMenu = 2131952719;
public static final int Widget_MaterialComponents_PopupMenu_ContextMenu = 2131952720;
public static final int Widget_MaterialComponents_PopupMenu_ListPopupWindow = 2131952721;
public static final int Widget_MaterialComponents_PopupMenu_Overflow = 2131952722;
public static final int Widget_MaterialComponents_ProgressIndicator = 2131952723;
public static final int Widget_MaterialComponents_ShapeableImageView = 2131952724;
public static final int Widget_MaterialComponents_Slider = 2131952725;
public static final int Widget_MaterialComponents_Snackbar = 2131952726;
public static final int Widget_MaterialComponents_Snackbar_FullWidth = 2131952727;
public static final int Widget_MaterialComponents_Snackbar_TextView = 2131952728;
public static final int Widget_MaterialComponents_TabLayout = 2131952729;
public static final int Widget_MaterialComponents_TabLayout_Colored = 2131952730;
public static final int Widget_MaterialComponents_TabLayout_PrimarySurface = 2131952731;
public static final int Widget_MaterialComponents_TextInputEditText_FilledBox = 2131952732;
public static final int Widget_MaterialComponents_TextInputEditText_FilledBox_Dense = 2131952733;
public static final int Widget_MaterialComponents_TextInputEditText_OutlinedBox = 2131952734;
public static final int Widget_MaterialComponents_TextInputEditText_OutlinedBox_Dense = 2131952735;
public static final int Widget_MaterialComponents_TextInputLayout_FilledBox = 2131952736;
public static final int Widget_MaterialComponents_TextInputLayout_FilledBox_Dense = 2131952737;
public static final int Widget_MaterialComponents_TextInputLayout_FilledBox_Dense_ExposedDropdownMenu = 2131952738;
public static final int Widget_MaterialComponents_TextInputLayout_FilledBox_ExposedDropdownMenu = 2131952739;
public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox = 2131952740;
public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox_Dense = 2131952741;
public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox_Dense_ExposedDropdownMenu = 2131952742;
public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox_ExposedDropdownMenu = 2131952743;
public static final int Widget_MaterialComponents_TextView = 2131952744;
public static final int Widget_MaterialComponents_TimePicker = 2131952745;
public static final int Widget_MaterialComponents_TimePicker_Button = 2131952746;
public static final int Widget_MaterialComponents_TimePicker_Clock = 2131952747;
public static final int Widget_MaterialComponents_TimePicker_Display = 2131952748;
public static final int Widget_MaterialComponents_TimePicker_Display_Divider = 2131952749;
public static final int Widget_MaterialComponents_TimePicker_Display_HelperText = 2131952750;
public static final int Widget_MaterialComponents_TimePicker_Display_TextInputEditText = 2131952751;
public static final int Widget_MaterialComponents_TimePicker_Display_TextInputLayout = 2131952752;
public static final int Widget_MaterialComponents_TimePicker_ImageButton = 2131952753;
public static final int Widget_MaterialComponents_TimePicker_ImageButton_ShapeAppearance = 2131952754;
public static final int Widget_MaterialComponents_Toolbar = 2131952755;
public static final int Widget_MaterialComponents_Toolbar_Primary = 2131952756;
public static final int Widget_MaterialComponents_Toolbar_PrimarySurface = 2131952757;
public static final int Widget_MaterialComponents_Toolbar_Surface = 2131952758;
public static final int Widget_MaterialComponents_Tooltip = 2131952759;
public static final int Widget_Support_CoordinatorLayout = 2131952760;
public static final int com_applovin_creative_CreativeDebuggerActivity_ActionBar = 2131952761;
public static final int com_applovin_creative_CreativeDebuggerActivity_ActionBar_TitleTextStyle = 2131952762;
public static final int com_applovin_creative_CreativeDebuggerActivity_Theme = 2131952763;
public static final int com_applovin_creative_debugger_ui_DisplayedAdActivity_ReportAdButton = 2131952764;
public static final int com_applovin_mediation_MaxDebuggerActivity_ActionBar = 2131952765;
public static final int com_applovin_mediation_MaxDebuggerActivity_ActionBar_Live = 2131952766;
public static final int com_applovin_mediation_MaxDebuggerActivity_ActionBar_TitleTextStyle = 2131952767;
public static final int com_applovin_mediation_MaxDebuggerActivity_Theme = 2131952768;
public static final int com_applovin_mediation_MaxDebuggerActivity_Theme_Live = 2131952769;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_AdBadgeTextView = 2131952770;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_AutoScrollingTextView = 2131952771;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_CTAButton = 2131952772;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_LargeAdBadgeTextView = 2131952773;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_LargeScrollingBodyTextView = 2131952774;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_LargeScrollingTitleTextView = 2131952775;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_LargeVerticalBodyTextSize = 2131952776;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_LargeVerticalTitleTextSize = 2131952777;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_ScrollingTitleTextView = 2131952778;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_SmallAdBadgeTextView = 2131952779;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_SmallScrollingBodyTextView = 2131952780;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_SmallScrollingTitleTextView = 2131952781;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_SmallVerticalBodyTextSize = 2131952782;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_SmallVerticalTitleTextSize = 2131952783;
public static final int com_applovin_mediation_nativeAds_MaxNativeAdView_TitleTextStyle = 2131952784;
public static final int gmts_ActionBarStyle = 2131952785;
public static final int gmts_AdManagerStyle = 2131952786;
public static final int gmts_AdMobStyle = 2131952787;
public static final int gmts_AppSecondaryTheme = 2131952788;
public static final int gmts_AppSecondaryTheme_AppBarOverlay = 2131952789;
public static final int gmts_AppSecondaryTheme_NoActionBar = 2131952790;
public static final int gmts_AppSecondaryTheme_PopupOverlay = 2131952791;
public static final int gmts_AppSecondaryTheme_Toolbar = 2131952792;
public static final int gmts_AppTheme_AppBarOverlay = 2131952793;
public static final int gmts_AppTheme_PopupOverlay = 2131952794;
public static final int gmts_BlueButton = 2131952795;
public static final int gmts_ButtonPadded = 2131952796;
public static final int gmts_CardView_Padding = 2131952797;
public static final int gmts_DialogTheme = 2131952798;
public static final int gmts_DialogTheme_FlippedButtonColor = 2131952799;
public static final int gmts_FontBody1 = 2131952800;
public static final int gmts_FontBody2 = 2131952801;
public static final int gmts_FontBody3 = 2131952802;
public static final int gmts_FontButton = 2131952803;
public static final int gmts_FontButtonWhite = 2131952804;
public static final int gmts_FontCaption1 = 2131952805;
public static final int gmts_FontHeadline1 = 2131952806;
public static final int gmts_FontHeadline2 = 2131952807;
public static final int gmts_FontHeadline3 = 2131952808;
public static final int gmts_FontHeadline4 = 2131952809;
public static final int gmts_FontHeadline5 = 2131952810;
public static final int gmts_FontHeadline6 = 2131952811;
public static final int gmts_FontHeadline7 = 2131952812;
public static final int gmts_FontNativeAssets = 2131952813;
public static final int gmts_FontNativeAssetsHeadline = 2131952814;
public static final int gmts_FontSearchBar = 2131952815;
public static final int gmts_FontSearchBarPlaceHolder = 2131952816;
public static final int gmts_SearchViewStyle = 2131952817;
public static final int gmts_TestSuiteTheme = 2131952818;
public static final int gmts_TestSuiteTheme_NoActionBar = 2131952819;
public static final int gmts_TextMarginsStandard = 2131952820;
public static final int gmts_TextMarginsVert = 2131952821;
public static final int gmts_TextPaddingSmall = 2131952822;
public static final int gmts_TintedCheckBox = 2131952823;
public static final int gmts_Toolbar_Button_Navigation_Tinted = 2131952824;
public static final int quick_option_dialog = 2131952825;
public static final int tt_Widget_ProgressBar_Horizontal = 2131952826;
public static final int tt_animation = 2131952827;
public static final int tt_app_open_ad_no_animation = 2131952828;
public static final int tt_back_view = 2131952829;
public static final int tt_custom_dialog = 2131952830;
public static final int tt_dislikeDialog = 2131952831;
public static final int tt_dislikeDialogAnimation = 2131952832;
public static final int tt_dislikeDialog_new = 2131952833;
public static final int tt_full_screen = 2131952834;
public static final int tt_full_screen_interaction = 2131952835;
public static final int tt_full_screen_new = 2131952836;
public static final int tt_landing_page = 2131952837;
public static final int tt_privacy_dialogTheme = 2131952838;
public static final int tt_privacy_dialog_theme_ad_report = 2131952839;
public static final int tt_privacy_landing_page = 2131952840;
public static final int tt_ss_popup_toast_anim = 2131952841;
public static final int tt_wg_insert_dialog = 2131952842;
public static final int tt_widget_gifView = 2131952843;

private R$style() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\mvvm\model\bean\setting\BubbleBean.java

package com.energysh.aichat.mvvm.model.bean.setting;

import java.io.Serializable;
import kotlin.jvm.internal.m;

public final class BubbleBean implements Serializable {
private int id;
private boolean isVip;
private int name;
private int radioBubble;
private boolean select;
private int textBubble;

public BubbleBean() {
this(0, 0, 0, 0, false, false, 63, (m) null);
}

public BubbleBean(int i, int i3, int i4, int i5, boolean z, boolean z2) {
this.id = i;
this.textBubble = i3;
this.radioBubble = i4;
this.name = i5;
this.select = z;
this.isVip = z2;
}

/* JADX WARNING: Illegal instructions before constructor call */
/* Code decompiled incorrectly, please refer to instructions dump. */
public /* synthetic */ BubbleBean(int r6, int r7, int r8, int r9, boolean r10, boolean r11, int r12, kotlin.jvm.internal.m r13) {
/*
r5 = this;
r13 = r12 & 1
r0 = 0
if (r13 == 0) goto L_0x0007
r13 = r0
goto L_0x0008
L_0x0007:
r13 = r6
L_0x0008:
r6 = r12 & 2
if (r6 == 0) goto L_0x000f
r7 = 2131230998(0x7f080116, float:1.8078065E38)
L_0x000f:
r1 = r7
r6 = r12 & 4
if (r6 == 0) goto L_0x0017
r8 = 2131230978(0x7f080102, float:1.8078024E38)
L_0x0017:
r2 = r8
r6 = r12 & 8
if (r6 == 0) goto L_0x001f
r9 = 2131886654(0x7f12023e, float:1.9407893E38)
L_0x001f:
r3 = r9
r6 = r12 & 16
if (r6 == 0) goto L_0x0026
r4 = r0
goto L_0x0027
L_0x0026:
r4 = r10
L_0x0027:
r6 = r12 & 32
if (r6 == 0) goto L_0x002d
r12 = r0
goto L_0x002e
L_0x002d:
r12 = r11
L_0x002e:
r6 = r5
r7 = r13
r8 = r1
r9 = r2
r10 = r3
r11 = r4
r6.<init>(r7, r8, r9, r10, r11, r12)
return
*/
throw new UnsupportedOperationException("Method not decompiled: com.energysh.aichat.mvvm.model.bean.setting.BubbleBean.<init>(int, int, int, int, boolean, boolean, int, kotlin.jvm.internal.m):void");
}

public final int getId() {
return this.id;
}

public final int getName() {
return this.name;
}

public final int getRadioBubble() {
return this.radioBubble;
}

public final boolean getSelect() {
return this.select;
}

public final int getTextBubble() {
return this.textBubble;
}

public final boolean isVip() {
return this.isVip;
}

public final void setId(int i) {
this.id = i;
}

public final void setName(int i) {
this.name = i;
}

public final void setRadioBubble(int i) {
this.radioBubble = i;
}

public final void setSelect(boolean z) {
this.select = z;
}

public final void setTextBubble(int i) {
this.textBubble = i;
}

public final void setVip(boolean z) {
this.isVip = z;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\mvvm\model\repositorys\AppDataInfoManager$getAppDataInfoList$2.java

package com.energysh.aichat.mvvm.model.repositorys;

import d4.p;
import java.util.List;
import kotlin.coroutines.c;
import kotlin.coroutines.intrinsics.CoroutineSingletons;
import kotlin.coroutines.jvm.internal.SuspendLambda;
import kotlin.f;
import kotlinx.coroutines.c0;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import x0.a;
import y3.d;

@d(c = "com.energysh.aichat.mvvm.model.repositorys.AppDataInfoManager$getAppDataInfoList$2", f = "AppDataInfoManager.kt", l = {}, m = "invokeSuspend")
final class AppDataInfoManager$getAppDataInfoList$2 extends SuspendLambda implements p<c0, c<? super List<? extends a>>, Object> {
public int label;
public final /* synthetic */ AppDataInfoManager this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public AppDataInfoManager$getAppDataInfoList$2(AppDataInfoManager appDataInfoManager, c<? super AppDataInfoManager$getAppDataInfoList$2> cVar) {
super(2, cVar);
this.this$0 = appDataInfoManager;
}

@NotNull
public final c<kotlin.p> create(@Nullable Object obj, @NotNull c<?> cVar) {
return new AppDataInfoManager$getAppDataInfoList$2(this.this$0, cVar);
}

@Nullable
public final Object invoke(@NotNull c0 c0Var, @Nullable c<? super List<a>> cVar) {
return create(c0Var, cVar).invokeSuspend(kotlin.p.a);
}

@Nullable
public final Object invokeSuspend(@NotNull Object obj) {
CoroutineSingletons coroutineSingletons = CoroutineSingletons.COROUTINE_SUSPENDED;
if (this.label == 0) {
f.b(obj);
return this.this$0.a.a();
}
throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\mvvm\model\repositorys\AppDataInfoManager$showRemoveAdSubVip$1.java

package com.energysh.aichat.mvvm.model.repositorys;

import com.energysh.aichat.remote.AppRemoteConfigs;
import java.util.Objects;
import kotlin.coroutines.c;
import kotlin.coroutines.intrinsics.CoroutineSingletons;
import kotlin.coroutines.jvm.internal.ContinuationImpl;
import kotlin.f;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import x0.a;
import y3.d;

@d(c = "com.energysh.aichat.mvvm.model.repositorys.AppDataInfoManager", f = "AppDataInfoManager.kt", l = {217}, m = "showRemoveAdSubVip")
final class AppDataInfoManager$showRemoveAdSubVip$1 extends ContinuationImpl {
public int label;
public /* synthetic */ Object result;
public final /* synthetic */ AppDataInfoManager this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public AppDataInfoManager$showRemoveAdSubVip$1(AppDataInfoManager appDataInfoManager, c<? super AppDataInfoManager$showRemoveAdSubVip$1> cVar) {
super(cVar);
this.this$0 = appDataInfoManager;
}

@Nullable
public final Object invokeSuspend(@NotNull Object obj) {
AppDataInfoManager$showRemoveAdSubVip$1 appDataInfoManager$showRemoveAdSubVip$1;
int i;
this.result = obj;
this.label |= Integer.MIN_VALUE;
AppDataInfoManager appDataInfoManager = this.this$0;
Objects.requireNonNull(appDataInfoManager);
int i3 = this.label;
if ((i3 & Integer.MIN_VALUE) != 0) {
this.label = i3 - Integer.MIN_VALUE;
appDataInfoManager$showRemoveAdSubVip$1 = this;
} else {
appDataInfoManager$showRemoveAdSubVip$1 = new AppDataInfoManager$showRemoveAdSubVip$1(appDataInfoManager, this);
}
Object obj2 = appDataInfoManager$showRemoveAdSubVip$1.result;
CoroutineSingletons coroutineSingletons = CoroutineSingletons.COROUTINE_SUSPENDED;
int i4 = appDataInfoManager$showRemoveAdSubVip$1.label;
boolean z = true;
if (i4 == 0) {
f.b(obj2);
if (!AppRemoteConfigs.b.a().c("ad_remove_switch", true)) {
return Boolean.FALSE;
}
appDataInfoManager$showRemoveAdSubVip$1.label = 1;
obj2 = appDataInfoManager.d(appDataInfoManager$showRemoveAdSubVip$1);
if (obj2 == coroutineSingletons) {
return coroutineSingletons;
}
} else if (i4 == 1) {
f.b(obj2);
} else {
throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine");
}
a aVar = (a) obj2;
if (aVar == null || aVar.s >= 1 || (i = aVar.h) <= 0 || i > 2) {
z = false;
}
return Boolean.valueOf(z);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\mvvm\model\repositorys\MessageRepository$a.java

package com.energysh.aichat.mvvm.model.repositorys;

import org.jetbrains.annotations.NotNull;

public final class MessageRepository$a {
@NotNull
public final MessageRepository a() {
return (MessageRepository) MessageRepository.c.getValue();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\mvvm\model\repositorys\MessageRepository$querySingleMsgFromExpertId$2.java

package com.energysh.aichat.mvvm.model.repositorys;

import com.energysh.aichat.mvvm.model.db.entity.MessageBean;
import d4.p;
import kotlin.coroutines.c;
import kotlin.coroutines.intrinsics.CoroutineSingletons;
import kotlin.coroutines.jvm.internal.SuspendLambda;
import kotlin.f;
import kotlinx.coroutines.c0;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import y3.d;

@d(c = "com.energysh.aichat.mvvm.model.repositorys.MessageRepository$querySingleMsgFromExpertId$2", f = "MessageRepository.kt", l = {}, m = "invokeSuspend")
public final class MessageRepository$querySingleMsgFromExpertId$2 extends SuspendLambda implements p<c0, c<? super MessageBean>, Object> {
public final /* synthetic */ int $expertId;
public int label;
public final /* synthetic */ MessageRepository this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public MessageRepository$querySingleMsgFromExpertId$2(MessageRepository messageRepository, int i, c<? super MessageRepository$querySingleMsgFromExpertId$2> cVar) {
super(2, cVar);
this.this$0 = messageRepository;
this.$expertId = i;
}

@NotNull
public final c<kotlin.p> create(@Nullable Object obj, @NotNull c<?> cVar) {
return new MessageRepository$querySingleMsgFromExpertId$2(this.this$0, this.$expertId, cVar);
}

@Nullable
public final Object invoke(@NotNull c0 c0Var, @Nullable c<? super MessageBean> cVar) {
return create(c0Var, cVar).invokeSuspend(kotlin.p.a);
}

@Nullable
public final Object invokeSuspend(@NotNull Object obj) {
CoroutineSingletons coroutineSingletons = CoroutineSingletons.COROUTINE_SUSPENDED;
if (this.label == 0) {
f.b(obj);
return this.this$0.a.d(this.$expertId);
}
throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\mvvm\model\repositorys\freeplan\FreePlanRepository$reset$1.java

package com.energysh.aichat.mvvm.model.repositorys.freeplan;

import kotlin.coroutines.c;
import kotlin.coroutines.jvm.internal.ContinuationImpl;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import y3.d;

@d(c = "com.energysh.aichat.mvvm.model.repositorys.freeplan.FreePlanRepository", f = "FreePlanRepository.kt", l = {286, 293, 294}, m = "reset")
public final class FreePlanRepository$reset$1 extends ContinuationImpl {
public Object L$0;
public Object L$1;
public int label;
public /* synthetic */ Object result;
public final /* synthetic */ FreePlanRepository this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public FreePlanRepository$reset$1(FreePlanRepository freePlanRepository, c<? super FreePlanRepository$reset$1> cVar) {
super(cVar);
this.this$0 = freePlanRepository;
}

@Nullable
public final Object invokeSuspend(@NotNull Object obj) {
this.result = obj;
this.label |= Integer.MIN_VALUE;
return this.this$0.e(this);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\mvvm\model\repositorys\vip\SubscriptionVipHeadRepository$a.java

package com.energysh.aichat.mvvm.model.repositorys.vip;

public final class SubscriptionVipHeadRepository$a {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\mvvm\model\repositorys\vip\SubscriptionVipRepository$recordFreeTrialCount$2.java

package com.energysh.aichat.mvvm.model.repositorys.vip;

import com.energysh.aichat.mvvm.model.repositorys.AppDataInfoManager;
import d4.p;
import kotlin.coroutines.c;
import kotlin.coroutines.intrinsics.CoroutineSingletons;
import kotlin.coroutines.jvm.internal.SuspendLambda;
import kotlin.f;
import kotlinx.coroutines.c0;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import x0.a;
import y3.d;

@d(c = "com.energysh.aichat.mvvm.model.repositorys.vip.SubscriptionVipRepository$recordFreeTrialCount$2", f = "SubscriptionVipRepository.kt", l = {437}, m = "invokeSuspend")
public final class SubscriptionVipRepository$recordFreeTrialCount$2 extends SuspendLambda implements p<c0, c<? super kotlin.p>, Object> {
public int label;

public SubscriptionVipRepository$recordFreeTrialCount$2(c<? super SubscriptionVipRepository$recordFreeTrialCount$2> cVar) {
super(2, cVar);
}

@NotNull
public final c<kotlin.p> create(@Nullable Object obj, @NotNull c<?> cVar) {
return new SubscriptionVipRepository$recordFreeTrialCount$2(cVar);
}

@Nullable
public final Object invoke(@NotNull c0 c0Var, @Nullable c<? super kotlin.p> cVar) {
return create(c0Var, cVar).invokeSuspend(kotlin.p.a);
}

@Nullable
public final Object invokeSuspend(@NotNull Object obj) {
CoroutineSingletons coroutineSingletons = CoroutineSingletons.COROUTINE_SUSPENDED;
int i = this.label;
if (i == 0) {
f.b(obj);
AppDataInfoManager a = AppDataInfoManager.b.a();
this.label = 1;
obj = a.d(this);
if (obj == coroutineSingletons) {
return coroutineSingletons;
}
} else if (i == 1) {
f.b(obj);
} else {
throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine");
}
a aVar = (a) obj;
if (aVar != null) {
aVar.k++;
AppDataInfoManager.b.a().f(aVar);
}
return kotlin.p.a;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\mvvm\ui\adapter\setting\TextBubbleAdapter.java

package com.energysh.aichat.mvvm.ui.adapter.setting;

import androidx.core.content.ContextCompat;
import com.chad.library.adapter.base.BaseQuickAdapter;
import com.chad.library.adapter.base.viewholder.BaseViewHolder;
import com.energysh.aichat.mvvm.model.bean.setting.BubbleBean;
import java.util.List;
import kotlin.jvm.internal.o;
import org.jetbrains.annotations.Nullable;

public final class TextBubbleAdapter extends BaseQuickAdapter<BubbleBean, BaseViewHolder> {
public TextBubbleAdapter(@Nullable List<BubbleBean> list) {
super(2131558709, list);
}

public final void convert(BaseViewHolder baseViewHolder, Object obj) {
BubbleBean bubbleBean = (BubbleBean) obj;
o.f(baseViewHolder, "holder");
o.f(bubbleBean, "item");
baseViewHolder.setText(2131363037, bubbleBean.getName());
baseViewHolder.getView(2131362304).setBackground(ContextCompat.getDrawable(getContext(), bubbleBean.getTextBubble()));
baseViewHolder.getView(2131362370).setSelected(bubbleBean.getSelect());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\mvvm\ui\dialog\ad\FreeMessageRewardDialog$timeoutListener$1$1.java

package com.energysh.aichat.mvvm.ui.dialog.ad;

import d4.p;
import kotlin.coroutines.c;
import kotlin.coroutines.intrinsics.CoroutineSingletons;
import kotlin.coroutines.jvm.internal.SuspendLambda;
import kotlin.f;
import kotlinx.coroutines.c0;
import kotlinx.coroutines.g;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import y3.d;

@d(c = "com.energysh.aichat.mvvm.ui.dialog.ad.FreeMessageRewardDialog$timeoutListener$1$1", f = "FreeMessageRewardDialog.kt", l = {154}, m = "invokeSuspend")
public final class FreeMessageRewardDialog$timeoutListener$1$1 extends SuspendLambda implements p<c0, c<? super kotlin.p>, Object> {
public int label;

public FreeMessageRewardDialog$timeoutListener$1$1(c<? super FreeMessageRewardDialog$timeoutListener$1$1> cVar) {
super(2, cVar);
}

@NotNull
public final c<kotlin.p> create(@Nullable Object obj, @NotNull c<?> cVar) {
return new FreeMessageRewardDialog$timeoutListener$1$1(cVar);
}

@Nullable
public final Object invoke(@NotNull c0 c0Var, @Nullable c<? super kotlin.p> cVar) {
return create(c0Var, cVar).invokeSuspend(kotlin.p.a);
}

@Nullable
public final Object invokeSuspend(@NotNull Object obj) {
CoroutineSingletons coroutineSingletons = CoroutineSingletons.COROUTINE_SUSPENDED;
int i = this.label;
if (i == 0) {
f.b(obj);
this.label = 1;
if (g.c(15000, this) == coroutineSingletons) {
return coroutineSingletons;
}
} else if (i == 1) {
f.b(obj);
} else {
throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine");
}
return kotlin.p.a;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\mvvm\ui\fragment\BaseFragment.java

package com.energysh.aichat.mvvm.ui.fragment;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentActivity;
import com.energysh.common.ad.AdExtKt;
import io.reactivex.disposables.a;
import kotlin.jvm.internal.o;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public abstract class BaseFragment extends Fragment {
@NotNull
private a compositeDisposable = new a();
private boolean isViewCreated;
private boolean isVisibleState;
@Nullable
private View rootView;

@NotNull
public a getCompositeDisposable() {
return this.compositeDisposable;
}

public abstract void initData();

public abstract void initView(@NotNull View view);

public abstract int layoutRes();

public void onBackPressed() {
FragmentActivity activity = getActivity();
if (activity != null) {
activity.onBackPressed();
}
}

@Nullable
public View onCreateView(@NotNull LayoutInflater layoutInflater, @Nullable ViewGroup viewGroup, @Nullable Bundle bundle) {
o.f(layoutInflater, "inflater");
if (this.rootView == null) {
try {
this.rootView = layoutInflater.inflate(layoutRes(), viewGroup, false);
} catch (Throwable unused) {
FragmentActivity activity = getActivity();
if (activity != null) {
activity.finish();
}
}
}
return this.rootView;
}

public void onDestroyView() {
AdExtKt.destroyAd(this);
getCompositeDisposable().d();
BaseFragment.super.onDestroyView();
}

public void onPause() {
BaseFragment.super.onPause();
AdExtKt.pauseAd(this);
}

public void onResume() {
BaseFragment.super.onResume();
AdExtKt.resumeAd(this);
}

public void onViewCreated(@NotNull View view, @Nullable Bundle bundle) {
o.f(view, "view");
initView(view);
initData();
}

public void refresh() {
}

public void setCompositeDisposable(@NotNull a aVar) {
o.f(aVar, "<set-?>");
this.compositeDisposable = aVar;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\mvvm\ui\fragment\home\HomeChatFragment$updateFreePlanView$1.java

package com.energysh.aichat.mvvm.ui.fragment.home;

import com.energysh.aichat.application.App;
import com.energysh.aichat.mvvm.viewmodel.FreePlanViewModel;
import com.energysh.common.util.NetworkUtil;
import com.energysh.common.view.roboto.RobotoRegularTextView;
import d4.p;
import kotlin.coroutines.c;
import kotlin.coroutines.intrinsics.CoroutineSingletons;
import kotlin.coroutines.jvm.internal.SuspendLambda;
import kotlin.f;
import kotlinx.coroutines.c0;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import q0.m0;
import y3.d;

@d(c = "com.energysh.aichat.mvvm.ui.fragment.home.HomeChatFragment$updateFreePlanView$1", f = "HomeChatFragment.kt", l = {170}, m = "invokeSuspend")
public final class HomeChatFragment$updateFreePlanView$1 extends SuspendLambda implements p<c0, c<? super kotlin.p>, Object> {
public int label;
public final /* synthetic */ HomeChatFragment this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public HomeChatFragment$updateFreePlanView$1(HomeChatFragment homeChatFragment, c<? super HomeChatFragment$updateFreePlanView$1> cVar) {
super(2, cVar);
this.this$0 = homeChatFragment;
}

@NotNull
public final c<kotlin.p> create(@Nullable Object obj, @NotNull c<?> cVar) {
return new HomeChatFragment$updateFreePlanView$1(this.this$0, cVar);
}

@Nullable
public final Object invoke(@NotNull c0 c0Var, @Nullable c<? super kotlin.p> cVar) {
return create(c0Var, cVar).invokeSuspend(kotlin.p.a);
}

@Nullable
public final Object invokeSuspend(@NotNull Object obj) {
CoroutineSingletons coroutineSingletons = CoroutineSingletons.COROUTINE_SUSPENDED;
int i = this.label;
RobotoRegularTextView robotoRegularTextView = null;
if (i == 0) {
f.b(obj);
if (App.h.a().g) {
m0 access$getBinding$p = HomeChatFragment.access$getBinding$p(this.this$0);
if (access$getBinding$p != null) {
robotoRegularTextView = access$getBinding$p.l;
}
if (robotoRegularTextView != null) {
robotoRegularTextView.setVisibility(8);
}
return kotlin.p.a;
}
FreePlanViewModel access$getFreePlanViewModel = HomeChatFragment.access$getFreePlanViewModel(this.this$0);
this.label = 1;
obj = access$getFreePlanViewModel.b(this);
if (obj == coroutineSingletons) {
return coroutineSingletons;
}
} else if (i == 1) {
f.b(obj);
} else {
throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine");
}
if (obj == null || !NetworkUtil.isNetWorkAvailable(App.h.a())) {
m0 access$getBinding$p2 = HomeChatFragment.access$getBinding$p(this.this$0);
if (access$getBinding$p2 != null) {
robotoRegularTextView = access$getBinding$p2.l;
}
if (robotoRegularTextView != null) {
robotoRegularTextView.setVisibility(8);
}
return kotlin.p.a;
}
m0 access$getBinding$p3 = HomeChatFragment.access$getBinding$p(this.this$0);
if (access$getBinding$p3 != null) {
robotoRegularTextView = access$getBinding$p3.l;
}
if (robotoRegularTextView != null) {
robotoRegularTextView.setVisibility(0);
}
return kotlin.p.a;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\mvvm\ui\fragment\home\HomeExpertMessageFragment$getMessageList$1.java

package com.energysh.aichat.mvvm.ui.fragment.home;

import kotlin.coroutines.c;
import kotlin.coroutines.jvm.internal.ContinuationImpl;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import y3.d;

@d(c = "com.energysh.aichat.mvvm.ui.fragment.home.HomeExpertMessageFragment", f = "HomeExpertMessageFragment.kt", l = {281}, m = "getMessageList")
public final class HomeExpertMessageFragment$getMessageList$1 extends ContinuationImpl {
public Object L$0;
public Object L$1;
public Object L$2;
public int label;
public /* synthetic */ Object result;
public final /* synthetic */ HomeExpertMessageFragment this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public HomeExpertMessageFragment$getMessageList$1(HomeExpertMessageFragment homeExpertMessageFragment, c<? super HomeExpertMessageFragment$getMessageList$1> cVar) {
super(cVar);
this.this$0 = homeExpertMessageFragment;
}

@Nullable
public final Object invokeSuspend(@NotNull Object obj) {
this.result = obj;
this.label |= Integer.MIN_VALUE;
return HomeExpertMessageFragment.access$getMessageList(this.this$0, this);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\aichat\remote\FirebaseRemoteConfigs$Companion$instance$2.java

package com.energysh.aichat.remote;

import d4.a;
import kotlin.jvm.internal.Lambda;
import org.jetbrains.annotations.NotNull;

public final class FirebaseRemoteConfigs$Companion$instance$2 extends Lambda implements a<FirebaseRemoteConfigs> {
public static final FirebaseRemoteConfigs$Companion$instance$2 INSTANCE = new FirebaseRemoteConfigs$Companion$instance$2();

public FirebaseRemoteConfigs$Companion$instance$2() {
super(0);
}

@NotNull
public final FirebaseRemoteConfigs invoke() {
return new FirebaseRemoteConfigs();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\common\analytics\AnalyticsCache.java

package com.energysh.common.analytics;

import com.energysh.common.BaseContext;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import kotlin.Pair;
import kotlin.collections.r;
import kotlin.d;
import kotlin.e;
import kotlin.jvm.internal.m;
import kotlin.jvm.internal.o;
import m4.a;
import org.jetbrains.annotations.NotNull;

public final class AnalyticsCache {
@NotNull
public static final Companion Companion = new Companion((m) null);
@NotNull
public static final d<AnalyticsCache> b = e.a(Companion.instance.2.INSTANCE);
@NotNull
public List<Pair<String, String>> a = new ArrayList();

public static /* synthetic */ void addMaterialAnal$default(AnalyticsCache analyticsCache, String str, int i, String str2, boolean z, int i3, Object obj) {
if ((i3 & 8) != 0) {
z = false;
}
analyticsCache.addMaterialAnal(str, i, str2, z);
}

/* JADX WARNING: type inference failed for: r7v4, types: [java.util.List<kotlin.Pair<java.lang.String, java.lang.String>>, java.util.ArrayList] */
/* JADX WARNING: type inference failed for: r7v5, types: [java.util.List<kotlin.Pair<java.lang.String, java.lang.String>>, java.util.ArrayList] */
public final void addMaterialAnal(@NotNull String str, int i, @NotNull String str2, boolean z) {
o.f(str, "typeName");
o.f(str2, "themeId");
try {
if (!(str2.length() == 0)) {
String substring = str2.substring(0, 10);
o.e(substring, "this as java.lang.String…ing(startIndex, endIndex)");
String str3 = "素材数据_" + substring + '_' + i + "_导出成功";
if (z) {
? r7 = this.a;
ArrayList arrayList = new ArrayList();
Iterator it = r7.iterator();
while (it.hasNext()) {
Object next = it.next();
if (!((String) ((Pair) next).getFirst()).equals(str)) {
arrayList.add(next);
}
}
this.a = (ArrayList) r.I(arrayList);
}
a.a aVar = a.a;
aVar.g("素材使用日志");
aVar.b("添加：" + str3, new Object[0]);
this.a.add(new Pair(str, str3));
}
} catch (Exception unused) {
}
}

/* JADX WARNING: type inference failed for: r0v1, types: [java.util.List<kotlin.Pair<java.lang.String, java.lang.String>>, java.util.ArrayList] */
/* JADX WARNING: type inference failed for: r0v4, types: [java.util.List<kotlin.Pair<java.lang.String, java.lang.String>>, java.util.ArrayList] */
public final void applyMaterialAnalytics() {
a.a aVar = a.a;
aVar.g("素材使用日志");
aVar.b("开始上传 ----------->", new Object[0]);
Iterator it = this.a.iterator();
while (it.hasNext()) {
Pair pair = (Pair) it.next();
a.a aVar2 = a.a;
aVar2.g("素材使用日志");
aVar2.b("上传：" + ((String) pair.getSecond()), new Object[0]);
AnalyticsKt.analysis(BaseContext.Companion.getContext(), new String[]{(String) pair.getSecond()});
}
a.a aVar3 = a.a;
aVar3.g("素材使用日志");
aVar3.b("上传完成 <-----------", new Object[0]);
this.a.clear();
}

/* JADX WARNING: type inference failed for: r0v0, types: [java.util.List<kotlin.Pair<java.lang.String, java.lang.String>>, java.util.ArrayList] */
public final void clearAllMaterialAnalRecord() {
this.a.clear();
}

/* JADX WARNING: type inference failed for: r0v1, types: [java.util.List<kotlin.Pair<java.lang.String, java.lang.String>>, java.util.ArrayList] */
public final void clearMaterialAnalRecord(@NotNull String str) {
o.f(str, "typeName");
? r0 = this.a;
ArrayList arrayList = new ArrayList();
Iterator it = r0.iterator();
while (it.hasNext()) {
Object next = it.next();
if (!((String) ((Pair) next).getFirst()).equals(str)) {
arrayList.add(next);
}
}
this.a = (ArrayList) r.I(arrayList);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\common\view\roboto\RobotoBoldButton.java

package com.energysh.common.view.roboto;

import android.content.Context;
import android.util.AttributeSet;
import androidx.appcompat.widget.AppCompatButton;
import androidx.core.content.res.ResourcesCompat;
import com.energysh.common.R;

public class RobotoBoldButton extends AppCompatButton {
public RobotoBoldButton(Context context) {
super(context);
setup(context);
}

public RobotoBoldButton(Context context, AttributeSet attributeSet) {
super(context, attributeSet);
setup(context);
}

public RobotoBoldButton(Context context, AttributeSet attributeSet, int i) {
super(context, attributeSet, i);
setup(context);
}

/* JADX WARNING: type inference failed for: r1v0, types: [com.energysh.common.view.roboto.RobotoBoldButton, android.widget.TextView] */
private void setup(Context context) {
try {
setTypeface(ResourcesCompat.getFont(context, R.font.roboto_bold));
} catch (RuntimeException e) {
e.printStackTrace();
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\googlepay\client\GoogleBillingClient$onBillingSetupFinished$1.java

package com.energysh.googlepay.client;

import d4.p;
import kotlin.coroutines.c;
import kotlin.coroutines.intrinsics.CoroutineSingletons;
import kotlin.coroutines.jvm.internal.SuspendLambda;
import kotlin.f;
import kotlinx.coroutines.c0;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import y3.d;

@d(c = "com.energysh.googlepay.client.GoogleBillingClient$onBillingSetupFinished$1", f = "GoogleBillingClient.kt", l = {}, m = "invokeSuspend")
public final class GoogleBillingClient$onBillingSetupFinished$1 extends SuspendLambda implements p<c0, c<? super kotlin.p>, Object> {
public int label;
public final /* synthetic */ GoogleBillingClient this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public GoogleBillingClient$onBillingSetupFinished$1(GoogleBillingClient googleBillingClient, c<? super GoogleBillingClient$onBillingSetupFinished$1> cVar) {
super(2, cVar);
this.this$0 = googleBillingClient;
}

@NotNull
public final c<kotlin.p> create(@Nullable Object obj, @NotNull c<?> cVar) {
return new GoogleBillingClient$onBillingSetupFinished$1(this.this$0, cVar);
}

@Nullable
public final Object invoke(@NotNull c0 c0Var, @Nullable c<? super kotlin.p> cVar) {
return create(c0Var, cVar).invokeSuspend(kotlin.p.a);
}

@Nullable
public final Object invokeSuspend(@NotNull Object obj) {
CoroutineSingletons coroutineSingletons = CoroutineSingletons.COROUTINE_SUSPENDED;
if (this.label == 0) {
f.b(obj);
this.this$0.f.clear();
this.this$0.g.clear();
GoogleBillingClient.e(this.this$0);
GoogleBillingClient.d(this.this$0);
return kotlin.p.a;
}
throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\material\MaterialPlaceHolder.java

package com.energysh.material;

import android.support.v4.media.a;
import android.support.v4.media.b;
import androidx.annotation.DrawableRes;
import kotlin.jvm.internal.m;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class MaterialPlaceHolder {
public int a;
public int b;

public MaterialPlaceHolder() {
this(0, 0, 3, (m) null);
}

public MaterialPlaceHolder(@DrawableRes int i, @DrawableRes int i3) {
this.a = i;
this.b = i3;
}

/* JADX INFO: this call moved to the top of the method (can break code semantics) */
public /* synthetic */ MaterialPlaceHolder(int i, int i3, int i4, m mVar) {
this((i4 & 1) != 0 ? 0 : i, (i4 & 2) != 0 ? 0 : i3);
}

public static /* synthetic */ MaterialPlaceHolder copy$default(MaterialPlaceHolder materialPlaceHolder, int i, int i3, int i4, Object obj) {
if ((i4 & 1) != 0) {
i = materialPlaceHolder.a;
}
if ((i4 & 2) != 0) {
i3 = materialPlaceHolder.b;
}
return materialPlaceHolder.copy(i, i3);
}

public final int component1() {
return this.a;
}

public final int component2() {
return this.b;
}

@NotNull
public final MaterialPlaceHolder copy(@DrawableRes int i, @DrawableRes int i3) {
return new MaterialPlaceHolder(i, i3);
}

public boolean equals(@Nullable Object obj) {
if (this == obj) {
return true;
}
if (!(obj instanceof MaterialPlaceHolder)) {
return false;
}
MaterialPlaceHolder materialPlaceHolder = (MaterialPlaceHolder) obj;
return this.a == materialPlaceHolder.a && this.b == materialPlaceHolder.b;
}

public final int getPlaceHolder924_354() {
return this.b;
}

public final int getPlaceholderResIdCorner5() {
return this.a;
}

public int hashCode() {
return (this.a * 31) + this.b;
}

public final void setPlaceHolder924_354(int i) {
this.b = i;
}

public final void setPlaceholderResIdCorner5(int i) {
this.a = i;
}

@NotNull
public String toString() {
StringBuilder q = b.q("MaterialPlaceHolder(placeholderResIdCorner5=");
q.append(this.a);
q.append(", placeHolder924_354=");
return a.m(q, this.b, ')');
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\material\R$array.java

package com.energysh.material;

public final class R$array {
public static final int material_progress_colors = 2130903042;

private R$array() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\material\R$styleable.java

package com.energysh.material;

import com.google.android.flexbox.R$attr;

public final class R$styleable {
public static final int[] ActionBar = {2130968685, 2130968692, 2130968693, 2130968940, 2130968941, 2130968942, 2130968943, 2130968944, 2130968945, 2130969024, 2130969042, 2130969043, 2130969077, 2130969203, 2130969210, 2130969216, 2130969217, 2130969221, 2130969242, 2130969263, 2130969405, 2130969526, 2130969580, 2130969588, 2130969589, 2130969707, 2130969711, 2130969842, 2130969855};
public static final int[] ActionBarLayout = {16842931};
public static final int ActionBarLayout_android_layout_gravity = 0;
public static final int ActionBar_background = 0;
public static final int ActionBar_backgroundSplit = 1;
public static final int ActionBar_backgroundStacked = 2;
public static final int ActionBar_contentInsetEnd = 3;
public static final int ActionBar_contentInsetEndWithActions = 4;
public static final int ActionBar_contentInsetLeft = 5;
public static final int ActionBar_contentInsetRight = 6;
public static final int ActionBar_contentInsetStart = 7;
public static final int ActionBar_contentInsetStartWithNavigation = 8;
public static final int ActionBar_customNavigationLayout = 9;
public static final int ActionBar_displayOptions = 10;
public static final int ActionBar_divider = 11;
public static final int ActionBar_elevation = 12;
public static final int ActionBar_height = 13;
public static final int ActionBar_hideOnContentScroll = 14;
public static final int ActionBar_homeAsUpIndicator = 15;
public static final int ActionBar_homeLayout = 16;
public static final int ActionBar_icon = 17;
public static final int ActionBar_indeterminateProgressStyle = 18;
public static final int ActionBar_itemPadding = 19;
public static final int ActionBar_logo = 20;
public static final int ActionBar_navigationMode = 21;
public static final int ActionBar_popupTheme = 22;
public static final int ActionBar_progressBarPadding = 23;
public static final int ActionBar_progressBarStyle = 24;
public static final int ActionBar_subtitle = 25;
public static final int ActionBar_subtitleTextStyle = 26;
public static final int ActionBar_title = 27;
public static final int ActionBar_titleTextStyle = 28;
public static final int[] ActionMenuItemView = {16843071};
public static final int ActionMenuItemView_android_minWidth = 0;
public static final int[] ActionMenuView = new int[0];
public static final int[] ActionMode = {2130968685, 2130968692, 2130968877, 2130969203, 2130969711, 2130969855};
public static final int ActionMode_background = 0;
public static final int ActionMode_backgroundSplit = 1;
public static final int ActionMode_closeItemLayout = 2;
public static final int ActionMode_height = 3;
public static final int ActionMode_subtitleTextStyle = 4;
public static final int ActionMode_titleTextStyle = 5;
public static final int[] ActivityChooserView = {2130969100, 2130969248};
public static final int ActivityChooserView_expandActivityOverflowButtonDrawable = 0;
public static final int ActivityChooserView_initialActivityCount = 1;
public static final int[] AdsAttrs = {2130968615, 2130968616, 2130968617};
public static final int AdsAttrs_adSize = 0;
public static final int AdsAttrs_adSizes = 1;
public static final int AdsAttrs_adUnitId = 2;
public static final int[] AlertDialog = {16842994, 2130968775, 2130968776, 2130969391, 2130969392, 2130969522, 2130969657, 2130969661};
public static final int AlertDialog_android_layout = 0;
public static final int AlertDialog_buttonIconDimen = 1;
public static final int AlertDialog_buttonPanelSideLayout = 2;
public static final int AlertDialog_listItemLayout = 3;
public static final int AlertDialog_listLayout = 4;
public static final int AlertDialog_multiChoiceItemLayout = 5;
public static final int AlertDialog_showTitle = 6;
public static final int AlertDialog_singleChoiceItemLayout = 7;
public static final int[] AnimatedStateListDrawableCompat = {16843036, 16843156, 16843157, 16843158, 16843532, 16843533};
public static final int AnimatedStateListDrawableCompat_android_constantSize = 3;
public static final int AnimatedStateListDrawableCompat_android_dither = 0;
public static final int AnimatedStateListDrawableCompat_android_enterFadeDuration = 4;
public static final int AnimatedStateListDrawableCompat_android_exitFadeDuration = 5;
public static final int AnimatedStateListDrawableCompat_android_variablePadding = 2;
public static final int AnimatedStateListDrawableCompat_android_visible = 1;
public static final int[] AnimatedStateListDrawableItem = {16842960, 16843161};
public static final int AnimatedStateListDrawableItem_android_drawable = 1;
public static final int AnimatedStateListDrawableItem_android_id = 0;
public static final int[] AnimatedStateListDrawableTransition = {16843161, 16843849, 16843850, 16843851};
public static final int AnimatedStateListDrawableTransition_android_drawable = 0;
public static final int AnimatedStateListDrawableTransition_android_fromId = 2;
public static final int AnimatedStateListDrawableTransition_android_reversible = 3;
public static final int AnimatedStateListDrawableTransition_android_toId = 1;
public static final int[] AppBarLayout = {16842964, 16843919, 16844096, 2130969077, 2130969101, 2130969381, 2130969382, 2130969697};
public static final int[] AppBarLayoutStates = {2130969691, 2130969692, 2130969694, 2130969695};
public static final int AppBarLayoutStates_state_collapsed = 0;
public static final int AppBarLayoutStates_state_collapsible = 1;
public static final int AppBarLayoutStates_state_liftable = 2;
public static final int AppBarLayoutStates_state_lifted = 3;
public static final int[] AppBarLayout_Layout = {2130969374, 2130969375, 2130969376};
public static final int AppBarLayout_Layout_layout_scrollEffect = 0;
public static final int AppBarLayout_Layout_layout_scrollFlags = 1;
public static final int AppBarLayout_Layout_layout_scrollInterpolator = 2;
public static final int AppBarLayout_android_background = 0;
public static final int AppBarLayout_android_keyboardNavigationCluster = 2;
public static final int AppBarLayout_android_touchscreenBlocksFocus = 1;
public static final int AppBarLayout_elevation = 3;
public static final int AppBarLayout_expanded = 4;
public static final int AppBarLayout_liftOnScroll = 5;
public static final int AppBarLayout_liftOnScrollTargetViewId = 6;
public static final int AppBarLayout_statusBarForeground = 7;
public static final int[] AppCompatEmojiHelper = new int[0];
public static final int[] AppCompatImageView = {16843033, 2130969681, 2130969840, 2130969841};
public static final int AppCompatImageView_android_src = 0;
public static final int AppCompatImageView_srcCompat = 1;
public static final int AppCompatImageView_tint = 2;
public static final int AppCompatImageView_tintMode = 3;
public static final int[] AppCompatSeekBar = {16843074, 2130969835, 2130969836, 2130969837};
public static final int AppCompatSeekBar_android_thumb = 0;
public static final int AppCompatSeekBar_tickMark = 1;
public static final int AppCompatSeekBar_tickMarkTint = 2;
public static final int AppCompatSeekBar_tickMarkTintMode = 3;
public static final int[] AppCompatTextHelper = {16842804, 16843117, 16843118, 16843119, 16843120, 16843666, 16843667};
public static final int AppCompatTextHelper_android_drawableBottom = 2;
public static final int AppCompatTextHelper_android_drawableEnd = 6;
public static final int AppCompatTextHelper_android_drawableLeft = 3;
public static final int AppCompatTextHelper_android_drawableRight = 4;
public static final int AppCompatTextHelper_android_drawableStart = 5;
public static final int AppCompatTextHelper_android_drawableTop = 1;
public static final int AppCompatTextHelper_android_textAppearance = 0;
public static final int[] AppCompatTextView = {16842804, 2130968679, 2130968680, 2130968681, 2130968682, 2130968683, 2130969058, 2130969059, 2130969060, 2130969061, 2130969063, 2130969064, 2130969065, 2130969066, 2130969081, 2130969130, 2130969163, 2130969172, 2130969294, 2130969384, 2130969755, 2130969810};
public static final int AppCompatTextView_android_textAppearance = 0;
public static final int AppCompatTextView_autoSizeMaxTextSize = 1;
public static final int AppCompatTextView_autoSizeMinTextSize = 2;
public static final int AppCompatTextView_autoSizePresetSizes = 3;
public static final int AppCompatTextView_autoSizeStepGranularity = 4;
public static final int AppCompatTextView_autoSizeTextType = 5;
public static final int AppCompatTextView_drawableBottomCompat = 6;
public static final int AppCompatTextView_drawableEndCompat = 7;
public static final int AppCompatTextView_drawableLeftCompat = 8;
public static final int AppCompatTextView_drawableRightCompat = 9;
public static final int AppCompatTextView_drawableStartCompat = 10;
public static final int AppCompatTextView_drawableTint = 11;
public static final int AppCompatTextView_drawableTintMode = 12;
public static final int AppCompatTextView_drawableTopCompat = 13;
public static final int AppCompatTextView_emojiCompatEnabled = 14;
public static final int AppCompatTextView_firstBaselineToTopHeight = 15;
public static final int AppCompatTextView_fontFamily = 16;
public static final int AppCompatTextView_fontVariationSettings = 17;
public static final int AppCompatTextView_lastBaselineToBottomHeight = 18;
public static final int AppCompatTextView_lineHeight = 19;
public static final int AppCompatTextView_textAllCaps = 20;
public static final int AppCompatTextView_textLocale = 21;
public static final int[] AppCompatTheme = {16842839, 16842926, 2130968578, 2130968579, 2130968580, 2130968581, 2130968582, 2130968583, 2130968584, 2130968585, 2130968586, 2130968587, 2130968588, 2130968589, 2130968590, 2130968592, 2130968593, 2130968594, 2130968595, 2130968596, 2130968597, 2130968598, 2130968599, 2130968600, 2130968601, 2130968602, 2130968603, 2130968604, 2130968605, 2130968606, 2130968607, 2130968608, 2130968609, 2130968610, 2130968614, 2130968657, 2130968658, 2130968659, 2130968660, 2130968678, 2130968750, 2130968768, 2130968769, 2130968770, 2130968771, 2130968772, 2130968778, 2130968779, 2130968825, 2130968835, 2130968890, 2130968891, 2130968892, 2130968894, 2130968895, 2130968896, 2130968897, 2130968914, 2130968916, 2130968927, 2130968956, 2130969038, 2130969039, 2130969040, 2130969048, 2130969053, 2130969070, 2130969071, 2130969074, 2130969075, 2130969076, 2130969216, 2130969235, 2130969387, 2130969388, 2130969389, 2130969390, 2130969393, 2130969394, 2130969395, 2130969396, 2130969397, 2130969398, 2130969399, 2130969400, 2130969401, 2130969552, 2130969553, 2130969554, 2130969579, 2130969581, 2130969597, 2130969599, 2130969600, 2130969601, 2130969626, 2130969627, 2130969628, 2130969629, 2130969671, 2130969672, 2130969720, 2130969778, 2130969780, 2130969781, 2130969782, 2130969784, 2130969785, 2130969786, 2130969787, 2130969798, 2130969799, 2130969857, 2130969858, 2130969860, 2130969861, 2130969895, 2130969917, 2130969918, 2130969919, 2130969920, 2130969921, 2130969922, 2130969923, 2130969924, 2130969925, 2130969926};
public static final int AppCompatTheme_actionBarDivider = 2;
public static final int AppCompatTheme_actionBarItemBackground = 3;
public static final int AppCompatTheme_actionBarPopupTheme = 4;
public static final int AppCompatTheme_actionBarSize = 5;
public static final int AppCompatTheme_actionBarSplitStyle = 6;
public static final int AppCompatTheme_actionBarStyle = 7;
public static final int AppCompatTheme_actionBarTabBarStyle = 8;
public static final int AppCompatTheme_actionBarTabStyle = 9;
public static final int AppCompatTheme_actionBarTabTextStyle = 10;
public static final int AppCompatTheme_actionBarTheme = 11;
public static final int AppCompatTheme_actionBarWidgetTheme = 12;
public static final int AppCompatTheme_actionButtonStyle = 13;
public static final int AppCompatTheme_actionDropDownStyle = 14;
public static final int AppCompatTheme_actionMenuTextAppearance = 15;
public static final int AppCompatTheme_actionMenuTextColor = 16;
public static final int AppCompatTheme_actionModeBackground = 17;
public static final int AppCompatTheme_actionModeCloseButtonStyle = 18;
public static final int AppCompatTheme_actionModeCloseContentDescription = 19;
public static final int AppCompatTheme_actionModeCloseDrawable = 20;
public static final int AppCompatTheme_actionModeCopyDrawable = 21;
public static final int AppCompatTheme_actionModeCutDrawable = 22;
public static final int AppCompatTheme_actionModeFindDrawable = 23;
public static final int AppCompatTheme_actionModePasteDrawable = 24;
public static final int AppCompatTheme_actionModePopupWindowStyle = 25;
public static final int AppCompatTheme_actionModeSelectAllDrawable = 26;
public static final int AppCompatTheme_actionModeShareDrawable = 27;
public static final int AppCompatTheme_actionModeSplitBackground = 28;
public static final int AppCompatTheme_actionModeStyle = 29;
public static final int AppCompatTheme_actionModeTheme = 30;
public static final int AppCompatTheme_actionModeWebSearchDrawable = 31;
public static final int AppCompatTheme_actionOverflowButtonStyle = 32;
public static final int AppCompatTheme_actionOverflowMenuStyle = 33;
public static final int AppCompatTheme_activityChooserViewStyle = 34;
public static final int AppCompatTheme_alertDialogButtonGroupStyle = 35;
public static final int AppCompatTheme_alertDialogCenterButtons = 36;
public static final int AppCompatTheme_alertDialogStyle = 37;
public static final int AppCompatTheme_alertDialogTheme = 38;
public static final int AppCompatTheme_android_windowAnimationStyle = 1;
public static final int AppCompatTheme_android_windowIsFloating = 0;
public static final int AppCompatTheme_autoCompleteTextViewStyle = 39;
public static final int AppCompatTheme_borderlessButtonStyle = 40;
public static final int AppCompatTheme_buttonBarButtonStyle = 41;
public static final int AppCompatTheme_buttonBarNegativeButtonStyle = 42;
public static final int AppCompatTheme_buttonBarNeutralButtonStyle = 43;
public static final int AppCompatTheme_buttonBarPositiveButtonStyle = 44;
public static final int AppCompatTheme_buttonBarStyle = 45;
public static final int AppCompatTheme_buttonStyle = 46;
public static final int AppCompatTheme_buttonStyleSmall = 47;
public static final int AppCompatTheme_checkboxStyle = 48;
public static final int AppCompatTheme_checkedTextViewStyle = 49;
public static final int AppCompatTheme_colorAccent = 50;
public static final int AppCompatTheme_colorBackgroundFloating = 51;
public static final int AppCompatTheme_colorButtonNormal = 52;
public static final int AppCompatTheme_colorControlActivated = 53;
public static final int AppCompatTheme_colorControlHighlight = 54;
public static final int AppCompatTheme_colorControlNormal = 55;
public static final int AppCompatTheme_colorError = 56;
public static final int AppCompatTheme_colorPrimary = 57;
public static final int AppCompatTheme_colorPrimaryDark = 58;
public static final int AppCompatTheme_colorSwitchThumbNormal = 59;
public static final int AppCompatTheme_controlBackground = 60;
public static final int AppCompatTheme_dialogCornerRadius = 61;
public static final int AppCompatTheme_dialogPreferredPadding = 62;
public static final int AppCompatTheme_dialogTheme = 63;
public static final int AppCompatTheme_dividerHorizontal = 64;
public static final int AppCompatTheme_dividerVertical = 65;
public static final int AppCompatTheme_dropDownListViewStyle = 66;
public static final int AppCompatTheme_dropdownListPreferredItemHeight = 67;
public static final int AppCompatTheme_editTextBackground = 68;
public static final int AppCompatTheme_editTextColor = 69;
public static final int AppCompatTheme_editTextStyle = 70;
public static final int AppCompatTheme_homeAsUpIndicator = 71;
public static final int AppCompatTheme_imageButtonStyle = 72;
public static final int AppCompatTheme_listChoiceBackgroundIndicator = 73;
public static final int AppCompatTheme_listChoiceIndicatorMultipleAnimated = 74;
public static final int AppCompatTheme_listChoiceIndicatorSingleAnimated = 75;
public static final int AppCompatTheme_listDividerAlertDialog = 76;
public static final int AppCompatTheme_listMenuViewStyle = 77;
public static final int AppCompatTheme_listPopupWindowStyle = 78;
public static final int AppCompatTheme_listPreferredItemHeight = 79;
public static final int AppCompatTheme_listPreferredItemHeightLarge = 80;
public static final int AppCompatTheme_listPreferredItemHeightSmall = 81;
public static final int AppCompatTheme_listPreferredItemPaddingEnd = 82;
public static final int AppCompatTheme_listPreferredItemPaddingLeft = 83;
public static final int AppCompatTheme_listPreferredItemPaddingRight = 84;
public static final int AppCompatTheme_listPreferredItemPaddingStart = 85;
public static final int AppCompatTheme_panelBackground = 86;
public static final int AppCompatTheme_panelMenuListTheme = 87;
public static final int AppCompatTheme_panelMenuListWidth = 88;
public static final int AppCompatTheme_popupMenuStyle = 89;
public static final int AppCompatTheme_popupWindowStyle = 90;
public static final int AppCompatTheme_radioButtonStyle = 91;
public static final int AppCompatTheme_ratingBarStyle = 92;
public static final int AppCompatTheme_ratingBarStyleIndicator = 93;
public static final int AppCompatTheme_ratingBarStyleSmall = 94;
public static final int AppCompatTheme_searchViewStyle = 95;
public static final int AppCompatTheme_seekBarStyle = 96;
public static final int AppCompatTheme_selectableItemBackground = 97;
public static final int AppCompatTheme_selectableItemBackgroundBorderless = 98;
public static final int AppCompatTheme_spinnerDropDownItemStyle = 99;
public static final int AppCompatTheme_spinnerStyle = 100;
public static final int AppCompatTheme_switchStyle = 101;
public static final int AppCompatTheme_textAppearanceLargePopupMenu = 102;
public static final int AppCompatTheme_textAppearanceListItem = 103;
public static final int AppCompatTheme_textAppearanceListItemSecondary = 104;
public static final int AppCompatTheme_textAppearanceListItemSmall = 105;
public static final int AppCompatTheme_textAppearancePopupMenuHeader = 106;
public static final int AppCompatTheme_textAppearanceSearchResultSubtitle = 107;
public static final int AppCompatTheme_textAppearanceSearchResultTitle = 108;
public static final int AppCompatTheme_textAppearanceSmallPopupMenu = 109;
public static final int AppCompatTheme_textColorAlertDialogListItem = 110;
public static final int AppCompatTheme_textColorSearchUrl = 111;
public static final int AppCompatTheme_toolbarNavigationButtonStyle = 112;
public static final int AppCompatTheme_toolbarStyle = 113;
public static final int AppCompatTheme_tooltipForegroundColor = 114;
public static final int AppCompatTheme_tooltipFrameBackground = 115;
public static final int AppCompatTheme_viewInflaterClass = 116;
public static final int AppCompatTheme_windowActionBar = 117;
public static final int AppCompatTheme_windowActionBarOverlay = 118;
public static final int AppCompatTheme_windowActionModeOverlay = 119;
public static final int AppCompatTheme_windowFixedHeightMajor = 120;
public static final int AppCompatTheme_windowFixedHeightMinor = 121;
public static final int AppCompatTheme_windowFixedWidthMajor = 122;
public static final int AppCompatTheme_windowFixedWidthMinor = 123;
public static final int AppCompatTheme_windowMinWidthMajor = 124;
public static final int AppCompatTheme_windowMinWidthMinor = 125;
public static final int AppCompatTheme_windowNoTitle = 126;
public static final int[] Badge = {2130968686, 2130968696, 2130968697, 2130968699, 2130968700, 2130968701, 2130969218, 2130969219, 2130969471, 2130969532, 2130969893, 2130969894};
public static final int Badge_backgroundColor = 0;
public static final int Badge_badgeGravity = 1;
public static final int Badge_badgeRadius = 2;
public static final int Badge_badgeTextColor = 3;
public static final int Badge_badgeWidePadding = 4;
public static final int Badge_badgeWithTextRadius = 5;
public static final int Badge_horizontalOffset = 6;
public static final int Badge_horizontalOffsetWithText = 7;
public static final int Badge_maxCharacterCount = 8;
public static final int Badge_number = 9;
public static final int Badge_verticalOffset = 10;
public static final int Badge_verticalOffsetWithText = 11;
public static final int[] BaseProgressIndicator = {16843065, 2130969208, 2130969243, 2130969483, 2130969646, 2130969648, 2130969870, 2130969873, 2130969875};
public static final int BaseProgressIndicator_android_indeterminate = 0;
public static final int BaseProgressIndicator_hideAnimationBehavior = 1;
public static final int BaseProgressIndicator_indicatorColor = 2;
public static final int BaseProgressIndicator_minHideDelay = 3;
public static final int BaseProgressIndicator_showAnimationBehavior = 4;
public static final int BaseProgressIndicator_showDelay = 5;
public static final int BaseProgressIndicator_trackColor = 6;
public static final int BaseProgressIndicator_trackCornerRadius = 7;
public static final int BaseProgressIndicator_trackThickness = 8;
public static final int[] BottomAppBar = {2130968694, 2130969077, 2130969118, 2130969119, 2130969120, 2130969121, 2130969122, 2130969211, 2130969525, 2130969544, 2130969546, 2130969547};
public static final int BottomAppBar_backgroundTint = 0;
public static final int BottomAppBar_elevation = 1;
public static final int BottomAppBar_fabAlignmentMode = 2;
public static final int BottomAppBar_fabAnimationMode = 3;
public static final int BottomAppBar_fabCradleMargin = 4;
public static final int BottomAppBar_fabCradleRoundedCornerRadius = 5;
public static final int BottomAppBar_fabCradleVerticalOffset = 6;
public static final int BottomAppBar_hideOnScroll = 7;
public static final int BottomAppBar_navigationIconTint = 8;
public static final int BottomAppBar_paddingBottomSystemWindowInsets = 9;
public static final int BottomAppBar_paddingLeftSystemWindowInsets = 10;
public static final int BottomAppBar_paddingRightSystemWindowInsets = 11;
public static final int[] BottomNavigationView = {16843072, 2130969257};
public static final int BottomNavigationView_android_minHeight = 0;
public static final int BottomNavigationView_itemHorizontalTranslationEnabled = 1;
public static final int[] BottomSheetBehavior_Layout = {16843039, 16843040, 16843840, 2130968694, 2130968726, 2130968727, 2130968728, 2130968729, 2130968730, 2130968732, 2130968733, 2130968734, 2130969179, 2130969428, 2130969429, 2130969430, 2130969544, 2130969546, 2130969547, 2130969550, 2130969633, 2130969636};
public static final int BottomSheetBehavior_Layout_android_elevation = 2;
public static final int BottomSheetBehavior_Layout_android_maxHeight = 1;
public static final int BottomSheetBehavior_Layout_android_maxWidth = 0;
public static final int BottomSheetBehavior_Layout_backgroundTint = 3;
public static final int BottomSheetBehavior_Layout_behavior_draggable = 4;
public static final int BottomSheetBehavior_Layout_behavior_expandedOffset = 5;
public static final int BottomSheetBehavior_Layout_behavior_fitToContents = 6;
public static final int BottomSheetBehavior_Layout_behavior_halfExpandedRatio = 7;
public static final int BottomSheetBehavior_Layout_behavior_hideable = 8;
public static final int BottomSheetBehavior_Layout_behavior_peekHeight = 9;
public static final int BottomSheetBehavior_Layout_behavior_saveFlags = 10;
public static final int BottomSheetBehavior_Layout_behavior_skipCollapsed = 11;
public static final int BottomSheetBehavior_Layout_gestureInsetBottomIgnored = 12;
public static final int BottomSheetBehavior_Layout_marginLeftSystemWindowInsets = 13;
public static final int BottomSheetBehavior_Layout_marginRightSystemWindowInsets = 14;
public static final int BottomSheetBehavior_Layout_marginTopSystemWindowInsets = 15;
public static final int BottomSheetBehavior_Layout_paddingBottomSystemWindowInsets = 16;
public static final int BottomSheetBehavior_Layout_paddingLeftSystemWindowInsets = 17;
public static final int BottomSheetBehavior_Layout_paddingRightSystemWindowInsets = 18;
public static final int BottomSheetBehavior_Layout_paddingTopSystemWindowInsets = 19;
public static final int BottomSheetBehavior_Layout_shapeAppearance = 20;
public static final int BottomSheetBehavior_Layout_shapeAppearanceOverlay = 21;
public static final int[] ButtonBarLayout = {2130968663};
public static final int ButtonBarLayout_allowStacking = 0;
public static final int[] Capability = {2130969595, 2130969645};
public static final int Capability_queryPatterns = 0;
public static final int Capability_shortcutMatchRequired = 1;
public static final int[] CardView = {16843071, 16843072, 2130968799, 2130968800, 2130968801, 2130968803, 2130968804, 2130968805, 2130968946, 2130968947, 2130968949, 2130968950, 2130968952};
public static final int CardView_android_minHeight = 1;
public static final int CardView_android_minWidth = 0;
public static final int CardView_cardBackgroundColor = 2;
public static final int CardView_cardCornerRadius = 3;
public static final int CardView_cardElevation = 4;
public static final int CardView_cardMaxElevation = 5;
public static final int CardView_cardPreventCornerOverlap = 6;
public static final int CardView_cardUseCompatPadding = 7;
public static final int CardView_contentPadding = 8;
public static final int CardView_contentPaddingBottom = 9;
public static final int CardView_contentPaddingLeft = 10;
public static final int CardView_contentPaddingRight = 11;
public static final int CardView_contentPaddingTop = 12;
public static final int[] Carousel = {2130968807, 2130968808, 2130968809, 2130968810, 2130968811, 2130968812, 2130968813, 2130968814, 2130968815, 2130968816};
public static final int Carousel_carousel_backwardTransition = 0;
public static final int Carousel_carousel_emptyViewsBehavior = 1;
public static final int Carousel_carousel_firstView = 2;
public static final int Carousel_carousel_forwardTransition = 3;
public static final int Carousel_carousel_infinite = 4;
public static final int Carousel_carousel_nextState = 5;
public static final int Carousel_carousel_previousState = 6;
public static final int Carousel_carousel_touchUpMode = 7;
public static final int Carousel_carousel_touchUp_dampeningFactor = 8;
public static final int Carousel_carousel_touchUp_velocityThreshold = 9;
public static final int[] CheckedTextView = {16843016, 2130968821, 2130968822, 2130968823};
public static final int CheckedTextView_android_checkMark = 0;
public static final int CheckedTextView_checkMarkCompat = 1;
public static final int CheckedTextView_checkMarkTint = 2;
public static final int CheckedTextView_checkMarkTintMode = 3;
public static final int[] Chip = {16842804, 16842901, 16842904, 16842923, 16843039, 16843087, 16843237, 2130968828, 2130968829, 2130968833, 2130968834, 2130968836, 2130968837, 2130968838, 2130968840, 2130968841, 2130968842, 2130968843, 2130968844, 2130968845, 2130968846, 2130968851, 2130968852, 2130968853, 2130968855, 2130968870, 2130968871, 2130968872, 2130968873, 2130968874, 2130968875, 2130968876, 2130969092, 2130969209, 2130969222, 2130969226, 2130969613, 2130969633, 2130969636, 2130969654, 2130969800, 2130969816};
public static final int[] ChipGroup = {2130968827, 2130968847, 2130968848, 2130968849, 2130969630, 2130969662, 2130969663};
public static final int ChipGroup_checkedChip = 0;
public static final int ChipGroup_chipSpacing = 1;
public static final int ChipGroup_chipSpacingHorizontal = 2;
public static final int ChipGroup_chipSpacingVertical = 3;
public static final int ChipGroup_selectionRequired = 4;
public static final int ChipGroup_singleLine = 5;
public static final int ChipGroup_singleSelection = 6;
public static final int Chip_android_checkable = 6;
public static final int Chip_android_ellipsize = 3;
public static final int Chip_android_maxWidth = 4;
public static final int Chip_android_text = 5;
public static final int Chip_android_textAppearance = 0;
public static final int Chip_android_textColor = 2;
public static final int Chip_android_textSize = 1;
public static final int Chip_checkedIcon = 7;
public static final int Chip_checkedIconEnabled = 8;
public static final int Chip_checkedIconTint = 9;
public static final int Chip_checkedIconVisible = 10;
public static final int Chip_chipBackgroundColor = 11;
public static final int Chip_chipCornerRadius = 12;
public static final int Chip_chipEndPadding = 13;
public static final int Chip_chipIcon = 14;
public static final int Chip_chipIconEnabled = 15;
public static final int Chip_chipIconSize = 16;
public static final int Chip_chipIconTint = 17;
public static final int Chip_chipIconVisible = 18;
public static final int Chip_chipMinHeight = 19;
public static final int Chip_chipMinTouchTargetSize = 20;
public static final int Chip_chipStartPadding = 21;
public static final int Chip_chipStrokeColor = 22;
public static final int Chip_chipStrokeWidth = 23;
public static final int Chip_chipSurfaceColor = 24;
public static final int Chip_closeIcon = 25;
public static final int Chip_closeIconEnabled = 26;
public static final int Chip_closeIconEndPadding = 27;
public static final int Chip_closeIconSize = 28;
public static final int Chip_closeIconStartPadding = 29;
public static final int Chip_closeIconTint = 30;
public static final int Chip_closeIconVisible = 31;
public static final int Chip_ensureMinTouchTargetSize = 32;
public static final int Chip_hideMotionSpec = 33;
public static final int Chip_iconEndPadding = 34;
public static final int Chip_iconStartPadding = 35;
public static final int Chip_rippleColor = 36;
public static final int Chip_shapeAppearance = 37;
public static final int Chip_shapeAppearanceOverlay = 38;
public static final int Chip_showMotionSpec = 39;
public static final int Chip_textEndPadding = 40;
public static final int Chip_textStartPadding = 41;
public static final int[] CircularProgressBar = {2130968975, 2130968976, 2130968977, 2130968978, 2130968979, 2130968980, 2130968981, 2130968982};
public static final int CircularProgressBar_cpbStyle = 0;
public static final int CircularProgressBar_cpb_color = 1;
public static final int CircularProgressBar_cpb_colors = 2;
public static final int CircularProgressBar_cpb_max_sweep_angle = 3;
public static final int CircularProgressBar_cpb_min_sweep_angle = 4;
public static final int CircularProgressBar_cpb_rotation_speed = 5;
public static final int CircularProgressBar_cpb_stroke_width = 6;
public static final int CircularProgressBar_cpb_sweep_speed = 7;
public static final int[] CircularProgressIndicator = {2130969244, 2130969246, 2130969247};
public static final int CircularProgressIndicator_indicatorDirectionCircular = 0;
public static final int CircularProgressIndicator_indicatorInset = 1;
public static final int CircularProgressIndicator_indicatorSize = 2;
public static final int[] ClockFaceView = {2130968866, 2130968869};
public static final int ClockFaceView_clockFaceBackgroundColor = 0;
public static final int ClockFaceView_clockNumberTextColor = 1;
public static final int[] ClockHandView = {2130968867, 2130969459, 2130969631};
public static final int ClockHandView_clockHandColor = 0;
public static final int ClockHandView_materialCircleRadius = 1;
public static final int ClockHandView_selectorSize = 2;
public static final int[] CollapsingToolbarLayout = {2130968881, 2130968882, 2130968883, 2130968953, 2130969103, 2130969104, 2130969105, 2130969106, 2130969107, 2130969108, 2130969109, 2130969110, 2130969117, 2130969174, 2130969475, 2130969621, 2130969623, 2130969698, 2130969842, 2130969844, 2130969845, 2130969852, 2130969856};
public static final int[] CollapsingToolbarLayout_Layout = {2130969304, 2130969305};
public static final int CollapsingToolbarLayout_Layout_layout_collapseMode = 0;
public static final int CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier = 1;
public static final int CollapsingToolbarLayout_collapsedTitleGravity = 0;
public static final int CollapsingToolbarLayout_collapsedTitleTextAppearance = 1;
public static final int CollapsingToolbarLayout_collapsedTitleTextColor = 2;
public static final int CollapsingToolbarLayout_contentScrim = 3;
public static final int CollapsingToolbarLayout_expandedTitleGravity = 4;
public static final int CollapsingToolbarLayout_expandedTitleMargin = 5;
public static final int CollapsingToolbarLayout_expandedTitleMarginBottom = 6;
public static final int CollapsingToolbarLayout_expandedTitleMarginEnd = 7;
public static final int CollapsingToolbarLayout_expandedTitleMarginStart = 8;
public static final int CollapsingToolbarLayout_expandedTitleMarginTop = 9;
public static final int CollapsingToolbarLayout_expandedTitleTextAppearance = 10;
public static final int CollapsingToolbarLayout_expandedTitleTextColor = 11;
public static final int CollapsingToolbarLayout_extraMultilineHeightEnabled = 12;
public static final int CollapsingToolbarLayout_forceApplySystemWindowInsetTop = 13;
public static final int CollapsingToolbarLayout_maxLines = 14;
public static final int CollapsingToolbarLayout_scrimAnimationDuration = 15;
public static final int CollapsingToolbarLayout_scrimVisibleHeightTrigger = 16;
public static final int CollapsingToolbarLayout_statusBarScrim = 17;
public static final int CollapsingToolbarLayout_title = 18;
public static final int CollapsingToolbarLayout_titleCollapseMode = 19;
public static final int CollapsingToolbarLayout_titleEnabled = 20;
public static final int CollapsingToolbarLayout_titlePositionInterpolator = 21;
public static final int CollapsingToolbarLayout_toolbarId = 22;
public static final int[] ColorStateListItem = {16843173, 16843551, 16844359, 2130968664, 2130969290};
public static final int ColorStateListItem_alpha = 3;
public static final int ColorStateListItem_android_alpha = 1;
public static final int ColorStateListItem_android_color = 0;
public static final int ColorStateListItem_android_lStar = 2;
public static final int ColorStateListItem_lStar = 4;
public static final int[] CompoundButton = {16843015, 2130968773, 2130968780, 2130968781};
public static final int CompoundButton_android_button = 0;
public static final int CompoundButton_buttonCompat = 1;
public static final int CompoundButton_buttonTint = 2;
public static final int CompoundButton_buttonTintMode = 3;
public static final int[] Constraint;
public static final int[] ConstraintLayout_Layout = {16842948, 16842965, 16842966, 16842967, 16842968, 16842969, 16842972, 16842996, 16842997, 16842998, 16842999, 16843000, 16843001, 16843002, 16843039, 16843040, 16843071, 16843072, 16843699, 16843700, 16843701, 16843702, 16843840, 16844091, 16844092, 2130968721, 2130968722, 2130968723, 2130968819, 2130968859, 2130968860, 2130968861, 2130968862, 2130968863, 2130968932, 2130968935, 2130968936, 2130969143, 2130969144, 2130969145, 2130969146, 2130969147, 2130969148, 2130969149, 2130969150, 2130969151, 2130969152, 2130969153, 2130969154, 2130969155, 2130969157, 2130969158, 2130969159, 2130969160, 2130969161, 2130969198, 2130969297, 2130969306, 2130969307, 2130969308, 2130969309, 2130969310, 2130969311, 2130969312, 2130969313, 2130969314, 2130969315, 2130969316, 2130969317, 2130969318, 2130969319, 2130969320, 2130969321, 2130969322, 2130969323, 2130969324, 2130969325, 2130969326, 2130969327, 2130969328, 2130969329, 2130969330, 2130969331, 2130969332, 2130969333, 2130969334, 2130969335, 2130969336, 2130969337, 2130969338, 2130969339, 2130969340, 2130969341, 2130969342, 2130969343, 2130969344, 2130969345, 2130969346, 2130969347, 2130969348, 2130969349, 2130969350, 2130969351, 2130969353, 2130969354, 2130969358, 2130969359, 2130969360, 2130969361, 2130969362, 2130969363, 2130969364, 2130969367, 2130969372, 2130969378};
public static final int ConstraintLayout_Layout_android_elevation = 22;
public static final int ConstraintLayout_Layout_android_layout_height = 8;
public static final int ConstraintLayout_Layout_android_layout_margin = 9;
public static final int ConstraintLayout_Layout_android_layout_marginBottom = 13;
public static final int ConstraintLayout_Layout_android_layout_marginEnd = 21;
public static final int ConstraintLayout_Layout_android_layout_marginHorizontal = 23;
public static final int ConstraintLayout_Layout_android_layout_marginLeft = 10;
public static final int ConstraintLayout_Layout_android_layout_marginRight = 12;
public static final int ConstraintLayout_Layout_android_layout_marginStart = 20;
public static final int ConstraintLayout_Layout_android_layout_marginTop = 11;
public static final int ConstraintLayout_Layout_android_layout_marginVertical = 24;
public static final int ConstraintLayout_Layout_android_layout_width = 7;
public static final int ConstraintLayout_Layout_android_maxHeight = 15;
public static final int ConstraintLayout_Layout_android_maxWidth = 14;
public static final int ConstraintLayout_Layout_android_minHeight = 17;
public static final int ConstraintLayout_Layout_android_minWidth = 16;
public static final int ConstraintLayout_Layout_android_orientation = 0;
public static final int ConstraintLayout_Layout_android_padding = 1;
public static final int ConstraintLayout_Layout_android_paddingBottom = 5;
public static final int ConstraintLayout_Layout_android_paddingEnd = 19;
public static final int ConstraintLayout_Layout_android_paddingLeft = 2;
public static final int ConstraintLayout_Layout_android_paddingRight = 4;
public static final int ConstraintLayout_Layout_android_paddingStart = 18;
public static final int ConstraintLayout_Layout_android_paddingTop = 3;
public static final int ConstraintLayout_Layout_android_visibility = 6;
public static final int ConstraintLayout_Layout_barrierAllowsGoneWidgets = 25;
public static final int ConstraintLayout_Layout_barrierDirection = 26;
public static final int ConstraintLayout_Layout_barrierMargin = 27;
public static final int ConstraintLayout_Layout_chainUseRtl = 28;
public static final int ConstraintLayout_Layout_circularflow_angles = 29;
public static final int ConstraintLayout_Layout_circularflow_defaultAngle = 30;
public static final int ConstraintLayout_Layout_circularflow_defaultRadius = 31;
public static final int ConstraintLayout_Layout_circularflow_radiusInDP = 32;
public static final int ConstraintLayout_Layout_circularflow_viewCenter = 33;
public static final int ConstraintLayout_Layout_constraintSet = 34;
public static final int ConstraintLayout_Layout_constraint_referenced_ids = 35;
public static final int ConstraintLayout_Layout_constraint_referenced_tags = 36;
public static final int ConstraintLayout_Layout_flow_firstHorizontalBias = 37;
public static final int ConstraintLayout_Layout_flow_firstHorizontalStyle = 38;
public static final int ConstraintLayout_Layout_flow_firstVerticalBias = 39;
public static final int ConstraintLayout_Layout_flow_firstVerticalStyle = 40;
public static final int ConstraintLayout_Layout_flow_horizontalAlign = 41;
public static final int ConstraintLayout_Layout_flow_horizontalBias = 42;
public static final int ConstraintLayout_Layout_flow_horizontalGap = 43;
public static final int ConstraintLayout_Layout_flow_horizontalStyle = 44;
public static final int ConstraintLayout_Layout_flow_lastHorizontalBias = 45;
public static final int ConstraintLayout_Layout_flow_lastHorizontalStyle = 46;
public static final int ConstraintLayout_Layout_flow_lastVerticalBias = 47;
public static final int ConstraintLayout_Layout_flow_lastVerticalStyle = 48;
public static final int ConstraintLayout_Layout_flow_maxElementsWrap = 49;
public static final int ConstraintLayout_Layout_flow_verticalAlign = 50;
public static final int ConstraintLayout_Layout_flow_verticalBias = 51;
public static final int ConstraintLayout_Layout_flow_verticalGap = 52;
public static final int ConstraintLayout_Layout_flow_verticalStyle = 53;
public static final int ConstraintLayout_Layout_flow_wrapMode = 54;
public static final int ConstraintLayout_Layout_guidelineUseRtl = 55;
public static final int ConstraintLayout_Layout_layoutDescription = 56;
public static final int ConstraintLayout_Layout_layout_constrainedHeight = 57;
public static final int ConstraintLayout_Layout_layout_constrainedWidth = 58;
public static final int ConstraintLayout_Layout_layout_constraintBaseline_creator = 59;
public static final int ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf = 60;
public static final int ConstraintLayout_Layout_layout_constraintBaseline_toBottomOf = 61;
public static final int ConstraintLayout_Layout_layout_constraintBaseline_toTopOf = 62;
public static final int ConstraintLayout_Layout_layout_constraintBottom_creator = 63;
public static final int ConstraintLayout_Layout_layout_constraintBottom_toBottomOf = 64;
public static final int ConstraintLayout_Layout_layout_constraintBottom_toTopOf = 65;
public static final int ConstraintLayout_Layout_layout_constraintCircle = 66;
public static final int ConstraintLayout_Layout_layout_constraintCircleAngle = 67;
public static final int ConstraintLayout_Layout_layout_constraintCircleRadius = 68;
public static final int ConstraintLayout_Layout_layout_constraintDimensionRatio = 69;
public static final int ConstraintLayout_Layout_layout_constraintEnd_toEndOf = 70;
public static final int ConstraintLayout_Layout_layout_constraintEnd_toStartOf = 71;
public static final int ConstraintLayout_Layout_layout_constraintGuide_begin = 72;
public static final int ConstraintLayout_Layout_layout_constraintGuide_end = 73;
public static final int ConstraintLayout_Layout_layout_constraintGuide_percent = 74;
public static final int ConstraintLayout_Layout_layout_constraintHeight = 75;
public static final int ConstraintLayout_Layout_layout_constraintHeight_default = 76;
public static final int ConstraintLayout_Layout_layout_constraintHeight_max = 77;
public static final int ConstraintLayout_Layout_layout_constraintHeight_min = 78;
public static final int ConstraintLayout_Layout_layout_constraintHeight_percent = 79;
public static final int ConstraintLayout_Layout_layout_constraintHorizontal_bias = 80;
public static final int ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle = 81;
public static final int ConstraintLayout_Layout_layout_constraintHorizontal_weight = 82;
public static final int ConstraintLayout_Layout_layout_constraintLeft_creator = 83;
public static final int ConstraintLayout_Layout_layout_constraintLeft_toLeftOf = 84;
public static final int ConstraintLayout_Layout_layout_constraintLeft_toRightOf = 85;
public static final int ConstraintLayout_Layout_layout_constraintRight_creator = 86;
public static final int ConstraintLayout_Layout_layout_constraintRight_toLeftOf = 87;
public static final int ConstraintLayout_Layout_layout_constraintRight_toRightOf = 88;
public static final int ConstraintLayout_Layout_layout_constraintStart_toEndOf = 89;
public static final int ConstraintLayout_Layout_layout_constraintStart_toStartOf = 90;
public static final int ConstraintLayout_Layout_layout_constraintTag = 91;
public static final int ConstraintLayout_Layout_layout_constraintTop_creator = 92;
public static final int ConstraintLayout_Layout_layout_constraintTop_toBottomOf = 93;
public static final int ConstraintLayout_Layout_layout_constraintTop_toTopOf = 94;
public static final int ConstraintLayout_Layout_layout_constraintVertical_bias = 95;
public static final int ConstraintLayout_Layout_layout_constraintVertical_chainStyle = 96;
public static final int ConstraintLayout_Layout_layout_constraintVertical_weight = 97;
public static final int ConstraintLayout_Layout_layout_constraintWidth = 98;
public static final int ConstraintLayout_Layout_layout_constraintWidth_default = 99;
public static final int ConstraintLayout_Layout_layout_constraintWidth_max = 100;
public static final int ConstraintLayout_Layout_layout_constraintWidth_min = 101;
public static final int ConstraintLayout_Layout_layout_constraintWidth_percent = 102;
public static final int ConstraintLayout_Layout_layout_editor_absoluteX = 103;
public static final int ConstraintLayout_Layout_layout_editor_absoluteY = 104;
public static final int ConstraintLayout_Layout_layout_goneMarginBaseline = 105;
public static final int ConstraintLayout_Layout_layout_goneMarginBottom = 106;
public static final int ConstraintLayout_Layout_layout_goneMarginEnd = 107;
public static final int ConstraintLayout_Layout_layout_goneMarginLeft = 108;
public static final int ConstraintLayout_Layout_layout_goneMarginRight = 109;
public static final int ConstraintLayout_Layout_layout_goneMarginStart = 110;
public static final int ConstraintLayout_Layout_layout_goneMarginTop = 111;
public static final int ConstraintLayout_Layout_layout_marginBaseline = 112;
public static final int ConstraintLayout_Layout_layout_optimizationLevel = 113;
public static final int ConstraintLayout_Layout_layout_wrapBehaviorInParent = 114;
public static final int[] ConstraintLayout_ReactiveGuide = {2130969602, 2130969603, 2130969604, 2130969605};
public static final int ConstraintLayout_ReactiveGuide_reactiveGuide_animateChange = 0;
public static final int ConstraintLayout_ReactiveGuide_reactiveGuide_applyToAllConstraintSets = 1;
public static final int ConstraintLayout_ReactiveGuide_reactiveGuide_applyToConstraintSet = 2;
public static final int ConstraintLayout_ReactiveGuide_reactiveGuide_valueId = 3;
public static final int[] ConstraintLayout_placeholder = {2130968938, 2130969576};
public static final int ConstraintLayout_placeholder_content = 0;
public static final int ConstraintLayout_placeholder_placeholder_emptyVisibility = 1;
public static final int[] ConstraintOverride = {16842948, 16842960, 16842972, 16842996, 16842997, 16842999, 16843000, 16843001, 16843002, 16843039, 16843040, 16843071, 16843072, 16843551, 16843552, 16843553, 16843554, 16843555, 16843556, 16843557, 16843558, 16843559, 16843560, 16843701, 16843702, 16843770, 16843840, 2130968667, 2130968668, 2130968721, 2130968722, 2130968723, 2130968819, 2130968935, 2130969057, 2130969143, 2130969144, 2130969145, 2130969146, 2130969147, 2130969148, 2130969149, 2130969150, 2130969151, 2130969152, 2130969153, 2130969154, 2130969155, 2130969157, 2130969158, 2130969159, 2130969160, 2130969161, 2130969198, 2130969306, 2130969307, 2130969308, 2130969312, 2130969316, 2130969317, 2130969318, 2130969321, 2130969322, 2130969323, 2130969324, 2130969325, 2130969326, 2130969327, 2130969328, 2130969329, 2130969330, 2130969331, 2130969332, 2130969335, 2130969340, 2130969341, 2130969344, 2130969345, 2130969346, 2130969347, 2130969348, 2130969349, 2130969350, 2130969351, 2130969353, 2130969354, 2130969358, 2130969359, 2130969360, 2130969361, 2130969362, 2130969363, 2130969364, 2130969367, 2130969378, 2130969516, 2130969517, 2130969518, 2130969560, 2130969572, 2130969577, 2130969590, 2130969591, 2130969592, 2130969878, 2130969880, 2130969882, 2130969901};
public static final int ConstraintOverride_android_alpha = 13;
public static final int ConstraintOverride_android_elevation = 26;
public static final int ConstraintOverride_android_id = 1;
public static final int ConstraintOverride_android_layout_height = 4;
public static final int ConstraintOverride_android_layout_marginBottom = 8;
public static final int ConstraintOverride_android_layout_marginEnd = 24;
public static final int ConstraintOverride_android_layout_marginLeft = 5;
public static final int ConstraintOverride_android_layout_marginRight = 7;
public static final int ConstraintOverride_android_layout_marginStart = 23;
public static final int ConstraintOverride_android_layout_marginTop = 6;
public static final int ConstraintOverride_android_layout_width = 3;
public static final int ConstraintOverride_android_maxHeight = 10;
public static final int ConstraintOverride_android_maxWidth = 9;
public static final int ConstraintOverride_android_minHeight = 12;
public static final int ConstraintOverride_android_minWidth = 11;
public static final int ConstraintOverride_android_orientation = 0;
public static final int ConstraintOverride_android_rotation = 20;
public static final int ConstraintOverride_android_rotationX = 21;
public static final int ConstraintOverride_android_rotationY = 22;
public static final int ConstraintOverride_android_scaleX = 18;
public static final int ConstraintOverride_android_scaleY = 19;
public static final int ConstraintOverride_android_transformPivotX = 14;
public static final int ConstraintOverride_android_transformPivotY = 15;
public static final int ConstraintOverride_android_translationX = 16;
public static final int ConstraintOverride_android_translationY = 17;
public static final int ConstraintOverride_android_translationZ = 25;
public static final int ConstraintOverride_android_visibility = 2;
public static final int ConstraintOverride_animateCircleAngleTo = 27;
public static final int ConstraintOverride_animateRelativeTo = 28;
public static final int ConstraintOverride_barrierAllowsGoneWidgets = 29;
public static final int ConstraintOverride_barrierDirection = 30;
public static final int ConstraintOverride_barrierMargin = 31;
public static final int ConstraintOverride_chainUseRtl = 32;
public static final int ConstraintOverride_constraint_referenced_ids = 33;
public static final int ConstraintOverride_drawPath = 34;
public static final int ConstraintOverride_flow_firstHorizontalBias = 35;
public static final int ConstraintOverride_flow_firstHorizontalStyle = 36;
public static final int ConstraintOverride_flow_firstVerticalBias = 37;
public static final int ConstraintOverride_flow_firstVerticalStyle = 38;
public static final int ConstraintOverride_flow_horizontalAlign = 39;
public static final int ConstraintOverride_flow_horizontalBias = 40;
public static final int ConstraintOverride_flow_horizontalGap = 41;
public static final int ConstraintOverride_flow_horizontalStyle = 42;
public static final int ConstraintOverride_flow_lastHorizontalBias = 43;
public static final int ConstraintOverride_flow_lastHorizontalStyle = 44;
public static final int ConstraintOverride_flow_lastVerticalBias = 45;
public static final int ConstraintOverride_flow_lastVerticalStyle = 46;
public static final int ConstraintOverride_flow_maxElementsWrap = 47;
public static final int ConstraintOverride_flow_verticalAlign = 48;
public static final int ConstraintOverride_flow_verticalBias = 49;
public static final int ConstraintOverride_flow_verticalGap = 50;
public static final int ConstraintOverride_flow_verticalStyle = 51;
public static final int ConstraintOverride_flow_wrapMode = 52;
public static final int ConstraintOverride_guidelineUseRtl = 53;
public static final int ConstraintOverride_layout_constrainedHeight = 54;
public static final int ConstraintOverride_layout_constrainedWidth = 55;
public static final int ConstraintOverride_layout_constraintBaseline_creator = 56;
public static final int ConstraintOverride_layout_constraintBottom_creator = 57;
public static final int ConstraintOverride_layout_constraintCircleAngle = 58;
public static final int ConstraintOverride_layout_constraintCircleRadius = 59;
public static final int ConstraintOverride_layout_constraintDimensionRatio = 60;
public static final int ConstraintOverride_layout_constraintGuide_begin = 61;
public static final int ConstraintOverride_layout_constraintGuide_end = 62;
public static final int ConstraintOverride_layout_constraintGuide_percent = 63;
public static final int ConstraintOverride_layout_constraintHeight = 64;
public static final int ConstraintOverride_layout_constraintHeight_default = 65;
public static final int ConstraintOverride_layout_constraintHeight_max = 66;
public static final int ConstraintOverride_layout_constraintHeight_min = 67;
public static final int ConstraintOverride_layout_constraintHeight_percent = 68;
public static final int ConstraintOverride_layout_constraintHorizontal_bias = 69;
public static final int ConstraintOverride_layout_constraintHorizontal_chainStyle = 70;
public static final int ConstraintOverride_layout_constraintHorizontal_weight = 71;
public static final int ConstraintOverride_layout_constraintLeft_creator = 72;
public static final int ConstraintOverride_layout_constraintRight_creator = 73;
public static final int ConstraintOverride_layout_constraintTag = 74;
public static final int ConstraintOverride_layout_constraintTop_creator = 75;
public static final int ConstraintOverride_layout_constraintVertical_bias = 76;
public static final int ConstraintOverride_layout_constraintVertical_chainStyle = 77;
public static final int ConstraintOverride_layout_constraintVertical_weight = 78;
public static final int ConstraintOverride_layout_constraintWidth = 79;
public static final int ConstraintOverride_layout_constraintWidth_default = 80;
public static final int ConstraintOverride_layout_constraintWidth_max = 81;
public static final int ConstraintOverride_layout_constraintWidth_min = 82;
public static final int ConstraintOverride_layout_constraintWidth_percent = 83;
public static final int ConstraintOverride_layout_editor_absoluteX = 84;
public static final int ConstraintOverride_layout_editor_absoluteY = 85;
public static final int ConstraintOverride_layout_goneMarginBaseline = 86;
public static final int ConstraintOverride_layout_goneMarginBottom = 87;
public static final int ConstraintOverride_layout_goneMarginEnd = 88;
public static final int ConstraintOverride_layout_goneMarginLeft = 89;
public static final int ConstraintOverride_layout_goneMarginRight = 90;
public static final int ConstraintOverride_layout_goneMarginStart = 91;
public static final int ConstraintOverride_layout_goneMarginTop = 92;
public static final int ConstraintOverride_layout_marginBaseline = 93;
public static final int ConstraintOverride_layout_wrapBehaviorInParent = 94;
public static final int ConstraintOverride_motionProgress = 95;
public static final int ConstraintOverride_motionStagger = 96;
public static final int ConstraintOverride_motionTarget = 97;
public static final int ConstraintOverride_pathMotionArc = 98;
public static final int ConstraintOverride_pivotAnchor = 99;
public static final int ConstraintOverride_polarRelativeTo = 100;
public static final int ConstraintOverride_quantizeMotionInterpolator = 101;
public static final int ConstraintOverride_quantizeMotionPhase = 102;
public static final int ConstraintOverride_quantizeMotionSteps = 103;
public static final int ConstraintOverride_transformPivotTarget = 104;
public static final int ConstraintOverride_transitionEasing = 105;
public static final int ConstraintOverride_transitionPathRotate = 106;
public static final int ConstraintOverride_visibilityMode = 107;
public static final int[] ConstraintSet = {16842948, 16842960, 16842972, 16842996, 16842997, 16842999, 16843000, 16843001, 16843002, 16843039, 16843040, 16843071, 16843072, 16843189, 16843190, 16843551, 16843552, 16843553, 16843554, 16843555, 16843556, 16843557, 16843558, 16843559, 16843560, 16843701, 16843702, 16843770, 16843840, 2130968667, 2130968668, 2130968721, 2130968722, 2130968723, 2130968819, 2130968931, 2130968935, 2130968936, 2130969037, 2130969057, 2130969143, 2130969144, 2130969145, 2130969146, 2130969147, 2130969148, 2130969149, 2130969150, 2130969151, 2130969152, 2130969153, 2130969154, 2130969155, 2130969157, 2130969158, 2130969159, 2130969160, 2130969161, 2130969198, 2130969306, 2130969307, 2130969308, 2130969309, 2130969310, 2130969311, 2130969312, 2130969313, 2130969314, 2130969315, 2130969316, 2130969317, 2130969318, 2130969319, 2130969320, 2130969321, 2130969322, 2130969323, 2130969325, 2130969326, 2130969327, 2130969328, 2130969329, 2130969330, 2130969331, 2130969332, 2130969333, 2130969334, 2130969335, 2130969336, 2130969337, 2130969338, 2130969339, 2130969340, 2130969341, 2130969342, 2130969343, 2130969344, 2130969345, 2130969346, 2130969348, 2130969349, 2130969350, 2130969351, 2130969353, 2130969354, 2130969358, 2130969359, 2130969360, 2130969361, 2130969362, 2130969363, 2130969364, 2130969367, 2130969378, 2130969516, 2130969517, 2130969560, 2130969572, 2130969577, 2130969592, 2130969880, 2130969882};
public static final int ConstraintSet_android_alpha = 15;
public static final int ConstraintSet_android_elevation = 28;
public static final int ConstraintSet_android_id = 1;
public static final int ConstraintSet_android_layout_height = 4;
public static final int ConstraintSet_android_layout_marginBottom = 8;
public static final int ConstraintSet_android_layout_marginEnd = 26;
public static final int ConstraintSet_android_layout_marginLeft = 5;
public static final int ConstraintSet_android_layout_marginRight = 7;
public static final int ConstraintSet_android_layout_marginStart = 25;
public static final int ConstraintSet_android_layout_marginTop = 6;
public static final int ConstraintSet_android_layout_width = 3;
public static final int ConstraintSet_android_maxHeight = 10;
public static final int ConstraintSet_android_maxWidth = 9;
public static final int ConstraintSet_android_minHeight = 12;
public static final int ConstraintSet_android_minWidth = 11;
public static final int ConstraintSet_android_orientation = 0;
public static final int ConstraintSet_android_pivotX = 13;
public static final int ConstraintSet_android_pivotY = 14;
public static final int ConstraintSet_android_rotation = 22;
public static final int ConstraintSet_android_rotationX = 23;
public static final int ConstraintSet_android_rotationY = 24;
public static final int ConstraintSet_android_scaleX = 20;
public static final int ConstraintSet_android_scaleY = 21;
public static final int ConstraintSet_android_transformPivotX = 16;
public static final int ConstraintSet_android_transformPivotY = 17;
public static final int ConstraintSet_android_translationX = 18;
public static final int ConstraintSet_android_translationY = 19;
public static final int ConstraintSet_android_translationZ = 27;
public static final int ConstraintSet_android_visibility = 2;
public static final int ConstraintSet_animateCircleAngleTo = 29;
public static final int ConstraintSet_animateRelativeTo = 30;
public static final int ConstraintSet_barrierAllowsGoneWidgets = 31;
public static final int ConstraintSet_barrierDirection = 32;
public static final int ConstraintSet_barrierMargin = 33;
public static final int ConstraintSet_chainUseRtl = 34;
public static final int ConstraintSet_constraintRotate = 35;
public static final int ConstraintSet_constraint_referenced_ids = 36;
public static final int ConstraintSet_constraint_referenced_tags = 37;
public static final int ConstraintSet_deriveConstraintsFrom = 38;
public static final int ConstraintSet_drawPath = 39;
public static final int ConstraintSet_flow_firstHorizontalBias = 40;
public static final int ConstraintSet_flow_firstHorizontalStyle = 41;
public static final int ConstraintSet_flow_firstVerticalBias = 42;
public static final int ConstraintSet_flow_firstVerticalStyle = 43;
public static final int ConstraintSet_flow_horizontalAlign = 44;
public static final int ConstraintSet_flow_horizontalBias = 45;
public static final int ConstraintSet_flow_horizontalGap = 46;
public static final int ConstraintSet_flow_horizontalStyle = 47;
public static final int ConstraintSet_flow_lastHorizontalBias = 48;
public static final int ConstraintSet_flow_lastHorizontalStyle = 49;
public static final int ConstraintSet_flow_lastVerticalBias = 50;
public static final int ConstraintSet_flow_lastVerticalStyle = 51;
public static final int ConstraintSet_flow_maxElementsWrap = 52;
public static final int ConstraintSet_flow_verticalAlign = 53;
public static final int ConstraintSet_flow_verticalBias = 54;
public static final int ConstraintSet_flow_verticalGap = 55;
public static final int ConstraintSet_flow_verticalStyle = 56;
public static final int ConstraintSet_flow_wrapMode = 57;
public static final int ConstraintSet_guidelineUseRtl = 58;
public static final int ConstraintSet_layout_constrainedHeight = 59;
public static final int ConstraintSet_layout_constrainedWidth = 60;
public static final int ConstraintSet_layout_constraintBaseline_creator = 61;
public static final int ConstraintSet_layout_constraintBaseline_toBaselineOf = 62;
public static final int ConstraintSet_layout_constraintBaseline_toBottomOf = 63;
public static final int ConstraintSet_layout_constraintBaseline_toTopOf = 64;
public static final int ConstraintSet_layout_constraintBottom_creator = 65;
public static final int ConstraintSet_layout_constraintBottom_toBottomOf = 66;
public static final int ConstraintSet_layout_constraintBottom_toTopOf = 67;
public static final int ConstraintSet_layout_constraintCircle = 68;
public static final int ConstraintSet_layout_constraintCircleAngle = 69;
public static final int ConstraintSet_layout_constraintCircleRadius = 70;
public static final int ConstraintSet_layout_constraintDimensionRatio = 71;
public static final int ConstraintSet_layout_constraintEnd_toEndOf = 72;
public static final int ConstraintSet_layout_constraintEnd_toStartOf = 73;
public static final int ConstraintSet_layout_constraintGuide_begin = 74;
public static final int ConstraintSet_layout_constraintGuide_end = 75;
public static final int ConstraintSet_layout_constraintGuide_percent = 76;
public static final int ConstraintSet_layout_constraintHeight_default = 77;
public static final int ConstraintSet_layout_constraintHeight_max = 78;
public static final int ConstraintSet_layout_constraintHeight_min = 79;
public static final int ConstraintSet_layout_constraintHeight_percent = 80;
public static final int ConstraintSet_layout_constraintHorizontal_bias = 81;
public static final int ConstraintSet_layout_constraintHorizontal_chainStyle = 82;
public static final int ConstraintSet_layout_constraintHorizontal_weight = 83;
public static final int ConstraintSet_layout_constraintLeft_creator = 84;
public static final int ConstraintSet_layout_constraintLeft_toLeftOf = 85;
public static final int ConstraintSet_layout_constraintLeft_toRightOf = 86;
public static final int ConstraintSet_layout_constraintRight_creator = 87;
public static final int ConstraintSet_layout_constraintRight_toLeftOf = 88;
public static final int ConstraintSet_layout_constraintRight_toRightOf = 89;
public static final int ConstraintSet_layout_constraintStart_toEndOf = 90;
public static final int ConstraintSet_layout_constraintStart_toStartOf = 91;
public static final int ConstraintSet_layout_constraintTag = 92;
public static final int ConstraintSet_layout_constraintTop_creator = 93;
public static final int ConstraintSet_layout_constraintTop_toBottomOf = 94;
public static final int ConstraintSet_layout_constraintTop_toTopOf = 95;
public static final int ConstraintSet_layout_constraintVertical_bias = 96;
public static final int ConstraintSet_layout_constraintVertical_chainStyle = 97;
public static final int ConstraintSet_layout_constraintVertical_weight = 98;
public static final int ConstraintSet_layout_constraintWidth_default = 99;
public static final int ConstraintSet_layout_constraintWidth_max = 100;
public static final int ConstraintSet_layout_constraintWidth_min = 101;
public static final int ConstraintSet_layout_constraintWidth_percent = 102;
public static final int ConstraintSet_layout_editor_absoluteX = 103;
public static final int ConstraintSet_layout_editor_absoluteY = 104;
public static final int ConstraintSet_layout_goneMarginBaseline = 105;
public static final int ConstraintSet_layout_goneMarginBottom = 106;
public static final int ConstraintSet_layout_goneMarginEnd = 107;
public static final int ConstraintSet_layout_goneMarginLeft = 108;
public static final int ConstraintSet_layout_goneMarginRight = 109;
public static final int ConstraintSet_layout_goneMarginStart = 110;
public static final int ConstraintSet_layout_goneMarginTop = 111;
public static final int ConstraintSet_layout_marginBaseline = 112;
public static final int ConstraintSet_layout_wrapBehaviorInParent = 113;
public static final int ConstraintSet_motionProgress = 114;
public static final int ConstraintSet_motionStagger = 115;
public static final int ConstraintSet_pathMotionArc = 116;
public static final int ConstraintSet_pivotAnchor = 117;
public static final int ConstraintSet_polarRelativeTo = 118;
public static final int ConstraintSet_quantizeMotionSteps = 119;
public static final int ConstraintSet_transitionEasing = 120;
public static final int ConstraintSet_transitionPathRotate = 121;
public static final int Constraint_android_alpha = 13;
public static final int Constraint_android_elevation = 26;
public static final int Constraint_android_id = 1;
public static final int Constraint_android_layout_height = 4;
public static final int Constraint_android_layout_marginBottom = 8;
public static final int Constraint_android_layout_marginEnd = 24;
public static final int Constraint_android_layout_marginLeft = 5;
public static final int Constraint_android_layout_marginRight = 7;
public static final int Constraint_android_layout_marginStart = 23;
public static final int Constraint_android_layout_marginTop = 6;
public static final int Constraint_android_layout_width = 3;
public static final int Constraint_android_maxHeight = 10;
public static final int Constraint_android_maxWidth = 9;
public static final int Constraint_android_minHeight = 12;
public static final int Constraint_android_minWidth = 11;
public static final int Constraint_android_orientation = 0;
public static final int Constraint_android_rotation = 20;
public static final int Constraint_android_rotationX = 21;
public static final int Constraint_android_rotationY = 22;
public static final int Constraint_android_scaleX = 18;
public static final int Constraint_android_scaleY = 19;
public static final int Constraint_android_transformPivotX = 14;
public static final int Constraint_android_transformPivotY = 15;
public static final int Constraint_android_translationX = 16;
public static final int Constraint_android_translationY = 17;
public static final int Constraint_android_translationZ = 25;
public static final int Constraint_android_visibility = 2;
public static final int Constraint_animateCircleAngleTo = 27;
public static final int Constraint_animateRelativeTo = 28;
public static final int Constraint_barrierAllowsGoneWidgets = 29;
public static final int Constraint_barrierDirection = 30;
public static final int Constraint_barrierMargin = 31;
public static final int Constraint_chainUseRtl = 32;
public static final int Constraint_constraint_referenced_ids = 33;
public static final int Constraint_constraint_referenced_tags = 34;
public static final int Constraint_drawPath = 35;
public static final int Constraint_flow_firstHorizontalBias = 36;
public static final int Constraint_flow_firstHorizontalStyle = 37;
public static final int Constraint_flow_firstVerticalBias = 38;
public static final int Constraint_flow_firstVerticalStyle = 39;
public static final int Constraint_flow_horizontalAlign = 40;
public static final int Constraint_flow_horizontalBias = 41;
public static final int Constraint_flow_horizontalGap = 42;
public static final int Constraint_flow_horizontalStyle = 43;
public static final int Constraint_flow_lastHorizontalBias = 44;
public static final int Constraint_flow_lastHorizontalStyle = 45;
public static final int Constraint_flow_lastVerticalBias = 46;
public static final int Constraint_flow_lastVerticalStyle = 47;
public static final int Constraint_flow_maxElementsWrap = 48;
public static final int Constraint_flow_verticalAlign = 49;
public static final int Constraint_flow_verticalBias = 50;
public static final int Constraint_flow_verticalGap = 51;
public static final int Constraint_flow_verticalStyle = 52;
public static final int Constraint_flow_wrapMode = 53;
public static final int Constraint_guidelineUseRtl = 54;
public static final int Constraint_layout_constrainedHeight = 55;
public static final int Constraint_layout_constrainedWidth = 56;
public static final int Constraint_layout_constraintBaseline_creator = 57;
public static final int Constraint_layout_constraintBaseline_toBaselineOf = 58;
public static final int Constraint_layout_constraintBaseline_toBottomOf = 59;
public static final int Constraint_layout_constraintBaseline_toTopOf = 60;
public static final int Constraint_layout_constraintBottom_creator = 61;
public static final int Constraint_layout_constraintBottom_toBottomOf = 62;
public static final int Constraint_layout_constraintBottom_toTopOf = 63;
public static final int Constraint_layout_constraintCircle = 64;
public static final int Constraint_layout_constraintCircleAngle = 65;
public static final int Constraint_layout_constraintCircleRadius = 66;
public static final int Constraint_layout_constraintDimensionRatio = 67;
public static final int Constraint_layout_constraintEnd_toEndOf = 68;
public static final int Constraint_layout_constraintEnd_toStartOf = 69;
public static final int Constraint_layout_constraintGuide_begin = 70;
public static final int Constraint_layout_constraintGuide_end = 71;
public static final int Constraint_layout_constraintGuide_percent = 72;
public static final int Constraint_layout_constraintHeight = 73;
public static final int Constraint_layout_constraintHeight_default = 74;
public static final int Constraint_layout_constraintHeight_max = 75;
public static final int Constraint_layout_constraintHeight_min = 76;
public static final int Constraint_layout_constraintHeight_percent = 77;
public static final int Constraint_layout_constraintHorizontal_bias = 78;
public static final int Constraint_layout_constraintHorizontal_chainStyle = 79;
public static final int Constraint_layout_constraintHorizontal_weight = 80;
public static final int Constraint_layout_constraintLeft_creator = 81;
public static final int Constraint_layout_constraintLeft_toLeftOf = 82;
public static final int Constraint_layout_constraintLeft_toRightOf = 83;
public static final int Constraint_layout_constraintRight_creator = 84;
public static final int Constraint_layout_constraintRight_toLeftOf = 85;
public static final int Constraint_layout_constraintRight_toRightOf = 86;
public static final int Constraint_layout_constraintStart_toEndOf = 87;
public static final int Constraint_layout_constraintStart_toStartOf = 88;
public static final int Constraint_layout_constraintTag = 89;
public static final int Constraint_layout_constraintTop_creator = 90;
public static final int Constraint_layout_constraintTop_toBottomOf = 91;
public static final int Constraint_layout_constraintTop_toTopOf = 92;
public static final int Constraint_layout_constraintVertical_bias = 93;
public static final int Constraint_layout_constraintVertical_chainStyle = 94;
public static final int Constraint_layout_constraintVertical_weight = 95;
public static final int Constraint_layout_constraintWidth = 96;
public static final int Constraint_layout_constraintWidth_default = 97;
public static final int Constraint_layout_constraintWidth_max = 98;
public static final int Constraint_layout_constraintWidth_min = 99;
public static final int Constraint_layout_constraintWidth_percent = 100;
public static final int Constraint_layout_editor_absoluteX = 101;
public static final int Constraint_layout_editor_absoluteY = 102;
public static final int Constraint_layout_goneMarginBaseline = 103;
public static final int Constraint_layout_goneMarginBottom = 104;
public static final int Constraint_layout_goneMarginEnd = 105;
public static final int Constraint_layout_goneMarginLeft = 106;
public static final int Constraint_layout_goneMarginRight = 107;
public static final int Constraint_layout_goneMarginStart = 108;
public static final int Constraint_layout_goneMarginTop = 109;
public static final int Constraint_layout_marginBaseline = 110;
public static final int Constraint_layout_wrapBehaviorInParent = 111;
public static final int Constraint_motionProgress = 112;
public static final int Constraint_motionStagger = 113;
public static final int Constraint_pathMotionArc = 114;
public static final int Constraint_pivotAnchor = 115;
public static final int Constraint_polarRelativeTo = 116;
public static final int Constraint_quantizeMotionInterpolator = 117;
public static final int Constraint_quantizeMotionPhase = 118;
public static final int Constraint_quantizeMotionSteps = 119;
public static final int Constraint_transformPivotTarget = 120;
public static final int Constraint_transitionEasing = 121;
public static final int Constraint_transitionPathRotate = 122;
public static final int Constraint_visibilityMode = 123;
public static final int[] CoordinatorLayout = {2130969289, 2130969696};
public static final int[] CoordinatorLayout_Layout = {16842931, 2130969301, 2130969302, 2130969303, 2130969352, 2130969365, 2130969366};
public static final int CoordinatorLayout_Layout_android_layout_gravity = 0;
public static final int CoordinatorLayout_Layout_layout_anchor = 1;
public static final int CoordinatorLayout_Layout_layout_anchorGravity = 2;
public static final int CoordinatorLayout_Layout_layout_behavior = 3;
public static final int CoordinatorLayout_Layout_layout_dodgeInsetEdges = 4;
public static final int CoordinatorLayout_Layout_layout_insetEdge = 5;
public static final int CoordinatorLayout_Layout_layout_keyline = 6;
public static final int CoordinatorLayout_keylines = 0;
public static final int CoordinatorLayout_statusBarBackground = 1;
public static final int[] CustomAttribute = {2130968676, 2130969018, 2130969019, 2130969020, 2130969021, 2130969022, 2130969023, 2130969025, 2130969026, 2130969027, 2130969481};
public static final int CustomAttribute_attributeName = 0;
public static final int CustomAttribute_customBoolean = 1;
public static final int CustomAttribute_customColorDrawableValue = 2;
public static final int CustomAttribute_customColorValue = 3;
public static final int CustomAttribute_customDimension = 4;
public static final int CustomAttribute_customFloatValue = 5;
public static final int CustomAttribute_customIntegerValue = 6;
public static final int CustomAttribute_customPixelDimension = 7;
public static final int CustomAttribute_customReference = 8;
public static final int CustomAttribute_customStringValue = 9;
public static final int CustomAttribute_methodName = 10;
public static final int[] DrawerArrowToggle = {2130968673, 2130968674, 2130968720, 2130968889, 2130969062, 2130969178, 2130969670, 2130969823};
public static final int DrawerArrowToggle_arrowHeadLength = 0;
public static final int DrawerArrowToggle_arrowShaftLength = 1;
public static final int DrawerArrowToggle_barLength = 2;
public static final int DrawerArrowToggle_color = 3;
public static final int DrawerArrowToggle_drawableSize = 4;
public static final int DrawerArrowToggle_gapBetweenBars = 5;
public static final int DrawerArrowToggle_spinBars = 6;
public static final int DrawerArrowToggle_thickness = 7;
public static final int[] DrawerLayout = {2130969077};
public static final int DrawerLayout_elevation = 0;
public static final int[] EasySwipeMenuLayout = {2130968797, 2130968798, 2130968954, 2130969176, 2130969379, 2130969612};
public static final int EasySwipeMenuLayout_canLeftSwipe = 0;
public static final int EasySwipeMenuLayout_canRightSwipe = 1;
public static final int EasySwipeMenuLayout_contentView = 2;
public static final int EasySwipeMenuLayout_fraction = 3;
public static final int EasySwipeMenuLayout_leftMenuView = 4;
public static final int EasySwipeMenuLayout_rightMenuView = 5;
public static final int[] ExtendedFloatingActionButton = {2130968880, 2130969077, 2130969111, 2130969209, 2130969654, 2130969658};
public static final int[] ExtendedFloatingActionButton_Behavior_Layout = {2130968724, 2130968725};
public static final int ExtendedFloatingActionButton_Behavior_Layout_behavior_autoHide = 0;
public static final int ExtendedFloatingActionButton_Behavior_Layout_behavior_autoShrink = 1;
public static final int ExtendedFloatingActionButton_collapsedSize = 0;
public static final int ExtendedFloatingActionButton_elevation = 1;
public static final int ExtendedFloatingActionButton_extendMotionSpec = 2;
public static final int ExtendedFloatingActionButton_hideMotionSpec = 3;
public static final int ExtendedFloatingActionButton_showMotionSpec = 4;
public static final int ExtendedFloatingActionButton_shrinkMotionSpec = 5;
public static final int[] FlexboxLayout = {R$attr.alignContent, R$attr.alignItems, R$attr.dividerDrawable, R$attr.dividerDrawableHorizontal, R$attr.dividerDrawableVertical, R$attr.flexDirection, R$attr.flexWrap, R$attr.justifyContent, R$attr.maxLine, R$attr.showDivider, R$attr.showDividerHorizontal, R$attr.showDividerVertical};
public static final int[] FlexboxLayout_Layout = {R$attr.layout_alignSelf, R$attr.layout_flexBasisPercent, R$attr.layout_flexGrow, R$attr.layout_flexShrink, R$attr.layout_maxHeight, R$attr.layout_maxWidth, R$attr.layout_minHeight, R$attr.layout_minWidth, R$attr.layout_order, R$attr.layout_wrapBefore};
public static final int FlexboxLayout_Layout_layout_alignSelf = 0;
public static final int FlexboxLayout_Layout_layout_flexBasisPercent = 1;
public static final int FlexboxLayout_Layout_layout_flexGrow = 2;
public static final int FlexboxLayout_Layout_layout_flexShrink = 3;
public static final int FlexboxLayout_Layout_layout_maxHeight = 4;
public static final int FlexboxLayout_Layout_layout_maxWidth = 5;
public static final int FlexboxLayout_Layout_layout_minHeight = 6;
public static final int FlexboxLayout_Layout_layout_minWidth = 7;
public static final int FlexboxLayout_Layout_layout_order = 8;
public static final int FlexboxLayout_Layout_layout_wrapBefore = 9;
public static final int FlexboxLayout_alignContent = 0;
public static final int FlexboxLayout_alignItems = 1;
public static final int FlexboxLayout_dividerDrawable = 2;
public static final int FlexboxLayout_dividerDrawableHorizontal = 3;
public static final int FlexboxLayout_dividerDrawableVertical = 4;
public static final int FlexboxLayout_flexDirection = 5;
public static final int FlexboxLayout_flexWrap = 6;
public static final int FlexboxLayout_justifyContent = 7;
public static final int FlexboxLayout_maxLine = 8;
public static final int FlexboxLayout_showDivider = 9;
public static final int FlexboxLayout_showDividerHorizontal = 10;
public static final int FlexboxLayout_showDividerVertical = 11;
public static final int[] FloatingActionButton = {16842766, 2130968694, 2130968695, 2130968749, 2130969077, 2130969092, 2130969123, 2130969124, 2130969209, 2130969220, 2130969473, 2130969587, 2130969613, 2130969633, 2130969636, 2130969654, 2130969890};
public static final int[] FloatingActionButton_Behavior_Layout = {2130968724};
public static final int FloatingActionButton_Behavior_Layout_behavior_autoHide = 0;
public static final int FloatingActionButton_android_enabled = 0;
public static final int FloatingActionButton_backgroundTint = 1;
public static final int FloatingActionButton_backgroundTintMode = 2;
public static final int FloatingActionButton_borderWidth = 3;
public static final int FloatingActionButton_elevation = 4;
public static final int FloatingActionButton_ensureMinTouchTargetSize = 5;
public static final int FloatingActionButton_fabCustomSize = 6;
public static final int FloatingActionButton_fabSize = 7;
public static final int FloatingActionButton_hideMotionSpec = 8;
public static final int FloatingActionButton_hoveredFocusedTranslationZ = 9;
public static final int FloatingActionButton_maxImageSize = 10;
public static final int FloatingActionButton_pressedTranslationZ = 11;
public static final int FloatingActionButton_rippleColor = 12;
public static final int FloatingActionButton_shapeAppearance = 13;
public static final int FloatingActionButton_shapeAppearanceOverlay = 14;
public static final int FloatingActionButton_showMotionSpec = 15;
public static final int FloatingActionButton_useCompatPadding = 16;
public static final int[] FlowLayout = {2130969274, 2130969385};
public static final int FlowLayout_itemSpacing = 0;
public static final int FlowLayout_lineSpacing = 1;
public static final int[] FontFamily = {2130969164, 2130969165, 2130969166, 2130969167, 2130969168, 2130969169, 2130969170};
public static final int[] FontFamilyFont = {16844082, 16844083, 16844095, 16844143, 16844144, 2130969162, 2130969171, 2130969172, 2130969173, 2130969887};
public static final int FontFamilyFont_android_font = 0;
public static final int FontFamilyFont_android_fontStyle = 2;
public static final int FontFamilyFont_android_fontVariationSettings = 4;
public static final int FontFamilyFont_android_fontWeight = 1;
public static final int FontFamilyFont_android_ttcIndex = 3;
public static final int FontFamilyFont_font = 5;
public static final int FontFamilyFont_fontStyle = 6;
public static final int FontFamilyFont_fontVariationSettings = 7;
public static final int FontFamilyFont_fontWeight = 8;
public static final int FontFamilyFont_ttcIndex = 9;
public static final int FontFamily_fontProviderAuthority = 0;
public static final int FontFamily_fontProviderCerts = 1;
public static final int FontFamily_fontProviderFetchStrategy = 2;
public static final int FontFamily_fontProviderFetchTimeout = 3;
public static final int FontFamily_fontProviderPackage = 4;
public static final int FontFamily_fontProviderQuery = 5;
public static final int FontFamily_fontProviderSystemFontFamily = 6;
public static final int[] ForegroundLinearLayout = {16843017, 16843264, 2130969175};
public static final int ForegroundLinearLayout_android_foreground = 0;
public static final int ForegroundLinearLayout_android_foregroundGravity = 1;
public static final int ForegroundLinearLayout_foregroundInsidePadding = 2;
public static final int[] Fragment = {16842755, 16842960, 16842961};
public static final int[] FragmentContainerView = {16842755, 16842961};
public static final int FragmentContainerView_android_name = 0;
public static final int FragmentContainerView_android_tag = 1;
public static final int Fragment_android_id = 1;
public static final int Fragment_android_name = 0;
public static final int Fragment_android_tag = 2;
public static final int[] GradientColor = {16843165, 16843166, 16843169, 16843170, 16843171, 16843172, 16843265, 16843275, 16844048, 16844049, 16844050, 16844051};
public static final int[] GradientColorItem = {16843173, 16844052};
public static final int GradientColorItem_android_color = 0;
public static final int GradientColorItem_android_offset = 1;
public static final int GradientColor_android_centerColor = 7;
public static final int GradientColor_android_centerX = 3;
public static final int GradientColor_android_centerY = 4;
public static final int GradientColor_android_endColor = 1;
public static final int GradientColor_android_endX = 10;
public static final int GradientColor_android_endY = 11;
public static final int GradientColor_android_gradientRadius = 5;
public static final int GradientColor_android_startColor = 0;
public static final int GradientColor_android_startX = 8;
public static final int GradientColor_android_startY = 9;
public static final int GradientColor_android_tileMode = 6;
public static final int GradientColor_android_type = 2;
public static final int[] ImageFilterView = {2130968666, 2130968735, 2130968767, 2130968955, 2130969015, 2130969236, 2130969237, 2130969238, 2130969239, 2130969542, 2130969615, 2130969616, 2130969617, 2130969910};
public static final int ImageFilterView_altSrc = 0;
public static final int ImageFilterView_blendSrc = 1;
public static final int ImageFilterView_brightness = 2;
public static final int ImageFilterView_contrast = 3;
public static final int ImageFilterView_crossfade = 4;
public static final int ImageFilterView_imagePanX = 5;
public static final int ImageFilterView_imagePanY = 6;
public static final int ImageFilterView_imageRotate = 7;
public static final int ImageFilterView_imageZoom = 8;
public static final int ImageFilterView_overlay = 9;
public static final int ImageFilterView_round = 10;
public static final int ImageFilterView_roundPercent = 11;
public static final int ImageFilterView_saturation = 12;
public static final int ImageFilterView_warmth = 13;
public static final int[] Insets = {2130969428, 2130969429, 2130969430, 2130969544, 2130969546, 2130969547, 2130969550};
public static final int Insets_marginLeftSystemWindowInsets = 0;
public static final int Insets_marginRightSystemWindowInsets = 1;
public static final int Insets_marginTopSystemWindowInsets = 2;
public static final int Insets_paddingBottomSystemWindowInsets = 3;
public static final int Insets_paddingLeftSystemWindowInsets = 4;
public static final int Insets_paddingRightSystemWindowInsets = 5;
public static final int Insets_paddingTopSystemWindowInsets = 6;
public static final int[] KeyAttribute = {16843551, 16843552, 16843553, 16843554, 16843555, 16843556, 16843557, 16843558, 16843559, 16843560, 16843770, 16843840, 2130969017, 2130969177, 2130969516, 2130969518, 2130969878, 2130969880, 2130969882};
public static final int KeyAttribute_android_alpha = 0;
public static final int KeyAttribute_android_elevation = 11;
public static final int KeyAttribute_android_rotation = 7;
public static final int KeyAttribute_android_rotationX = 8;
public static final int KeyAttribute_android_rotationY = 9;
public static final int KeyAttribute_android_scaleX = 5;
public static final int KeyAttribute_android_scaleY = 6;
public static final int KeyAttribute_android_transformPivotX = 1;
public static final int KeyAttribute_android_transformPivotY = 2;
public static final int KeyAttribute_android_translationX = 3;
public static final int KeyAttribute_android_translationY = 4;
public static final int KeyAttribute_android_translationZ = 10;
public static final int KeyAttribute_curveFit = 12;
public static final int KeyAttribute_framePosition = 13;
public static final int KeyAttribute_motionProgress = 14;
public static final int KeyAttribute_motionTarget = 15;
public static final int KeyAttribute_transformPivotTarget = 16;
public static final int KeyAttribute_transitionEasing = 17;
public static final int KeyAttribute_transitionPathRotate = 18;
public static final int[] KeyCycle = {16843551, 16843554, 16843555, 16843556, 16843557, 16843558, 16843559, 16843560, 16843770, 16843840, 2130969017, 2130969177, 2130969516, 2130969518, 2130969880, 2130969882, 2130969912, 2130969913, 2130969914, 2130969915, 2130969916};
public static final int KeyCycle_android_alpha = 0;
public static final int KeyCycle_android_elevation = 9;
public static final int KeyCycle_android_rotation = 5;
public static final int KeyCycle_android_rotationX = 6;
public static final int KeyCycle_android_rotationY = 7;
public static final int KeyCycle_android_scaleX = 3;
public static final int KeyCycle_android_scaleY = 4;
public static final int KeyCycle_android_translationX = 1;
public static final int KeyCycle_android_translationY = 2;
public static final int KeyCycle_android_translationZ = 8;
public static final int KeyCycle_curveFit = 10;
public static final int KeyCycle_framePosition = 11;
public static final int KeyCycle_motionProgress = 12;
public static final int KeyCycle_motionTarget = 13;
public static final int KeyCycle_transitionEasing = 14;
public static final int KeyCycle_transitionPathRotate = 15;
public static final int KeyCycle_waveOffset = 16;
public static final int KeyCycle_wavePeriod = 17;
public static final int KeyCycle_wavePhase = 18;
public static final int KeyCycle_waveShape = 19;
public static final int KeyCycle_waveVariesBy = 20;
public static final int[] KeyFrame = new int[0];
public static final int[] KeyFramesAcceleration = new int[0];
public static final int[] KeyFramesVelocity = new int[0];
public static final int[] KeyPosition = {2130969017, 2130969057, 2130969177, 2130969287, 2130969518, 2130969560, 2130969562, 2130969563, 2130969564, 2130969565, 2130969664, 2130969880};
public static final int KeyPosition_curveFit = 0;
public static final int KeyPosition_drawPath = 1;
public static final int KeyPosition_framePosition = 2;
public static final int KeyPosition_keyPositionType = 3;
public static final int KeyPosition_motionTarget = 4;
public static final int KeyPosition_pathMotionArc = 5;
public static final int KeyPosition_percentHeight = 6;
public static final int KeyPosition_percentWidth = 7;
public static final int KeyPosition_percentX = 8;
public static final int KeyPosition_percentY = 9;
public static final int KeyPosition_sizePercent = 10;
public static final int KeyPosition_transitionEasing = 11;
public static final int[] KeyTimeCycle = {16843551, 16843554, 16843555, 16843556, 16843557, 16843558, 16843559, 16843560, 16843770, 16843840, 2130969017, 2130969177, 2130969516, 2130969518, 2130969880, 2130969882, 2130969911, 2130969912, 2130969913, 2130969914, 2130969915};
public static final int KeyTimeCycle_android_alpha = 0;
public static final int KeyTimeCycle_android_elevation = 9;
public static final int KeyTimeCycle_android_rotation = 5;
public static final int KeyTimeCycle_android_rotationX = 6;
public static final int KeyTimeCycle_android_rotationY = 7;
public static final int KeyTimeCycle_android_scaleX = 3;
public static final int KeyTimeCycle_android_scaleY = 4;
public static final int KeyTimeCycle_android_translationX = 1;
public static final int KeyTimeCycle_android_translationY = 2;
public static final int KeyTimeCycle_android_translationZ = 8;
public static final int KeyTimeCycle_curveFit = 10;
public static final int KeyTimeCycle_framePosition = 11;
public static final int KeyTimeCycle_motionProgress = 12;
public static final int KeyTimeCycle_motionTarget = 13;
public static final int KeyTimeCycle_transitionEasing = 14;
public static final int KeyTimeCycle_transitionPathRotate = 15;
public static final int KeyTimeCycle_waveDecay = 16;
public static final int KeyTimeCycle_waveOffset = 17;
public static final int KeyTimeCycle_wavePeriod = 18;
public static final int KeyTimeCycle_wavePhase = 19;
public static final int KeyTimeCycle_waveShape = 20;
public static final int[] KeyTrigger = {2130969177, 2130969518, 2130969519, 2130969520, 2130969534, 2130969536, 2130969537, 2130969884, 2130969885, 2130969886, 2130969898, 2130969899, 2130969900};
public static final int KeyTrigger_framePosition = 0;
public static final int KeyTrigger_motionTarget = 1;
public static final int KeyTrigger_motion_postLayoutCollision = 2;
public static final int KeyTrigger_motion_triggerOnCollision = 3;
public static final int KeyTrigger_onCross = 4;
public static final int KeyTrigger_onNegativeCross = 5;
public static final int KeyTrigger_onPositiveCross = 6;
public static final int KeyTrigger_triggerId = 7;
public static final int KeyTrigger_triggerReceiver = 8;
public static final int KeyTrigger_triggerSlack = 9;
public static final int KeyTrigger_viewTransitionOnCross = 10;
public static final int KeyTrigger_viewTransitionOnNegativeCross = 11;
public static final int KeyTrigger_viewTransitionOnPositiveCross = 12;
public static final int[] Layout = {16842948, 16842996, 16842997, 16842999, 16843000, 16843001, 16843002, 16843701, 16843702, 2130968721, 2130968722, 2130968723, 2130968819, 2130968935, 2130968936, 2130969198, 2130969306, 2130969307, 2130969308, 2130969309, 2130969310, 2130969311, 2130969312, 2130969313, 2130969314, 2130969315, 2130969316, 2130969317, 2130969318, 2130969319, 2130969320, 2130969321, 2130969322, 2130969323, 2130969324, 2130969325, 2130969326, 2130969327, 2130969328, 2130969329, 2130969330, 2130969331, 2130969332, 2130969333, 2130969334, 2130969335, 2130969336, 2130969337, 2130969338, 2130969339, 2130969341, 2130969342, 2130969343, 2130969344, 2130969345, 2130969346, 2130969347, 2130969348, 2130969349, 2130969350, 2130969351, 2130969353, 2130969354, 2130969358, 2130969359, 2130969360, 2130969361, 2130969362, 2130969363, 2130969364, 2130969367, 2130969378, 2130969472, 2130969477, 2130969482, 2130969486};
public static final int Layout_android_layout_height = 2;
public static final int Layout_android_layout_marginBottom = 6;
public static final int Layout_android_layout_marginEnd = 8;
public static final int Layout_android_layout_marginLeft = 3;
public static final int Layout_android_layout_marginRight = 5;
public static final int Layout_android_layout_marginStart = 7;
public static final int Layout_android_layout_marginTop = 4;
public static final int Layout_android_layout_width = 1;
public static final int Layout_android_orientation = 0;
public static final int Layout_barrierAllowsGoneWidgets = 9;
public static final int Layout_barrierDirection = 10;
public static final int Layout_barrierMargin = 11;
public static final int Layout_chainUseRtl = 12;
public static final int Layout_constraint_referenced_ids = 13;
public static final int Layout_constraint_referenced_tags = 14;
public static final int Layout_guidelineUseRtl = 15;
public static final int Layout_layout_constrainedHeight = 16;
public static final int Layout_layout_constrainedWidth = 17;
public static final int Layout_layout_constraintBaseline_creator = 18;
public static final int Layout_layout_constraintBaseline_toBaselineOf = 19;
public static final int Layout_layout_constraintBaseline_toBottomOf = 20;
public static final int Layout_layout_constraintBaseline_toTopOf = 21;
public static final int Layout_layout_constraintBottom_creator = 22;
public static final int Layout_layout_constraintBottom_toBottomOf = 23;
public static final int Layout_layout_constraintBottom_toTopOf = 24;
public static final int Layout_layout_constraintCircle = 25;
public static final int Layout_layout_constraintCircleAngle = 26;
public static final int Layout_layout_constraintCircleRadius = 27;
public static final int Layout_layout_constraintDimensionRatio = 28;
public static final int Layout_layout_constraintEnd_toEndOf = 29;
public static final int Layout_layout_constraintEnd_toStartOf = 30;
public static final int Layout_layout_constraintGuide_begin = 31;
public static final int Layout_layout_constraintGuide_end = 32;
public static final int Layout_layout_constraintGuide_percent = 33;
public static final int Layout_layout_constraintHeight = 34;
public static final int Layout_layout_constraintHeight_default = 35;
public static final int Layout_layout_constraintHeight_max = 36;
public static final int Layout_layout_constraintHeight_min = 37;
public static final int Layout_layout_constraintHeight_percent = 38;
public static final int Layout_layout_constraintHorizontal_bias = 39;
public static final int Layout_layout_constraintHorizontal_chainStyle = 40;
public static final int Layout_layout_constraintHorizontal_weight = 41;
public static final int Layout_layout_constraintLeft_creator = 42;
public static final int Layout_layout_constraintLeft_toLeftOf = 43;
public static final int Layout_layout_constraintLeft_toRightOf = 44;
public static final int Layout_layout_constraintRight_creator = 45;
public static final int Layout_layout_constraintRight_toLeftOf = 46;
public static final int Layout_layout_constraintRight_toRightOf = 47;
public static final int Layout_layout_constraintStart_toEndOf = 48;
public static final int Layout_layout_constraintStart_toStartOf = 49;
public static final int Layout_layout_constraintTop_creator = 50;
public static final int Layout_layout_constraintTop_toBottomOf = 51;
public static final int Layout_layout_constraintTop_toTopOf = 52;
public static final int Layout_layout_constraintVertical_bias = 53;
public static final int Layout_layout_constraintVertical_chainStyle = 54;
public static final int Layout_layout_constraintVertical_weight = 55;
public static final int Layout_layout_constraintWidth = 56;
public static final int Layout_layout_constraintWidth_default = 57;
public static final int Layout_layout_constraintWidth_max = 58;
public static final int Layout_layout_constraintWidth_min = 59;
public static final int Layout_layout_constraintWidth_percent = 60;
public static final int Layout_layout_editor_absoluteX = 61;
public static final int Layout_layout_editor_absoluteY = 62;
public static final int Layout_layout_goneMarginBaseline = 63;
public static final int Layout_layout_goneMarginBottom = 64;
public static final int Layout_layout_goneMarginEnd = 65;
public static final int Layout_layout_goneMarginLeft = 66;
public static final int Layout_layout_goneMarginRight = 67;
public static final int Layout_layout_goneMarginStart = 68;
public static final int Layout_layout_goneMarginTop = 69;
public static final int Layout_layout_marginBaseline = 70;
public static final int Layout_layout_wrapBehaviorInParent = 71;
public static final int Layout_maxHeight = 72;
public static final int Layout_maxWidth = 73;
public static final int Layout_minHeight = 74;
public static final int Layout_minWidth = 75;
public static final int[] LinearLayoutCompat = {16842927, 16842948, 16843046, 16843047, 16843048, 2130969043, 2130969051, 2130969478, 2130969652};
public static final int[] LinearLayoutCompat_Layout = {16842931, 16842996, 16842997, 16843137};
public static final int LinearLayoutCompat_Layout_android_layout_gravity = 0;
public static final int LinearLayoutCompat_Layout_android_layout_height = 2;
public static final int LinearLayoutCompat_Layout_android_layout_weight = 3;
public static final int LinearLayoutCompat_Layout_android_layout_width = 1;
public static final int LinearLayoutCompat_android_baselineAligned = 2;
public static final int LinearLayoutCompat_android_baselineAlignedChildIndex = 3;
public static final int LinearLayoutCompat_android_gravity = 0;
public static final int LinearLayoutCompat_android_orientation = 1;
public static final int LinearLayoutCompat_android_weightSum = 4;
public static final int LinearLayoutCompat_divider = 5;
public static final int LinearLayoutCompat_dividerPadding = 6;
public static final int LinearLayoutCompat_measureWithLargestChild = 7;
public static final int LinearLayoutCompat_showDividers = 8;
public static final int[] LinearProgressIndicator = {2130969241, 2130969245};
public static final int LinearProgressIndicator_indeterminateAnimationType = 0;
public static final int LinearProgressIndicator_indicatorDirectionLinear = 1;
public static final int[] ListPopupWindow = {16843436, 16843437};
public static final int ListPopupWindow_android_dropDownHorizontalOffset = 0;
public static final int ListPopupWindow_android_dropDownVerticalOffset = 1;
public static final int[] LoadingImageView = {2130968856, 2130969233, 2130969234};
public static final int LoadingImageView_circleCrop = 0;
public static final int LoadingImageView_imageAspectRatio = 1;
public static final int LoadingImageView_imageAspectRatioAdjust = 2;
public static final int[] LottieAnimationView = {2130969410, 2130969411, 2130969412, 2130969413, 2130969414, 2130969415, 2130969416, 2130969417, 2130969418, 2130969419, 2130969420, 2130969421, 2130969422, 2130969423, 2130969424, 2130969425, 2130969426};
public static final int LottieAnimationView_lottie_autoPlay = 0;
public static final int LottieAnimationView_lottie_cacheComposition = 1;
public static final int LottieAnimationView_lottie_colorFilter = 2;
public static final int LottieAnimationView_lottie_enableMergePathsForKitKatAndAbove = 3;
public static final int LottieAnimationView_lottie_fallbackRes = 4;
public static final int LottieAnimationView_lottie_fileName = 5;
public static final int LottieAnimationView_lottie_ignoreDisabledSystemAnimations = 6;
public static final int LottieAnimationView_lottie_imageAssetsFolder = 7;
public static final int LottieAnimationView_lottie_loop = 8;
public static final int LottieAnimationView_lottie_progress = 9;
public static final int LottieAnimationView_lottie_rawRes = 10;
public static final int LottieAnimationView_lottie_renderMode = 11;
public static final int LottieAnimationView_lottie_repeatCount = 12;
public static final int LottieAnimationView_lottie_repeatMode = 13;
public static final int LottieAnimationView_lottie_scale = 14;
public static final int LottieAnimationView_lottie_speed = 15;
public static final int LottieAnimationView_lottie_url = 16;
public static final int[] MaterialAlertDialog = {2130968687, 2130968688, 2130968689, 2130968690};
public static final int[] MaterialAlertDialogTheme = {2130969431, 2130969432, 2130969433, 2130969434, 2130969435, 2130969436};
public static final int MaterialAlertDialogTheme_materialAlertDialogBodyTextStyle = 0;
public static final int MaterialAlertDialogTheme_materialAlertDialogButtonSpacerVisibility = 1;
public static final int MaterialAlertDialogTheme_materialAlertDialogTheme = 2;
public static final int MaterialAlertDialogTheme_materialAlertDialogTitleIconStyle = 3;
public static final int MaterialAlertDialogTheme_materialAlertDialogTitlePanelStyle = 4;
public static final int MaterialAlertDialogTheme_materialAlertDialogTitleTextStyle = 5;
public static final int MaterialAlertDialog_backgroundInsetBottom = 0;
public static final int MaterialAlertDialog_backgroundInsetEnd = 1;
public static final int MaterialAlertDialog_backgroundInsetStart = 2;
public static final int MaterialAlertDialog_backgroundInsetTop = 3;
public static final int[] MaterialAutoCompleteTextView = {16843296, 2130969659, 2130969660};
public static final int MaterialAutoCompleteTextView_android_inputType = 0;
public static final int MaterialAutoCompleteTextView_simpleItemLayout = 1;
public static final int MaterialAutoCompleteTextView_simpleItems = 2;
public static final int[] MaterialButton = {16842964, 16843191, 16843192, 16843193, 16843194, 16843237, 2130968694, 2130968695, 2130968963, 2130969077, 2130969221, 2130969223, 2130969224, 2130969225, 2130969228, 2130969229, 2130969613, 2130969633, 2130969636, 2130969699, 2130969700};
public static final int[] MaterialButtonToggleGroup = {2130968826, 2130969630, 2130969663};
public static final int MaterialButtonToggleGroup_checkedButton = 0;
public static final int MaterialButtonToggleGroup_selectionRequired = 1;
public static final int MaterialButtonToggleGroup_singleSelection = 2;
public static final int MaterialButton_android_background = 0;
public static final int MaterialButton_android_checkable = 5;
public static final int MaterialButton_android_insetBottom = 4;
public static final int MaterialButton_android_insetLeft = 1;
public static final int MaterialButton_android_insetRight = 2;
public static final int MaterialButton_android_insetTop = 3;
public static final int MaterialButton_backgroundTint = 6;
public static final int MaterialButton_backgroundTintMode = 7;
public static final int MaterialButton_cornerRadius = 8;
public static final int MaterialButton_elevation = 9;
public static final int MaterialButton_icon = 10;
public static final int MaterialButton_iconGravity = 11;
public static final int MaterialButton_iconPadding = 12;
public static final int MaterialButton_iconSize = 13;
public static final int MaterialButton_iconTint = 14;
public static final int MaterialButton_iconTintMode = 15;
public static final int MaterialButton_rippleColor = 16;
public static final int MaterialButton_shapeAppearance = 17;
public static final int MaterialButton_shapeAppearanceOverlay = 18;
public static final int MaterialButton_strokeColor = 19;
public static final int MaterialButton_strokeWidth = 20;
public static final int[] MaterialCalendar = {16843277, 2130969028, 2130969029, 2130969030, 2130969031, 2130969531, 2130969598, 2130969931, 2130969932, 2130969933};
public static final int[] MaterialCalendarItem = {16843191, 16843192, 16843193, 16843194, 2130969255, 2130969267, 2130969268, 2130969275, 2130969276, 2130969280};
public static final int MaterialCalendarItem_android_insetBottom = 3;
public static final int MaterialCalendarItem_android_insetLeft = 0;
public static final int MaterialCalendarItem_android_insetRight = 1;
public static final int MaterialCalendarItem_android_insetTop = 2;
public static final int MaterialCalendarItem_itemFillColor = 4;
public static final int MaterialCalendarItem_itemShapeAppearance = 5;
public static final int MaterialCalendarItem_itemShapeAppearanceOverlay = 6;
public static final int MaterialCalendarItem_itemStrokeColor = 7;
public static final int MaterialCalendarItem_itemStrokeWidth = 8;
public static final int MaterialCalendarItem_itemTextColor = 9;
public static final int MaterialCalendar_android_windowFullscreen = 0;
public static final int MaterialCalendar_dayInvalidStyle = 1;
public static final int MaterialCalendar_daySelectedStyle = 2;
public static final int MaterialCalendar_dayStyle = 3;
public static final int MaterialCalendar_dayTodayStyle = 4;
public static final int MaterialCalendar_nestedScrollable = 5;
public static final int MaterialCalendar_rangeFillColor = 6;
public static final int MaterialCalendar_yearSelectedStyle = 7;
public static final int MaterialCalendar_yearStyle = 8;
public static final int MaterialCalendar_yearTodayStyle = 9;
public static final int[] MaterialCardView = {16843237, 2130968802, 2130968828, 2130968830, 2130968831, 2130968832, 2130968833, 2130969613, 2130969633, 2130969636, 2130969693, 2130969699, 2130969700};
public static final int MaterialCardView_android_checkable = 0;
public static final int MaterialCardView_cardForegroundColor = 1;
public static final int MaterialCardView_checkedIcon = 2;
public static final int MaterialCardView_checkedIconGravity = 3;
public static final int MaterialCardView_checkedIconMargin = 4;
public static final int MaterialCardView_checkedIconSize = 5;
public static final int MaterialCardView_checkedIconTint = 6;
public static final int MaterialCardView_rippleColor = 7;
public static final int MaterialCardView_shapeAppearance = 8;
public static final int MaterialCardView_shapeAppearanceOverlay = 9;
public static final int MaterialCardView_state_dragged = 10;
public static final int MaterialCardView_strokeColor = 11;
public static final int MaterialCardView_strokeWidth = 12;
public static final int[] MaterialCheckBox = {2130968780, 2130968817, 2130969891};
public static final int MaterialCheckBox_buttonTint = 0;
public static final int MaterialCheckBox_centerIfNoTextEnabled = 1;
public static final int MaterialCheckBox_useMaterialThemeColors = 2;
public static final int[] MaterialDivider = {2130969044, 2130969049, 2130969050, 2130969052, 2130969295};
public static final int MaterialDivider_dividerColor = 0;
public static final int MaterialDivider_dividerInsetEnd = 1;
public static final int MaterialDivider_dividerInsetStart = 2;
public static final int MaterialDivider_dividerThickness = 3;
public static final int MaterialDivider_lastItemDecorated = 4;
public static final int[] MaterialRadioButton = {2130968780, 2130969891};
public static final int MaterialRadioButton_buttonTint = 0;
public static final int MaterialRadioButton_useMaterialThemeColors = 1;
public static final int[] MaterialShape = {2130969633, 2130969636};
public static final int MaterialShape_shapeAppearance = 0;
public static final int MaterialShape_shapeAppearanceOverlay = 1;
public static final int[] MaterialTextAppearance = {16843958, 16844159, 2130969384};
public static final int MaterialTextAppearance_android_letterSpacing = 0;
public static final int MaterialTextAppearance_android_lineHeight = 1;
public static final int MaterialTextAppearance_lineHeight = 2;
public static final int[] MaterialTextView = {16842804, 16844159, 2130969384};
public static final int MaterialTextView_android_lineHeight = 1;
public static final int MaterialTextView_android_textAppearance = 0;
public static final int MaterialTextView_lineHeight = 2;
public static final int[] MaterialTimePicker = {2130968868, 2130969288};
public static final int MaterialTimePicker_clockIcon = 0;
public static final int MaterialTimePicker_keyboardIcon = 1;
public static final int[] MaterialToolbar = {2130969406, 2130969408, 2130969525, 2130969708, 2130969843};
public static final int MaterialToolbar_logoAdjustViewBounds = 0;
public static final int MaterialToolbar_logoScaleType = 1;
public static final int MaterialToolbar_navigationIconTint = 2;
public static final int MaterialToolbar_subtitleCentered = 3;
public static final int MaterialToolbar_titleCentered = 4;
public static final int[] MenuGroup = {16842766, 16842960, 16843156, 16843230, 16843231, 16843232};
public static final int MenuGroup_android_checkableBehavior = 5;
public static final int MenuGroup_android_enabled = 0;
public static final int MenuGroup_android_id = 1;
public static final int MenuGroup_android_menuCategory = 3;
public static final int MenuGroup_android_orderInCategory = 4;
public static final int MenuGroup_android_visible = 2;
public static final int[] MenuItem = {16842754, 16842766, 16842960, 16843014, 16843156, 16843230, 16843231, 16843233, 16843234, 16843235, 16843236, 16843237, 16843375, 2130968591, 2130968611, 2130968613, 2130968665, 2130968939, 2130969228, 2130969229, 2130969533, 2130969647, 2130969863};
public static final int MenuItem_actionLayout = 13;
public static final int MenuItem_actionProviderClass = 14;
public static final int MenuItem_actionViewClass = 15;
public static final int MenuItem_alphabeticModifiers = 16;
public static final int MenuItem_android_alphabeticShortcut = 9;
public static final int MenuItem_android_checkable = 11;
public static final int MenuItem_android_checked = 3;
public static final int MenuItem_android_enabled = 1;
public static final int MenuItem_android_icon = 0;
public static final int MenuItem_android_id = 2;
public static final int MenuItem_android_menuCategory = 5;
public static final int MenuItem_android_numericShortcut = 10;
public static final int MenuItem_android_onClick = 12;
public static final int MenuItem_android_orderInCategory = 6;
public static final int MenuItem_android_title = 7;
public static final int MenuItem_android_titleCondensed = 8;
public static final int MenuItem_android_visible = 4;
public static final int MenuItem_contentDescription = 17;
public static final int MenuItem_iconTint = 18;
public static final int MenuItem_iconTintMode = 19;
public static final int MenuItem_numericModifiers = 20;
public static final int MenuItem_showAsAction = 21;
public static final int MenuItem_tooltipText = 22;
public static final int[] MenuView = {16842926, 16843052, 16843053, 16843054, 16843055, 16843056, 16843057, 2130969586, 2130969701};
public static final int MenuView_android_headerBackground = 4;
public static final int MenuView_android_horizontalDivider = 2;
public static final int MenuView_android_itemBackground = 5;
public static final int MenuView_android_itemIconDisabledAlpha = 6;
public static final int MenuView_android_itemTextAppearance = 1;
public static final int MenuView_android_verticalDivider = 3;
public static final int MenuView_android_windowAnimationStyle = 0;
public static final int MenuView_preserveIconSpacing = 7;
public static final int MenuView_subMenuArrow = 8;
public static final int[] MockView = {2130969487, 2130969488, 2130969489, 2130969490, 2130969491, 2130969492};
public static final int MockView_mock_diagonalsColor = 0;
public static final int MockView_mock_label = 1;
public static final int MockView_mock_labelBackgroundColor = 2;
public static final int MockView_mock_labelColor = 3;
public static final int MockView_mock_showDiagonals = 4;
public static final int MockView_mock_showLabel = 5;
public static final int[] Motion = {2130968667, 2130968668, 2130969057, 2130969515, 2130969517, 2130969560, 2130969590, 2130969591, 2130969592, 2130969880};
public static final int[] MotionEffect = {2130969505, 2130969506, 2130969507, 2130969508, 2130969509, 2130969510, 2130969511, 2130969512};
public static final int MotionEffect_motionEffect_alpha = 0;
public static final int MotionEffect_motionEffect_end = 1;
public static final int MotionEffect_motionEffect_move = 2;
public static final int MotionEffect_motionEffect_start = 3;
public static final int MotionEffect_motionEffect_strict = 4;
public static final int MotionEffect_motionEffect_translationX = 5;
public static final int MotionEffect_motionEffect_translationY = 6;
public static final int MotionEffect_motionEffect_viewTransition = 7;
public static final int[] MotionHelper = {2130969535, 2130969538};
public static final int MotionHelper_onHide = 0;
public static final int MotionHelper_onShow = 1;
public static final int[] MotionLabel = {16842901, 16842902, 16842903, 16842904, 16842927, 16843087, 16843108, 16843692, 16844085, 2130968747, 2130968748, 2130969618, 2130969793, 2130969794, 2130969795, 2130969796, 2130969797, 2130969811, 2130969812, 2130969813, 2130969814, 2130969817, 2130969818, 2130969819, 2130969820};
public static final int MotionLabel_android_autoSizeTextType = 8;
public static final int MotionLabel_android_fontFamily = 7;
public static final int MotionLabel_android_gravity = 4;
public static final int MotionLabel_android_shadowRadius = 6;
public static final int MotionLabel_android_text = 5;
public static final int MotionLabel_android_textColor = 3;
public static final int MotionLabel_android_textSize = 0;
public static final int MotionLabel_android_textStyle = 2;
public static final int MotionLabel_android_typeface = 1;
public static final int MotionLabel_borderRound = 9;
public static final int MotionLabel_borderRoundPercent = 10;
public static final int MotionLabel_scaleFromTextSize = 11;
public static final int MotionLabel_textBackground = 12;
public static final int MotionLabel_textBackgroundPanX = 13;
public static final int MotionLabel_textBackgroundPanY = 14;
public static final int MotionLabel_textBackgroundRotate = 15;
public static final int MotionLabel_textBackgroundZoom = 16;
public static final int MotionLabel_textOutlineColor = 17;
public static final int MotionLabel_textOutlineThickness = 18;
public static final int MotionLabel_textPanX = 19;
public static final int MotionLabel_textPanY = 20;
public static final int MotionLabel_textureBlurFactor = 21;
public static final int MotionLabel_textureEffect = 22;
public static final int MotionLabel_textureHeight = 23;
public static final int MotionLabel_textureWidth = 24;
public static final int[] MotionLayout = {2130968671, 2130969016, 2130969297, 2130969493, 2130969516, 2130969655};
public static final int MotionLayout_applyMotionScene = 0;
public static final int MotionLayout_currentState = 1;
public static final int MotionLayout_layoutDescription = 2;
public static final int MotionLayout_motionDebug = 3;
public static final int MotionLayout_motionProgress = 4;
public static final int MotionLayout_showPaths = 5;
public static final int[] MotionScene = {2130969032, 2130969298};
public static final int MotionScene_defaultDuration = 0;
public static final int MotionScene_layoutDuringTransition = 1;
public static final int[] MotionTelltales = {2130969751, 2130969752, 2130969753};
public static final int MotionTelltales_telltales_tailColor = 0;
public static final int MotionTelltales_telltales_tailScale = 1;
public static final int MotionTelltales_telltales_velocityMode = 2;
public static final int Motion_animateCircleAngleTo = 0;
public static final int Motion_animateRelativeTo = 1;
public static final int Motion_drawPath = 2;
public static final int Motion_motionPathRotate = 3;
public static final int Motion_motionStagger = 4;
public static final int Motion_pathMotionArc = 5;
public static final int Motion_quantizeMotionInterpolator = 6;
public static final int Motion_quantizeMotionPhase = 7;
public static final int Motion_quantizeMotionSteps = 8;
public static final int Motion_transitionEasing = 9;
public static final int[] NavigationBarActiveIndicator = {16843093, 16843097, 16843173, 2130969427, 2130969633};
public static final int NavigationBarActiveIndicator_android_color = 2;
public static final int NavigationBarActiveIndicator_android_height = 0;
public static final int NavigationBarActiveIndicator_android_width = 1;
public static final int NavigationBarActiveIndicator_marginHorizontal = 3;
public static final int NavigationBarActiveIndicator_shapeAppearance = 4;
public static final int[] NavigationBarView = {2130968694, 2130969077, 2130969253, 2130969254, 2130969259, 2130969260, 2130969264, 2130969265, 2130969266, 2130969278, 2130969279, 2130969280, 2130969293, 2130969479};
public static final int NavigationBarView_backgroundTint = 0;
public static final int NavigationBarView_elevation = 1;
public static final int NavigationBarView_itemActiveIndicatorStyle = 2;
public static final int NavigationBarView_itemBackground = 3;
public static final int NavigationBarView_itemIconSize = 4;
public static final int NavigationBarView_itemIconTint = 5;
public static final int NavigationBarView_itemPaddingBottom = 6;
public static final int NavigationBarView_itemPaddingTop = 7;
public static final int NavigationBarView_itemRippleColor = 8;
public static final int NavigationBarView_itemTextAppearanceActive = 9;
public static final int NavigationBarView_itemTextAppearanceInactive = 10;
public static final int NavigationBarView_itemTextColor = 11;
public static final int NavigationBarView_labelVisibilityMode = 12;
public static final int NavigationBarView_menu = 13;
public static final int[] NavigationRailView = {2130969202, 2130969262, 2130969480, 2130969544, 2130969550};
public static final int NavigationRailView_headerLayout = 0;
public static final int NavigationRailView_itemMinHeight = 1;
public static final int NavigationRailView_menuGravity = 2;
public static final int NavigationRailView_paddingBottomSystemWindowInsets = 3;
public static final int NavigationRailView_paddingTopSystemWindowInsets = 4;
public static final int[] NavigationView = {16842931, 16842964, 16842973, 16843039, 2130968752, 2130969049, 2130969050, 2130969068, 2130969077, 2130969202, 2130969254, 2130969256, 2130969258, 2130969259, 2130969260, 2130969261, 2130969266, 2130969267, 2130969268, 2130969269, 2130969270, 2130969271, 2130969272, 2130969273, 2130969277, 2130969280, 2130969281, 2130969479, 2130969633, 2130969636, 2130969702, 2130969703, 2130969704, 2130969705, 2130969864};
public static final int NavigationView_android_background = 1;
public static final int NavigationView_android_fitsSystemWindows = 2;
public static final int NavigationView_android_layout_gravity = 0;
public static final int NavigationView_android_maxWidth = 3;
public static final int NavigationView_bottomInsetScrimEnabled = 4;
public static final int NavigationView_dividerInsetEnd = 5;
public static final int NavigationView_dividerInsetStart = 6;
public static final int NavigationView_drawerLayoutCornerSize = 7;
public static final int NavigationView_elevation = 8;
public static final int NavigationView_headerLayout = 9;
public static final int NavigationView_itemBackground = 10;
public static final int NavigationView_itemHorizontalPadding = 11;
public static final int NavigationView_itemIconPadding = 12;
public static final int NavigationView_itemIconSize = 13;
public static final int NavigationView_itemIconTint = 14;
public static final int NavigationView_itemMaxLines = 15;
public static final int NavigationView_itemRippleColor = 16;
public static final int NavigationView_itemShapeAppearance = 17;
public static final int NavigationView_itemShapeAppearanceOverlay = 18;
public static final int NavigationView_itemShapeFillColor = 19;
public static final int NavigationView_itemShapeInsetBottom = 20;
public static final int NavigationView_itemShapeInsetEnd = 21;
public static final int NavigationView_itemShapeInsetStart = 22;
public static final int NavigationView_itemShapeInsetTop = 23;
public static final int NavigationView_itemTextAppearance = 24;
public static final int NavigationView_itemTextColor = 25;
public static final int NavigationView_itemVerticalPadding = 26;
public static final int NavigationView_menu = 27;
public static final int NavigationView_shapeAppearance = 28;
public static final int NavigationView_shapeAppearanceOverlay = 29;
public static final int NavigationView_subheaderColor = 30;
public static final int NavigationView_subheaderInsetEnd = 31;
public static final int NavigationView_subheaderInsetStart = 32;
public static final int NavigationView_subheaderTextAppearance = 33;
public static final int NavigationView_topInsetScrimEnabled = 34;
public static final int[] OnClick = {2130968865, 2130969750};
public static final int OnClick_clickAction = 0;
public static final int OnClick_targetId = 1;
public static final int[] OnSwipe = {2130968677, 2130969054, 2130969055, 2130969056, 2130969383, 2130969468, 2130969476, 2130969521, 2130969529, 2130969540, 2130969614, 2130969675, 2130969676, 2130969677, 2130969678, 2130969679, 2130969865, 2130969866, 2130969867};
public static final int OnSwipe_autoCompleteMode = 0;
public static final int OnSwipe_dragDirection = 1;
public static final int OnSwipe_dragScale = 2;
public static final int OnSwipe_dragThreshold = 3;
public static final int OnSwipe_limitBoundsTo = 4;
public static final int OnSwipe_maxAcceleration = 5;
public static final int OnSwipe_maxVelocity = 6;
public static final int OnSwipe_moveWhenScrollAtTop = 7;
public static final int OnSwipe_nestedScrollFlags = 8;
public static final int OnSwipe_onTouchUp = 9;
public static final int OnSwipe_rotationCenterId = 10;
public static final int OnSwipe_springBoundary = 11;
public static final int OnSwipe_springDamping = 12;
public static final int OnSwipe_springMass = 13;
public static final int OnSwipe_springStiffness = 14;
public static final int OnSwipe_springStopThreshold = 15;
public static final int OnSwipe_touchAnchorId = 16;
public static final int OnSwipe_touchAnchorSide = 17;
public static final int OnSwipe_touchRegionId = 18;
public static final int[] PopupWindow = {16843126, 16843465, 2130969541};
public static final int[] PopupWindowBackgroundState = {2130969690};
public static final int PopupWindowBackgroundState_state_above_anchor = 0;
public static final int PopupWindow_android_popupAnimationStyle = 1;
public static final int PopupWindow_android_popupBackground = 0;
public static final int PopupWindow_overlapAnchor = 2;
public static final int[] PropertySet = {16842972, 16843551, 2130969340, 2130969516, 2130969901};
public static final int PropertySet_android_alpha = 1;
public static final int PropertySet_android_visibility = 0;
public static final int PropertySet_layout_constraintTag = 2;
public static final int PropertySet_motionProgress = 3;
public static final int PropertySet_visibilityMode = 4;
public static final int[] RadialViewGroup = {2130969459};
public static final int RadialViewGroup_materialCircleRadius = 0;
public static final int[] RangeSlider = {2130969484, 2130969892};
public static final int RangeSlider_minSeparation = 0;
public static final int RangeSlider_values = 1;
public static final int[] RecycleListView = {2130969543, 2130969549};
public static final int RecycleListView_paddingBottomNoButtons = 0;
public static final int RecycleListView_paddingTopNoTitle = 1;
public static final int[] RecyclerView = {16842948, 16842987, 16842993, R$attr.fastScrollEnabled, R$attr.fastScrollHorizontalThumbDrawable, R$attr.fastScrollHorizontalTrackDrawable, R$attr.fastScrollVerticalThumbDrawable, R$attr.fastScrollVerticalTrackDrawable, R$attr.layoutManager, R$attr.reverseLayout, R$attr.spanCount, R$attr.stackFromEnd};
public static final int RecyclerView_android_clipToPadding = 1;
public static final int RecyclerView_android_descendantFocusability = 2;
public static final int RecyclerView_android_orientation = 0;
public static final int RecyclerView_fastScrollEnabled = 3;
public static final int RecyclerView_fastScrollHorizontalThumbDrawable = 4;
public static final int RecyclerView_fastScrollHorizontalTrackDrawable = 5;
public static final int RecyclerView_fastScrollVerticalThumbDrawable = 6;
public static final int RecyclerView_fastScrollVerticalTrackDrawable = 7;
public static final int RecyclerView_layoutManager = 8;
public static final int RecyclerView_reverseLayout = 9;
public static final int RecyclerView_spanCount = 10;
public static final int RecyclerView_stackFromEnd = 11;
public static final int[] ScrimInsetsFrameLayout = {2130969249};
public static final int ScrimInsetsFrameLayout_insetForeground = 0;
public static final int[] ScrollingViewBehavior_Layout = {2130968731};
public static final int ScrollingViewBehavior_Layout_behavior_overlapTop = 0;
public static final int[] SearchView = {16842970, 16843039, 16843296, 16843364, 2130968870, 2130968930, 2130969033, 2130969180, 2130969230, 2130969296, 2130969593, 2130969594, 2130969624, 2130969625, 2130969706, 2130969715, 2130969902};
public static final int SearchView_android_focusable = 0;
public static final int SearchView_android_imeOptions = 3;
public static final int SearchView_android_inputType = 2;
public static final int SearchView_android_maxWidth = 1;
public static final int SearchView_closeIcon = 4;
public static final int SearchView_commitIcon = 5;
public static final int SearchView_defaultQueryHint = 6;
public static final int SearchView_goIcon = 7;
public static final int SearchView_iconifiedByDefault = 8;
public static final int SearchView_layout = 9;
public static final int SearchView_queryBackground = 10;
public static final int SearchView_queryHint = 11;
public static final int SearchView_searchHintIcon = 12;
public static final int SearchView_searchIcon = 13;
public static final int SearchView_submitBackground = 14;
public static final int SearchView_suggestionRowLayout = 15;
public static final int SearchView_voiceIcon = 16;
public static final int[] ShapeAppearance = {2130968958, 2130968959, 2130968960, 2130968961, 2130968962, 2130968964, 2130968965, 2130968966, 2130968967, 2130968968};
public static final int ShapeAppearance_cornerFamily = 0;
public static final int ShapeAppearance_cornerFamilyBottomLeft = 1;
public static final int ShapeAppearance_cornerFamilyBottomRight = 2;
public static final int ShapeAppearance_cornerFamilyTopLeft = 3;
public static final int ShapeAppearance_cornerFamilyTopRight = 4;
public static final int ShapeAppearance_cornerSize = 5;
public static final int ShapeAppearance_cornerSizeBottomLeft = 6;
public static final int ShapeAppearance_cornerSizeBottomRight = 7;
public static final int ShapeAppearance_cornerSizeTopLeft = 8;
public static final int ShapeAppearance_cornerSizeTopRight = 9;
public static final int[] ShapeableImageView = {2130968946, 2130968947, 2130968948, 2130968949, 2130968950, 2130968951, 2130968952, 2130969633, 2130969636, 2130969699, 2130969700};
public static final int ShapeableImageView_contentPadding = 0;
public static final int ShapeableImageView_contentPaddingBottom = 1;
public static final int ShapeableImageView_contentPaddingEnd = 2;
public static final int ShapeableImageView_contentPaddingLeft = 3;
public static final int ShapeableImageView_contentPaddingRight = 4;
public static final int ShapeableImageView_contentPaddingStart = 5;
public static final int ShapeableImageView_contentPaddingTop = 6;
public static final int ShapeableImageView_shapeAppearance = 7;
public static final int ShapeableImageView_shapeAppearanceOverlay = 8;
public static final int ShapeableImageView_strokeColor = 9;
public static final int ShapeableImageView_strokeWidth = 10;
public static final int[] SignInButton = {2130968777, 2130968920, 2130969620};
public static final int SignInButton_buttonSize = 0;
public static final int SignInButton_colorScheme = 1;
public static final int SignInButton_scopeUris = 2;
public static final int[] Slider = {16842766, 16842788, 16843078, 16843486, 16843487, 2130969199, 2130969200, 2130969291, 2130969292, 2130969824, 2130969825, 2130969826, 2130969827, 2130969828, 2130969832, 2130969833, 2130969834, 2130969838, 2130969870, 2130969871, 2130969872, 2130969874};
public static final int Slider_android_enabled = 0;
public static final int Slider_android_stepSize = 2;
public static final int Slider_android_value = 1;
public static final int Slider_android_valueFrom = 3;
public static final int Slider_android_valueTo = 4;
public static final int Slider_haloColor = 5;
public static final int Slider_haloRadius = 6;
public static final int Slider_labelBehavior = 7;
public static final int Slider_labelStyle = 8;
public static final int Slider_thumbColor = 9;
public static final int Slider_thumbElevation = 10;
public static final int Slider_thumbRadius = 11;
public static final int Slider_thumbStrokeColor = 12;
public static final int Slider_thumbStrokeWidth = 13;
public static final int Slider_tickColor = 14;
public static final int Slider_tickColorActive = 15;
public static final int Slider_tickColorInactive = 16;
public static final int Slider_tickVisible = 17;
public static final int Slider_trackColor = 18;
public static final int Slider_trackColorActive = 19;
public static final int Slider_trackColorInactive = 20;
public static final int Slider_trackHeight = 21;
public static final int[] Snackbar = {2130969666, 2130969667, 2130969668};
public static final int[] SnackbarLayout = {16843039, 2130968612, 2130968669, 2130968691, 2130968694, 2130968695, 2130969077, 2130969469};
public static final int SnackbarLayout_actionTextColorAlpha = 1;
public static final int SnackbarLayout_android_maxWidth = 0;
public static final int SnackbarLayout_animationMode = 2;
public static final int SnackbarLayout_backgroundOverlayColorAlpha = 3;
public static final int SnackbarLayout_backgroundTint = 4;
public static final int SnackbarLayout_backgroundTintMode = 5;
public static final int SnackbarLayout_elevation = 6;
public static final int SnackbarLayout_maxActionInlineWidth = 7;
public static final int Snackbar_snackbarButtonStyle = 0;
public static final int Snackbar_snackbarStyle = 1;
public static final int Snackbar_snackbarTextViewStyle = 2;
public static final int[] Spinner = {16842930, 16843126, 16843131, 16843362, 2130969580};
public static final int Spinner_android_dropDownWidth = 3;
public static final int Spinner_android_entries = 0;
public static final int Spinner_android_popupBackground = 1;
public static final int Spinner_android_prompt = 2;
public static final int Spinner_popupTheme = 4;
public static final int[] State = {16842960, 2130968937};
public static final int[] StateListDrawable = {16843036, 16843156, 16843157, 16843158, 16843532, 16843533};
public static final int[] StateListDrawableItem = {16843161};
public static final int StateListDrawableItem_android_drawable = 0;
public static final int StateListDrawable_android_constantSize = 3;
public static final int StateListDrawable_android_dither = 0;
public static final int StateListDrawable_android_enterFadeDuration = 4;
public static final int StateListDrawable_android_exitFadeDuration = 5;
public static final int StateListDrawable_android_variablePadding = 2;
public static final int StateListDrawable_android_visible = 1;
public static final int[] StateSet = {2130969034};
public static final int StateSet_defaultState = 0;
public static final int State_android_id = 0;
public static final int State_constraints = 1;
public static final int[] SubsamplingScaleImageView = {2130968675, 2130969551, 2130969596, 2130969680, 2130969839, 2130969934};
public static final int SubsamplingScaleImageView_assetName = 0;
public static final int SubsamplingScaleImageView_panEnabled = 1;
public static final int SubsamplingScaleImageView_quickScaleEnabled = 2;
public static final int SubsamplingScaleImageView_src = 3;
public static final int SubsamplingScaleImageView_tileBackgroundColor = 4;
public static final int SubsamplingScaleImageView_zoomEnabled = 5;
public static final int[] SwipeRefreshLayout = {2130969716};
public static final int SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor = 0;
public static final int[] SwitchCompat = {16843044, 16843045, 16843074, 2130969656, 2130969674, 2130969718, 2130969719, 2130969721, 2130969829, 2130969830, 2130969831, 2130969869, 2130969876, 2130969877};
public static final int SwitchCompat_android_textOff = 1;
public static final int SwitchCompat_android_textOn = 0;
public static final int SwitchCompat_android_thumb = 2;
public static final int SwitchCompat_showText = 3;
public static final int SwitchCompat_splitTrack = 4;
public static final int SwitchCompat_switchMinWidth = 5;
public static final int SwitchCompat_switchPadding = 6;
public static final int SwitchCompat_switchTextAppearance = 7;
public static final int SwitchCompat_thumbTextPadding = 8;
public static final int SwitchCompat_thumbTint = 9;
public static final int SwitchCompat_thumbTintMode = 10;
public static final int SwitchCompat_track = 11;
public static final int SwitchCompat_trackTint = 12;
public static final int SwitchCompat_trackTintMode = 13;
public static final int[] SwitchMaterial = {2130969891};
public static final int SwitchMaterial_useMaterialThemeColors = 0;
public static final int[] TabItem = {16842754, 16842994, 16843087};
public static final int TabItem_android_icon = 0;
public static final int TabItem_android_layout = 1;
public static final int TabItem_android_text = 2;
public static final int[] TabLayout = {2130969722, 2130969723, 2130969724, 2130969725, 2130969726, 2130969727, 2130969728, 2130969729, 2130969730, 2130969731, 2130969732, 2130969733, 2130969734, 2130969735, 2130969736, 2130969737, 2130969738, 2130969739, 2130969740, 2130969741, 2130969742, 2130969743, 2130969745, 2130969747, 2130969748, 2130969749};
public static final int TabLayout_tabBackground = 0;
public static final int TabLayout_tabContentStart = 1;
public static final int TabLayout_tabGravity = 2;
public static final int TabLayout_tabIconTint = 3;
public static final int TabLayout_tabIconTintMode = 4;
public static final int TabLayout_tabIndicator = 5;
public static final int TabLayout_tabIndicatorAnimationDuration = 6;
public static final int TabLayout_tabIndicatorAnimationMode = 7;
public static final int TabLayout_tabIndicatorColor = 8;
public static final int TabLayout_tabIndicatorFullWidth = 9;
public static final int TabLayout_tabIndicatorGravity = 10;
public static final int TabLayout_tabIndicatorHeight = 11;
public static final int TabLayout_tabInlineLabel = 12;
public static final int TabLayout_tabMaxWidth = 13;
public static final int TabLayout_tabMinWidth = 14;
public static final int TabLayout_tabMode = 15;
public static final int TabLayout_tabPadding = 16;
public static final int TabLayout_tabPaddingBottom = 17;
public static final int TabLayout_tabPaddingEnd = 18;
public static final int TabLayout_tabPaddingStart = 19;
public static final int TabLayout_tabPaddingTop = 20;
public static final int TabLayout_tabRippleColor = 21;
public static final int TabLayout_tabSelectedTextColor = 22;
public static final int TabLayout_tabTextAppearance = 23;
public static final int TabLayout_tabTextColor = 24;
public static final int TabLayout_tabUnboundedRipple = 25;
public static final int[] TextAppearance = {16842901, 16842902, 16842903, 16842904, 16842906, 16842907, 16843105, 16843106, 16843107, 16843108, 16843692, 16844165, 2130969163, 2130969172, 2130969755, 2130969810};
public static final int TextAppearance_android_fontFamily = 10;
public static final int TextAppearance_android_shadowColor = 6;
public static final int TextAppearance_android_shadowDx = 7;
public static final int TextAppearance_android_shadowDy = 8;
public static final int TextAppearance_android_shadowRadius = 9;
public static final int TextAppearance_android_textColor = 3;
public static final int TextAppearance_android_textColorHint = 4;
public static final int TextAppearance_android_textColorLink = 5;
public static final int TextAppearance_android_textFontWeight = 11;
public static final int TextAppearance_android_textSize = 0;
public static final int TextAppearance_android_textStyle = 2;
public static final int TextAppearance_android_typeface = 1;
public static final int TextAppearance_fontFamily = 12;
public static final int TextAppearance_fontVariationSettings = 13;
public static final int TextAppearance_textAllCaps = 14;
public static final int TextAppearance_textLocale = 15;
public static final int[] TextEffects = {16842901, 16842902, 16842903, 16843087, 16843105, 16843106, 16843107, 16843108, 16843692, 2130968747, 2130968748, 2130969801, 2130969811, 2130969812};
public static final int TextEffects_android_fontFamily = 8;
public static final int TextEffects_android_shadowColor = 4;
public static final int TextEffects_android_shadowDx = 5;
public static final int TextEffects_android_shadowDy = 6;
public static final int TextEffects_android_shadowRadius = 7;
public static final int TextEffects_android_text = 3;
public static final int TextEffects_android_textSize = 0;
public static final int TextEffects_android_textStyle = 2;
public static final int TextEffects_android_typeface = 1;
public static final int TextEffects_borderRound = 9;
public static final int TextEffects_borderRoundPercent = 10;
public static final int TextEffects_textFillColor = 11;
public static final int TextEffects_textOutlineColor = 12;
public static final int TextEffects_textOutlineThickness = 13;
public static final int[] TextInputEditText = {2130969805};
public static final int TextInputEditText_textInputLayoutFocusedRectEnabled = 0;
public static final int[] TextInputLayout = {16842766, 16842906, 16843039, 16843071, 16843088, 16843095, 16843098, 2130968756, 2130968757, 2130968758, 2130968759, 2130968760, 2130968761, 2130968762, 2130968763, 2130968764, 2130968765, 2130968766, 2130968969, 2130968970, 2130968971, 2130968972, 2130968973, 2130968974, 2130969083, 2130969084, 2130969085, 2130969086, 2130969087, 2130969088, 2130969093, 2130969094, 2130969095, 2130969096, 2130969097, 2130969098, 2130969099, 2130969102, 2130969204, 2130969205, 2130969206, 2130969207, 2130969212, 2130969213, 2130969214, 2130969215, 2130969555, 2130969556, 2130969557, 2130969558, 2130969559, 2130969573, 2130969574, 2130969575, 2130969583, 2130969584, 2130969585, 2130969633, 2130969636, 2130969684, 2130969685, 2130969686, 2130969687, 2130969688, 2130969712, 2130969713, 2130969714};
public static final int TextInputLayout_android_enabled = 0;
public static final int TextInputLayout_android_hint = 4;
public static final int TextInputLayout_android_maxEms = 5;
public static final int TextInputLayout_android_maxWidth = 2;
public static final int TextInputLayout_android_minEms = 6;
public static final int TextInputLayout_android_minWidth = 3;
public static final int TextInputLayout_android_textColorHint = 1;
public static final int TextInputLayout_boxBackgroundColor = 7;
public static final int TextInputLayout_boxBackgroundMode = 8;
public static final int TextInputLayout_boxCollapsedPaddingTop = 9;
public static final int TextInputLayout_boxCornerRadiusBottomEnd = 10;
public static final int TextInputLayout_boxCornerRadiusBottomStart = 11;
public static final int TextInputLayout_boxCornerRadiusTopEnd = 12;
public static final int TextInputLayout_boxCornerRadiusTopStart = 13;
public static final int TextInputLayout_boxStrokeColor = 14;
public static final int TextInputLayout_boxStrokeErrorColor = 15;
public static final int TextInputLayout_boxStrokeWidth = 16;
public static final int TextInputLayout_boxStrokeWidthFocused = 17;
public static final int TextInputLayout_counterEnabled = 18;
public static final int TextInputLayout_counterMaxLength = 19;
public static final int TextInputLayout_counterOverflowTextAppearance = 20;
public static final int TextInputLayout_counterOverflowTextColor = 21;
public static final int TextInputLayout_counterTextAppearance = 22;
public static final int TextInputLayout_counterTextColor = 23;
public static final int TextInputLayout_endIconCheckable = 24;
public static final int TextInputLayout_endIconContentDescription = 25;
public static final int TextInputLayout_endIconDrawable = 26;
public static final int TextInputLayout_endIconMode = 27;
public static final int TextInputLayout_endIconTint = 28;
public static final int TextInputLayout_endIconTintMode = 29;
public static final int TextInputLayout_errorContentDescription = 30;
public static final int TextInputLayout_errorEnabled = 31;
public static final int TextInputLayout_errorIconDrawable = 32;
public static final int TextInputLayout_errorIconTint = 33;
public static final int TextInputLayout_errorIconTintMode = 34;
public static final int TextInputLayout_errorTextAppearance = 35;
public static final int TextInputLayout_errorTextColor = 36;
public static final int TextInputLayout_expandedHintEnabled = 37;
public static final int TextInputLayout_helperText = 38;
public static final int TextInputLayout_helperTextEnabled = 39;
public static final int TextInputLayout_helperTextTextAppearance = 40;
public static final int TextInputLayout_helperTextTextColor = 41;
public static final int TextInputLayout_hintAnimationEnabled = 42;
public static final int TextInputLayout_hintEnabled = 43;
public static final int TextInputLayout_hintTextAppearance = 44;
public static final int TextInputLayout_hintTextColor = 45;
public static final int TextInputLayout_passwordToggleContentDescription = 46;
public static final int TextInputLayout_passwordToggleDrawable = 47;
public static final int TextInputLayout_passwordToggleEnabled = 48;
public static final int TextInputLayout_passwordToggleTint = 49;
public static final int TextInputLayout_passwordToggleTintMode = 50;
public static final int TextInputLayout_placeholderText = 51;
public static final int TextInputLayout_placeholderTextAppearance = 52;
public static final int TextInputLayout_placeholderTextColor = 53;
public static final int TextInputLayout_prefixText = 54;
public static final int TextInputLayout_prefixTextAppearance = 55;
public static final int TextInputLayout_prefixTextColor = 56;
public static final int TextInputLayout_shapeAppearance = 57;
public static final int TextInputLayout_shapeAppearanceOverlay = 58;
public static final int TextInputLayout_startIconCheckable = 59;
public static final int TextInputLayout_startIconContentDescription = 60;
public static final int TextInputLayout_startIconDrawable = 61;
public static final int TextInputLayout_startIconTint = 62;
public static final int TextInputLayout_startIconTintMode = 63;
public static final int TextInputLayout_suffixText = 64;
public static final int TextInputLayout_suffixTextAppearance = 65;
public static final int TextInputLayout_suffixTextColor = 66;
public static final int[] TextProgressBar = {16842901, 16842904, 16843087, 2130969221, 2130969225, 2130969227, 2130969653, 2130969815};
public static final int TextProgressBar_android_text = 2;
public static final int TextProgressBar_android_textColor = 1;
public static final int TextProgressBar_android_textSize = 0;
public static final int TextProgressBar_icon = 3;
public static final int TextProgressBar_iconSize = 4;
public static final int TextProgressBar_iconTextPadding = 5;
public static final int TextProgressBar_showIcon = 6;
public static final int TextProgressBar_textSecondColor = 7;
public static final int[] ThemeEnforcement = {16842804, 2130969090, 2130969091};
public static final int ThemeEnforcement_android_textAppearance = 0;
public static final int ThemeEnforcement_enforceMaterialTheme = 1;
public static final int ThemeEnforcement_enforceTextAppearance = 2;
public static final int[] Toolbar = {16842927, 16843072, 2130968774, 2130968878, 2130968879, 2130968940, 2130968941, 2130968942, 2130968943, 2130968944, 2130968945, 2130969405, 2130969407, 2130969470, 2130969479, 2130969523, 2130969524, 2130969580, 2130969707, 2130969709, 2130969710, 2130969842, 2130969846, 2130969847, 2130969848, 2130969849, 2130969850, 2130969851, 2130969853, 2130969854};
public static final int Toolbar_android_gravity = 0;
public static final int Toolbar_android_minHeight = 1;
public static final int Toolbar_buttonGravity = 2;
public static final int Toolbar_collapseContentDescription = 3;
public static final int Toolbar_collapseIcon = 4;
public static final int Toolbar_contentInsetEnd = 5;
public static final int Toolbar_contentInsetEndWithActions = 6;
public static final int Toolbar_contentInsetLeft = 7;
public static final int Toolbar_contentInsetRight = 8;
public static final int Toolbar_contentInsetStart = 9;
public static final int Toolbar_contentInsetStartWithNavigation = 10;
public static final int Toolbar_logo = 11;
public static final int Toolbar_logoDescription = 12;
public static final int Toolbar_maxButtonHeight = 13;
public static final int Toolbar_menu = 14;
public static final int Toolbar_navigationContentDescription = 15;
public static final int Toolbar_navigationIcon = 16;
public static final int Toolbar_popupTheme = 17;
public static final int Toolbar_subtitle = 18;
public static final int Toolbar_subtitleTextAppearance = 19;
public static final int Toolbar_subtitleTextColor = 20;
public static final int Toolbar_title = 21;
public static final int Toolbar_titleMargin = 22;
public static final int Toolbar_titleMarginBottom = 23;
public static final int Toolbar_titleMarginEnd = 24;
public static final int Toolbar_titleMarginStart = 25;
public static final int Toolbar_titleMarginTop = 26;
public static final int Toolbar_titleMargins = 27;
public static final int Toolbar_titleTextAppearance = 28;
public static final int Toolbar_titleTextColor = 29;
public static final int[] Tooltip = {16842804, 16842904, 16842965, 16842998, 16843071, 16843072, 16843087, 2130968694};
public static final int Tooltip_android_layout_margin = 3;
public static final int Tooltip_android_minHeight = 5;
public static final int Tooltip_android_minWidth = 4;
public static final int Tooltip_android_padding = 2;
public static final int Tooltip_android_text = 6;
public static final int Tooltip_android_textAppearance = 0;
public static final int Tooltip_android_textColor = 1;
public static final int Tooltip_backgroundTint = 7;
public static final int[] Transform = {16843552, 16843553, 16843554, 16843555, 16843556, 16843557, 16843558, 16843559, 16843560, 16843770, 16843840, 2130969878};
public static final int Transform_android_elevation = 10;
public static final int Transform_android_rotation = 6;
public static final int Transform_android_rotationX = 7;
public static final int Transform_android_rotationY = 8;
public static final int Transform_android_scaleX = 4;
public static final int Transform_android_scaleY = 5;
public static final int Transform_android_transformPivotX = 0;
public static final int Transform_android_transformPivotY = 1;
public static final int Transform_android_translationX = 2;
public static final int Transform_android_translationY = 3;
public static final int Transform_android_translationZ = 9;
public static final int Transform_transformPivotTarget = 11;
public static final int[] Transition = {16842960, 2130968684, 2130968933, 2130968934, 2130969072, 2130969298, 2130969513, 2130969560, 2130969683, 2130969879, 2130969881};
public static final int Transition_android_id = 0;
public static final int Transition_autoTransition = 1;
public static final int Transition_constraintSetEnd = 2;
public static final int Transition_constraintSetStart = 3;
public static final int Transition_duration = 4;
public static final int Transition_layoutDuringTransition = 5;
public static final int Transition_motionInterpolator = 6;
public static final int Transition_pathMotionArc = 7;
public static final int Transition_staggered = 8;
public static final int Transition_transitionDisable = 9;
public static final int Transition_transitionFlags = 10;
public static final int[] Variant = {2130968937, 2130969607, 2130969608, 2130969609, 2130969610};
public static final int Variant_constraints = 0;
public static final int Variant_region_heightLessThan = 1;
public static final int Variant_region_heightMoreThan = 2;
public static final int Variant_region_widthLessThan = 3;
public static final int Variant_region_widthMoreThan = 4;
public static final int[] View = {16842752, 16842970, 2130969545, 2130969548, 2130969821};
public static final int[] ViewBackgroundHelper = {16842964, 2130968694, 2130968695};
public static final int ViewBackgroundHelper_android_background = 0;
public static final int ViewBackgroundHelper_backgroundTint = 1;
public static final int ViewBackgroundHelper_backgroundTintMode = 2;
public static final int[] ViewPager2 = {16842948};
public static final int ViewPager2_android_orientation = 0;
public static final int[] ViewStubCompat = {16842960, 16842994, 16842995};
public static final int ViewStubCompat_android_id = 0;
public static final int ViewStubCompat_android_inflatedId = 2;
public static final int ViewStubCompat_android_layout = 1;
public static final int[] ViewTransition = {16842960, 2130968576, 2130968577, 2130968864, 2130969072, 2130969231, 2130969232, 2130969513, 2130969518, 2130969539, 2130969560, 2130969632, 2130969879, 2130969889, 2130969897};
public static final int ViewTransition_SharedValue = 1;
public static final int ViewTransition_SharedValueId = 2;
public static final int ViewTransition_android_id = 0;
public static final int ViewTransition_clearsTag = 3;
public static final int ViewTransition_duration = 4;
public static final int ViewTransition_ifTagNotSet = 5;
public static final int ViewTransition_ifTagSet = 6;
public static final int ViewTransition_motionInterpolator = 7;
public static final int ViewTransition_motionTarget = 8;
public static final int ViewTransition_onStateTransition = 9;
public static final int ViewTransition_pathMotionArc = 10;
public static final int ViewTransition_setsTag = 11;
public static final int ViewTransition_transitionDisable = 12;
public static final int ViewTransition_upDuration = 13;
public static final int ViewTransition_viewTransitionMode = 14;
public static final int View_android_focusable = 1;
public static final int View_android_theme = 0;
public static final int View_paddingEnd = 2;
public static final int View_paddingStart = 3;
public static final int View_theme = 4;
public static final int[] include = {2130968932};
public static final int include_constraintSet = 0;

static {
int[] iArr = new int[AppCompatTheme_windowMinWidthMajor];
// fill-array-data instruction
iArr[0] = 16842948;
iArr[1] = 16842960;
iArr[2] = 16842972;
iArr[3] = 16842996;
iArr[4] = 16842997;
iArr[5] = 16842999;
iArr[6] = 16843000;
iArr[7] = 16843001;
iArr[8] = 16843002;
iArr[9] = 16843039;
iArr[10] = 16843040;
iArr[11] = 16843071;
iArr[12] = 16843072;
iArr[13] = 16843551;
iArr[14] = 16843552;
iArr[15] = 16843553;
iArr[16] = 16843554;
iArr[17] = 16843555;
iArr[18] = 16843556;
iArr[19] = 16843557;
iArr[20] = 16843558;
iArr[21] = 16843559;
iArr[22] = 16843560;
iArr[23] = 16843701;
iArr[24] = 16843702;
iArr[25] = 16843770;
iArr[26] = 16843840;
iArr[27] = 2130968667;
iArr[28] = 2130968668;
iArr[29] = 2130968721;
iArr[30] = 2130968722;
iArr[31] = 2130968723;
iArr[32] = 2130968819;
iArr[33] = 2130968935;
iArr[34] = 2130968936;
iArr[35] = 2130969057;
iArr[36] = 2130969143;
iArr[37] = 2130969144;
iArr[38] = 2130969145;
iArr[39] = 2130969146;
iArr[40] = 2130969147;
iArr[41] = 2130969148;
iArr[42] = 2130969149;
iArr[43] = 2130969150;
iArr[44] = 2130969151;
iArr[45] = 2130969152;
iArr[46] = 2130969153;
iArr[47] = 2130969154;
iArr[48] = 2130969155;
iArr[49] = 2130969157;
iArr[50] = 2130969158;
iArr[51] = 2130969159;
iArr[52] = 2130969160;
iArr[53] = 2130969161;
iArr[54] = 2130969198;
iArr[55] = 2130969306;
iArr[56] = 2130969307;
iArr[57] = 2130969308;
iArr[58] = 2130969309;
iArr[59] = 2130969310;
iArr[60] = 2130969311;
iArr[61] = 2130969312;
iArr[62] = 2130969313;
iArr[63] = 2130969314;
iArr[64] = 2130969315;
iArr[65] = 2130969316;
iArr[66] = 2130969317;
iArr[67] = 2130969318;
iArr[68] = 2130969319;
iArr[69] = 2130969320;
iArr[70] = 2130969321;
iArr[71] = 2130969322;
iArr[72] = 2130969323;
iArr[73] = 2130969324;
iArr[74] = 2130969325;
iArr[75] = 2130969326;
iArr[76] = 2130969327;
iArr[77] = 2130969328;
iArr[78] = 2130969329;
iArr[79] = 2130969330;
iArr[80] = 2130969331;
iArr[81] = 2130969332;
iArr[82] = 2130969333;
iArr[83] = 2130969334;
iArr[84] = 2130969335;
iArr[85] = 2130969336;
iArr[86] = 2130969337;
iArr[87] = 2130969338;
iArr[88] = 2130969339;
iArr[89] = 2130969340;
iArr[90] = 2130969341;
iArr[91] = 2130969342;
iArr[92] = 2130969343;
iArr[93] = 2130969344;
iArr[94] = 2130969345;
iArr[95] = 2130969346;
iArr[96] = 2130969347;
iArr[97] = 2130969348;
iArr[98] = 2130969349;
iArr[99] = 2130969350;
iArr[100] = 2130969351;
iArr[101] = 2130969353;
iArr[102] = 2130969354;
iArr[103] = 2130969358;
iArr[104] = 2130969359;
iArr[105] = 2130969360;
iArr[106] = 2130969361;
iArr[107] = 2130969362;
iArr[108] = 2130969363;
iArr[109] = 2130969364;
iArr[110] = 2130969367;
iArr[111] = 2130969378;
iArr[112] = 2130969516;
iArr[113] = 2130969517;
iArr[114] = 2130969560;
iArr[115] = 2130969572;
iArr[116] = 2130969577;
iArr[117] = 2130969590;
iArr[118] = 2130969591;
iArr[119] = 2130969592;
iArr[120] = 2130969878;
iArr[121] = 2130969880;
iArr[122] = 2130969882;
iArr[123] = 2130969901;
Constraint = iArr;
}

private R$styleable() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\material\adapter\management\provider\MangeTutorialItemProvider.java

package com.energysh.material.adapter.management.provider;

import android.widget.ImageView;
import com.bumptech.glide.Glide;
import com.bumptech.glide.load.Transformation;
import com.bumptech.glide.load.resource.bitmap.CenterCrop;
import com.bytedance.sdk.component.d.c.b.aT.DMIdS;
import com.chad.library.adapter.base.provider.BaseItemProvider;
import com.chad.library.adapter.base.viewholder.BaseViewHolder;
import com.energysh.material.R;
import com.energysh.material.bean.MaterialCenterMultiple;
import com.energysh.material.bean.db.MaterialDbBean;
import com.energysh.material.bean.db.MaterialPackageBean;
import java.util.List;
import jp.wasabeef.glide.transformations.RoundedCornersTransformation;
import kotlin.collections.EmptyList;
import kotlin.jvm.internal.o;
import kotlin.text.m;
import org.jetbrains.annotations.NotNull;

public final class MangeTutorialItemProvider extends BaseItemProvider<MaterialCenterMultiple> {
public void convert(@NotNull BaseViewHolder baseViewHolder, @NotNull MaterialCenterMultiple materialCenterMultiple) {
List materialBeans;
MaterialDbBean materialDbBean;
o.f(baseViewHolder, DMIdS.JxlpByasAxmdUYw);
o.f(materialCenterMultiple, "item");
MaterialPackageBean materialPackageBean = materialCenterMultiple.getMaterialPackageBean();
if (!(materialPackageBean == null || (materialBeans = materialPackageBean.getMaterialBeans()) == null || (materialDbBean = (MaterialDbBean) materialBeans.get(0)) == null)) {
baseViewHolder.setText(R.id.tv_favorite_count, String.valueOf(materialDbBean.getFavor()));
Glide.with(getContext()).load(materialDbBean.getIconPath()).transform(new Transformation[]{new CenterCrop(), new RoundedCornersTransformation((int) getContext().getResources().getDimension(R.dimen.x30))}).into((ImageView) baseViewHolder.getView(R.id.iv_image));
String themeDescription = materialDbBean.getThemeDescription();
List L = themeDescription != null ? m.L(themeDescription, new String[]{"#"}) : EmptyList.INSTANCE;
if (!L.isEmpty()) {
baseViewHolder.setText(R.id.tv_title, (CharSequence) L.get(0));
if (L.size() >= 2) {
int i = R.id.tv_desc;
baseViewHolder.setText(i, (CharSequence) L.get(1));
baseViewHolder.setVisible(i, true);
} else {
baseViewHolder.setVisible(R.id.tv_desc, false);
}
}
}
Glide.with(getContext()).load(materialPackageBean != null ? materialPackageBean.getThemePackageMainPic() : null).into((ImageView) baseViewHolder.getView(R.id.iv_level));
baseViewHolder.setImageResource(R.id.iv_download, R.drawable.material_ic_mange_delete);
}

public int getItemViewType() {
return 102;
}

public int getLayoutId() {
return R.layout.material_rv_item_material_item_tutorial;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\material\bean\FileFontDirectoryBean.java

package com.energysh.material.bean;

import android.net.Uri;
import android.support.v4.media.a;
import android.support.v4.media.b;
import android.support.v4.media.c;
import androidx.core.graphics.DK.DYRt;
import androidx.media2.exoplayer.external.source.cjv.QBLYTtnno;
import java.io.Serializable;
import kotlin.jvm.internal.m;
import kotlin.jvm.internal.o;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class FileFontDirectoryBean implements Serializable {
@NotNull
public static final Companion Companion = new Companion((m) null);
@NotNull
private String data;
@NotNull
private String path;
@NotNull
private String size;
@NotNull
private String titleName;
@Nullable
private Uri uri;

public FileFontDirectoryBean(@NotNull String str, @NotNull String str2, @Nullable Uri uri2, @NotNull String str3, @NotNull String str4) {
o.f(str, "titleName");
o.f(str2, QBLYTtnno.tFgiARYQZyTs);
o.f(str3, "data");
o.f(str4, "size");
this.titleName = str;
this.path = str2;
this.uri = uri2;
this.data = str3;
this.size = str4;
}

/* JADX INFO: this call moved to the top of the method (can break code semantics) */
public /* synthetic */ FileFontDirectoryBean(String str, String str2, Uri uri2, String str3, String str4, int i, m mVar) {
this(str, str2, (i & 4) != 0 ? null : uri2, str3, str4);
}

public static /* synthetic */ FileFontDirectoryBean copy$default(FileFontDirectoryBean fileFontDirectoryBean, String str, String str2, Uri uri2, String str3, String str4, int i, Object obj) {
if ((i & 1) != 0) {
str = fileFontDirectoryBean.titleName;
}
if ((i & 2) != 0) {
str2 = fileFontDirectoryBean.path;
}
String str5 = str2;
if ((i & 4) != 0) {
uri2 = fileFontDirectoryBean.uri;
}
Uri uri3 = uri2;
if ((i & 8) != 0) {
str3 = fileFontDirectoryBean.data;
}
String str6 = str3;
if ((i & 16) != 0) {
str4 = fileFontDirectoryBean.size;
}
return fileFontDirectoryBean.copy(str, str5, uri3, str6, str4);
}

@NotNull
public final String component1() {
return this.titleName;
}

@NotNull
public final String component2() {
return this.path;
}

@Nullable
public final Uri component3() {
return this.uri;
}

@NotNull
public final String component4() {
return this.data;
}

@NotNull
public final String component5() {
return this.size;
}

@NotNull
public final FileFontDirectoryBean copy(@NotNull String str, @NotNull String str2, @Nullable Uri uri2, @NotNull String str3, @NotNull String str4) {
o.f(str, "titleName");
o.f(str2, "path");
o.f(str3, "data");
o.f(str4, "size");
return new FileFontDirectoryBean(str, str2, uri2, str3, str4);
}

public boolean equals(@Nullable Object obj) {
if (this == obj) {
return true;
}
if (!(obj instanceof FileFontDirectoryBean)) {
return false;
}
FileFontDirectoryBean fileFontDirectoryBean = (FileFontDirectoryBean) obj;
return o.a(this.titleName, fileFontDirectoryBean.titleName) && o.a(this.path, fileFontDirectoryBean.path) && o.a(this.uri, fileFontDirectoryBean.uri) && o.a(this.data, fileFontDirectoryBean.data) && o.a(this.size, fileFontDirectoryBean.size);
}

@NotNull
public final String getData() {
return this.data;
}

@NotNull
public final String getPath() {
return this.path;
}

@NotNull
public final String getSize() {
return this.size;
}

@NotNull
public final String getTitleName() {
return this.titleName;
}

@Nullable
public final Uri getUri() {
return this.uri;
}

public int hashCode() {
int d = c.d(this.path, this.titleName.hashCode() * 31, 31);
Uri uri2 = this.uri;
return this.size.hashCode() + c.d(this.data, (d + (uri2 == null ? 0 : uri2.hashCode())) * 31, 31);
}

public final void setData(@NotNull String str) {
o.f(str, "<set-?>");
this.data = str;
}

public final void setPath(@NotNull String str) {
o.f(str, "<set-?>");
this.path = str;
}

public final void setSize(@NotNull String str) {
o.f(str, "<set-?>");
this.size = str;
}

public final void setTitleName(@NotNull String str) {
o.f(str, "<set-?>");
this.titleName = str;
}

public final void setUri(@Nullable Uri uri2) {
this.uri = uri2;
}

@NotNull
public String toString() {
StringBuilder q = b.q(DYRt.gvWzptVVu);
q.append(this.titleName);
q.append(", path=");
q.append(this.path);
q.append(", uri=");
q.append(this.uri);
q.append(", data=");
q.append(this.data);
q.append(", size=");
return a.o(q, this.size, ')');
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\material\bean\MaterialResult$Companion.java

package com.energysh.material.bean;

import android.content.Intent;
import kotlin.jvm.internal.m;
import org.jetbrains.annotations.Nullable;

public final class MaterialResult$Companion {
private MaterialResult$Companion() {
}

public /* synthetic */ MaterialResult$Companion(m mVar) {
this();
}

@Nullable
public final MaterialResult result(@Nullable Intent intent) {
MaterialResult serializableExtra = intent != null ? intent.getSerializableExtra("material_result_data") : null;
if (serializableExtra instanceof MaterialResult) {
return serializableExtra;
}
return null;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\material\db\material\MaterialPackageDao_Impl$5.java

package com.energysh.material.db.material;

import android.database.Cursor;
import android.os.CancellationSignal;
import androidx.room.RoomSQLiteQuery;
import androidx.room.util.CursorUtil;
import androidx.room.util.DBUtil;
import com.energysh.material.bean.db.MaterialPackageBean;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Callable;
import l3.QA.meHJRShhGjwwRQ;

public class MaterialPackageDao_Impl$5 implements Callable<List<MaterialPackageBean>> {
public final /* synthetic */ RoomSQLiteQuery c;
public final /* synthetic */ MaterialPackageDao_Impl d;

public MaterialPackageDao_Impl$5(MaterialPackageDao_Impl materialPackageDao_Impl, RoomSQLiteQuery roomSQLiteQuery) {
this.d = materialPackageDao_Impl;
this.c = roomSQLiteQuery;
}

public List<MaterialPackageBean> call() throws Exception {
int i;
String str;
MaterialPackageDao_Impl$5 materialPackageDao_Impl$5 = this;
String str2 = null;
Cursor query = DBUtil.query(materialPackageDao_Impl$5.d.a, materialPackageDao_Impl$5.c, false, (CancellationSignal) null);
try {
int columnIndexOrThrow = CursorUtil.getColumnIndexOrThrow(query, "theme_id");
int columnIndexOrThrow2 = CursorUtil.getColumnIndexOrThrow(query, "theme_image");
int columnIndexOrThrow3 = CursorUtil.getColumnIndexOrThrow(query, "theme_package_id");
int columnIndexOrThrow4 = CursorUtil.getColumnIndexOrThrow(query, "theme_package_title");
int columnIndexOrThrow5 = CursorUtil.getColumnIndexOrThrow(query, "theme_package_description");
int columnIndexOrThrow6 = CursorUtil.getColumnIndexOrThrow(query, "theme_package_main_pic");
int columnIndexOrThrow7 = CursorUtil.getColumnIndexOrThrow(query, "theme_package_style");
int columnIndexOrThrow8 = CursorUtil.getColumnIndexOrThrow(query, "material_beans");
int columnIndexOrThrow9 = CursorUtil.getColumnIndexOrThrow(query, meHJRShhGjwwRQ.dfNYipgSizHRqRJ);
int columnIndexOrThrow10 = CursorUtil.getColumnIndexOrThrow(query, "ad_lock");
int columnIndexOrThrow11 = CursorUtil.getColumnIndexOrThrow(query, "add_time");
ArrayList arrayList = new ArrayList(query.getCount());
while (query.moveToNext()) {
MaterialPackageBean materialPackageBean = new MaterialPackageBean();
if (!query.isNull(columnIndexOrThrow)) {
str2 = query.getString(columnIndexOrThrow);
}
materialPackageBean.setThemeId(str2);
materialPackageBean.setThemeImage(query.isNull(columnIndexOrThrow2) ? null : query.getString(columnIndexOrThrow2));
materialPackageBean.setThemePackageId(query.isNull(columnIndexOrThrow3) ? null : query.getString(columnIndexOrThrow3));
materialPackageBean.setThemePackageTitle(query.isNull(columnIndexOrThrow4) ? null : query.getString(columnIndexOrThrow4));
materialPackageBean.setThemePackageDescription(query.isNull(columnIndexOrThrow5) ? null : query.getString(columnIndexOrThrow5));
materialPackageBean.setThemePackageMainPic(query.isNull(columnIndexOrThrow6) ? null : query.getString(columnIndexOrThrow6));
materialPackageBean.setThemePkgStyle(query.getInt(columnIndexOrThrow7));
if (query.isNull(columnIndexOrThrow8)) {
i = columnIndexOrThrow;
str = null;
} else {
str = query.getString(columnIndexOrThrow8);
i = columnIndexOrThrow;
}
materialPackageBean.setMaterialBeans(materialPackageDao_Impl$5.d.c.stringToObject(str));
materialPackageBean.setCategoryId(query.isNull(columnIndexOrThrow9) ? null : Integer.valueOf(query.getInt(columnIndexOrThrow9)));
materialPackageBean.setAdLock(query.getInt(columnIndexOrThrow10));
materialPackageBean.setAddTime(query.getLong(columnIndexOrThrow11));
arrayList.add(materialPackageBean);
materialPackageDao_Impl$5 = this;
columnIndexOrThrow = i;
str2 = null;
}
return arrayList;
} finally {
query.close();
}
}

public final void finalize() {
this.c.release();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\material\db\material\MaterialPackageDao_Impl$6.java

package com.energysh.material.db.material;

import android.database.Cursor;
import android.os.CancellationSignal;
import androidx.room.RoomSQLiteQuery;
import androidx.room.util.CursorUtil;
import androidx.room.util.DBUtil;
import com.energysh.material.bean.db.MaterialPackageBean;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Callable;
import l3.QA.meHJRShhGjwwRQ;

public class MaterialPackageDao_Impl$6 implements Callable<List<MaterialPackageBean>> {
public final /* synthetic */ RoomSQLiteQuery c;
public final /* synthetic */ MaterialPackageDao_Impl d;

public MaterialPackageDao_Impl$6(MaterialPackageDao_Impl materialPackageDao_Impl, RoomSQLiteQuery roomSQLiteQuery) {
this.d = materialPackageDao_Impl;
this.c = roomSQLiteQuery;
}

public List<MaterialPackageBean> call() throws Exception {
int i;
String str;
MaterialPackageDao_Impl$6 materialPackageDao_Impl$6 = this;
String str2 = null;
Cursor query = DBUtil.query(materialPackageDao_Impl$6.d.a, materialPackageDao_Impl$6.c, false, (CancellationSignal) null);
try {
int columnIndexOrThrow = CursorUtil.getColumnIndexOrThrow(query, "theme_id");
int columnIndexOrThrow2 = CursorUtil.getColumnIndexOrThrow(query, "theme_image");
int columnIndexOrThrow3 = CursorUtil.getColumnIndexOrThrow(query, "theme_package_id");
int columnIndexOrThrow4 = CursorUtil.getColumnIndexOrThrow(query, meHJRShhGjwwRQ.bZikvRnhMkQQ);
int columnIndexOrThrow5 = CursorUtil.getColumnIndexOrThrow(query, "theme_package_description");
int columnIndexOrThrow6 = CursorUtil.getColumnIndexOrThrow(query, "theme_package_main_pic");
int columnIndexOrThrow7 = CursorUtil.getColumnIndexOrThrow(query, "theme_package_style");
int columnIndexOrThrow8 = CursorUtil.getColumnIndexOrThrow(query, "material_beans");
int columnIndexOrThrow9 = CursorUtil.getColumnIndexOrThrow(query, "category_id");
int columnIndexOrThrow10 = CursorUtil.getColumnIndexOrThrow(query, "ad_lock");
int columnIndexOrThrow11 = CursorUtil.getColumnIndexOrThrow(query, "add_time");
ArrayList arrayList = new ArrayList(query.getCount());
while (query.moveToNext()) {
MaterialPackageBean materialPackageBean = new MaterialPackageBean();
if (!query.isNull(columnIndexOrThrow)) {
str2 = query.getString(columnIndexOrThrow);
}
materialPackageBean.setThemeId(str2);
materialPackageBean.setThemeImage(query.isNull(columnIndexOrThrow2) ? null : query.getString(columnIndexOrThrow2));
materialPackageBean.setThemePackageId(query.isNull(columnIndexOrThrow3) ? null : query.getString(columnIndexOrThrow3));
materialPackageBean.setThemePackageTitle(query.isNull(columnIndexOrThrow4) ? null : query.getString(columnIndexOrThrow4));
materialPackageBean.setThemePackageDescription(query.isNull(columnIndexOrThrow5) ? null : query.getString(columnIndexOrThrow5));
materialPackageBean.setThemePackageMainPic(query.isNull(columnIndexOrThrow6) ? null : query.getString(columnIndexOrThrow6));
materialPackageBean.setThemePkgStyle(query.getInt(columnIndexOrThrow7));
if (query.isNull(columnIndexOrThrow8)) {
i = columnIndexOrThrow;
str = null;
} else {
str = query.getString(columnIndexOrThrow8);
i = columnIndexOrThrow;
}
materialPackageBean.setMaterialBeans(materialPackageDao_Impl$6.d.c.stringToObject(str));
materialPackageBean.setCategoryId(query.isNull(columnIndexOrThrow9) ? null : Integer.valueOf(query.getInt(columnIndexOrThrow9)));
materialPackageBean.setAdLock(query.getInt(columnIndexOrThrow10));
materialPackageBean.setAddTime(query.getLong(columnIndexOrThrow11));
arrayList.add(materialPackageBean);
materialPackageDao_Impl$6 = this;
columnIndexOrThrow = i;
str2 = null;
}
return arrayList;
} finally {
query.close();
}
}

public final void finalize() {
this.c.release();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\material\db\material\MaterialPackageDao_Impl$7.java

package com.energysh.material.db.material;

import android.database.Cursor;
import android.os.CancellationSignal;
import androidx.room.RoomSQLiteQuery;
import androidx.room.util.CursorUtil;
import androidx.room.util.DBUtil;
import com.energysh.material.bean.db.MaterialPackageBean;
import com.google.firebase.heartbeatinfo.wXN.SXUXICl;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Callable;
import l3.QA.meHJRShhGjwwRQ;

public class MaterialPackageDao_Impl$7 implements Callable<List<MaterialPackageBean>> {
public final /* synthetic */ RoomSQLiteQuery c;
public final /* synthetic */ MaterialPackageDao_Impl d;

public MaterialPackageDao_Impl$7(MaterialPackageDao_Impl materialPackageDao_Impl, RoomSQLiteQuery roomSQLiteQuery) {
this.d = materialPackageDao_Impl;
this.c = roomSQLiteQuery;
}

public List<MaterialPackageBean> call() throws Exception {
int i;
String str;
MaterialPackageDao_Impl$7 materialPackageDao_Impl$7 = this;
String str2 = null;
Cursor query = DBUtil.query(materialPackageDao_Impl$7.d.a, materialPackageDao_Impl$7.c, false, (CancellationSignal) null);
try {
int columnIndexOrThrow = CursorUtil.getColumnIndexOrThrow(query, meHJRShhGjwwRQ.JZGxVxuTCzIxVvY);
int columnIndexOrThrow2 = CursorUtil.getColumnIndexOrThrow(query, "theme_image");
int columnIndexOrThrow3 = CursorUtil.getColumnIndexOrThrow(query, "theme_package_id");
int columnIndexOrThrow4 = CursorUtil.getColumnIndexOrThrow(query, SXUXICl.bbZfYQVC);
int columnIndexOrThrow5 = CursorUtil.getColumnIndexOrThrow(query, "theme_package_description");
int columnIndexOrThrow6 = CursorUtil.getColumnIndexOrThrow(query, "theme_package_main_pic");
int columnIndexOrThrow7 = CursorUtil.getColumnIndexOrThrow(query, "theme_package_style");
int columnIndexOrThrow8 = CursorUtil.getColumnIndexOrThrow(query, "material_beans");
int columnIndexOrThrow9 = CursorUtil.getColumnIndexOrThrow(query, "category_id");
int columnIndexOrThrow10 = CursorUtil.getColumnIndexOrThrow(query, "ad_lock");
int columnIndexOrThrow11 = CursorUtil.getColumnIndexOrThrow(query, "add_time");
ArrayList arrayList = new ArrayList(query.getCount());
while (query.moveToNext()) {
MaterialPackageBean materialPackageBean = new MaterialPackageBean();
if (!query.isNull(columnIndexOrThrow)) {
str2 = query.getString(columnIndexOrThrow);
}
materialPackageBean.setThemeId(str2);
materialPackageBean.setThemeImage(query.isNull(columnIndexOrThrow2) ? null : query.getString(columnIndexOrThrow2));
materialPackageBean.setThemePackageId(query.isNull(columnIndexOrThrow3) ? null : query.getString(columnIndexOrThrow3));
materialPackageBean.setThemePackageTitle(query.isNull(columnIndexOrThrow4) ? null : query.getString(columnIndexOrThrow4));
materialPackageBean.setThemePackageDescription(query.isNull(columnIndexOrThrow5) ? null : query.getString(columnIndexOrThrow5));
materialPackageBean.setThemePackageMainPic(query.isNull(columnIndexOrThrow6) ? null : query.getString(columnIndexOrThrow6));
materialPackageBean.setThemePkgStyle(query.getInt(columnIndexOrThrow7));
if (query.isNull(columnIndexOrThrow8)) {
i = columnIndexOrThrow;
str = null;
} else {
str = query.getString(columnIndexOrThrow8);
i = columnIndexOrThrow;
}
materialPackageBean.setMaterialBeans(materialPackageDao_Impl$7.d.c.stringToObject(str));
materialPackageBean.setCategoryId(query.isNull(columnIndexOrThrow9) ? null : Integer.valueOf(query.getInt(columnIndexOrThrow9)));
materialPackageBean.setAdLock(query.getInt(columnIndexOrThrow10));
materialPackageBean.setAddTime(query.getLong(columnIndexOrThrow11));
arrayList.add(materialPackageBean);
materialPackageDao_Impl$7 = this;
columnIndexOrThrow = i;
str2 = null;
}
return arrayList;
} finally {
query.close();
}
}

public final void finalize() {
this.c.release();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\material\util\UndoRedoLinkedList$Entry.java

package com.energysh.material.util;

public interface UndoRedoLinkedList$Entry {
void onDestroy();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\material\viewmodels\MaterialCenterViewModel.java

package com.energysh.material.viewmodels;

import android.app.Application;
import android.view.View;
import androidx.lifecycle.AndroidViewModel;
import androidx.lifecycle.LiveData;
import androidx.lifecycle.Transformations;
import androidx.lifecycle.ViewModelKt;
import com.energysh.ad.adbase.AdResult;
import com.energysh.aichat.mvvm.model.repositorys.a;
import com.energysh.material.MaterialLib;
import com.energysh.material.api.MaterialApi;
import com.energysh.material.api.b;
import com.energysh.material.bean.MaterialCenterMultiple;
import com.energysh.material.bean.MaterialTitleBean;
import com.energysh.material.bean.db.MaterialDbBean;
import com.energysh.material.bean.db.MaterialPackageBean;
import com.energysh.material.repositorys.MaterialCenterRepository;
import com.energysh.material.repositorys.material.MaterialDbRepository;
import com.energysh.material.repositorys.material.MaterialListRepository;
import com.energysh.material.util.download.Config;
import com.energysh.material.util.download.MaterialDownloadManager;
import j3.m;
import java.util.List;
import kotlin.coroutines.c;
import kotlin.coroutines.e;
import kotlin.jvm.internal.o;
import kotlinx.coroutines.CoroutineStart;
import kotlinx.coroutines.f;
import org.jetbrains.annotations.NotNull;

public final class MaterialCenterViewModel extends AndroidViewModel {
/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public MaterialCenterViewModel(@NotNull Application application) {
super(application);
o.f(application, "application");
}

public static /* synthetic */ m getMaterialList$default(MaterialCenterViewModel materialCenterViewModel, String str, int i, int i3, int i4, Object obj) {
if ((i4 & 4) != 0) {
i3 = 6;
}
return materialCenterViewModel.getMaterialList(str, i, i3);
}

public static /* synthetic */ m getMaterialListByThemePackageId$default(MaterialCenterViewModel materialCenterViewModel, String str, int i, int i3, int i4, Object obj) {
if ((i4 & 4) != 0) {
i3 = 12;
}
return materialCenterViewModel.getMaterialListByThemePackageId(str, i, i3);
}

@NotNull
public final m<Integer> downloadMaterial(@NotNull MaterialPackageBean materialPackageBean) {
o.f(materialPackageBean, "materialPackageBean");
MaterialDownloadManager.Builder materialPackageBean2 = MaterialDownloadManager.INSTANCE.newBuilder().setMaterialPackageBean(materialPackageBean.clone());
Config config = new Config();
config.setAnalPrefix(MaterialLib.INSTANCE.getAnalPrefix());
config.setGiveFreeUseDate(false);
return materialPackageBean2.setConfig(config).startDownload();
}

public final void favorMaterial(@NotNull String str) {
o.f(str, "themeId");
f.f(ViewModelKt.getViewModelScope(this), (e) null, (CoroutineStart) null, new favorMaterial.1(str, (c) null), 3);
}

@NotNull
public final m3.o<List<MaterialCenterMultiple>, List<MaterialCenterMultiple>> getFeedAd() {
return b.m;
}

@NotNull
public final LiveData<MaterialPackageBean> getMaterialByThemeIdLiveData(@NotNull String str) {
o.f(str, "themeId");
LiveData<MaterialPackageBean> map = Transformations.map(MaterialDbRepository.Companion.getInstance().getMaterialPackageBeanByThemeIdLiveData(str), androidx.room.b.g);
o.e(map, "map(MaterialDbRepository…]\n            }\n        }");
return map;
}

@NotNull
public final m<List<MaterialDbBean>> getMaterialDbBeanListByThemeId(@NotNull String str) {
o.f(str, "themeId");
return MaterialApi.INSTANCE.getThemeInfo(str);
}

public final m<List<MaterialCenterMultiple>> getMaterialList(@NotNull String str, int i, int i3) {
o.f(str, "materialTypeApi");
return MaterialListRepository.Companion.getInstance().getMaterialList(str, i, i3).map(b.l);
}

public final m<List<MaterialCenterMultiple>> getMaterialListByThemePackageId(@NotNull String str, int i, int i3) {
o.f(str, "themePackageId");
return MaterialListRepository.Companion.getInstance().getMaterialByThemePackageId(str, i, i3).map(a.k);
}

@NotNull
public final m<List<MaterialTitleBean>> getMaterialPackageTitleList(@NotNull String str) {
o.f(str, "apiType");
return MaterialCenterRepository.Companion.getInstance().getMaterialPackageTitleList(str);
}

@NotNull
public final MaterialCenterMultiple getVipCardItem() {
return new MaterialCenterMultiple(1, (MaterialPackageBean) null, 0, (AdResult.SuccessAdResult) null, (View) null, false, 62, (kotlin.jvm.internal.m) null);
}

public final void updateMaterialFreeDate(@NotNull String str) {
o.f(str, "themeId");
MaterialCenterRepository.updateMaterialFreeData$default(MaterialCenterRepository.Companion.getInstance(), str, (String) null, 2, (Object) null);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\energysh\router\service\remoteconfig\RemoteConfigService.java

package com.energysh.router.service.remoteconfig;

import kotlin.coroutines.c;
import kotlin.p;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public interface RemoteConfigService {
void updateFirebaseRemoteConfig();

@Nullable
Object updateServerRemoteConfig(@NotNull c<? super p> cVar);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\fasterxml\aalto\dom\DOMWriterImpl.java

package com.fasterxml.aalto.dom;

import android.support.v4.media.a;
import android.support.v4.media.b;
import com.fasterxml.aalto.out.WriterConfig;
import com.google.firebase.installations.interop.BuildConfig;
import java.util.HashMap;
import java.util.Objects;
import javax.xml.namespace.NamespaceContext;
import javax.xml.stream.XMLStreamException;
import javax.xml.transform.dom.DOMResult;
import org.codehaus.stax2.ri.EmptyNamespaceContext;
import org.codehaus.stax2.ri.dom.DOMWrappingWriter;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

public final class DOMWriterImpl extends DOMWrappingWriter {
public int[] _autoNsSeq;
public String _automaticNsPrefix;
public final WriterConfig _config;
public DOMOutputElement _currElem;
public DOMOutputElement _openElement;
public String _suggestedDefNs = null;
public HashMap<String, String> _suggestedPrefixes = null;

private DOMWriterImpl(WriterConfig writerConfig, Node node) throws XMLStreamException {
super(node, true, writerConfig.willRepairNamespaces());
this._config = writerConfig;
this._autoNsSeq = null;
this._automaticNsPrefix = writerConfig.getAutomaticNsPrefix();
short nodeType = node.getNodeType();
if (nodeType == 1) {
DOMOutputElement createChild = DOMOutputElement.createRoot().createChild((Element) node);
this._currElem = createChild;
this._openElement = createChild;
} else if (nodeType == 9 || nodeType == 11) {
this._currElem = DOMOutputElement.createRoot();
this._openElement = null;
} else {
StringBuilder q = b.q("Can not create an XMLStreamWriter for a DOM node of type ");
q.append(node.getClass());
throw new XMLStreamException(q.toString());
}
}

public static DOMWriterImpl createFrom(WriterConfig writerConfig, DOMResult dOMResult) throws XMLStreamException {
return new DOMWriterImpl(writerConfig, dOMResult.getNode());
}

private final String validateElemPrefix(String str, String str2, DOMOutputElement dOMOutputElement) throws XMLStreamException {
if (str2 == null || str2.length() == 0) {
String defaultNsUri = dOMOutputElement.getDefaultNsUri();
if (defaultNsUri == null || defaultNsUri.length() == 0) {
return BuildConfig.FLAVOR;
}
return null;
} else if (dOMOutputElement.isPrefixValid(str, str2, true) == 1) {
return str;
} else {
return null;
}
}

public void appendLeaf(Node node) throws IllegalStateException {
this._currElem.appendNode(node);
this._openElement = null;
}

public void createStartElem(String str, String str2, String str3, boolean z) throws XMLStreamException {
DOMOutputElement dOMOutputElement;
if (!this.mNsAware) {
if (str != null && str.length() > 0) {
DOMWrappingWriter.throwOutputError("Can not specify non-empty uri/prefix in non-namespace mode");
}
dOMOutputElement = this._currElem.createAndAttachChild(this.mDocument.createElement(str3));
} else if (this.mNsRepairing) {
String validateElemPrefix = validateElemPrefix(str2, str, this._currElem);
if (validateElemPrefix == null) {
if (str2 == null) {
str2 = BuildConfig.FLAVOR;
}
String generateElemPrefix = generateElemPrefix(str2, str, this._currElem);
boolean z2 = generateElemPrefix.length() != 0;
if (z2) {
str3 = a.k(generateElemPrefix, ":", str3);
}
DOMOutputElement createAndAttachChild = this._currElem.createAndAttachChild(this.mDocument.createElementNS(str, str3));
this._openElement = createAndAttachChild;
if (z2) {
writeNamespace(generateElemPrefix, str);
createAndAttachChild.addPrefix(generateElemPrefix, str);
} else {
writeDefaultNamespace(str);
createAndAttachChild.setDefaultNsUri(str);
}
dOMOutputElement = createAndAttachChild;
} else if (validateElemPrefix.length() != 0) {
DOMOutputElement dOMOutputElement2 = this._currElem;
Document document = this.mDocument;
dOMOutputElement = dOMOutputElement2.createAndAttachChild(document.createElementNS(str, validateElemPrefix + ":" + str3));
} else {
dOMOutputElement = this._currElem.createAndAttachChild(this.mDocument.createElementNS(str, str3));
}
} else {
if (str2 == null && str != null && str.length() > 0) {
HashMap<String, String> hashMap = this._suggestedPrefixes;
str2 = hashMap == null ? null : hashMap.get(str);
if (str2 == null) {
DOMWrappingWriter.throwOutputError("Can not find prefix for namespace \"" + str + "\"");
}
}
if (!(str2 == null || str2.length() == 0)) {
str3 = a.k(str2, ":", str3);
}
dOMOutputElement = this._currElem.createAndAttachChild(this.mDocument.createElementNS(str, str3));
}
this._openElement = dOMOutputElement;
if (!z) {
this._currElem = dOMOutputElement;
}
}

public final String findElemPrefix(String str, DOMOutputElement dOMOutputElement) throws XMLStreamException {
if (str != null && str.length() != 0) {
return this._currElem.getPrefix(str);
}
String defaultNsUri = dOMOutputElement.getDefaultNsUri();
if (defaultNsUri == null || defaultNsUri.length() <= 0) {
return BuildConfig.FLAVOR;
}
return null;
}

public final String findOrCreateAttrPrefix(String str, String str2, DOMOutputElement dOMOutputElement) throws XMLStreamException {
String str3 = null;
if (!(str2 == null || str2.length() == 0)) {
if (str != null) {
int isPrefixValid = dOMOutputElement.isPrefixValid(str, str2, false);
if (isPrefixValid == 1) {
return str;
}
if (isPrefixValid == 0) {
dOMOutputElement.addPrefix(str, str2);
writeNamespace(str, str2);
return str;
}
}
String explicitPrefix = dOMOutputElement.getExplicitPrefix(str2);
if (explicitPrefix != null) {
return explicitPrefix;
}
if (str == null) {
HashMap<String, String> hashMap = this._suggestedPrefixes;
str = hashMap != null ? hashMap.get(str2) : explicitPrefix;
}
if (str == null || (str.length() != 0 && dOMOutputElement.getNamespaceURI(str) == null)) {
str3 = str;
}
if (str3 == null) {
if (this._autoNsSeq == null) {
int[] iArr = new int[1];
this._autoNsSeq = iArr;
iArr[0] = 1;
}
str3 = this._currElem.generateMapping(this._automaticNsPrefix, str2, this._autoNsSeq);
}
dOMOutputElement.addPrefix(str3, str2);
writeNamespace(str3, str2);
}
return str3;
}

public final String generateElemPrefix(String str, String str2, DOMOutputElement dOMOutputElement) throws XMLStreamException {
if (str2 == null || str2.length() == 0) {
return BuildConfig.FLAVOR;
}
if (str != null) {
return str;
}
String str3 = this._suggestedDefNs;
if (str3 != null && str3.equals(str2)) {
return BuildConfig.FLAVOR;
}
HashMap<String, String> hashMap = this._suggestedPrefixes;
String str4 = hashMap == null ? null : hashMap.get(str2);
if (str4 != null) {
return str4;
}
if (this._autoNsSeq == null) {
int[] iArr = new int[1];
this._autoNsSeq = iArr;
iArr[0] = 1;
}
return dOMOutputElement.generateMapping(this._automaticNsPrefix, str2, this._autoNsSeq);
}

public NamespaceContext getNamespaceContext() {
return !this.mNsAware ? EmptyNamespaceContext.getInstance() : this._currElem;
}

/* JADX WARNING: Code restructure failed: missing block: B:5:0x000a, code lost:
r0 = r0.getPrefix(r2);
*/
/* Code decompiled incorrectly, please refer to instructions dump. */
public java.lang.String getPrefix(java.lang.String r2) {
/*
r1 = this;
boolean r0 = r1.mNsAware
if (r0 != 0) goto L_0x0006
r2 = 0
return r2
L_0x0006:
javax.xml.namespace.NamespaceContext r0 = r1.mNsContext
if (r0 == 0) goto L_0x0011
java.lang.String r0 = r0.getPrefix(r2)
if (r0 == 0) goto L_0x0011
return r0
L_0x0011:
com.fasterxml.aalto.dom.DOMOutputElement r0 = r1._currElem
java.lang.String r2 = r0.getPrefix(r2)
return r2
*/
throw new UnsupportedOperationException("Method not decompiled: com.fasterxml.aalto.dom.DOMWriterImpl.getPrefix(java.lang.String):java.lang.String");
}

public Object getProperty(String str) {
return this._config.getProperty(str, false);
}

public boolean isPropertySupported(String str) {
return this._config.isPropertySupported(str);
}

public void outputAttribute(String str, String str2, String str3, String str4) throws XMLStreamException {
DOMOutputElement dOMOutputElement = this._openElement;
if (dOMOutputElement == null) {
throw new IllegalStateException("No currently open START_ELEMENT, cannot write attribute");
} else if (this.mNsAware) {
if (this.mNsRepairing) {
str2 = findOrCreateAttrPrefix(str2, str, dOMOutputElement);
}
if (str2 != null && str2.length() > 0) {
str3 = a.k(str2, ":", str3);
}
this._openElement.addAttribute(str, str3, str4);
} else {
if (str2 != null && str2.length() > 0) {
str3 = a.k(str2, ":", str3);
}
this._openElement.addAttribute(str3, str4);
}
}

public void setDefaultNamespace(String str) {
if (str == null || str.length() == 0) {
str = null;
}
this._suggestedDefNs = str;
}

public void setPrefix(String str, String str2) throws XMLStreamException {
Objects.requireNonNull(str, "Can not pass null 'prefix' value");
if (str.length() == 0) {
setDefaultNamespace(str2);
return;
}
Objects.requireNonNull(str2, "Can not pass null 'uri' value");
if (str.equals("xml")) {
if (!str2.equals("http://www.w3.org/XML/1998/namespace")) {
DOMWrappingWriter.throwOutputError("Trying to redeclare prefix 'xml' from its default URI 'http://www.w3.org/XML/1998/namespace' to \"" + str2 + "\"");
}
} else if (str.equals("xmlns")) {
if (!str2.equals("http://www.w3.org/2000/xmlns/")) {
DOMWrappingWriter.throwOutputError("Trying to declare prefix 'xmlns' (illegal as per NS 1.1 #4)");
return;
}
return;
} else if (str2.equals("http://www.w3.org/XML/1998/namespace")) {
DOMWrappingWriter.throwOutputError("Trying to bind URI 'http://www.w3.org/XML/1998/namespace to prefix \"" + str + "\" (can only bind to 'xml')");
} else if (str2.equals("http://www.w3.org/2000/xmlns/")) {
DOMWrappingWriter.throwOutputError("Trying to bind URI 'http://www.w3.org/2000/xmlns/ to prefix \"" + str + "\" (can not be explicitly bound)");
}
if (this._suggestedPrefixes == null) {
this._suggestedPrefixes = new HashMap<>(16);
}
this._suggestedPrefixes.put(str2, str);
}

public boolean setProperty(String str, Object obj) {
return this._config.setProperty(str, obj);
}

public void writeAttribute(String str, String str2) throws XMLStreamException {
outputAttribute((String) null, (String) null, str, str2);
}

public void writeAttribute(String str, String str2, String str3) throws XMLStreamException {
outputAttribute(str, (String) null, str2, str3);
}

public void writeAttribute(String str, String str2, String str3, String str4) throws XMLStreamException {
outputAttribute(str2, str, str3, str4);
}

public void writeDTD(String str, String str2, String str3, String str4) throws XMLStreamException {
if (this._currElem == null) {
reportUnsupported("writeDTD()");
return;
}
throw new IllegalStateException("Operation only allowed to the document before adding root element");
}

public void writeDefaultNamespace(String str) {
if (this._openElement != null) {
setDefaultNamespace(str);
this._openElement.addAttribute("http://www.w3.org/2000/xmlns/", "xmlns", str);
return;
}
throw new IllegalStateException("No currently open START_ELEMENT, cannot write attribute");
}

public void writeEmptyElement(String str) throws XMLStreamException {
writeEmptyElement((String) null, str);
}

public void writeEmptyElement(String str, String str2) throws XMLStreamException {
createStartElem(str, (String) null, str2, true);
}

public void writeEmptyElement(String str, String str2, String str3) throws XMLStreamException {
if (str == null) {
str = BuildConfig.FLAVOR;
}
createStartElem(str3, str, str2, true);
}

public void writeEndDocument() {
this._openElement = null;
this._currElem = null;
}

public void writeEndElement() {
DOMOutputElement dOMOutputElement = this._currElem;
if (dOMOutputElement == null || dOMOutputElement.isRoot()) {
throw new IllegalStateException("No open start element to close");
}
this._openElement = null;
this._currElem = this._currElem.getParent();
}

public void writeNamespace(String str, String str2) throws XMLStreamException {
if (str == null || str.length() == 0) {
writeDefaultNamespace(str2);
return;
}
if (!this.mNsAware) {
DOMWrappingWriter.throwOutputError("Can not write namespaces with non-namespace writer.");
}
outputAttribute("http://www.w3.org/2000/xmlns/", "xmlns", str, str2);
this._currElem.addPrefix(str, str2);
}

public void writeStartElement(String str) throws XMLStreamException {
writeStartElement((String) null, str);
}

public void writeStartElement(String str, String str2) throws XMLStreamException {
createStartElem(str, (String) null, str2, false);
}

public void writeStartElement(String str, String str2, String str3) throws XMLStreamException {
createStartElem(str3, str, str2, false);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\fasterxml\aalto\in\NsDeclaration.java

package com.fasterxml.aalto.in;

import android.support.v4.media.a;
import android.support.v4.media.b;

public final class NsDeclaration {
private final NsBinding mBinding;
private final int mLevel;
private final NsDeclaration mPrevDeclaration;
private final String mPreviousURI;

public NsDeclaration(NsBinding nsBinding, String str, NsDeclaration nsDeclaration, int i) {
this.mBinding = nsBinding;
this.mPrevDeclaration = nsDeclaration;
this.mLevel = i;
this.mPreviousURI = nsBinding.mURI;
nsBinding.mURI = str;
}

public boolean alreadyDeclared(String str, int i) {
if (this.mLevel < i) {
return false;
}
if (str == this.mBinding.mPrefix) {
return true;
}
NsDeclaration nsDeclaration = this.mPrevDeclaration;
while (nsDeclaration != null && nsDeclaration.mLevel >= i) {
if (str == nsDeclaration.mBinding.mPrefix) {
return true;
}
nsDeclaration = nsDeclaration.mPrevDeclaration;
}
return false;
}

public int countDeclsOnLevel(int i) {
if (this.mLevel != i) {
return 0;
}
NsDeclaration nsDeclaration = this.mPrevDeclaration;
int i3 = 1;
while (nsDeclaration != null && nsDeclaration.mLevel == i) {
i3++;
nsDeclaration = nsDeclaration.mPrevDeclaration;
}
return i3;
}

public NsBinding getBinding() {
return this.mBinding;
}

public String getCurrNsURI() {
return this.mBinding.mURI;
}

public int getLevel() {
return this.mLevel;
}

public String getPrefix() {
return this.mBinding.mPrefix;
}

public NsDeclaration getPrev() {
return this.mPrevDeclaration;
}

public boolean hasNsURI(String str) {
return str.equals(this.mBinding.mURI);
}

public boolean hasPrefix(String str) {
return str.equals(this.mBinding.mPrefix);
}

public String toString() {
StringBuilder q = b.q("[NS-DECL, prefix = <");
q.append(this.mBinding.mPrefix);
q.append(">, current URI <");
q.append(this.mBinding.mURI);
q.append(">, level ");
q.append(this.mLevel);
q.append(", prev URI <");
return a.p(q, this.mPreviousURI, ">]");
}

public NsDeclaration unbind() {
this.mBinding.mURI = this.mPreviousURI;
return this.mPrevDeclaration;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\getkeepsafe\relinker\elf\Program32Header.java

package com.getkeepsafe.relinker.elf;

import com.getkeepsafe.relinker.elf.Elf;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class Program32Header extends Elf.ProgramHeader {
public Program32Header(ElfParser elfParser, Elf.Header header, long j2) throws IOException {
ByteBuffer allocate = ByteBuffer.allocate(4);
allocate.order(header.bigEndian ? ByteOrder.BIG_ENDIAN : ByteOrder.LITTLE_ENDIAN);
long j3 = (j2 * ((long) header.phentsize)) + header.phoff;
this.type = elfParser.readWord(allocate, j3);
this.offset = elfParser.readWord(allocate, 4 + j3);
this.vaddr = elfParser.readWord(allocate, 8 + j3);
this.memsz = elfParser.readWord(allocate, j3 + 20);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\ads\mediation\zza.java

package com.google.ads.mediation;

import android.view.View;
import com.google.android.gms.ads.formats.UnifiedNativeAd;
import com.google.android.gms.ads.formats.zze;
import com.google.android.gms.ads.formats.zzg;
import com.google.android.gms.ads.mediation.UnifiedNativeAdMapper;
import java.util.Map;

final class zza extends UnifiedNativeAdMapper {
private final UnifiedNativeAd zza;

public zza(UnifiedNativeAd unifiedNativeAd) {
this.zza = unifiedNativeAd;
setHeadline(unifiedNativeAd.getHeadline());
setImages(unifiedNativeAd.getImages());
setBody(unifiedNativeAd.getBody());
setIcon(unifiedNativeAd.getIcon());
setCallToAction(unifiedNativeAd.getCallToAction());
setAdvertiser(unifiedNativeAd.getAdvertiser());
setStarRating(unifiedNativeAd.getStarRating());
setStore(unifiedNativeAd.getStore());
setPrice(unifiedNativeAd.getPrice());
zzd(unifiedNativeAd.zza());
setOverrideImpressionRecording(true);
setOverrideClickHandling(true);
zze(unifiedNativeAd.getVideoController());
}

public final void trackViews(View view, Map<String, View> map, Map<String, View> map2) {
if (view instanceof zzg) {
zzg zzg = (zzg) view;
throw null;
} else if (((zze) zze.zza.get(view)) != null) {
throw null;
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\ads\mediation\zzc.java

package com.google.ads.mediation;

import com.google.android.gms.ads.LoadAdError;
import com.google.android.gms.ads.interstitial.InterstitialAd;
import com.google.android.gms.ads.interstitial.InterstitialAdLoadCallback;
import com.google.android.gms.ads.mediation.MediationInterstitialListener;
import com.google.android.gms.common.util.VisibleForTesting;

@VisibleForTesting
final class zzc extends InterstitialAdLoadCallback {
@VisibleForTesting
public final AbstractAdViewAdapter zza;
@VisibleForTesting
public final MediationInterstitialListener zzb;

public zzc(AbstractAdViewAdapter abstractAdViewAdapter, MediationInterstitialListener mediationInterstitialListener) {
this.zza = abstractAdViewAdapter;
this.zzb = mediationInterstitialListener;
}

public final void onAdFailedToLoad(LoadAdError loadAdError) {
this.zzb.onAdFailedToLoad(this.zza, loadAdError);
}

public final /* bridge */ /* synthetic */ void onAdLoaded(Object obj) {
InterstitialAd interstitialAd = (InterstitialAd) obj;
AbstractAdViewAdapter abstractAdViewAdapter = this.zza;
abstractAdViewAdapter.mInterstitialAd = interstitialAd;
interstitialAd.setFullScreenContentCallback(new zzd(abstractAdViewAdapter, this.zzb));
this.zzb.onAdLoaded(this.zza);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\ads\mediation\zzd.java

package com.google.ads.mediation;

import com.google.android.gms.ads.FullScreenContentCallback;
import com.google.android.gms.ads.mediation.MediationInterstitialListener;
import com.google.android.gms.common.util.VisibleForTesting;

@VisibleForTesting
final class zzd extends FullScreenContentCallback {
@VisibleForTesting
public final AbstractAdViewAdapter zza;
@VisibleForTesting
public final MediationInterstitialListener zzb;

public zzd(AbstractAdViewAdapter abstractAdViewAdapter, MediationInterstitialListener mediationInterstitialListener) {
this.zza = abstractAdViewAdapter;
this.zzb = mediationInterstitialListener;
}

public final void onAdDismissedFullScreenContent() {
this.zzb.onAdClosed(this.zza);
}

public final void onAdShowedFullScreenContent() {
this.zzb.onAdOpened(this.zza);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\ads\mediation\zze.java

package com.google.ads.mediation;

import com.google.android.gms.ads.AdListener;
import com.google.android.gms.ads.LoadAdError;
import com.google.android.gms.ads.formats.NativeCustomTemplateAd;
import com.google.android.gms.ads.formats.UnifiedNativeAd;
import com.google.android.gms.ads.mediation.MediationNativeListener;
import com.google.android.gms.common.util.VisibleForTesting;

@VisibleForTesting
final class zze extends AdListener implements UnifiedNativeAd.OnUnifiedNativeAdLoadedListener, NativeCustomTemplateAd.OnCustomTemplateAdLoadedListener, NativeCustomTemplateAd.OnCustomClickListener {
@VisibleForTesting
public final AbstractAdViewAdapter zza;
@VisibleForTesting
public final MediationNativeListener zzb;

public zze(AbstractAdViewAdapter abstractAdViewAdapter, MediationNativeListener mediationNativeListener) {
this.zza = abstractAdViewAdapter;
this.zzb = mediationNativeListener;
}

public final void onAdClicked() {
this.zzb.onAdClicked(this.zza);
}

public final void onAdClosed() {
this.zzb.onAdClosed(this.zza);
}

public final void onAdFailedToLoad(LoadAdError loadAdError) {
this.zzb.onAdFailedToLoad(this.zza, loadAdError);
}

public final void onAdImpression() {
this.zzb.onAdImpression(this.zza);
}

public final void onAdLoaded() {
}

public final void onAdOpened() {
this.zzb.onAdOpened(this.zza);
}

public final void onCustomClick(NativeCustomTemplateAd nativeCustomTemplateAd, String str) {
this.zzb.zze(this.zza, nativeCustomTemplateAd, str);
}

public final void onCustomTemplateAdLoaded(NativeCustomTemplateAd nativeCustomTemplateAd) {
this.zzb.zzc(this.zza, nativeCustomTemplateAd);
}

public final void onUnifiedNativeAdLoaded(UnifiedNativeAd unifiedNativeAd) {
this.zzb.onAdLoaded(this.zza, new zza(unifiedNativeAd));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\ads\mediation\pangle\rtb\PangleRtbInterstitialAd$2.java

package com.google.ads.mediation.pangle.rtb;

import com.bytedance.sdk.openadsdk.TTFullScreenVideoAd;

public class PangleRtbInterstitialAd$2 implements TTFullScreenVideoAd.FullScreenVideoAdInteractionListener {
public final /* synthetic */ PangleRtbInterstitialAd this$0;

public PangleRtbInterstitialAd$2(PangleRtbInterstitialAd pangleRtbInterstitialAd) {
this.this$0 = pangleRtbInterstitialAd;
}

public void onAdClose() {
if (PangleRtbInterstitialAd.access$100(this.this$0) != null) {
PangleRtbInterstitialAd.access$100(this.this$0).onAdClosed();
}
}

public void onAdShow() {
if (PangleRtbInterstitialAd.access$100(this.this$0) != null) {
PangleRtbInterstitialAd.access$100(this.this$0).onAdOpened();
PangleRtbInterstitialAd.access$100(this.this$0).reportAdImpression();
}
}

public void onAdVideoBarClick() {
if (PangleRtbInterstitialAd.access$100(this.this$0) != null) {
PangleRtbInterstitialAd.access$100(this.this$0).reportAdClicked();
}
}

public void onSkippedVideo() {
}

public void onVideoComplete() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\ads\mediation\vungle\VungleMediationAdapter$1.java

package com.google.ads.mediation.vungle;

import android.util.Log;
import com.google.ads.mediation.vungle.VungleInitializer;
import com.google.android.gms.ads.AdError;
import com.google.android.gms.ads.mediation.InitializationCompleteCallback;

public class VungleMediationAdapter$1 implements VungleInitializer.VungleInitializationListener {
public final /* synthetic */ VungleMediationAdapter this$0;
public final /* synthetic */ InitializationCompleteCallback val$initializationCompleteCallback;

public VungleMediationAdapter$1(VungleMediationAdapter vungleMediationAdapter, InitializationCompleteCallback initializationCompleteCallback) {
this.this$0 = vungleMediationAdapter;
this.val$initializationCompleteCallback = initializationCompleteCallback;
}

public void onInitializeError(AdError adError) {
Log.w(VungleMediationAdapter.TAG, adError.toString());
this.val$initializationCompleteCallback.onInitializationFailed(adError.toString());
}

public void onInitializeSuccess() {
this.val$initializationCompleteCallback.onInitializationSucceeded();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\ads\mediation\vungle\VungleMediationAdapter$2.java

package com.google.ads.mediation.vungle;

import android.util.Log;
import com.google.ads.mediation.vungle.VungleInitializer;
import com.google.android.gms.ads.AdError;
import com.google.android.gms.ads.mediation.MediationRewardedAdCallback;
import com.vungle.warren.Vungle;
import java.lang.ref.WeakReference;

public class VungleMediationAdapter$2 implements VungleInitializer.VungleInitializationListener {
public final /* synthetic */ VungleMediationAdapter this$0;

public VungleMediationAdapter$2(VungleMediationAdapter vungleMediationAdapter) {
this.this$0 = vungleMediationAdapter;
}

public void onInitializeError(AdError adError) {
Log.w(VungleMediationAdapter.TAG, adError.toString());
VungleMediationAdapter.access$400(this.this$0).onFailure(adError);
VungleMediationAdapter.access$200().remove(VungleMediationAdapter.access$100(this.this$0));
}

public void onInitializeSuccess() {
Vungle.setIncentivizedFields(VungleMediationAdapter.access$000(this.this$0), (String) null, (String) null, (String) null, (String) null);
VungleMediationAdapter.access$200().put(VungleMediationAdapter.access$100(this.this$0), new WeakReference(this.this$0));
if (Vungle.canPlayAd(VungleMediationAdapter.access$100(this.this$0))) {
VungleMediationAdapter vungleMediationAdapter = this.this$0;
VungleMediationAdapter.access$302(vungleMediationAdapter, (MediationRewardedAdCallback) VungleMediationAdapter.access$400(vungleMediationAdapter).onSuccess(this.this$0));
return;
}
Vungle.loadAd(VungleMediationAdapter.access$100(this.this$0), VungleMediationAdapter.access$500(this.this$0), this.this$0);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\ads\mediationtestsuite\viewmodels\AdLoadViewModel.java

package com.google.android.ads.mediationtestsuite.viewmodels;

import com.google.android.ads.mediationtestsuite.dataobjects.NetworkConfig;
import com.google.android.ads.mediationtestsuite.viewmodels.ListItemViewModel;

public class AdLoadViewModel implements ListItemViewModel {
private final NetworkConfig networkConfig;

public AdLoadViewModel(NetworkConfig networkConfig2) {
this.networkConfig = networkConfig2;
}

public NetworkConfig getNetworkConfig() {
return this.networkConfig;
}

public ListItemViewModel.ViewType getViewType() {
return ListItemViewModel.ViewType.AD_LOAD;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\aidl\Codecs.java

package com.google.android.aidl;

import android.os.BadParcelableException;
import android.os.IBinder;
import android.os.IInterface;
import android.os.Parcel;
import android.os.Parcelable;
import android.text.TextUtils;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Codecs {
private static final ClassLoader CLASS_LOADER = Codecs.class.getClassLoader();

private Codecs() {
}

public static boolean createBoolean(Parcel parcel) {
return parcel.readInt() != 0;
}

public static CharSequence createCharSequence(Parcel parcel) {
if (parcel.readInt() == 0) {
return null;
}
return (CharSequence) TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(parcel);
}

public static ArrayList createList(Parcel parcel) {
return parcel.readArrayList(CLASS_LOADER);
}

public static HashMap createMap(Parcel parcel) {
return parcel.readHashMap(CLASS_LOADER);
}

public static <T extends Parcelable> T createParcelable(Parcel parcel, Parcelable.Creator<T> creator) {
if (parcel.readInt() == 0) {
return null;
}
return (Parcelable) creator.createFromParcel(parcel);
}

public static void enforceNoDataAvail(Parcel parcel) {
int dataAvail = parcel.dataAvail();
if (dataAvail > 0) {
throw new BadParcelableException("Parcel data not fully consumed, unread size: " + dataAvail);
}
}

public static void readList(Parcel parcel, List<?> list) {
parcel.readList(list, CLASS_LOADER);
}

public static void readMap(Parcel parcel, Map<?, ?> map) {
parcel.readMap(map, CLASS_LOADER);
}

public static void writeBoolean(Parcel parcel, boolean z) {
parcel.writeInt(z ? 1 : 0);
}

public static void writeCharSequence(Parcel parcel, CharSequence charSequence) {
if (charSequence != null) {
parcel.writeInt(1);
TextUtils.writeToParcel(charSequence, parcel, 0);
return;
}
parcel.writeInt(0);
}

public static void writeCharSequenceAsReturnValue(Parcel parcel, CharSequence charSequence) {
if (charSequence != null) {
parcel.writeInt(1);
TextUtils.writeToParcel(charSequence, parcel, 1);
return;
}
parcel.writeInt(0);
}

public static void writeParcelable(Parcel parcel, Parcelable parcelable) {
if (parcelable == null) {
parcel.writeInt(0);
return;
}
parcel.writeInt(1);
parcelable.writeToParcel(parcel, 0);
}

public static void writeParcelableAsReturnValue(Parcel parcel, Parcelable parcelable) {
if (parcelable == null) {
parcel.writeInt(0);
return;
}
parcel.writeInt(1);
parcelable.writeToParcel(parcel, 1);
}

public static void writeStrongBinder(Parcel parcel, IInterface iInterface) {
if (iInterface == null) {
parcel.writeStrongBinder((IBinder) null);
} else {
parcel.writeStrongBinder(iInterface.asBinder());
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\datatransport\runtime\EncodedDestination.java

package com.google.android.datatransport.runtime;

import com.google.android.datatransport.Encoding;
import java.util.Set;

public interface EncodedDestination extends Destination {
Set<Encoding> getSupportedEncodings();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\datatransport\runtime\firebase\transport\ClientMetrics$Builder.java

package com.google.android.datatransport.runtime.firebase.transport;

import com.google.firebase.installations.interop.BuildConfig;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public final class ClientMetrics$Builder {
private String app_namespace_ = BuildConfig.FLAVOR;
private GlobalMetrics global_metrics_ = null;
private List<LogSourceMetrics> log_source_metrics_ = new ArrayList();
private TimeWindow window_ = null;

public ClientMetrics$Builder addLogSourceMetrics(LogSourceMetrics logSourceMetrics) {
this.log_source_metrics_.add(logSourceMetrics);
return this;
}

public ClientMetrics build() {
return new ClientMetrics(this.window_, Collections.unmodifiableList(this.log_source_metrics_), this.global_metrics_, this.app_namespace_);
}

public ClientMetrics$Builder setAppNamespace(String str) {
this.app_namespace_ = str;
return this;
}

public ClientMetrics$Builder setGlobalMetrics(GlobalMetrics globalMetrics) {
this.global_metrics_ = globalMetrics;
return this;
}

public ClientMetrics$Builder setLogSourceMetricsList(List<LogSourceMetrics> list) {
this.log_source_metrics_ = list;
return this;
}

public ClientMetrics$Builder setWindow(TimeWindow timeWindow) {
this.window_ = timeWindow;
return this;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\flexbox\FlexLine.java

package com.google.android.flexbox;

import android.view.View;
import java.util.ArrayList;
import java.util.List;

public class FlexLine {
public boolean mAnyItemsHaveFlexGrow;
public boolean mAnyItemsHaveFlexShrink;
public int mBottom = Integer.MIN_VALUE;
public int mCrossSize;
public int mDividerLengthInMainSize;
public int mFirstIndex;
public int mGoneItemCount;
public List<Integer> mIndicesAlignSelfStretch = new ArrayList();
public int mItemCount;
public int mLastIndex;
public int mLeft = Integer.MAX_VALUE;
public int mMainSize;
public int mMaxBaseline;
public int mRight = Integer.MIN_VALUE;
public int mSumCrossSizeBefore;
public int mTop = Integer.MAX_VALUE;
public float mTotalFlexGrow;
public float mTotalFlexShrink;

public int getCrossSize() {
return this.mCrossSize;
}

public int getFirstIndex() {
return this.mFirstIndex;
}

public int getItemCount() {
return this.mItemCount;
}

public int getItemCountNotGone() {
return this.mItemCount - this.mGoneItemCount;
}

public int getMainSize() {
return this.mMainSize;
}

public float getTotalFlexGrow() {
return this.mTotalFlexGrow;
}

public float getTotalFlexShrink() {
return this.mTotalFlexShrink;
}

public void updatePositionFromView(View view, int i, int i3, int i4, int i5) {
FlexItem layoutParams = view.getLayoutParams();
this.mLeft = Math.min(this.mLeft, (view.getLeft() - layoutParams.getMarginLeft()) - i);
this.mTop = Math.min(this.mTop, (view.getTop() - layoutParams.getMarginTop()) - i3);
this.mRight = Math.max(this.mRight, view.getRight() + layoutParams.getMarginRight() + i4);
this.mBottom = Math.max(this.mBottom, view.getBottom() + layoutParams.getMarginBottom() + i5);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\flexbox\R$attr.java

package com.google.android.flexbox;

public final class R$attr {
public static final int alignContent = 2130968661;
public static final int alignItems = 2130968662;
public static final int alpha = 2130968664;
public static final int dividerDrawable = 2130969045;
public static final int dividerDrawableHorizontal = 2130969046;
public static final int dividerDrawableVertical = 2130969047;
public static final int fastScrollEnabled = 2130969125;
public static final int fastScrollHorizontalThumbDrawable = 2130969126;
public static final int fastScrollHorizontalTrackDrawable = 2130969127;
public static final int fastScrollVerticalThumbDrawable = 2130969128;
public static final int fastScrollVerticalTrackDrawable = 2130969129;
public static final int flexDirection = 2130969131;
public static final int flexWrap = 2130969132;
public static final int font = 2130969162;
public static final int fontProviderAuthority = 2130969164;
public static final int fontProviderCerts = 2130969165;
public static final int fontProviderFetchStrategy = 2130969166;
public static final int fontProviderFetchTimeout = 2130969167;
public static final int fontProviderPackage = 2130969168;
public static final int fontProviderQuery = 2130969169;
public static final int fontStyle = 2130969171;
public static final int fontVariationSettings = 2130969172;
public static final int fontWeight = 2130969173;
public static final int justifyContent = 2130969286;
public static final int layoutManager = 2130969299;
public static final int layout_alignSelf = 2130969300;
public static final int layout_flexBasisPercent = 2130969355;
public static final int layout_flexGrow = 2130969356;
public static final int layout_flexShrink = 2130969357;
public static final int layout_maxHeight = 2130969368;
public static final int layout_maxWidth = 2130969369;
public static final int layout_minHeight = 2130969370;
public static final int layout_minWidth = 2130969371;
public static final int layout_order = 2130969373;
public static final int layout_wrapBefore = 2130969377;
public static final int maxLine = 2130969474;
public static final int recyclerViewStyle = 2130969606;
public static final int reverseLayout = 2130969611;
public static final int showDivider = 2130969649;
public static final int showDividerHorizontal = 2130969650;
public static final int showDividerVertical = 2130969651;
public static final int spanCount = 2130969669;
public static final int stackFromEnd = 2130969682;
public static final int ttcIndex = 2130969887;

private R$attr() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\actions\NoteIntents.java

package com.google.android.gms.actions;

import androidx.annotation.NonNull;

public class NoteIntents {
@NonNull
public static final String ACTION_APPEND_NOTE = "com.google.android.gms.actions.APPEND_NOTE";
@NonNull
public static final String ACTION_CREATE_NOTE = "com.google.android.gms.actions.CREATE_NOTE";
@NonNull
public static final String ACTION_DELETE_NOTE = "com.google.android.gms.actions.DELETE_NOTE";
@NonNull
public static final String EXTRA_NAME = "com.google.android.gms.actions.extra.NAME";
@NonNull
public static final String EXTRA_NOTE_QUERY = "com.google.android.gms.actions.extra.NOTE_QUERY";
@NonNull
public static final String EXTRA_TEXT = "com.google.android.gms.actions.extra.TEXT";

private NoteIntents() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\ads\FullScreenContentCallback.java

package com.google.android.gms.ads;

import androidx.annotation.NonNull;

public abstract class FullScreenContentCallback {
public static final int ERROR_CODE_AD_REUSED = 1;
public static final int ERROR_CODE_APP_NOT_FOREGROUND = 3;
public static final int ERROR_CODE_INTERNAL_ERROR = 0;
public static final int ERROR_CODE_MEDIATION_SHOW_ERROR = 4;
public static final int ERROR_CODE_NOT_READY = 2;

public void onAdClicked() {
}

public void onAdDismissedFullScreenContent() {
}

public void onAdFailedToShowFullScreenContent(@NonNull AdError adError) {
}

public void onAdImpression() {
}

public void onAdShowedFullScreenContent() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\ads\internal\overlay\AdOverlayInfoParcel.java

package com.google.android.gms.ads.internal.overlay;

import android.content.Intent;
import android.os.Bundle;
import android.os.IBinder;
import android.os.Parcel;
import android.os.Parcelable;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.google.android.gms.ads.internal.client.zza;
import com.google.android.gms.ads.internal.client.zzba;
import com.google.android.gms.ads.internal.util.zzbr;
import com.google.android.gms.ads.internal.zzj;
import com.google.android.gms.common.internal.ReflectedParcelable;
import com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable;
import com.google.android.gms.common.internal.safeparcel.SafeParcelWriter;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;
import com.google.android.gms.dynamic.IObjectWrapper;
import com.google.android.gms.dynamic.ObjectWrapper;
import com.google.android.gms.internal.ads.zzbjj;
import com.google.android.gms.internal.ads.zzbow;
import com.google.android.gms.internal.ads.zzboy;
import com.google.android.gms.internal.ads.zzchu;
import com.google.android.gms.internal.ads.zzcno;
import com.google.android.gms.internal.ads.zzdfa;
import com.google.android.gms.internal.ads.zzdmc;
import com.google.android.gms.internal.ads.zzdzh;
import com.google.android.gms.internal.ads.zzekc;
import com.google.android.gms.internal.ads.zzfnt;

@SafeParcelable.Class(creator = "AdOverlayInfoCreator")
@SafeParcelable.Reserved({1})
public final class AdOverlayInfoParcel extends AbstractSafeParcelable implements ReflectedParcelable {
@NonNull
public static final Parcelable.Creator<AdOverlayInfoParcel> CREATOR = new zzn();
@SafeParcelable.Field(id = 2)
public final zzc zza;
@SafeParcelable.Field(getter = "getAdClickListenerAsBinder", id = 3, type = "android.os.IBinder")
public final zza zzb;
@SafeParcelable.Field(getter = "getAdOverlayListenerAsBinder", id = 4, type = "android.os.IBinder")
public final zzo zzc;
@SafeParcelable.Field(getter = "getAdWebViewAsBinder", id = 5, type = "android.os.IBinder")
public final zzcno zzd;
@SafeParcelable.Field(getter = "getAppEventGmsgListenerAsBinder", id = 6, type = "android.os.IBinder")
public final zzboy zze;
@SafeParcelable.Field(id = 7)
@NonNull
public final String zzf;
@SafeParcelable.Field(id = 8)
public final boolean zzg;
@SafeParcelable.Field(id = 9)
@NonNull
public final String zzh;
@SafeParcelable.Field(getter = "getLeaveApplicationListenerAsBinder", id = 10, type = "android.os.IBinder")
public final zzz zzi;
@SafeParcelable.Field(id = 11)
public final int zzj;
@SafeParcelable.Field(id = 12)
public final int zzk;
@SafeParcelable.Field(id = 13)
@NonNull
public final String zzl;
@SafeParcelable.Field(id = 14)
public final zzchu zzm;
@SafeParcelable.Field(id = 16)
@NonNull
public final String zzn;
@SafeParcelable.Field(id = 17)
public final zzj zzo;
@SafeParcelable.Field(getter = "getAdMetadataGmsgListenerAsBinder", id = 18, type = "android.os.IBinder")
public final zzbow zzp;
@SafeParcelable.Field(id = 19)
@NonNull
public final String zzq;
@SafeParcelable.Field(getter = "getOfflineDatabaseManagerAsBinder", id = 20, type = "android.os.IBinder")
public final zzekc zzr;
@SafeParcelable.Field(getter = "getCsiReporterAsBinder", id = 21, type = "android.os.IBinder")
public final zzdzh zzs;
@SafeParcelable.Field(getter = "getLoggerAsBinder", id = 22, type = "android.os.IBinder")
public final zzfnt zzt;
@SafeParcelable.Field(getter = "getWorkManagerUtilAsBinder", id = 23, type = "android.os.IBinder")
public final zzbr zzu;
@SafeParcelable.Field(id = 24)
@NonNull
public final String zzv;
@SafeParcelable.Field(id = 25)
@NonNull
public final String zzw;
@SafeParcelable.Field(getter = "getAdFailedToShowEventEmitterAsBinder", id = 26, type = "android.os.IBinder")
public final zzdfa zzx;
@SafeParcelable.Field(getter = "getPhysicalClickListenerAsBinder", id = 27, type = "android.os.IBinder")
public final zzdmc zzy;

public AdOverlayInfoParcel(zza zza2, zzo zzo2, zzz zzz, zzcno zzcno, int i, zzchu zzchu, String str, zzj zzj2, String str2, String str3, String str4, zzdfa zzdfa) {
this.zza = null;
this.zzb = null;
this.zzc = zzo2;
this.zzd = zzcno;
this.zzp = null;
this.zze = null;
this.zzg = false;
if (((Boolean) zzba.zzc().zzb(zzbjj.zzaC)).booleanValue()) {
this.zzf = null;
this.zzh = null;
} else {
this.zzf = str2;
this.zzh = str3;
}
this.zzi = null;
this.zzj = i;
this.zzk = 1;
this.zzl = null;
this.zzm = zzchu;
this.zzn = str;
this.zzo = zzj2;
this.zzq = null;
this.zzv = null;
this.zzr = null;
this.zzs = null;
this.zzt = null;
this.zzu = null;
this.zzw = str4;
this.zzx = zzdfa;
this.zzy = null;
}

public AdOverlayInfoParcel(zza zza2, zzo zzo2, zzz zzz, zzcno zzcno, boolean z, int i, zzchu zzchu, zzdmc zzdmc) {
this.zza = null;
this.zzb = zza2;
this.zzc = zzo2;
this.zzd = zzcno;
this.zzp = null;
this.zze = null;
this.zzf = null;
this.zzg = z;
this.zzh = null;
this.zzi = zzz;
this.zzj = i;
this.zzk = 2;
this.zzl = null;
this.zzm = zzchu;
this.zzn = null;
this.zzo = null;
this.zzq = null;
this.zzv = null;
this.zzr = null;
this.zzs = null;
this.zzt = null;
this.zzu = null;
this.zzw = null;
this.zzx = null;
this.zzy = zzdmc;
}

public AdOverlayInfoParcel(zza zza2, zzo zzo2, zzbow zzbow, zzboy zzboy, zzz zzz, zzcno zzcno, boolean z, int i, String str, zzchu zzchu, zzdmc zzdmc) {
this.zza = null;
this.zzb = zza2;
this.zzc = zzo2;
this.zzd = zzcno;
this.zzp = zzbow;
this.zze = zzboy;
this.zzf = null;
this.zzg = z;
this.zzh = null;
this.zzi = zzz;
this.zzj = i;
this.zzk = 3;
this.zzl = str;
this.zzm = zzchu;
this.zzn = null;
this.zzo = null;
this.zzq = null;
this.zzv = null;
this.zzr = null;
this.zzs = null;
this.zzt = null;
this.zzu = null;
this.zzw = null;
this.zzx = null;
this.zzy = zzdmc;
}

public AdOverlayInfoParcel(zza zza2, zzo zzo2, zzbow zzbow, zzboy zzboy, zzz zzz, zzcno zzcno, boolean z, int i, String str, String str2, zzchu zzchu, zzdmc zzdmc) {
this.zza = null;
this.zzb = zza2;
this.zzc = zzo2;
this.zzd = zzcno;
this.zzp = zzbow;
this.zze = zzboy;
this.zzf = str2;
this.zzg = z;
this.zzh = str;
this.zzi = zzz;
this.zzj = i;
this.zzk = 3;
this.zzl = null;
this.zzm = zzchu;
this.zzn = null;
this.zzo = null;
this.zzq = null;
this.zzv = null;
this.zzr = null;
this.zzs = null;
this.zzt = null;
this.zzu = null;
this.zzw = null;
this.zzx = null;
this.zzy = zzdmc;
}

@SafeParcelable.Constructor
public AdOverlayInfoParcel(@SafeParcelable.Param(id = 2) zzc zzc2, @SafeParcelable.Param(id = 3) IBinder iBinder, @SafeParcelable.Param(id = 4) IBinder iBinder2, @SafeParcelable.Param(id = 5) IBinder iBinder3, @SafeParcelable.Param(id = 6) IBinder iBinder4, @SafeParcelable.Param(id = 7) String str, @SafeParcelable.Param(id = 8) boolean z, @SafeParcelable.Param(id = 9) String str2, @SafeParcelable.Param(id = 10) IBinder iBinder5, @SafeParcelable.Param(id = 11) int i, @SafeParcelable.Param(id = 12) int i3, @SafeParcelable.Param(id = 13) String str3, @SafeParcelable.Param(id = 14) zzchu zzchu, @SafeParcelable.Param(id = 16) String str4, @SafeParcelable.Param(id = 17) zzj zzj2, @SafeParcelable.Param(id = 18) IBinder iBinder6, @SafeParcelable.Param(id = 19) String str5, @SafeParcelable.Param(id = 20) IBinder iBinder7, @SafeParcelable.Param(id = 21) IBinder iBinder8, @SafeParcelable.Param(id = 22) IBinder iBinder9, @SafeParcelable.Param(id = 23) IBinder iBinder10, @SafeParcelable.Param(id = 24) String str6, @SafeParcelable.Param(id = 25) String str7, @SafeParcelable.Param(id = 26) IBinder iBinder11, @SafeParcelable.Param(id = 27) IBinder iBinder12) {
this.zza = zzc2;
this.zzb = (zza) ObjectWrapper.unwrap(IObjectWrapper.Stub.asInterface(iBinder));
this.zzc = (zzo) ObjectWrapper.unwrap(IObjectWrapper.Stub.asInterface(iBinder2));
this.zzd = (zzcno) ObjectWrapper.unwrap(IObjectWrapper.Stub.asInterface(iBinder3));
this.zzp = (zzbow) ObjectWrapper.unwrap(IObjectWrapper.Stub.asInterface(iBinder6));
this.zze = (zzboy) ObjectWrapper.unwrap(IObjectWrapper.Stub.asInterface(iBinder4));
this.zzf = str;
this.zzg = z;
this.zzh = str2;
this.zzi = (zzz) ObjectWrapper.unwrap(IObjectWrapper.Stub.asInterface(iBinder5));
this.zzj = i;
this.zzk = i3;
this.zzl = str3;
this.zzm = zzchu;
this.zzn = str4;
this.zzo = zzj2;
this.zzq = str5;
this.zzv = str6;
this.zzr = (zzekc) ObjectWrapper.unwrap(IObjectWrapper.Stub.asInterface(iBinder7));
this.zzs = (zzdzh) ObjectWrapper.unwrap(IObjectWrapper.Stub.asInterface(iBinder8));
this.zzt = (zzfnt) ObjectWrapper.unwrap(IObjectWrapper.Stub.asInterface(iBinder9));
this.zzu = (zzbr) ObjectWrapper.unwrap(IObjectWrapper.Stub.asInterface(iBinder10));
this.zzw = str7;
this.zzx = (zzdfa) ObjectWrapper.unwrap(IObjectWrapper.Stub.asInterface(iBinder11));
this.zzy = (zzdmc) ObjectWrapper.unwrap(IObjectWrapper.Stub.asInterface(iBinder12));
}

public AdOverlayInfoParcel(zzc zzc2, zza zza2, zzo zzo2, zzz zzz, zzchu zzchu, zzcno zzcno, zzdmc zzdmc) {
this.zza = zzc2;
this.zzb = zza2;
this.zzc = zzo2;
this.zzd = zzcno;
this.zzp = null;
this.zze = null;
this.zzf = null;
this.zzg = false;
this.zzh = null;
this.zzi = zzz;
this.zzj = -1;
this.zzk = 4;
this.zzl = null;
this.zzm = zzchu;
this.zzn = null;
this.zzo = null;
this.zzq = null;
this.zzv = null;
this.zzr = null;
this.zzs = null;
this.zzt = null;
this.zzu = null;
this.zzw = null;
this.zzx = null;
this.zzy = zzdmc;
}

public AdOverlayInfoParcel(zzo zzo2, zzcno zzcno, int i, zzchu zzchu) {
this.zzc = zzo2;
this.zzd = zzcno;
this.zzj = 1;
this.zzm = zzchu;
this.zza = null;
this.zzb = null;
this.zzp = null;
this.zze = null;
this.zzf = null;
this.zzg = false;
this.zzh = null;
this.zzi = null;
this.zzk = 1;
this.zzl = null;
this.zzn = null;
this.zzo = null;
this.zzq = null;
this.zzv = null;
this.zzr = null;
this.zzs = null;
this.zzt = null;
this.zzu = null;
this.zzw = null;
this.zzx = null;
this.zzy = null;
}

public AdOverlayInfoParcel(zzcno zzcno, zzchu zzchu, zzbr zzbr, zzekc zzekc, zzdzh zzdzh, zzfnt zzfnt, String str, String str2, int i) {
this.zza = null;
this.zzb = null;
this.zzc = null;
this.zzd = zzcno;
this.zzp = null;
this.zze = null;
this.zzf = null;
this.zzg = false;
this.zzh = null;
this.zzi = null;
this.zzj = 14;
this.zzk = 5;
this.zzl = null;
this.zzm = zzchu;
this.zzn = null;
this.zzo = null;
this.zzq = str;
this.zzv = str2;
this.zzr = zzekc;
this.zzs = zzdzh;
this.zzt = zzfnt;
this.zzu = zzbr;
this.zzw = null;
this.zzx = null;
this.zzy = null;
}

@Nullable
public static AdOverlayInfoParcel zza(@NonNull Intent intent) {
try {
Bundle bundleExtra = intent.getBundleExtra("com.google.android.gms.ads.inernal.overlay.AdOverlayInfo");
bundleExtra.setClassLoader(AdOverlayInfoParcel.class.getClassLoader());
return (AdOverlayInfoParcel) bundleExtra.getParcelable("com.google.android.gms.ads.inernal.overlay.AdOverlayInfo");
} catch (Exception unused) {
return null;
}
}

public final void writeToParcel(@NonNull Parcel parcel, int i) {
int beginObjectHeader = SafeParcelWriter.beginObjectHeader(parcel);
SafeParcelWriter.writeParcelable(parcel, 2, this.zza, i, false);
SafeParcelWriter.writeIBinder(parcel, 3, ObjectWrapper.wrap(this.zzb).asBinder(), false);
SafeParcelWriter.writeIBinder(parcel, 4, ObjectWrapper.wrap(this.zzc).asBinder(), false);
SafeParcelWriter.writeIBinder(parcel, 5, ObjectWrapper.wrap(this.zzd).asBinder(), false);
SafeParcelWriter.writeIBinder(parcel, 6, ObjectWrapper.wrap(this.zze).asBinder(), false);
SafeParcelWriter.writeString(parcel, 7, this.zzf, false);
SafeParcelWriter.writeBoolean(parcel, 8, this.zzg);
SafeParcelWriter.writeString(parcel, 9, this.zzh, false);
SafeParcelWriter.writeIBinder(parcel, 10, ObjectWrapper.wrap(this.zzi).asBinder(), false);
SafeParcelWriter.writeInt(parcel, 11, this.zzj);
SafeParcelWriter.writeInt(parcel, 12, this.zzk);
SafeParcelWriter.writeString(parcel, 13, this.zzl, false);
SafeParcelWriter.writeParcelable(parcel, 14, this.zzm, i, false);
SafeParcelWriter.writeString(parcel, 16, this.zzn, false);
SafeParcelWriter.writeParcelable(parcel, 17, this.zzo, i, false);
SafeParcelWriter.writeIBinder(parcel, 18, ObjectWrapper.wrap(this.zzp).asBinder(), false);
SafeParcelWriter.writeString(parcel, 19, this.zzq, false);
SafeParcelWriter.writeIBinder(parcel, 20, ObjectWrapper.wrap(this.zzr).asBinder(), false);
SafeParcelWriter.writeIBinder(parcel, 21, ObjectWrapper.wrap(this.zzs).asBinder(), false);
SafeParcelWriter.writeIBinder(parcel, 22, ObjectWrapper.wrap(this.zzt).asBinder(), false);
SafeParcelWriter.writeIBinder(parcel, 23, ObjectWrapper.wrap(this.zzu).asBinder(), false);
SafeParcelWriter.writeString(parcel, 24, this.zzv, false);
SafeParcelWriter.writeString(parcel, 25, this.zzw, false);
SafeParcelWriter.writeIBinder(parcel, 26, ObjectWrapper.wrap(this.zzx).asBinder(), false);
SafeParcelWriter.writeIBinder(parcel, 27, ObjectWrapper.wrap(this.zzy).asBinder(), false);
SafeParcelWriter.finishObjectHeader(parcel, beginObjectHeader);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\ads\mediation\customevent\CustomEventListener.java

package com.google.android.gms.ads.mediation.customevent;

import androidx.annotation.NonNull;
import com.google.android.gms.ads.AdError;

@Deprecated
public interface CustomEventListener {
void onAdClicked();

void onAdClosed();

@Deprecated
void onAdFailedToLoad(int i);

void onAdFailedToLoad(@NonNull AdError adError);

void onAdLeftApplication();

void onAdOpened();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\ads\nativead\NativeAd$OnNativeAdLoadedListener.java

package com.google.android.gms.ads.nativead;

import androidx.annotation.NonNull;

public interface NativeAd$OnNativeAdLoadedListener {
void onNativeAdLoaded(@NonNull NativeAd nativeAd);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\ads_identifier\R.java

package com.google.android.gms.ads_identifier;

public final class R {
private R() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\common\api\internal\ApiKey.java

package com.google.android.gms.common.api.internal;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.google.android.gms.common.api.Api;
import com.google.android.gms.common.api.Api.ApiOptions;
import com.google.android.gms.common.internal.Objects;

public final class ApiKey<O extends Api.ApiOptions> {
private final int zaa;
private final Api<O> zab;
@Nullable
private final O zac;
@Nullable
private final String zad;

private ApiKey(Api<O> api, @Nullable O o, @Nullable String str) {
this.zab = api;
this.zac = o;
this.zad = str;
this.zaa = Objects.hashCode(new Object[]{api, o, str});
}

@NonNull
public static <O extends Api.ApiOptions> ApiKey<O> zaa(@NonNull Api<O> api, @Nullable O o, @Nullable String str) {
return new ApiKey<>(api, o, str);
}

public final boolean equals(@Nullable Object obj) {
if (obj == null) {
return false;
}
if (obj == this) {
return true;
}
if (!(obj instanceof ApiKey)) {
return false;
}
ApiKey apiKey = (ApiKey) obj;
return Objects.equal(this.zab, apiKey.zab) && Objects.equal(this.zac, apiKey.zac) && Objects.equal(this.zad, apiKey.zad);
}

public final int hashCode() {
return this.zaa;
}

@NonNull
public final String zab() {
return this.zab.zad();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\common\api\internal\RegistrationMethods.java

package com.google.android.gms.common.api.internal;

import androidx.annotation.NonNull;
import com.google.android.gms.common.annotation.KeepForSdk;
import com.google.android.gms.common.api.Api;
import com.google.android.gms.common.api.Api.AnyClient;

@KeepForSdk
public class RegistrationMethods<A extends Api.AnyClient, L> {
@NonNull
@KeepForSdk
public final RegisterListenerMethod<A, L> register;
@NonNull
public final UnregisterListenerMethod<A, L> zaa;
@NonNull
public final Runnable zab;

public /* synthetic */ RegistrationMethods(RegisterListenerMethod registerListenerMethod, UnregisterListenerMethod unregisterListenerMethod, Runnable runnable, zacn zacn) {
this.register = registerListenerMethod;
this.zaa = unregisterListenerMethod;
this.zab = runnable;
}

@NonNull
@KeepForSdk
public static <A extends Api.AnyClient, L> Builder<A, L> builder() {
return new Builder<>((zacm) null);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\common\util\ArrayUtils.java

package com.google.android.gms.common.util;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.google.android.gms.common.annotation.KeepForSdk;
import com.google.android.gms.common.internal.Objects;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;

@KeepForSdk
@VisibleForTesting
public final class ArrayUtils {
private ArrayUtils() {
}

@NonNull
@KeepForSdk
public static <T> T[] concat(@NonNull T[]... tArr) {
if (tArr.length == 0) {
return (Object[]) Array.newInstance(tArr.getClass(), 0);
}
int i = 0;
for (T[] length : tArr) {
i += length.length;
}
T[] copyOf = Arrays.copyOf(tArr[0], i);
int length2 = tArr[0].length;
for (int i3 = 1; i3 < tArr.length; i3++) {
T[] tArr2 = tArr[i3];
int length3 = tArr2.length;
System.arraycopy(tArr2, 0, copyOf, length2, length3);
length2 += length3;
}
return copyOf;
}

@NonNull
@KeepForSdk
public static byte[] concatByteArrays(@NonNull byte[]... bArr) {
if (bArr.length == 0) {
return new byte[0];
}
int i = 0;
for (byte[] length : bArr) {
i += length.length;
}
byte[] copyOf = Arrays.copyOf(bArr[0], i);
int length2 = bArr[0].length;
for (int i3 = 1; i3 < bArr.length; i3++) {
byte[] bArr2 = bArr[i3];
int length3 = bArr2.length;
System.arraycopy(bArr2, 0, copyOf, length2, length3);
length2 += length3;
}
return copyOf;
}

@KeepForSdk
public static boolean contains(@NonNull int[] iArr, int i) {
if (iArr == null) {
return false;
}
for (int i3 : iArr) {
if (i3 == i) {
return true;
}
}
return false;
}

@KeepForSdk
public static <T> boolean contains(@NonNull T[] tArr, @NonNull T t) {
int length = tArr != null ? tArr.length : 0;
int i = 0;
while (true) {
if (i >= length) {
break;
} else if (!Objects.equal(tArr[i], t)) {
i++;
} else if (i >= 0) {
return true;
}
}
return false;
}

@NonNull
@KeepForSdk
public static <T> ArrayList<T> newArrayList() {
return new ArrayList<>();
}

@KeepForSdk
@Nullable
public static <T> T[] removeAll(@NonNull T[] tArr, @NonNull T... tArr2) {
int length;
int i;
if (tArr == null) {
return null;
}
if (tArr2 == null || (length = tArr2.length) == 0) {
return Arrays.copyOf(tArr, tArr.length);
}
T[] tArr3 = (Object[]) Array.newInstance(tArr2.getClass().getComponentType(), r3);
if (length == 1) {
i = 0;
for (T t : tArr) {
if (!Objects.equal(tArr2[0], t)) {
tArr3[i] = t;
i++;
}
}
} else {
int i3 = 0;
for (T t2 : tArr) {
if (!contains(tArr2, t2)) {
tArr3[i3] = t2;
i3++;
}
}
i = i3;
}
if (tArr3 == null) {
return null;
}
return i == tArr3.length ? tArr3 : Arrays.copyOf(tArr3, i);
}

@NonNull
@KeepForSdk
public static <T> ArrayList<T> toArrayList(@NonNull T[] tArr) {
ArrayList<T> arrayList = new ArrayList<>(r0);
for (T add : tArr) {
arrayList.add(add);
}
return arrayList;
}

@NonNull
@KeepForSdk
public static int[] toPrimitiveArray(@NonNull Collection<Integer> collection) {
int i = 0;
if (collection == null || collection.size() == 0) {
return new int[0];
}
int[] iArr = new int[collection.size()];
for (Integer intValue : collection) {
iArr[i] = intValue.intValue();
i++;
}
return iArr;
}

@KeepForSdk
@Nullable
public static Integer[] toWrapperArray(@NonNull int[] iArr) {
if (iArr == null) {
return null;
}
int length = iArr.length;
Integer[] numArr = new Integer[length];
for (int i = 0; i < length; i++) {
numArr[i] = Integer.valueOf(iArr[i]);
}
return numArr;
}

@KeepForSdk
public static void writeArray(@NonNull StringBuilder sb, @NonNull double[] dArr) {
int length = dArr.length;
for (int i = 0; i < length; i++) {
if (i != 0) {
sb.append(",");
}
sb.append(Double.toString(dArr[i]));
}
}

@KeepForSdk
public static void writeArray(@NonNull StringBuilder sb, @NonNull float[] fArr) {
int length = fArr.length;
for (int i = 0; i < length; i++) {
if (i != 0) {
sb.append(",");
}
sb.append(Float.toString(fArr[i]));
}
}

@KeepForSdk
public static void writeArray(@NonNull StringBuilder sb, @NonNull int[] iArr) {
int length = iArr.length;
for (int i = 0; i < length; i++) {
if (i != 0) {
sb.append(",");
}
sb.append(Integer.toString(iArr[i]));
}
}

@KeepForSdk
public static void writeArray(@NonNull StringBuilder sb, @NonNull long[] jArr) {
int length = jArr.length;
for (int i = 0; i < length; i++) {
if (i != 0) {
sb.append(",");
}
sb.append(Long.toString(jArr[i]));
}
}

@KeepForSdk
public static <T> void writeArray(@NonNull StringBuilder sb, @NonNull T[] tArr) {
int length = tArr.length;
for (int i = 0; i < length; i++) {
if (i != 0) {
sb.append(",");
}
sb.append(tArr[i]);
}
}

@KeepForSdk
public static void writeArray(@NonNull StringBuilder sb, @NonNull boolean[] zArr) {
int length = zArr.length;
for (int i = 0; i < length; i++) {
if (i != 0) {
sb.append(",");
}
sb.append(Boolean.toString(zArr[i]));
}
}

@KeepForSdk
public static void writeStringArray(@NonNull StringBuilder sb, @NonNull String[] strArr) {
int length = strArr.length;
for (int i = 0; i < length; i++) {
if (i != 0) {
sb.append(",");
}
sb.append("\"");
sb.append(strArr[i]);
sb.append("\"");
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\common\util\VisibleForTesting.java

package com.google.android.gms.common.util;

public @interface VisibleForTesting {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzazg.java

package com.google.android.gms.internal.ads;

import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicReference;

public final class zzazg extends zzazk {
private final AtomicReference zza;

public zzazg() {
this((zzazl) null);
}

public zzazg(zzazl zzazl) {
this.zza = new AtomicReference(new zzazf());
}

public static boolean zza(int i, boolean z) {
int i3 = i & 3;
return i3 == 3 || (z && i3 == 2);
}

private static int zzh(int i, int i3) {
if (i == -1) {
return i3 != -1 ? -1 : 0;
}
if (i3 == -1) {
return 1;
}
return i - i3;
}

public final zzaze[] zzb(zzatj[] zzatjArr, zzaza[] zzazaArr, int[][][] iArr) throws zzasp {
boolean z;
zzazh zzazh;
int[] iArr2;
ArrayList arrayList;
zzayz zzayz;
boolean z2;
boolean z3;
int i;
int i3 = 2;
zzaze[] zzazeArr = new zzaze[2];
zzazf zzazf = (zzazf) this.zza.get();
int i4 = 0;
boolean z4 = false;
while (true) {
int i5 = -1;
int i6 = 1;
if (i4 >= i3) {
break;
}
if (zzatjArr[i4].zzc() == i3) {
if (!z4) {
zzatj zzatj = zzatjArr[i4];
zzaza zzaza = zzazaArr[i4];
int[][] iArr3 = iArr[i4];
int i7 = zzazf.zzd;
int i8 = -1;
int i9 = 0;
zzayz zzayz2 = null;
int i10 = 0;
int i11 = 0;
while (i9 < zzaza.zzb) {
zzayz zzb = zzaza.zzb(i9);
int i12 = zzb.zza;
ArrayList arrayList2 = new ArrayList(i6);
for (int i13 = 0; i13 <= 0; i13++) {
arrayList2.add(Integer.valueOf(i13));
}
int[] iArr4 = iArr3[i9];
int i14 = 0;
while (i14 <= 0) {
zzaza zzaza2 = zzaza;
if (zza(iArr4[i14], true)) {
zzatd zzb2 = zzb.zzb(i14);
if (arrayList2.contains(Integer.valueOf(i14))) {
int i15 = zzb2.zzj;
zzayz = zzb;
z3 = true;
z2 = true;
} else {
zzayz = zzb;
z3 = true;
z2 = false;
}
if (z3 != z2) {
arrayList = arrayList2;
i = 1;
} else {
arrayList = arrayList2;
i = 2;
}
iArr2 = iArr4;
boolean zza2 = zza(iArr4[i14], false);
if (zza2) {
i += 1000;
}
boolean z5 = i > i11;
if (i == i11) {
int zzh = zzb2.zza() != i8 ? zzh(zzb2.zza(), i8) : zzh(zzb2.zzb, i5);
z5 = !zza2 || !z2 ? zzh < 0 : zzh > 0;
}
if (z5) {
i5 = zzb2.zzb;
i8 = zzb2.zza();
i11 = i;
i10 = i14;
zzayz2 = zzayz;
}
} else {
zzayz = zzb;
iArr2 = iArr4;
arrayList = arrayList2;
}
i14++;
zzaza = zzaza2;
zzb = zzayz;
arrayList2 = arrayList;
iArr4 = iArr2;
}
zzaza zzaza3 = zzaza;
i9++;
i6 = 1;
}
zzazh zzazh2 = zzayz2 == null ? null : new zzazh(zzayz2, i10, 0, (Object) null);
zzazeArr[i4] = zzazh2;
z4 = zzazh2 != null;
}
int i16 = zzazaArr[i4].zzb;
}
i4++;
i3 = 2;
}
int i17 = 0;
boolean z6 = false;
while (i17 < i3) {
if (zzatjArr[i17].zzc() == 1 && !z6) {
zzaza zzaza4 = zzazaArr[i17];
int[][] iArr5 = iArr[i17];
String str = zzazf.zza;
int i18 = -1;
int i19 = -1;
int i20 = 0;
int i21 = 0;
while (i20 < zzaza4.zzb) {
zzayz zzb3 = zzaza4.zzb(i20);
int[] iArr6 = iArr5[i20];
int i22 = i19;
int i23 = i18;
int i24 = i21;
int i25 = 0;
while (true) {
int i26 = zzb3.zza;
if (i25 > 0) {
break;
}
if (zza(iArr6[i25], true)) {
zzatd zzb4 = zzb3.zzb(i25);
int i27 = iArr6[i25];
int i28 = 1 != (zzb4.zzx & 1) ? 1 : 2;
if (zza(i27, false)) {
i28 += 1000;
}
if (i28 > i24) {
i23 = i20;
i22 = i25;
i24 = i28;
}
}
i25++;
}
i20++;
i21 = i24;
i18 = i23;
i19 = i22;
}
if (i18 == -1) {
zzazh = null;
z = false;
} else {
z = false;
zzazh = new zzazh(zzaza4.zzb(i18), i19, 0, (Object) null);
}
zzazeArr[i17] = zzazh;
z6 = zzazh != null ? true : z;
}
i17++;
i3 = 2;
}
return zzazeArr;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzazi.java

package com.google.android.gms.internal.ads;

public final class zzazi {
private final int[] zza;
private final zzaza[] zzb;
private final int[] zzc;
private final int[][][] zzd;
private final zzaza zze;

public zzazi(int[] iArr, zzaza[] zzazaArr, int[] iArr2, int[][][] iArr3, zzaza zzaza) {
this.zza = iArr;
this.zzb = zzazaArr;
this.zzd = iArr3;
this.zzc = iArr2;
this.zze = zzaza;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzazj.java

package com.google.android.gms.internal.ads;

public final class zzazj {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzazk.java

package com.google.android.gms.internal.ads;

import android.util.SparseArray;
import android.util.SparseBooleanArray;
import java.util.Arrays;
import java.util.Map;

public abstract class zzazk extends zzazo {
private final SparseArray zza = new SparseArray();
private final SparseBooleanArray zzb = new SparseBooleanArray();
private zzazi zzc;

public abstract zzaze[] zzb(zzatj[] zzatjArr, zzaza[] zzazaArr, int[][][] iArr) throws zzasp;

public final zzazp zzc(zzatj[] zzatjArr, zzaza zzaza) throws zzasp {
int[] iArr;
zzatj[] zzatjArr2 = zzatjArr;
zzaza zzaza2 = zzaza;
int[] iArr2 = new int[3];
zzayz[][] zzayzArr = new zzayz[3][];
int[][][] iArr3 = new int[3][][];
for (int i = 0; i < 3; i++) {
int i3 = zzaza2.zzb;
zzayzArr[i] = new zzayz[i3];
iArr3[i] = new int[i3][];
}
int i4 = 2;
int[] iArr4 = new int[2];
for (int i5 = 0; i5 < 2; i5++) {
zzatjArr2[i5].zze();
iArr4[i5] = 4;
}
int i6 = 0;
while (i6 < zzaza2.zzb) {
zzayz zzb2 = zzaza2.zzb(i6);
int i7 = i4;
int i8 = 0;
int i9 = 0;
while (true) {
if (i8 >= i4) {
i8 = i7;
break;
}
zzatj zzatj = zzatjArr2[i8];
int i10 = 0;
while (true) {
int i11 = zzb2.zza;
if (i10 > 0) {
break;
}
int zzG = zzatj.zzG(zzb2.zzb(i10)) & 3;
if (zzG > i9) {
if (zzG == 3) {
break;
}
i7 = i8;
i9 = zzG;
}
i10++;
}
i8++;
i4 = 2;
}
if (i8 == 2) {
int i12 = zzb2.zza;
iArr = new int[1];
} else {
zzatj zzatj2 = zzatjArr2[i8];
int i13 = zzb2.zza;
int[] iArr5 = new int[1];
for (int i14 = 0; i14 <= 0; i14++) {
iArr5[i14] = zzatj2.zzG(zzb2.zzb(i14));
}
iArr = iArr5;
}
int i15 = iArr2[i8];
zzayzArr[i8][i15] = zzb2;
iArr3[i8][i15] = iArr;
iArr2[i8] = i15 + 1;
i6++;
i4 = 2;
}
int i16 = i4;
zzaza[] zzazaArr = new zzaza[i16];
int[] iArr6 = new int[i16];
int i17 = 0;
while (i17 < i16) {
int i18 = iArr2[i17];
zzazaArr[i17] = new zzaza((zzayz[]) Arrays.copyOf(zzayzArr[i17], i18));
iArr3[i17] = (int[][]) Arrays.copyOf(iArr3[i17], i18);
iArr6[i17] = zzatjArr2[i17].zzc();
i17++;
i16 = 2;
}
int i19 = i16;
zzaza zzaza3 = new zzaza((zzayz[]) Arrays.copyOf(zzayzArr[i19], iArr2[i19]));
zzaze[] zzb3 = zzb(zzatjArr2, zzazaArr, iArr3);
int i20 = 0;
while (i20 < i19) {
if (this.zzb.get(i20)) {
zzb3[i20] = null;
} else {
zzaza zzaza4 = zzazaArr[i20];
Map map = (Map) this.zza.get(i20);
if ((map == null ? null : (zzazj) map.get(zzaza4)) != null) {
throw null;
}
}
i20++;
i19 = 2;
}
zzazi zzazi = new zzazi(iArr6, zzazaArr, iArr4, iArr3, zzaza3);
zzatk[] zzatkArr = new zzatk[2];
for (int i21 = 0; i21 < 2; i21++) {
zzatkArr[i21] = zzb3[i21] != null ? zzatk.zza : null;
}
return new zzazp(zzaza2, new zzazm(zzb3, (byte[]) null), zzazi, zzatkArr);
}

public final void zzd(Object obj) {
this.zzc = (zzazi) obj;
}

public final void zze(int i, boolean z) {
if (this.zzb.get(i) != z) {
this.zzb.put(i, z);
zzg();
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzazl.java

package com.google.android.gms.internal.ads;

public interface zzazl {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzazm.java

package com.google.android.gms.internal.ads;

import java.util.Arrays;

public final class zzazm {
private int zza;
private final zzaze[] zzb;

public zzazm(zzaze[] zzazeArr, byte... bArr) {
this.zzb = zzazeArr;
}

public final boolean equals(Object obj) {
if (this == obj) {
return true;
}
if (obj == null || zzazm.class != obj.getClass()) {
return false;
}
return Arrays.equals(this.zzb, ((zzazm) obj).zzb);
}

public final int hashCode() {
int i = this.zza;
if (i != 0) {
return i;
}
int hashCode = Arrays.hashCode(this.zzb) + 527;
this.zza = hashCode;
return hashCode;
}

public final zzaze zza(int i) {
return this.zzb[i];
}

public final zzaze[] zzb() {
return (zzaze[]) this.zzb.clone();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbcw.java

package com.google.android.gms.internal.ads;

import android.graphics.Rect;
import android.text.TextUtils;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.Nullable;
import com.google.android.gms.ads.internal.client.zzba;
import com.google.android.gms.ads.internal.zzt;
import com.google.android.gms.common.util.PlatformVersion;
import com.google.android.gms.common.util.VisibleForTesting;
import l3.QA.meHJRShhGjwwRQ;
import org.json.JSONException;
import org.json.JSONObject;

public final class zzbcw extends Thread {
private boolean zza = false;
private boolean zzb = false;
private final Object zzc;
private final zzbcn zzd;
private final int zze;
private final int zzf;
private final int zzg;
private final int zzh;
private final int zzi;
private final int zzj;
private final int zzk;
private final int zzl;
private final String zzm;
private final boolean zzn;
private final boolean zzo;
private final boolean zzp;

public zzbcw() {
zzbcn zzbcn = new zzbcn();
this.zzd = zzbcn;
this.zzc = new Object();
this.zzf = ((Long) zzbkr.zzd.zze()).intValue();
this.zzg = ((Long) zzbkr.zza.zze()).intValue();
this.zzh = ((Long) zzbkr.zze.zze()).intValue();
this.zzi = ((Long) zzbkr.zzc.zze()).intValue();
this.zzj = ((Integer) zzba.zzc().zzb(zzbjj.zzQ)).intValue();
this.zzk = ((Integer) zzba.zzc().zzb(zzbjj.zzR)).intValue();
this.zzl = ((Integer) zzba.zzc().zzb(zzbjj.zzS)).intValue();
this.zze = ((Long) zzbkr.zzf.zze()).intValue();
this.zzm = (String) zzba.zzc().zzb(zzbjj.zzU);
this.zzn = ((Boolean) zzba.zzc().zzb(zzbjj.zzV)).booleanValue();
this.zzo = ((Boolean) zzba.zzc().zzb(zzbjj.zzW)).booleanValue();
this.zzp = ((Boolean) zzba.zzc().zzb(zzbjj.zzX)).booleanValue();
setName("ContentFetchTask");
}

/*  JADX ERROR: IndexOutOfBoundsException in pass: RegionMakerVisitor
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
at java.util.ArrayList.rangeCheck(ArrayList.java:659)
at java.util.ArrayList.get(ArrayList.java:435)
at jadx.core.dex.nodes.InsnNode.getArg(InsnNode.java:101)
at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:611)
at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)
at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)
at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)
at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)
at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)
at jadx.core.dex.visitors.regions.RegionMaker.processMonitorEnter(RegionMaker.java:561)
at jadx.core.dex.visitors.regions.RegionMaker.traverse(RegionMaker.java:133)
at jadx.core.dex.visitors.regions.RegionMaker.makeRegion(RegionMaker.java:86)
at jadx.core.dex.visitors.regions.RegionMaker.processHandlersOutBlocks(RegionMaker.java:1008)
at jadx.core.dex.visitors.regions.RegionMaker.processTryCatchBlocks(RegionMaker.java:978)
at jadx.core.dex.visitors.regions.RegionMakerVisitor.visit(RegionMakerVisitor.java:52)
*/
/* JADX WARNING: Missing exception handler attribute for start block: B:48:0x00dc */
/* JADX WARNING: Removed duplicated region for block: B:48:0x00dc A[LOOP:2: B:48:0x00dc->B:62:0x00dc, LOOP_START, SYNTHETIC] */
public final void run() {
/*
r6 = this;
L_0x0000:
com.google.android.gms.internal.ads.zzbcr r0 = com.google.android.gms.ads.internal.zzt.zzb()     // Catch:{ all -> 0x00a8 }
android.content.Context r0 = r0.zzb()     // Catch:{ all -> 0x00a8 }
if (r0 != 0) goto L_0x000c
goto L_0x00b2
L_0x000c:
java.lang.String r1 = "activity"
java.lang.Object r1 = r0.getSystemService(r1)     // Catch:{ all -> 0x00a8 }
android.app.ActivityManager r1 = (android.app.ActivityManager) r1     // Catch:{ all -> 0x00a8 }
java.lang.String r2 = "keyguard"
java.lang.Object r2 = r0.getSystemService(r2)     // Catch:{ all -> 0x00a8 }
android.app.KeyguardManager r2 = (android.app.KeyguardManager) r2     // Catch:{ all -> 0x00a8 }
if (r1 == 0) goto L_0x00b2
if (r2 == 0) goto L_0x00b2
java.util.List r1 = r1.getRunningAppProcesses()     // Catch:{ all -> 0x00a8 }
if (r1 == 0) goto L_0x00b2
java.util.Iterator r1 = r1.iterator()     // Catch:{ all -> 0x00a8 }
L_0x002a:
boolean r3 = r1.hasNext()     // Catch:{ all -> 0x00a8 }
if (r3 == 0) goto L_0x00b2
java.lang.Object r3 = r1.next()     // Catch:{ all -> 0x00a8 }
android.app.ActivityManager$RunningAppProcessInfo r3 = (android.app.ActivityManager.RunningAppProcessInfo) r3     // Catch:{ all -> 0x00a8 }
int r4 = android.os.Process.myPid()     // Catch:{ all -> 0x00a8 }
int r5 = r3.pid     // Catch:{ all -> 0x00a8 }
if (r4 != r5) goto L_0x002a
int r1 = r3.importance     // Catch:{ all -> 0x00a8 }
r3 = 100
if (r1 != r3) goto L_0x00b2
boolean r1 = r2.inKeyguardRestrictedInputMode()     // Catch:{ all -> 0x00a8 }
if (r1 != 0) goto L_0x00b2
java.lang.String r1 = "power"
java.lang.Object r0 = r0.getSystemService(r1)     // Catch:{ all -> 0x00a8 }
android.os.PowerManager r0 = (android.os.PowerManager) r0     // Catch:{ all -> 0x00a8 }
if (r0 == 0) goto L_0x00b2
boolean r0 = r0.isScreenOn()     // Catch:{ all -> 0x00a8 }
if (r0 == 0) goto L_0x00b2
com.google.android.gms.internal.ads.zzbcr r0 = com.google.android.gms.ads.internal.zzt.zzb()     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
android.app.Activity r0 = r0.zza()     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
if (r0 != 0) goto L_0x006d
java.lang.String r0 = "ContentFetchThread: no activity. Sleeping."
com.google.android.gms.internal.ads.zzcho.zze(r0)     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
r6.zzf()     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
goto L_0x00ba
L_0x006d:
r1 = 0
android.view.Window r2 = r0.getWindow()     // Catch:{ Exception -> 0x008e }
if (r2 == 0) goto L_0x009d
android.view.Window r2 = r0.getWindow()     // Catch:{ Exception -> 0x008e }
android.view.View r2 = r2.getDecorView()     // Catch:{ Exception -> 0x008e }
if (r2 == 0) goto L_0x009d
android.view.Window r0 = r0.getWindow()     // Catch:{ Exception -> 0x008e }
android.view.View r0 = r0.getDecorView()     // Catch:{ Exception -> 0x008e }
r2 = 16908290(0x1020002, float:2.3877235E-38)
android.view.View r1 = r0.findViewById(r2)     // Catch:{ Exception -> 0x008e }
goto L_0x009d
L_0x008e:
r0 = move-exception
com.google.android.gms.internal.ads.zzcgx r2 = com.google.android.gms.ads.internal.zzt.zzo()     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
java.lang.String r3 = "ContentFetchTask.extractContent"
r2.zzu(r0, r3)     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
java.lang.String r0 = "Failed getting root view of activity. Content not extracted."
com.google.android.gms.internal.ads.zzcho.zze(r0)     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
L_0x009d:
if (r1 == 0) goto L_0x00ba
com.google.android.gms.internal.ads.zzbcs r0 = new com.google.android.gms.internal.ads.zzbcs     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
r0.<init>(r6, r1)     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
r1.post(r0)     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
goto L_0x00ba
L_0x00a8:
r0 = move-exception
com.google.android.gms.internal.ads.zzcgx r1 = com.google.android.gms.ads.internal.zzt.zzo()     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
java.lang.String r2 = "ContentFetchTask.isInForeground"
r1.zzu(r0, r2)     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
L_0x00b2:
java.lang.String r0 = "ContentFetchTask: sleeping"
com.google.android.gms.internal.ads.zzcho.zze(r0)     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
r6.zzf()     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
L_0x00ba:
int r0 = r6.zze     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
int r0 = r0 * 1000
long r0 = (long) r0     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
java.lang.Thread.sleep(r0)     // Catch:{ InterruptedException -> 0x00d3, Exception -> 0x00c3 }
goto L_0x00d9
L_0x00c3:
r0 = move-exception
java.lang.String r1 = "Error in ContentFetchTask"
com.google.android.gms.internal.ads.zzcho.zzh(r1, r0)
com.google.android.gms.internal.ads.zzcgx r1 = com.google.android.gms.ads.internal.zzt.zzo()
java.lang.String r2 = "ContentFetchTask.run"
r1.zzu(r0, r2)
goto L_0x00d9
L_0x00d3:
r0 = move-exception
java.lang.String r1 = "Error in ContentFetchTask"
com.google.android.gms.internal.ads.zzcho.zzh(r1, r0)
L_0x00d9:
java.lang.Object r0 = r6.zzc
monitor-enter(r0)
L_0x00dc:
boolean r1 = r6.zzb     // Catch:{ all -> 0x00ee }
if (r1 == 0) goto L_0x00eb
java.lang.String r1 = "ContentFetchTask: waiting"
com.google.android.gms.internal.ads.zzcho.zze(r1)     // Catch:{ InterruptedException -> 0x00dc }
java.lang.Object r1 = r6.zzc     // Catch:{ InterruptedException -> 0x00dc }
r1.wait()     // Catch:{ InterruptedException -> 0x00dc }
goto L_0x00dc
L_0x00eb:
monitor-exit(r0)     // Catch:{ all -> 0x00ee }
goto L_0x0000
L_0x00ee:
r1 = move-exception
monitor-exit(r0)     // Catch:{ all -> 0x00ee }
throw r1
*/
throw new UnsupportedOperationException("Method not decompiled: com.google.android.gms.internal.ads.zzbcw.run():void");
}

public final zzbcm zza() {
return this.zzd.zza(this.zzp);
}

@VisibleForTesting
public final zzbcv zzb(@Nullable View view, zzbcm zzbcm) {
if (view == null) {
return new zzbcv(this, 0, 0);
}
boolean globalVisibleRect = view.getGlobalVisibleRect(new Rect());
if ((view instanceof TextView) && !(view instanceof EditText)) {
CharSequence text = ((TextView) view).getText();
if (TextUtils.isEmpty(text)) {
return new zzbcv(this, 0, 0);
}
zzbcm.zzk(text.toString(), globalVisibleRect, view.getX(), view.getY(), (float) view.getWidth(), (float) view.getHeight());
return new zzbcv(this, 1, 0);
} else if ((view instanceof WebView) && !(view instanceof zzcno)) {
WebView webView = (WebView) view;
if (!PlatformVersion.isAtLeastKitKat()) {
return new zzbcv(this, 0, 0);
}
zzbcm.zzh();
webView.post(new zzbcu(this, zzbcm, webView, globalVisibleRect));
return new zzbcv(this, 0, 1);
} else if (!(view instanceof ViewGroup)) {
return new zzbcv(this, 0, 0);
} else {
ViewGroup viewGroup = (ViewGroup) view;
int i = 0;
int i3 = 0;
for (int i4 = 0; i4 < viewGroup.getChildCount(); i4++) {
zzbcv zzb2 = zzb(viewGroup.getChildAt(i4), zzbcm);
i += zzb2.zza;
i3 += zzb2.zzb;
}
return new zzbcv(this, i, i3);
}
}

/* JADX WARNING: Code restructure failed: missing block: B:23:0x0071, code lost:
if (r11 == 0) goto L_0x0073;
*/
@com.google.android.gms.common.util.VisibleForTesting
/* Code decompiled incorrectly, please refer to instructions dump. */
public final void zzc(android.view.View r11) {
/*
r10 = this;
com.google.android.gms.internal.ads.zzbcm r9 = new com.google.android.gms.internal.ads.zzbcm     // Catch:{ Exception -> 0x0083 }
int r1 = r10.zzf     // Catch:{ Exception -> 0x0083 }
int r2 = r10.zzg     // Catch:{ Exception -> 0x0083 }
int r3 = r10.zzh     // Catch:{ Exception -> 0x0083 }
int r4 = r10.zzi     // Catch:{ Exception -> 0x0083 }
int r5 = r10.zzj     // Catch:{ Exception -> 0x0083 }
int r6 = r10.zzk     // Catch:{ Exception -> 0x0083 }
int r7 = r10.zzl     // Catch:{ Exception -> 0x0083 }
boolean r8 = r10.zzo     // Catch:{ Exception -> 0x0083 }
r0 = r9
r0.<init>(r1, r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x0083 }
com.google.android.gms.internal.ads.zzbcr r0 = com.google.android.gms.ads.internal.zzt.zzb()     // Catch:{ Exception -> 0x0083 }
android.content.Context r0 = r0.zzb()     // Catch:{ Exception -> 0x0083 }
if (r0 == 0) goto L_0x0054
java.lang.String r1 = r10.zzm     // Catch:{ Exception -> 0x0083 }
boolean r1 = android.text.TextUtils.isEmpty(r1)     // Catch:{ Exception -> 0x0083 }
if (r1 != 0) goto L_0x0054
android.content.res.Resources r1 = r0.getResources()     // Catch:{ Exception -> 0x0083 }
com.google.android.gms.internal.ads.zzbjb r2 = com.google.android.gms.internal.ads.zzbjj.zzT     // Catch:{ Exception -> 0x0083 }
com.google.android.gms.internal.ads.zzbjh r3 = com.google.android.gms.ads.internal.client.zzba.zzc()     // Catch:{ Exception -> 0x0083 }
java.lang.Object r2 = r3.zzb(r2)     // Catch:{ Exception -> 0x0083 }
java.lang.String r2 = (java.lang.String) r2     // Catch:{ Exception -> 0x0083 }
java.lang.String r3 = "id"
java.lang.String r0 = r0.getPackageName()     // Catch:{ Exception -> 0x0083 }
int r0 = r1.getIdentifier(r2, r3, r0)     // Catch:{ Exception -> 0x0083 }
java.lang.Object r0 = r11.getTag(r0)     // Catch:{ Exception -> 0x0083 }
java.lang.String r0 = (java.lang.String) r0     // Catch:{ Exception -> 0x0083 }
if (r0 == 0) goto L_0x0054
java.lang.String r1 = r10.zzm     // Catch:{ Exception -> 0x0083 }
boolean r0 = r0.equals(r1)     // Catch:{ Exception -> 0x0083 }
if (r0 != 0) goto L_0x0053
goto L_0x0054
L_0x0053:
return
L_0x0054:
com.google.android.gms.internal.ads.zzbcv r11 = r10.zzb(r11, r9)     // Catch:{ Exception -> 0x0083 }
r9.zzm()     // Catch:{ Exception -> 0x0083 }
int r0 = r11.zza     // Catch:{ Exception -> 0x0083 }
if (r0 != 0) goto L_0x0065
int r0 = r11.zzb     // Catch:{ Exception -> 0x0083 }
if (r0 == 0) goto L_0x0064
goto L_0x0065
L_0x0064:
return
L_0x0065:
int r11 = r11.zzb     // Catch:{ Exception -> 0x0083 }
if (r11 != 0) goto L_0x0071
int r11 = r9.zzc()     // Catch:{ Exception -> 0x0083 }
if (r11 == 0) goto L_0x0070
goto L_0x0073
L_0x0070:
return
L_0x0071:
if (r11 != 0) goto L_0x007d
L_0x0073:
com.google.android.gms.internal.ads.zzbcn r11 = r10.zzd     // Catch:{ Exception -> 0x0083 }
boolean r11 = r11.zzd(r9)     // Catch:{ Exception -> 0x0083 }
if (r11 != 0) goto L_0x007c
goto L_0x007d
L_0x007c:
return
L_0x007d:
com.google.android.gms.internal.ads.zzbcn r11 = r10.zzd     // Catch:{ Exception -> 0x0083 }
r11.zzb(r9)     // Catch:{ Exception -> 0x0083 }
return
L_0x0083:
r11 = move-exception
java.lang.String r0 = "Exception in fetchContentOnUIThread"
com.google.android.gms.internal.ads.zzcho.zzh(r0, r11)
com.google.android.gms.internal.ads.zzcgx r0 = com.google.android.gms.ads.internal.zzt.zzo()
java.lang.String r1 = "ContentFetchTask.fetchContent"
r0.zzu(r11, r1)
return
*/
throw new UnsupportedOperationException("Method not decompiled: com.google.android.gms.internal.ads.zzbcw.zzc(android.view.View):void");
}

@VisibleForTesting
public final void zzd(zzbcm zzbcm, WebView webView, String str, boolean z) {
zzbcm.zzg();
try {
if (!TextUtils.isEmpty(str)) {
String optString = new JSONObject(str).optString("text");
if (this.zzn || TextUtils.isEmpty(webView.getTitle())) {
zzbcm.zzl(optString, z, webView.getX(), webView.getY(), (float) webView.getWidth(), (float) webView.getHeight());
} else {
String title = webView.getTitle();
zzbcm.zzl(title + "\n" + optString, z, webView.getX(), webView.getY(), (float) webView.getWidth(), (float) webView.getHeight());
}
}
if (zzbcm.zzo()) {
this.zzd.zzc(zzbcm);
}
} catch (JSONException unused) {
zzcho.zze("Json string may be malformed.");
} catch (Throwable th) {
zzcho.zzf(meHJRShhGjwwRQ.KAQaDksQVwO, th);
zzt.zzo().zzu(th, "ContentFetchTask.processWebViewContent");
}
}

public final void zze() {
synchronized (this.zzc) {
if (this.zza) {
zzcho.zze("Content hash thread already started, quitting...");
return;
}
this.zza = true;
start();
}
}

public final void zzf() {
synchronized (this.zzc) {
this.zzb = true;
zzcho.zze("ContentFetchThread: paused, mPause = true");
}
}

public final void zzg() {
synchronized (this.zzc) {
this.zzb = false;
this.zzc.notifyAll();
zzcho.zze("ContentFetchThread: wakeup");
}
}

public final boolean zzh() {
return this.zzb;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbcx.java

package com.google.android.gms.internal.ads;

import com.google.android.gms.common.util.VisibleForTesting;

public final class zzbcx {
private final float zza;
private final float zzb;
private final float zzc;
private final float zzd;
private final int zze;

@VisibleForTesting
public zzbcx(float f, float f2, float f3, float f4, int i) {
this.zza = f;
this.zzb = f2;
this.zzc = f + f3;
this.zzd = f2 + f4;
this.zze = i;
}

public final float zza() {
return this.zzd;
}

public final float zzb() {
return this.zza;
}

public final float zzc() {
return this.zzc;
}

public final float zzd() {
return this.zzb;
}

public final int zze() {
return this.zze;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbcy.java

package com.google.android.gms.internal.ads;

import androidx.annotation.Nullable;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public abstract class zzbcy {
@Nullable
private static MessageDigest zzb;
public final Object zza = new Object();

@Nullable
public final MessageDigest zza() {
synchronized (this.zza) {
MessageDigest messageDigest = zzb;
if (messageDigest != null) {
return messageDigest;
}
for (int i = 0; i < 2; i++) {
try {
zzb = MessageDigest.getInstance("MD5");
} catch (NoSuchAlgorithmException unused) {
}
}
MessageDigest messageDigest2 = zzb;
return messageDigest2;
}
}

public abstract byte[] zzb(String str);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbcz.java

package com.google.android.gms.internal.ads;

import java.util.Comparator;

final class zzbcz implements Comparator {
public zzbcz(zzbdb zzbdb) {
}

public final /* bridge */ /* synthetic */ int compare(Object obj, Object obj2) {
zzbdf zzbdf = (zzbdf) obj;
zzbdf zzbdf2 = (zzbdf) obj2;
int i = zzbdf.zzc - zzbdf2.zzc;
return i != 0 ? i : (zzbdf.zza > zzbdf2.zza ? 1 : (zzbdf.zza == zzbdf2.zza ? 0 : -1));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbdk.java

package com.google.android.gms.internal.ads;

public interface zzbdk {
void zza();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbdl.java

package com.google.android.gms.internal.ads;

import androidx.annotation.Nullable;
import com.google.android.gms.ads.appopen.AppOpenAd;
import com.google.android.gms.ads.internal.client.zze;

public final class zzbdl extends zzbds {
@Nullable
private final AppOpenAd.AppOpenAdLoadCallback zza;
private final String zzb;

public zzbdl(AppOpenAd.AppOpenAdLoadCallback appOpenAdLoadCallback, String str) {
this.zza = appOpenAdLoadCallback;
this.zzb = str;
}

public final void zzb(int i) {
}

public final void zzc(zze zze) {
if (this.zza != null) {
this.zza.onAdFailedToLoad(zze.zzb());
}
}

public final void zzd(zzbdq zzbdq) {
if (this.zza != null) {
this.zza.onAdLoaded(new zzbdm(zzbdq, this.zzb));
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbdm.java

package com.google.android.gms.internal.ads;

import android.app.Activity;
import android.os.RemoteException;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.google.android.gms.ads.FullScreenContentCallback;
import com.google.android.gms.ads.OnPaidEventListener;
import com.google.android.gms.ads.ResponseInfo;
import com.google.android.gms.ads.appopen.AppOpenAd;
import com.google.android.gms.ads.internal.client.zzdn;
import com.google.android.gms.ads.internal.client.zzfe;
import com.google.android.gms.dynamic.ObjectWrapper;

public final class zzbdm extends AppOpenAd {
@Nullable
public FullScreenContentCallback zza;
private final zzbdq zzb;
@NonNull
private final String zzc;
private final zzbdn zzd = new zzbdn();
@Nullable
private OnPaidEventListener zze;

public zzbdm(zzbdq zzbdq, String str) {
this.zzb = zzbdq;
this.zzc = str;
}

public final String getAdUnitId() {
return this.zzc;
}

@Nullable
public final FullScreenContentCallback getFullScreenContentCallback() {
return this.zza;
}

@Nullable
public final OnPaidEventListener getOnPaidEventListener() {
return this.zze;
}

@NonNull
public final ResponseInfo getResponseInfo() {
zzdn zzdn;
try {
zzdn = this.zzb.zzf();
} catch (RemoteException e) {
zzcho.zzl("#007 Could not call remote method.", e);
zzdn = null;
}
return ResponseInfo.zzb(zzdn);
}

public final void setFullScreenContentCallback(@Nullable FullScreenContentCallback fullScreenContentCallback) {
this.zza = fullScreenContentCallback;
this.zzd.zzg(fullScreenContentCallback);
}

public final void setImmersiveMode(boolean z) {
try {
this.zzb.zzg(z);
} catch (RemoteException e) {
zzcho.zzl("#007 Could not call remote method.", e);
}
}

public final void setOnPaidEventListener(@Nullable OnPaidEventListener onPaidEventListener) {
this.zze = onPaidEventListener;
try {
this.zzb.zzh(new zzfe(onPaidEventListener));
} catch (RemoteException e) {
zzcho.zzl("#007 Could not call remote method.", e);
}
}

public final void show(@NonNull Activity activity) {
try {
this.zzb.zzi(ObjectWrapper.wrap(activity), this.zzd);
} catch (RemoteException e) {
zzcho.zzl("#007 Could not call remote method.", e);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbdn.java

package com.google.android.gms.internal.ads;

import androidx.annotation.Nullable;
import com.google.android.gms.ads.FullScreenContentCallback;
import com.google.android.gms.ads.internal.client.zze;

public final class zzbdn extends zzbdw {
@Nullable
private FullScreenContentCallback zza;

public final void zzb() {
FullScreenContentCallback fullScreenContentCallback = this.zza;
if (fullScreenContentCallback != null) {
fullScreenContentCallback.onAdClicked();
}
}

public final void zzc() {
FullScreenContentCallback fullScreenContentCallback = this.zza;
if (fullScreenContentCallback != null) {
fullScreenContentCallback.onAdDismissedFullScreenContent();
}
}

public final void zzd(zze zze) {
FullScreenContentCallback fullScreenContentCallback = this.zza;
if (fullScreenContentCallback != null) {
fullScreenContentCallback.onAdFailedToShowFullScreenContent(zze.zza());
}
}

public final void zze() {
FullScreenContentCallback fullScreenContentCallback = this.zza;
if (fullScreenContentCallback != null) {
fullScreenContentCallback.onAdImpression();
}
}

public final void zzf() {
FullScreenContentCallback fullScreenContentCallback = this.zza;
if (fullScreenContentCallback != null) {
fullScreenContentCallback.onAdShowedFullScreenContent();
}
}

public final void zzg(@Nullable FullScreenContentCallback fullScreenContentCallback) {
this.zza = fullScreenContentCallback;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbdo.java

package com.google.android.gms.internal.ads;

import android.os.IBinder;
import android.os.Parcel;
import android.os.RemoteException;
import com.google.android.gms.ads.internal.client.zzbu;
import com.google.android.gms.ads.internal.client.zzdg;
import com.google.android.gms.ads.internal.client.zzdm;
import com.google.android.gms.ads.internal.client.zzdn;
import com.google.android.gms.dynamic.IObjectWrapper;

public final class zzbdo extends zzasg implements zzbdq {
public zzbdo(IBinder iBinder) {
super(iBinder, "com.google.android.gms.ads.internal.appopen.client.IAppOpenAd");
}

public final zzbu zze() throws RemoteException {
throw null;
}

public final zzdn zzf() throws RemoteException {
Parcel zzbk = zzbk(5, zza());
zzdn zzb = zzdm.zzb(zzbk.readStrongBinder());
zzbk.recycle();
return zzb;
}

public final void zzg(boolean z) throws RemoteException {
Parcel zza = zza();
zzasi.zzd(zza, z);
zzbl(6, zza);
}

public final void zzh(zzdg zzdg) throws RemoteException {
Parcel zza = zza();
zzasi.zzg(zza, zzdg);
zzbl(7, zza);
}

public final void zzi(IObjectWrapper iObjectWrapper, zzbdx zzbdx) throws RemoteException {
Parcel zza = zza();
zzasi.zzg(zza, iObjectWrapper);
zzasi.zzg(zza, zzbdx);
zzbl(4, zza);
}

public final void zzj(zzbdu zzbdu) throws RemoteException {
throw null;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbdp.java

package com.google.android.gms.internal.ads;

public abstract class zzbdp extends zzash implements zzbdq {
public zzbdp() {
super("com.google.android.gms.ads.internal.appopen.client.IAppOpenAd");
}

/* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v2, resolved type: com.google.android.gms.internal.ads.zzbdu} */
/* JADX WARNING: type inference failed for: r6v1 */
/* JADX WARNING: type inference failed for: r6v7, types: [com.google.android.gms.internal.ads.zzbdx] */
/* JADX WARNING: type inference failed for: r6v12 */
/* JADX WARNING: type inference failed for: r6v13 */
/* JADX WARNING: type inference failed for: r6v14 */
/* JADX WARNING: type inference failed for: r6v15 */
/* JADX WARNING: Multi-variable type inference failed */
/* Code decompiled incorrectly, please refer to instructions dump. */
public final boolean zzbK(int r3, android.os.Parcel r4, android.os.Parcel r5, int r6) throws android.os.RemoteException {
/*
r2 = this;
r6 = 0
switch(r3) {
case 2: goto L_0x0080;
case 3: goto L_0x005d;
case 4: goto L_0x0032;
case 5: goto L_0x0027;
case 6: goto L_0x0019;
case 7: goto L_0x0006;
default: goto L_0x0004;
}
L_0x0004:
r3 = 0
return r3
L_0x0006:
android.os.IBinder r3 = r4.readStrongBinder()
com.google.android.gms.ads.internal.client.zzdg r3 = com.google.android.gms.ads.internal.client.zzdf.zzb(r3)
com.google.android.gms.internal.ads.zzasi.zzc(r4)
r2.zzh(r3)
r5.writeNoException()
goto L_0x008a
L_0x0019:
boolean r3 = com.google.android.gms.internal.ads.zzasi.zzh(r4)
com.google.android.gms.internal.ads.zzasi.zzc(r4)
r2.zzg(r3)
r5.writeNoException()
goto L_0x008a
L_0x0027:
com.google.android.gms.ads.internal.client.zzdn r3 = r2.zzf()
r5.writeNoException()
com.google.android.gms.internal.ads.zzasi.zzg(r5, r3)
goto L_0x008a
L_0x0032:
android.os.IBinder r3 = r4.readStrongBinder()
com.google.android.gms.dynamic.IObjectWrapper r3 = com.google.android.gms.dynamic.IObjectWrapper.Stub.asInterface(r3)
android.os.IBinder r0 = r4.readStrongBinder()
if (r0 != 0) goto L_0x0041
goto L_0x0053
L_0x0041:
java.lang.String r6 = "com.google.android.gms.ads.internal.appopen.client.IAppOpenFullScreenContentCallback"
android.os.IInterface r6 = r0.queryLocalInterface(r6)
boolean r1 = r6 instanceof com.google.android.gms.internal.ads.zzbdx
if (r1 == 0) goto L_0x004e
com.google.android.gms.internal.ads.zzbdx r6 = (com.google.android.gms.internal.ads.zzbdx) r6
goto L_0x0053
L_0x004e:
com.google.android.gms.internal.ads.zzbdv r6 = new com.google.android.gms.internal.ads.zzbdv
r6.<init>(r0)
L_0x0053:
com.google.android.gms.internal.ads.zzasi.zzc(r4)
r2.zzi(r3, r6)
r5.writeNoException()
goto L_0x008a
L_0x005d:
android.os.IBinder r3 = r4.readStrongBinder()
if (r3 != 0) goto L_0x0064
goto L_0x0076
L_0x0064:
java.lang.String r6 = "com.google.android.gms.ads.internal.appopen.client.IAppOpenAdPresentationCallback"
android.os.IInterface r6 = r3.queryLocalInterface(r6)
boolean r0 = r6 instanceof com.google.android.gms.internal.ads.zzbdu
if (r0 == 0) goto L_0x0071
com.google.android.gms.internal.ads.zzbdu r6 = (com.google.android.gms.internal.ads.zzbdu) r6
goto L_0x0076
L_0x0071:
com.google.android.gms.internal.ads.zzbdu r6 = new com.google.android.gms.internal.ads.zzbdu
r6.<init>(r3)
L_0x0076:
com.google.android.gms.internal.ads.zzasi.zzc(r4)
r2.zzj(r6)
r5.writeNoException()
goto L_0x008a
L_0x0080:
com.google.android.gms.ads.internal.client.zzbu r3 = r2.zze()
r5.writeNoException()
com.google.android.gms.internal.ads.zzasi.zzg(r5, r3)
L_0x008a:
r3 = 1
return r3
*/
throw new UnsupportedOperationException("Method not decompiled: com.google.android.gms.internal.ads.zzbdp.zzbK(int, android.os.Parcel, android.os.Parcel, int):boolean");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbdq.java

package com.google.android.gms.internal.ads;

import android.os.IInterface;
import android.os.RemoteException;
import com.google.android.gms.ads.internal.client.zzbu;
import com.google.android.gms.ads.internal.client.zzdg;
import com.google.android.gms.ads.internal.client.zzdn;
import com.google.android.gms.dynamic.IObjectWrapper;

public interface zzbdq extends IInterface {
zzbu zze() throws RemoteException;

zzdn zzf() throws RemoteException;

void zzg(boolean z) throws RemoteException;

void zzh(zzdg zzdg) throws RemoteException;

void zzi(IObjectWrapper iObjectWrapper, zzbdx zzbdx) throws RemoteException;

void zzj(zzbdu zzbdu) throws RemoteException;
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbdr.java

package com.google.android.gms.internal.ads;

import android.os.IBinder;
import android.os.Parcel;
import android.os.RemoteException;
import com.google.android.gms.ads.internal.client.zze;

public final class zzbdr extends zzasg implements zzbdt {
public zzbdr(IBinder iBinder) {
super(iBinder, "com.google.android.gms.ads.internal.appopen.client.IAppOpenAdLoadCallback");
}

public final void zzb(int i) throws RemoteException {
Parcel zza = zza();
zza.writeInt(i);
zzbl(2, zza);
}

public final void zzc(zze zze) throws RemoteException {
Parcel zza = zza();
zzasi.zze(zza, zze);
zzbl(3, zza);
}

public final void zzd(zzbdq zzbdq) throws RemoteException {
Parcel zza = zza();
zzasi.zzg(zza, zzbdq);
zzbl(1, zza);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbds.java

package com.google.android.gms.internal.ads;

import android.os.IBinder;
import android.os.IInterface;

public abstract class zzbds extends zzash implements zzbdt {
public zzbds() {
super("com.google.android.gms.ads.internal.appopen.client.IAppOpenAdLoadCallback");
}

public static zzbdt zze(IBinder iBinder) {
if (iBinder == null) {
return null;
}
IInterface queryLocalInterface = iBinder.queryLocalInterface("com.google.android.gms.ads.internal.appopen.client.IAppOpenAdLoadCallback");
return queryLocalInterface instanceof zzbdt ? (zzbdt) queryLocalInterface : new zzbdr(iBinder);
}

/* JADX WARNING: type inference failed for: r0v1, types: [android.os.IInterface] */
/* JADX WARNING: Multi-variable type inference failed */
/* JADX WARNING: Unknown variable types count: 1 */
/* Code decompiled incorrectly, please refer to instructions dump. */
public final boolean zzbK(int r3, android.os.Parcel r4, android.os.Parcel r5, int r6) throws android.os.RemoteException {
/*
r2 = this;
r6 = 1
if (r3 == r6) goto L_0x0021
r0 = 2
if (r3 == r0) goto L_0x001a
r0 = 3
if (r3 == r0) goto L_0x000b
r3 = 0
return r3
L_0x000b:
android.os.Parcelable$Creator r3 = com.google.android.gms.ads.internal.client.zze.CREATOR
android.os.Parcelable r3 = com.google.android.gms.internal.ads.zzasi.zza(r4, r3)
com.google.android.gms.ads.internal.client.zze r3 = (com.google.android.gms.ads.internal.client.zze) r3
com.google.android.gms.internal.ads.zzasi.zzc(r4)
r2.zzc(r3)
goto L_0x0043
L_0x001a:
r4.readInt()
com.google.android.gms.internal.ads.zzasi.zzc(r4)
goto L_0x0043
L_0x0021:
android.os.IBinder r3 = r4.readStrongBinder()
if (r3 != 0) goto L_0x0029
r3 = 0
goto L_0x003d
L_0x0029:
java.lang.String r0 = "com.google.android.gms.ads.internal.appopen.client.IAppOpenAd"
android.os.IInterface r0 = r3.queryLocalInterface(r0)
boolean r1 = r0 instanceof com.google.android.gms.internal.ads.zzbdq
if (r1 == 0) goto L_0x0037
r3 = r0
com.google.android.gms.internal.ads.zzbdq r3 = (com.google.android.gms.internal.ads.zzbdq) r3
goto L_0x003d
L_0x0037:
com.google.android.gms.internal.ads.zzbdo r0 = new com.google.android.gms.internal.ads.zzbdo
r0.<init>(r3)
r3 = r0
L_0x003d:
com.google.android.gms.internal.ads.zzasi.zzc(r4)
r2.zzd(r3)
L_0x0043:
r5.writeNoException()
return r6
*/
throw new UnsupportedOperationException("Method not decompiled: com.google.android.gms.internal.ads.zzbds.zzbK(int, android.os.Parcel, android.os.Parcel, int):boolean");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbdt.java

package com.google.android.gms.internal.ads;

import android.os.IInterface;
import android.os.RemoteException;
import com.google.android.gms.ads.internal.client.zze;

public interface zzbdt extends IInterface {
void zzb(int i) throws RemoteException;

void zzc(zze zze) throws RemoteException;

void zzd(zzbdq zzbdq) throws RemoteException;
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbdu.java

package com.google.android.gms.internal.ads;

import android.os.IBinder;
import android.os.RemoteException;

public final class zzbdu extends zzasg {
public zzbdu(IBinder iBinder) {
super(iBinder, "com.google.android.gms.ads.internal.appopen.client.IAppOpenAdPresentationCallback");
}

public final void zze() throws RemoteException {
zzbl(1, zza());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbdv.java

package com.google.android.gms.internal.ads;

import android.os.IBinder;
import android.os.Parcel;
import android.os.RemoteException;
import com.google.android.gms.ads.internal.client.zze;

public final class zzbdv extends zzasg implements zzbdx {
public zzbdv(IBinder iBinder) {
super(iBinder, "com.google.android.gms.ads.internal.appopen.client.IAppOpenFullScreenContentCallback");
}

public final void zzb() throws RemoteException {
zzbl(5, zza());
}

public final void zzc() throws RemoteException {
zzbl(2, zza());
}

public final void zzd(zze zze) throws RemoteException {
Parcel zza = zza();
zzasi.zze(zza, zze);
zzbl(3, zza);
}

public final void zze() throws RemoteException {
zzbl(4, zza());
}

public final void zzf() throws RemoteException {
zzbl(1, zza());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbdw.java

package com.google.android.gms.internal.ads;

import android.os.Parcel;
import android.os.RemoteException;
import com.google.android.gms.ads.internal.client.zze;

public abstract class zzbdw extends zzash implements zzbdx {
public zzbdw() {
super("com.google.android.gms.ads.internal.appopen.client.IAppOpenFullScreenContentCallback");
}

public final boolean zzbK(int i, Parcel parcel, Parcel parcel2, int i3) throws RemoteException {
if (i == 1) {
zzf();
} else if (i == 2) {
zzc();
} else if (i == 3) {
zzasi.zzc(parcel);
zzd(zzasi.zza(parcel, zze.CREATOR));
} else if (i == 4) {
zze();
} else if (i != 5) {
return false;
} else {
zzb();
}
parcel2.writeNoException();
return true;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzbdx.java

package com.google.android.gms.internal.ads;

import android.os.IInterface;
import android.os.RemoteException;
import com.google.android.gms.ads.internal.client.zze;

public interface zzbdx extends IInterface {
void zzb() throws RemoteException;

void zzc() throws RemoteException;

void zzd(zze zze) throws RemoteException;

void zze() throws RemoteException;

void zzf() throws RemoteException;
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdao.java

package com.google.android.gms.internal.ads;

public abstract class zzdao {
public abstract zzdel zzb();

public abstract zzdff zzc();

public abstract zzdfm zzd();

public abstract zzdfu zze();

public abstract zzdme zzf();

public abstract zzeps zzh();

public abstract zzepy zzi();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdap.java

package com.google.android.gms.internal.ads;

import androidx.annotation.Nullable;
import java.util.Map;

public final class zzdap implements zzdaq {
private final Map zza;

public zzdap(Map map) {
this.zza = map;
}

@Nullable
public final zzekq zza(int i, String str) {
return (zzekq) this.zza.get(str);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdaq.java

package com.google.android.gms.internal.ads;

import androidx.annotation.Nullable;

public interface zzdaq {
@Nullable
zzekq zza(int i, String str);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdar.java

package com.google.android.gms.internal.ads;

public final class zzdar implements zzhep {
private final zzhfc zza;

public zzdar(zzhfc zzhfc) {
this.zza = zzhfc;
}

public final /* bridge */ /* synthetic */ Object zzb() {
return new zzdap(this.zza.zzd());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdas.java

package com.google.android.gms.internal.ads;

import java.util.List;

public final /* synthetic */ class zzdas implements zzfxt {
public static final /* synthetic */ zzdas zza = new zzdas();

private /* synthetic */ zzdas() {
}

public final Object apply(Object obj) {
return new zzdau((List) obj);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdfk.java

package com.google.android.gms.internal.ads;

import android.content.Context;

public final /* synthetic */ class zzdfk implements zzdjw {
public final /* synthetic */ Context zza;

public /* synthetic */ zzdfk(Context context) {
this.zza = context;
}

public final void zza(Object obj) {
((zzdfi) obj).zzbr(this.zza);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdfl.java

package com.google.android.gms.internal.ads;

import android.content.Context;

public final /* synthetic */ class zzdfl implements zzdjw {
public final /* synthetic */ Context zza;

public /* synthetic */ zzdfl(Context context) {
this.zza = context;
}

public final void zza(Object obj) {
((zzdfi) obj).zzbt(this.zza);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdfm.java

package com.google.android.gms.internal.ads;

import android.content.Context;
import java.util.Set;

public final class zzdfm extends zzdjx {
public zzdfm(Set set) {
super(set);
}

public final void zza(Context context) {
zzo(new zzdfk(context));
}

public final void zzb(Context context) {
zzo(new zzdfl(context));
}

public final void zzc(Context context) {
zzo(new zzdfj(context));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdfn.java

package com.google.android.gms.internal.ads;

public final class zzdfn implements zzhep {
private final zzhfc zza;

public zzdfn(zzhfc zzhfc) {
this.zza = zzhfc;
}

public final /* bridge */ /* synthetic */ Object zzb() {
return new zzdfm(this.zza.zzc());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdfo.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzdfo implements zzdjw {
public final /* synthetic */ zzccr zza;
public final /* synthetic */ String zzb;
public final /* synthetic */ String zzc;

public /* synthetic */ zzdfo(zzccr zzccr, String str, String str2) {
this.zza = zzccr;
this.zzb = str;
this.zzc = str2;
}

public final void zza(Object obj) {
((zzden) obj).zzp(this.zza, this.zzb, this.zzc);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdfp.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzdfp implements zzdjw {
public static final /* synthetic */ zzdfp zza = new zzdfp();

private /* synthetic */ zzdfp() {
}

public final void zza(Object obj) {
((zzden) obj).zzo();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdfq.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzdfq implements zzdjw {
public static final /* synthetic */ zzdfq zza = new zzdfq();

private /* synthetic */ zzdfq() {
}

public final void zza(Object obj) {
((zzden) obj).zzbw();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdfr.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzdfr implements zzdjw {
public static final /* synthetic */ zzdfr zza = new zzdfr();

private /* synthetic */ zzdfr() {
}

public final void zza(Object obj) {
((zzden) obj).zzj();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdfs.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzdfs implements zzdjw {
public static final /* synthetic */ zzdfs zza = new zzdfs();

private /* synthetic */ zzdfs() {
}

public final void zza(Object obj) {
((zzden) obj).zzm();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdft.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzdft implements zzdjw {
public static final /* synthetic */ zzdft zza = new zzdft();

private /* synthetic */ zzdft() {
}

public final void zza(Object obj) {
((zzden) obj).zzbx();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdfu.java

package com.google.android.gms.internal.ads;

import java.util.Set;

public final class zzdfu extends zzdjx {
public zzdfu(Set set) {
super(set);
}

public final void zza() {
zzo(zzdfr.zza);
}

public final void zzb() {
zzo(zzdfs.zza);
}

public final void zzc() {
zzo(zzdfp.zza);
}

public final void zzd(zzccr zzccr, String str, String str2) {
zzo(new zzdfo(zzccr, str, str2));
}

public final void zze() {
zzo(zzdfq.zza);
}

public final void zzf() {
zzo(zzdft.zza);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdfv.java

package com.google.android.gms.internal.ads;

public final class zzdfv implements zzhep {
private final zzhfc zza;

public zzdfv(zzhfc zzhfc) {
this.zza = zzhfc;
}

public final /* bridge */ /* synthetic */ Object zzb() {
return new zzdfu(this.zza.zzc());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdja.java

package com.google.android.gms.internal.ads;

public interface zzdja {
void zza();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdjb.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzdjb implements zzdjw {
public static final /* synthetic */ zzdjb zza = new zzdjb();

private /* synthetic */ zzdjb() {
}

public final void zza(Object obj) {
((zzdjf) obj).zzd();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdjc.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzdjc implements zzdjw {
public static final /* synthetic */ zzdjc zza = new zzdjc();

private /* synthetic */ zzdjc() {
}

public final void zza(Object obj) {
((zzdjf) obj).zze();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdjd.java

package com.google.android.gms.internal.ads;

import java.util.Set;

public final class zzdjd extends zzdjx {
public zzdjd(Set set) {
super(set);
}

public final void zza() {
zzo(zzdjb.zza);
}

public final void zzb() {
zzo(zzdjc.zza);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdje.java

package com.google.android.gms.internal.ads;

public final class zzdje implements zzhep {
private final zzhfc zza;

public zzdje(zzhfc zzhfc) {
this.zza = zzhfc;
}

public final /* bridge */ /* synthetic */ Object zzb() {
return new zzdjd(this.zza.zzc());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdjq.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzdjq implements zzdjw {
public final /* synthetic */ zzbfr zza;

public /* synthetic */ zzdjq(zzbfr zzbfr) {
this.zza = zzbfr;
}

public final void zza(Object obj) {
((zzdju) obj).zzf(this.zza);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdjr.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzdjr implements zzdjw {
public final /* synthetic */ boolean zza;

public /* synthetic */ zzdjr(boolean z) {
this.zza = z;
}

public final void zza(Object obj) {
((zzdju) obj).zzk(this.zza);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdjs.java

package com.google.android.gms.internal.ads;

import java.util.Set;

public final class zzdjs extends zzdjx implements zzdju {
public zzdjs(Set set) {
super(set);
}

public final void zzd() {
zzo(zzdjn.zza);
}

public final void zze(zzbfr zzbfr) {
zzo(new zzdjp(zzbfr));
}

public final void zzf(zzbfr zzbfr) {
zzo(new zzdjq(zzbfr));
}

public final void zzh(boolean z) {
zzo(new zzdjo(z));
}

public final void zzi(zzbfr zzbfr) {
zzo(new zzdjm(zzbfr));
}

public final void zzk(boolean z) {
zzo(new zzdjr(z));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdjt.java

package com.google.android.gms.internal.ads;

public final class zzdjt implements zzhep {
private final zzhfc zza;

public zzdjt(zzhfc zzhfc) {
this.zza = zzhfc;
}

public final /* bridge */ /* synthetic */ Object zzb() {
return new zzdjs(this.zza.zzc());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdju.java

package com.google.android.gms.internal.ads;

public interface zzdju {
void zzd();

void zze(zzbfr zzbfr);

void zzf(zzbfr zzbfr);

void zzh(boolean z);

void zzi(zzbfr zzbfr);

void zzk(boolean z);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdjv.java

package com.google.android.gms.internal.ads;

import com.google.android.gms.ads.internal.util.zze;
import com.google.android.gms.ads.internal.zzt;

public final /* synthetic */ class zzdjv implements Runnable {
public final /* synthetic */ zzdjw zza;
public final /* synthetic */ Object zzb;

public /* synthetic */ zzdjv(zzdjw zzdjw, Object obj) {
this.zza = zzdjw;
this.zzb = obj;
}

public final void run() {
try {
this.zza.zza(this.zzb);
} catch (Throwable th) {
zzt.zzo().zzt(th, "EventEmitter.notify");
zze.zzb("Event emitter exception.", th);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdjw.java

package com.google.android.gms.internal.ads;

public interface zzdjw {
void zza(Object obj) throws Exception;
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdjx.java

package com.google.android.gms.internal.ads;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.Executor;

public class zzdjx {
public final Map zza = new HashMap();

public zzdjx(Set set) {
zzm(set);
}

public final synchronized void zzg(zzdlu zzdlu) {
zzj(zzdlu.zza, zzdlu.zzb);
}

public final synchronized void zzj(Object obj, Executor executor) {
this.zza.put(obj, executor);
}

public final synchronized void zzm(Set set) {
Iterator it = set.iterator();
while (it.hasNext()) {
zzg((zzdlu) it.next());
}
}

public final synchronized void zzo(zzdjw zzdjw) {
for (Map.Entry entry : this.zza.entrySet()) {
((Executor) entry.getValue()).execute(new zzdjv(zzdjw, entry.getKey()));
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzdjy.java

package com.google.android.gms.internal.ads;

import com.google.android.gms.ads.internal.client.zza;
import com.google.android.gms.ads.internal.overlay.zzo;
import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.Executor;

public final class zzdjy {
/* access modifiers changed from: private */
public final Set zza = new HashSet();
/* access modifiers changed from: private */
public final Set zzb = new HashSet();
/* access modifiers changed from: private */
public final Set zzc = new HashSet();
/* access modifiers changed from: private */
public final Set zzd = new HashSet();
/* access modifiers changed from: private */
public final Set zze = new HashSet();
/* access modifiers changed from: private */
public final Set zzf = new HashSet();
/* access modifiers changed from: private */
public final Set zzg = new HashSet();
/* access modifiers changed from: private */
public final Set zzh = new HashSet();
/* access modifiers changed from: private */
public final Set zzi = new HashSet();
/* access modifiers changed from: private */
public final Set zzj = new HashSet();
/* access modifiers changed from: private */
public final Set zzk = new HashSet();
/* access modifiers changed from: private */
public final Set zzl = new HashSet();
/* access modifiers changed from: private */
public final Set zzm = new HashSet();
/* access modifiers changed from: private */
public final Set zzn = new HashSet();
/* access modifiers changed from: private */
public zzffx zzo;

public final zzdjy zza(zza zza2, Executor executor) {
this.zzc.add(new zzdlu(zza2, executor));
return this;
}

public final zzdjy zzb(zzdeq zzdeq, Executor executor) {
this.zzi.add(new zzdlu(zzdeq, executor));
return this;
}

public final zzdjy zzc(zzdfd zzdfd, Executor executor) {
this.zzl.add(new zzdlu(zzdfd, executor));
return this;
}

public final zzdjy zzd(zzdfh zzdfh, Executor executor) {
this.zzf.add(new zzdlu(zzdfh, executor));
return this;
}

public final zzdjy zze(zzden zzden, Executor executor) {
this.zze.add(new zzdlu(zzden, executor));
return this;
}

public final zzdjy zzf(zzdgb zzdgb, Executor executor) {
this.zzh.add(new zzdlu(zzdgb, executor));
return this;
}

public final zzdjy zzg(zzdgm zzdgm, Executor executor) {
this.zzg.add(new zzdlu(zzdgm, executor));
return this;
}

public final zzdjy zzh(zzo zzo2, Executor executor) {
this.zzn.add(new zzdlu(zzo2, executor));
return this;
}

public final zzdjy zzi(zzdgy zzdgy, Executor executor) {
this.zzm.add(new zzdlu(zzdgy, executor));
return this;
}

public final zzdjy zzj(zzdhi zzdhi, Executor executor) {
this.zzb.add(new zzdlu(zzdhi, executor));
return this;
}

public final zzdjy zzk(zzasm zzasm, Executor executor) {
this.zzk.add(new zzdlu(zzasm, executor));
return this;
}

public final zzdjy zzl(zzdmc zzdmc, Executor executor) {
this.zzd.add(new zzdlu(zzdmc, executor));
return this;
}

public final zzdjy zzm(zzffx zzffx) {
this.zzo = zzffx;
return this;
}

public final zzdka zzn() {
return new zzdka(this, (zzdjz) null);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfgs.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzfgs implements zzffn {
public static final /* synthetic */ zzfgs zza = new zzfgs();

private /* synthetic */ zzfgs() {
}

public final void zza(Object obj) {
((zzcdn) obj).zze();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfgu.java

package com.google.android.gms.internal.ads;

import com.google.android.gms.ads.internal.client.zze;

public final /* synthetic */ class zzfgu implements zzffn {
public final /* synthetic */ zze zza;

public /* synthetic */ zzfgu(zze zze) {
this.zza = zze;
}

public final void zza(Object obj) {
((zzcdr) obj).zzf(this.zza);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfgv.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzfgv implements zzffn {
public final /* synthetic */ int zza;

public /* synthetic */ zzfgv(int i) {
this.zza = i;
}

public final void zza(Object obj) {
((zzcdr) obj).zze(this.zza);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfgw.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzfgw implements zzffn {
public final /* synthetic */ int zza;

public /* synthetic */ zzfgw(int i) {
this.zza = i;
}

public final void zza(Object obj) {
((zzccx) obj).zzg(this.zza);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfgx.java

package com.google.android.gms.internal.ads;

import com.google.android.gms.ads.internal.client.zze;

public final /* synthetic */ class zzfgx implements zzffn {
public final /* synthetic */ zze zza;

public /* synthetic */ zzfgx(zze zze) {
this.zza = zze;
}

public final void zza(Object obj) {
((zzcdn) obj).zzi(this.zza);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzflr.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzflr implements zzgdy {
public static final /* synthetic */ zzflr zza = new zzflr();

private /* synthetic */ zzflr() {
}

public final zzgfb zza(Object obj) {
zzfll zzfll = (zzfll) obj;
return zzger.zzj();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfls.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzfls implements zzgdy {
public final /* synthetic */ zzflu zza;
public final /* synthetic */ zzflm zzb;
public final /* synthetic */ zzfks zzc;
public final /* synthetic */ zzfln zzd;

public /* synthetic */ zzfls(zzflu zzflu, zzflm zzflm, zzfks zzfks, zzfln zzfln) {
this.zza = zzflu;
this.zzb = zzflm;
this.zzc = zzfks;
this.zzd = zzfln;
}

public final zzgfb zza(Object obj) {
return this.zza.zzb(this.zzb, this.zzc, this.zzd, (zzflb) obj);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzflt.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzflt implements zzgdy {
public final /* synthetic */ zzflu zza;
public final /* synthetic */ zzflm zzb;

public /* synthetic */ zzflt(zzflu zzflu, zzflm zzflm) {
this.zza = zzflu;
this.zzb = zzflm;
}

public final zzgfb zza(Object obj) {
return this.zza.zzc(this.zzb, (Exception) obj);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzflu.java

package com.google.android.gms.internal.ads;

public final class zzflu {
private final zzfln zza;
private final zzgfb zzb;
private boolean zzc = false;
private boolean zzd = false;

public zzflu(zzfks zzfks, zzflm zzflm, zzfln zzfln) {
this.zza = zzfln;
this.zzb = zzger.zzg(zzger.zzn(zzflm.zza(zzfln), new zzfls(this, zzflm, zzfks, zzfln), zzfln.zzb()), Exception.class, new zzflt(this, zzflm), zzfln.zzb());
}

/* JADX WARNING: Code restructure failed: missing block: B:18:0x0032, code lost:
return null;
*/
/* JADX WARNING: Code restructure failed: missing block: B:20:0x0034, code lost:
return null;
*/
/* Code decompiled incorrectly, please refer to instructions dump. */
public final synchronized com.google.android.gms.internal.ads.zzgfb zza(com.google.android.gms.internal.ads.zzfln r3) {
/*
r2 = this;
monitor-enter(r2)
boolean r0 = r2.zzd     // Catch:{ all -> 0x0035 }
r1 = 0
if (r0 != 0) goto L_0x0033
boolean r0 = r2.zzc     // Catch:{ all -> 0x0035 }
if (r0 == 0) goto L_0x000b
goto L_0x0033
L_0x000b:
com.google.android.gms.internal.ads.zzfln r0 = r2.zza     // Catch:{ all -> 0x0035 }
com.google.android.gms.internal.ads.zzflc r0 = r0.zza()     // Catch:{ all -> 0x0035 }
if (r0 == 0) goto L_0x0031
com.google.android.gms.internal.ads.zzflc r0 = r3.zza()     // Catch:{ all -> 0x0035 }
if (r0 == 0) goto L_0x0031
com.google.android.gms.internal.ads.zzfln r0 = r2.zza     // Catch:{ all -> 0x0035 }
com.google.android.gms.internal.ads.zzflc r0 = r0.zza()     // Catch:{ all -> 0x0035 }
com.google.android.gms.internal.ads.zzflc r3 = r3.zza()     // Catch:{ all -> 0x0035 }
boolean r3 = r0.equals(r3)     // Catch:{ all -> 0x0035 }
if (r3 != 0) goto L_0x002a
goto L_0x0031
L_0x002a:
r3 = 1
r2.zzc = r3     // Catch:{ all -> 0x0035 }
com.google.android.gms.internal.ads.zzgfb r3 = r2.zzb     // Catch:{ all -> 0x0035 }
monitor-exit(r2)
return r3
L_0x0031:
monitor-exit(r2)
return r1
L_0x0033:
monitor-exit(r2)
return r1
L_0x0035:
r3 = move-exception
monitor-exit(r2)
throw r3
*/
throw new UnsupportedOperationException("Method not decompiled: com.google.android.gms.internal.ads.zzflu.zza(com.google.android.gms.internal.ads.zzfln):com.google.android.gms.internal.ads.zzgfb");
}

public final /* synthetic */ zzgfb zzb(zzflm zzflm, zzfks zzfks, zzfln zzfln, zzflb zzflb) throws Exception {
synchronized (this) {
this.zzd = true;
zzflm.zzb(zzflb);
if (!this.zzc) {
zzfks.zzd(zzfln.zza(), zzflb);
zzgfb zzi = zzger.zzi((Object) null);
return zzi;
}
zzgfb zzi2 = zzger.zzi(new zzfll(zzflb, zzfln));
return zzi2;
}
}

public final /* synthetic */ zzgfb zzc(zzflm zzflm, Exception exc) throws Exception {
synchronized (this) {
this.zzd = true;
throw exc;
}
}

public final synchronized void zzd(zzgen zzgen) {
zzger.zzr(zzger.zzn(this.zzb, zzflr.zza, this.zza.zzb()), zzgen, this.zza.zzb());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzflv.java

package com.google.android.gms.internal.ads;

import android.support.v4.media.b;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.atomic.AtomicInteger;

final class zzflv implements ThreadFactory {
private final AtomicInteger zza = new AtomicInteger(1);

public final Thread newThread(Runnable runnable) {
return new Thread(runnable, b.g("AdWorker(NG) #", this.zza.getAndIncrement()));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzflw.java

package com.google.android.gms.internal.ads;

import com.google.android.gms.ads.internal.client.zzba;

public final class zzflw {
public static zzgfc zza() {
if (((Boolean) zzba.zzc().zzb(zzbjj.zzfe)).booleanValue()) {
return zzcib.zzc;
}
return ((Boolean) zzba.zzc().zzb(zzbjj.zzfd)).booleanValue() ? zzcib.zza : zzcib.zze;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzflx.java

package com.google.android.gms.internal.ads;

final class zzflx {
/* access modifiers changed from: private */
public static final zzfly zza = new zzfly();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfly.java

package com.google.android.gms.internal.ads;

public final class zzfly implements zzhep {
public static zzfly zza() {
return zzflx.zza;
}

public final /* synthetic */ Object zzb() {
zzgfc zzgfc = zzcib.zze;
zzhex.zzb(zzgfc);
return zzgfc;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzflz.java

package com.google.android.gms.internal.ads;

final class zzflz {
/* access modifiers changed from: private */
public static final zzfma zza = new zzfma();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfpd.java

package com.google.android.gms.internal.ads;

public final class zzfpd extends zzgxz implements zzgzo {
private zzfpd() {
super(zzfpg.zzb);
}

public /* synthetic */ zzfpd(zzfpc zzfpc) {
super(zzfpg.zzb);
}

public final int zza() {
return this.zza.zza();
}

public final zzfpd zzb(zzfpe zzfpe) {
zzao();
zzfpg.zzf(this.zza, zzfpe.zzak());
return this;
}

public final zzfpd zzc() {
zzao();
this.zza.zzd = zzgyd.zzaL();
return this;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfpe.java

package com.google.android.gms.internal.ads;

public final class zzfpe extends zzgxz implements zzgzo {
private zzfpe() {
super(zzfpf.zzb);
}

public /* synthetic */ zzfpe(zzfpc zzfpc) {
super(zzfpf.zzb);
}

public final zzfpe zza(zzfpa zzfpa) {
zzao();
zzfpf.zzd(this.zza, zzfpa.zzak());
return this;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfpf.java

package com.google.android.gms.internal.ads;

import java.util.Objects;

public final class zzfpf extends zzgyd implements zzgzo {
/* access modifiers changed from: private */
public static final zzfpf zzb;
private zzfpb zzd;

static {
zzfpf zzfpf = new zzfpf();
zzb = zzfpf;
zzgyd.zzaS(zzfpf.class, zzfpf);
}

private zzfpf() {
}

public static zzfpe zza() {
return zzb.zzaz();
}

public static /* synthetic */ void zzd(zzfpf zzfpf, zzfpb zzfpb) {
Objects.requireNonNull(zzfpb);
zzfpf.zzd = zzfpb;
}

public final Object zzb(int i, Object obj, Object obj2) {
int i3 = i - 1;
if (i3 == 0) {
return (byte) 1;
}
if (i3 == 2) {
return zzgyd.zzaP(zzb, "\u0000\u0001\u0000\u0000\u0006\u0006\u0001\u0000\u0000\u0000\u0006\t", new Object[]{"zzd"});
} else if (i3 == 3) {
return new zzfpf();
} else {
if (i3 == 4) {
return new zzfpe((zzfpc) null);
}
if (i3 != 5) {
return null;
}
return zzb;
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfpg.java

package com.google.android.gms.internal.ads;

import java.util.Objects;

public final class zzfpg extends zzgyd implements zzgzo {
/* access modifiers changed from: private */
public static final zzfpg zzb;
/* access modifiers changed from: private */
public zzgym zzd = zzgyd.zzaL();

static {
zzfpg zzfpg = new zzfpg();
zzb = zzfpg;
zzgyd.zzaS(zzfpg.class, zzfpg);
}

private zzfpg() {
}

public static zzfpd zzc() {
return zzb.zzaz();
}

public static /* synthetic */ void zzf(zzfpg zzfpg, zzfpf zzfpf) {
Objects.requireNonNull(zzfpf);
zzgym zzgym = zzfpg.zzd;
if (!zzgym.zzc()) {
zzfpg.zzd = zzgyd.zzaM(zzgym);
}
zzfpg.zzd.add(zzfpf);
}

public final int zza() {
return this.zzd.size();
}

public final Object zzb(int i, Object obj, Object obj2) {
int i3 = i - 1;
if (i3 == 0) {
return (byte) 1;
}
if (i3 == 2) {
return zzgyd.zzaP(zzb, "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0000\u0001\u001b", new Object[]{"zzd", zzfpf.class});
} else if (i3 == 3) {
return new zzfpg();
} else {
if (i3 == 4) {
return new zzfpd((zzfpc) null);
}
if (i3 != 5) {
return null;
}
return zzb;
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfph.java

package com.google.android.gms.internal.ads;

import androidx.annotation.Nullable;
import com.google.android.gms.ads.internal.client.zze;

public final class zzfph implements zzfol {
public final /* bridge */ /* synthetic */ zzfol zza(zze zze) {
return this;
}

public final /* bridge */ /* synthetic */ zzfol zzb(zzfiw zzfiw) {
return this;
}

public final /* bridge */ /* synthetic */ zzfol zzc(String str) {
return this;
}

public final /* bridge */ /* synthetic */ zzfol zzd(String str) {
return this;
}

public final /* bridge */ /* synthetic */ zzfol zze(String str) {
return this;
}

public final /* bridge */ /* synthetic */ zzfol zzf(boolean z) {
return this;
}

public final /* bridge */ /* synthetic */ zzfol zzg(Throwable th) {
return this;
}

public final /* bridge */ /* synthetic */ zzfol zzh() {
return this;
}

public final /* bridge */ /* synthetic */ zzfol zzi() {
return this;
}

public final synchronized boolean zzj() {
return false;
}

public final synchronized boolean zzk() {
return true;
}

@Nullable
public final synchronized zzfop zzl() {
return null;
}

public final /* bridge */ /* synthetic */ zzfol zzm(int i) {
return this;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfpi.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzfpi implements zzfxt {
public static final /* synthetic */ zzfpi zza = new zzfpi();

private /* synthetic */ zzfpi() {
}

public final Object apply(Object obj) {
return zzfpk.zzg(((zzfiy) obj).zza);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfpj.java

package com.google.android.gms.internal.ads;

public final /* synthetic */ class zzfpj implements zzfxt {
public static final /* synthetic */ zzfpj zza = new zzfpj();

private /* synthetic */ zzfpj() {
}

public final Object apply(Object obj) {
return zzfpk.zzg(((zzfiy) obj).zzb);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfpk.java

package com.google.android.gms.internal.ads;

import android.content.Context;
import android.net.Uri;
import android.support.v4.media.b;
import android.text.TextUtils;
import androidx.annotation.Nullable;
import com.google.android.gms.ads.internal.client.zzba;
import com.google.android.gms.common.util.Clock;
import com.google.firebase.installations.interop.BuildConfig;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public final class zzfpk {
private final zzeoj zza;
private final String zzb;
private final String zzc;
private final String zzd;
private final Context zze;
private final zzfiy zzf;
private final zzfiz zzg;
private final Clock zzh;
private final zzapj zzi;

public zzfpk(zzeoj zzeoj, zzchu zzchu, String str, String str2, Context context, @Nullable zzfiy zzfiy, @Nullable zzfiz zzfiz, Clock clock, zzapj zzapj) {
this.zza = zzeoj;
this.zzb = zzchu.zza;
this.zzc = str;
this.zzd = str2;
this.zze = context;
this.zzf = zzfiy;
this.zzg = zzfiz;
this.zzh = clock;
this.zzi = zzapj;
}

public static final List zzf(int i, int i3, List list) {
ArrayList arrayList = new ArrayList();
Iterator it = list.iterator();
while (it.hasNext()) {
arrayList.add(zzh((String) it.next(), "@gw_mpe@", b.g("2.", i3)));
}
return arrayList;
}

/* access modifiers changed from: private */
@Nullable
public static String zzg(@Nullable String str) {
return TextUtils.isEmpty(str) ? BuildConfig.FLAVOR : zzchn.zzl() ? "fakeForAdDebugLog" : str;
}

private static String zzh(String str, String str2, @Nullable String str3) {
if (true == TextUtils.isEmpty(str3)) {
str3 = BuildConfig.FLAVOR;
}
return str.replaceAll(str2, str3);
}

public final List zzc(zzfix zzfix, zzfil zzfil, List list) {
return zzd(zzfix, zzfil, false, BuildConfig.FLAVOR, BuildConfig.FLAVOR, list);
}

public final List zzd(zzfix zzfix, @Nullable zzfil zzfil, boolean z, @Nullable String str, @Nullable String str2, List list) {
ArrayList arrayList = new ArrayList();
String str3 = true != z ? "0" : "1";
Iterator it = list.iterator();
while (it.hasNext()) {
String zzh2 = zzh(zzh(zzh((String) it.next(), "@gw_adlocid@", zzfix.zza.zza.zzf), "@gw_adnetrefresh@", str3), "@gw_sdkver@", this.zzb);
if (zzfil != null) {
zzh2 = zzcfv.zzc(zzh(zzh(zzh(zzh2, "@gw_qdata@", zzfil.zzz), "@gw_adnetid@", zzfil.zzy), "@gw_allocid@", zzfil.zzx), this.zze, zzfil.zzX);
}
String zzh3 = zzh(zzh(zzh(zzh2, "@gw_adnetstatus@", this.zza.zzf()), "@gw_seqnum@", this.zzc), "@gw_sessid@", this.zzd);
boolean z2 = false;
if (((Boolean) zzba.zzc().zzb(zzbjj.zzcZ)).booleanValue() && !TextUtils.isEmpty(str)) {
z2 = true;
}
boolean z3 = !TextUtils.isEmpty(str2);
if (!z2) {
if (z3) {
z3 = true;
} else {
arrayList.add(zzh3);
}
}
if (this.zzi.zzf(Uri.parse(zzh3))) {
Uri.Builder buildUpon = Uri.parse(zzh3).buildUpon();
if (z2) {
buildUpon = buildUpon.appendQueryParameter("ms", str);
}
if (z3) {
buildUpon = buildUpon.appendQueryParameter("attok", str2);
}
zzh3 = buildUpon.build().toString();
}
arrayList.add(zzh3);
}
return arrayList;
}

/* JADX WARNING: Removed duplicated region for block: B:14:0x005f A[LOOP:0: B:12:0x0059->B:14:0x005f, LOOP_END] */
/* Code decompiled incorrectly, please refer to instructions dump. */
public final java.util.List zze(com.google.android.gms.internal.ads.zzfil r10, java.util.List r11, com.google.android.gms.internal.ads.zzccr r12) {
/*
r9 = this;
java.util.ArrayList r0 = new java.util.ArrayList
r0.<init>()
com.google.android.gms.common.util.Clock r1 = r9.zzh
long r1 = r1.currentTimeMillis()
java.lang.String r3 = r12.zzc()     // Catch:{ RemoteException -> 0x00a8 }
int r12 = r12.zzb()     // Catch:{ RemoteException -> 0x00a8 }
java.lang.String r12 = java.lang.Integer.toString(r12)     // Catch:{ RemoteException -> 0x00a8 }
com.google.android.gms.internal.ads.zzbjb r4 = com.google.android.gms.internal.ads.zzbjj.zzda
com.google.android.gms.internal.ads.zzbjh r5 = com.google.android.gms.ads.internal.client.zzba.zzc()
java.lang.Object r4 = r5.zzb(r4)
java.lang.Boolean r4 = (java.lang.Boolean) r4
boolean r4 = r4.booleanValue()
if (r4 == 0) goto L_0x0035
com.google.android.gms.internal.ads.zzfiz r4 = r9.zzg
if (r4 != 0) goto L_0x0032
com.google.android.gms.internal.ads.zzfya r4 = com.google.android.gms.internal.ads.zzfya.zzc()
goto L_0x003b
L_0x0032:
com.google.android.gms.internal.ads.zzfiy r4 = r4.zza
goto L_0x0037
L_0x0035:
com.google.android.gms.internal.ads.zzfiy r4 = r9.zzf
L_0x0037:
com.google.android.gms.internal.ads.zzfya r4 = com.google.android.gms.internal.ads.zzfya.zzd(r4)
L_0x003b:
com.google.android.gms.internal.ads.zzfpi r5 = com.google.android.gms.internal.ads.zzfpi.zza
com.google.android.gms.internal.ads.zzfya r5 = r4.zza(r5)
java.lang.String r6 = ""
java.lang.Object r5 = r5.zzb(r6)
java.lang.String r5 = (java.lang.String) r5
com.google.android.gms.internal.ads.zzfpj r7 = com.google.android.gms.internal.ads.zzfpj.zza
com.google.android.gms.internal.ads.zzfya r4 = r4.zza(r7)
java.lang.Object r4 = r4.zzb(r6)
java.lang.String r4 = (java.lang.String) r4
java.util.Iterator r11 = r11.iterator()
L_0x0059:
boolean r6 = r11.hasNext()
if (r6 == 0) goto L_0x00a7
java.lang.Object r6 = r11.next()
java.lang.String r6 = (java.lang.String) r6
java.lang.String r7 = android.net.Uri.encode(r5)
java.lang.String r8 = "@gw_rwd_userid@"
java.lang.String r6 = zzh(r6, r8, r7)
java.lang.String r7 = android.net.Uri.encode(r4)
java.lang.String r8 = "@gw_rwd_custom_data@"
java.lang.String r6 = zzh(r6, r8, r7)
java.lang.String r7 = java.lang.Long.toString(r1)
java.lang.String r8 = "@gw_tmstmp@"
java.lang.String r6 = zzh(r6, r8, r7)
java.lang.String r7 = android.net.Uri.encode(r3)
java.lang.String r8 = "@gw_rwd_itm@"
java.lang.String r6 = zzh(r6, r8, r7)
java.lang.String r7 = "@gw_rwd_amt@"
java.lang.String r6 = zzh(r6, r7, r12)
java.lang.String r7 = r9.zzb
java.lang.String r8 = "@gw_sdkver@"
java.lang.String r6 = zzh(r6, r8, r7)
android.content.Context r7 = r9.zze
boolean r8 = r10.zzX
java.lang.String r6 = com.google.android.gms.internal.ads.zzcfv.zzc(r6, r7, r8)
r0.add(r6)
goto L_0x0059
L_0x00a7:
return r0
L_0x00a8:
r10 = move-exception
java.lang.String r11 = "Unable to determine award type and amount."
com.google.android.gms.internal.ads.zzcho.zzh(r11, r10)
return r0
*/
throw new UnsupportedOperationException("Method not decompiled: com.google.android.gms.internal.ads.zzfpk.zze(com.google.android.gms.internal.ads.zzfil, java.util.List, com.google.android.gms.internal.ads.zzccr):java.util.List");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfpx.java

package com.google.android.gms.internal.ads;

import android.view.View;
import androidx.annotation.Nullable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.UUID;
import java.util.regex.Pattern;

public final class zzfpx extends zzfpt {
private static final Pattern zza = Pattern.compile("^[a-zA-Z0-9 ]+$");
private final zzfpv zzb;
private final zzfpu zzc;
private final List zzd = new ArrayList();
private zzfrr zze;
private zzfqu zzf;
private boolean zzg = false;
private boolean zzh = false;
private final String zzi;

public zzfpx(zzfpu zzfpu, zzfpv zzfpv) {
this.zzc = zzfpu;
this.zzb = zzfpv;
this.zzi = UUID.randomUUID().toString();
zzk((View) null);
if (zzfpv.zzd() == zzfpw.zza || zzfpv.zzd() == zzfpw.zzc) {
this.zzf = new zzfqv(zzfpv.zza());
} else {
this.zzf = new zzfqx(zzfpv.zzi(), (String) null);
}
this.zzf.zzj();
zzfqi.zza().zzd(this);
zzfqn.zza().zzd(this.zzf.zza(), zzfpu.zzb());
}

private final void zzk(View view) {
this.zze = new zzfrr(view);
}

public final void zzb(View view, zzfpz zzfpz, @Nullable String str) {
zzfqk zzfqk;
if (this.zzh) {
return;
}
if (zza.matcher("Ad overlay").matches()) {
Iterator it = this.zzd.iterator();
while (true) {
if (!it.hasNext()) {
zzfqk = null;
break;
}
zzfqk = (zzfqk) it.next();
if (zzfqk.zzb().get() == view) {
break;
}
}
if (zzfqk == null) {
this.zzd.add(new zzfqk(view, zzfpz, "Ad overlay"));
return;
}
return;
}
throw new IllegalArgumentException("FriendlyObstruction has detailed reason that contains characters not in [a-z][A-Z][0-9] or space");
}

public final void zzc() {
if (!this.zzh) {
this.zze.clear();
if (!this.zzh) {
this.zzd.clear();
}
this.zzh = true;
zzfqn.zza().zzc(this.zzf.zza());
zzfqi.zza().zze(this);
this.zzf.zzc();
this.zzf = null;
}
}

public final void zzd(View view) {
if (!this.zzh && zzf() != view) {
zzk(view);
this.zzf.zzb();
Collection<zzfpx> zzc2 = zzfqi.zza().zzc();
if (zzc2 != null && !zzc2.isEmpty()) {
for (zzfpx zzfpx : zzc2) {
if (zzfpx != this && zzfpx.zzf() == view) {
zzfpx.zze.clear();
}
}
}
}
}

public final void zze() {
if (!this.zzg) {
this.zzg = true;
zzfqi.zza().zzf(this);
this.zzf.zzh(zzfqo.zzb().zza());
this.zzf.zzf(this, this.zzb);
}
}

public final View zzf() {
return (View) this.zze.get();
}

public final zzfqu zzg() {
return this.zzf;
}

public final String zzh() {
return this.zzi;
}

public final List zzi() {
return this.zzd;
}

public final boolean zzj() {
return this.zzg && !this.zzh;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfpy.java

package com.google.android.gms.internal.ads;

public enum zzfpy {
DEFINED_BY_JAVASCRIPT("definedByJavaScript"),
HTML_DISPLAY("htmlDisplay"),
NATIVE_DISPLAY("nativeDisplay"),
VIDEO("video"),
AUDIO("audio");

private final String zzg;

private zzfpy(String str) {
this.zzg = str;
}

public final String toString() {
return this.zzg;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfpz.java

package com.google.android.gms.internal.ads;

public enum zzfpz {
VIDEO_CONTROLS,
CLOSE_AD,
NOT_VISIBLE,
OTHER
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfqa.java

package com.google.android.gms.internal.ads;

import com.energysh.common.receiver.ZG.TPrsYFVWK;

public enum zzfqa {
DEFINED_BY_JAVASCRIPT("definedByJavaScript"),
UNSPECIFIED("unspecified"),
LOADED("loaded"),
BEGIN_TO_RENDER("beginToRender"),
ONE_PIXEL(TPrsYFVWK.UskPSsyhxR),
VIEWABLE("viewable"),
AUDIBLE("audible"),
OTHER("other");

private final String zzj;

private zzfqa(String str) {
this.zzj = str;
}

public final String toString() {
return this.zzj;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfqb.java

package com.google.android.gms.internal.ads;

public enum zzfqb {
NATIVE("native"),
JAVASCRIPT("javascript"),
NONE("none");

private final String zze;

private zzfqb(String str) {
this.zze = str;
}

public final String toString() {
return this.zze;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfqc.java

package com.google.android.gms.internal.ads;

public final class zzfqc {
private final String zza;
private final String zzb;

private zzfqc(String str, String str2) {
this.zza = str;
this.zzb = str2;
}

public static zzfqc zza(String str, String str2) {
zzfra.zza(str, "Name is null or empty");
zzfra.zza(str2, "Version is null or empty");
return new zzfqc(str, str2);
}

public final String zzb() {
return this.zza;
}

public final String zzc() {
return this.zzb;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfqd.java

package com.google.android.gms.internal.ads;

public final class zzfqd {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\ads\zzfqe.java

package com.google.android.gms.internal.ads;

public final class zzfqe {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\play_billing\zzj.java

package com.google.android.gms.internal.play_billing;

import android.os.BadParcelableException;
import android.os.Parcel;
import android.os.Parcelable;
import android.support.v4.media.b;

public final class zzj {
private static final ClassLoader zza = zzj.class.getClassLoader();

private zzj() {
}

public static Parcelable zza(Parcel parcel, Parcelable.Creator creator) {
if (parcel.readInt() == 0) {
return null;
}
return (Parcelable) creator.createFromParcel(parcel);
}

public static void zzb(Parcel parcel) {
int dataAvail = parcel.dataAvail();
if (dataAvail > 0) {
throw new BadParcelableException(b.g("Parcel data not fully consumed, unread size: ", dataAvail));
}
}

public static void zzc(Parcel parcel, Parcelable parcelable) {
parcel.writeInt(1);
parcelable.writeToParcel(parcel, 0);
}

/* JADX WARNING: type inference failed for: r1v0, types: [android.os.IInterface, android.os.IBinder] */
/* JADX WARNING: Unknown variable types count: 1 */
/* Code decompiled incorrectly, please refer to instructions dump. */
public static void zzd(android.os.Parcel r0, android.os.IInterface r1) {
/*
r0.writeStrongBinder(r1)
return
*/
throw new UnsupportedOperationException("Method not decompiled: com.google.android.gms.internal.play_billing.zzj.zzd(android.os.Parcel, android.os.IInterface):void");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\play_billing\zzk.java

}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\play_billing\zzl.java

package com.google.android.gms.internal.play_billing;

public final class zzl extends zzk {
public static boolean zza(Object obj, Object obj2) {
return obj == obj2 || (obj != null && obj.equals(obj2));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\play_billing\zzm.java

package com.google.android.gms.internal.play_billing;

import android.support.v4.media.b;

public final class zzm {
public static int zza(int i, int i3, String str) {
String str2;
if (i >= 0 && i < i3) {
return i;
}
if (i < 0) {
str2 = zzn.zza("%s (%s) must not be negative", "index", Integer.valueOf(i));
} else if (i3 < 0) {
throw new IllegalArgumentException(b.g("negative size: ", i3));
} else {
str2 = zzn.zza("%s (%s) must be less than size (%s)", "index", Integer.valueOf(i), Integer.valueOf(i3));
}
throw new IndexOutOfBoundsException(str2);
}

public static int zzb(int i, int i3, String str) {
if (i >= 0 && i <= i3) {
return i;
}
throw new IndexOutOfBoundsException(zze(i, i3, "index"));
}

public static Object zzc(Object obj, Object obj2) {
if (obj != null) {
return obj;
}
throw new NullPointerException((String) obj2);
}

public static void zzd(int i, int i3, int i4) {
String str;
if (i < 0 || i3 < i || i3 > i4) {
if (i < 0 || i > i4) {
str = zze(i, i4, "start index");
} else if (i3 < 0 || i3 > i4) {
str = zze(i3, i4, "end index");
} else {
str = zzn.zza("end index (%s) must not be less than start index (%s)", Integer.valueOf(i3), Integer.valueOf(i));
}
throw new IndexOutOfBoundsException(str);
}
}

private static String zze(int i, int i3, String str) {
if (i < 0) {
return zzn.zza("%s (%s) must not be negative", str, Integer.valueOf(i));
} else if (i3 >= 0) {
return zzn.zza("%s (%s) must not be greater than size (%s)", str, Integer.valueOf(i), Integer.valueOf(i3));
} else {
throw new IllegalArgumentException(b.g("negative size: ", i3));
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\play_billing\zzn.java

package com.google.android.gms.internal.play_billing;

import android.support.v4.media.a;
import java.util.logging.Level;
import java.util.logging.Logger;

public final class zzn {
public static String zza(String str, Object... objArr) {
int length;
int length2;
int indexOf;
String str2;
int i = 0;
int i3 = 0;
while (true) {
length = objArr.length;
if (i3 >= length) {
break;
}
Object obj = objArr[i3];
if (obj == null) {
str2 = "null";
} else {
try {
str2 = obj.toString();
} catch (Exception e) {
String str3 = obj.getClass().getName() + '@' + Integer.toHexString(System.identityHashCode(obj));
Logger.getLogger("com.google.common.base.Strings").logp(Level.WARNING, "com.google.common.base.Strings", "lenientToString", "Exception during lenientFormat for ".concat(str3), e);
StringBuilder v = a.v("<", str3, " threw ");
v.append(e.getClass().getName());
v.append(">");
str2 = v.toString();
}
}
objArr[i3] = str2;
i3++;
}
StringBuilder sb = new StringBuilder((length * 16) + str.length());
int i4 = 0;
while (true) {
length2 = objArr.length;
if (i >= length2 || (indexOf = str.indexOf("%s", i4)) == -1) {
sb.append(str, i4, str.length());
} else {
sb.append(str, i4, indexOf);
sb.append(objArr[i]);
i4 = indexOf + 2;
i++;
}
}
sb.append(str, i4, str.length());
if (i < length2) {
sb.append(" [");
sb.append(objArr[i]);
for (int i5 = i + 1; i5 < objArr.length; i5++) {
sb.append(", ");
sb.append(objArr[i5]);
}
sb.append(']');
}
return sb.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\play_billing\zzo.java

package com.google.android.gms.internal.play_billing;

import java.util.NoSuchElementException;

abstract class zzo extends zzai {
private final int zza;
private int zzb;

public zzo(int i, int i3) {
zzm.zzb(i3, i, "index");
this.zza = i;
this.zzb = i3;
}

public final boolean hasNext() {
return this.zzb < this.zza;
}

public final boolean hasPrevious() {
return this.zzb > 0;
}

public final Object next() {
if (hasNext()) {
int i = this.zzb;
this.zzb = i + 1;
return zza(i);
}
throw new NoSuchElementException();
}

public final int nextIndex() {
return this.zzb;
}

public final Object previous() {
if (hasPrevious()) {
int i = this.zzb - 1;
this.zzb = i;
return zza(i);
}
throw new NoSuchElementException();
}

public final int previousIndex() {
return this.zzb - 1;
}

public abstract Object zza(int i);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\play_billing\zzp.java

package com.google.android.gms.internal.play_billing;

import java.util.Objects;

final class zzp {
public static void zza(Object obj, Object obj2) {
if (obj == null) {
Objects.toString(obj2);
throw new NullPointerException("null key in entry: null=".concat(String.valueOf(obj2)));
} else if (obj2 == null) {
throw new NullPointerException("null value in entry: " + obj + "=null");
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\play_billing\zzq.java

package com.google.android.gms.internal.play_billing;

final class zzq {
public static int zza(int i) {
return (int) (((long) Integer.rotateLeft((int) (((long) i) * -862048943), 15)) * 461845907);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\play_billing\zzv.java

package com.google.android.gms.internal.play_billing;

import android.support.v4.media.b;

final class zzv {
private final Object zza;
private final Object zzb;
private final Object zzc;

public zzv(Object obj, Object obj2, Object obj3) {
this.zza = obj;
this.zzb = obj2;
this.zzc = obj3;
}

public final IllegalArgumentException zza() {
StringBuilder q = b.q("Multiple entries with same key: ");
q.append(this.zza);
q.append("=");
q.append(this.zzb);
q.append(" and ");
q.append(this.zza);
q.append("=");
q.append(this.zzc);
return new IllegalArgumentException(q.toString());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\play_billing\zzw.java

package com.google.android.gms.internal.play_billing;

import java.util.Arrays;

public final class zzw {
public Object[] zza = new Object[8];
public int zzb = 0;
public zzv zzc;

public final zzw zza(Object obj, Object obj2) {
int i = this.zzb + 1;
int i3 = i + i;
Object[] objArr = this.zza;
int length = objArr.length;
if (i3 > length) {
int i4 = length + (length >> 1) + 1;
if (i4 < i3) {
int highestOneBit = Integer.highestOneBit(i3 - 1);
i4 = highestOneBit + highestOneBit;
}
if (i4 < 0) {
i4 = Integer.MAX_VALUE;
}
this.zza = Arrays.copyOf(objArr, i4);
}
zzp.zza(obj, obj2);
Object[] objArr2 = this.zza;
int i5 = this.zzb;
int i6 = i5 + i5;
objArr2[i6] = obj;
objArr2[i6 + 1] = obj2;
this.zzb = i5 + 1;
return this;
}

public final zzx zzb() {
zzv zzv = this.zzc;
if (zzv == null) {
zzaf zzf = zzaf.zzf(this.zzb, this.zza, this);
zzv zzv2 = this.zzc;
if (zzv2 == null) {
return zzf;
}
throw zzv2.zza();
}
throw zzv.zza();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\play_billing\zzx.java

package com.google.android.gms.internal.play_billing;

import android.support.v4.media.b;
import java.io.Serializable;
import java.util.Map;
import java.util.Set;

public abstract class zzx implements Map, Serializable {
private transient zzy zza;
private transient zzy zzb;
private transient zzr zzc;

@Deprecated
public final void clear() {
throw new UnsupportedOperationException();
}

public final boolean containsKey(Object obj) {
return get(obj) != null;
}

public final boolean containsValue(Object obj) {
return values().contains(obj);
}

public final boolean equals(Object obj) {
if (this == obj) {
return true;
}
if (!(obj instanceof Map)) {
return false;
}
return entrySet().equals(((Map) obj).entrySet());
}

public abstract Object get(Object obj);

public final Object getOrDefault(Object obj, Object obj2) {
Object obj3 = get(obj);
return obj3 != null ? obj3 : obj2;
}

public final int hashCode() {
return zzag.zza(entrySet());
}

public final boolean isEmpty() {
return size() == 0;
}

public final /* bridge */ /* synthetic */ Set keySet() {
zzy zzy = this.zzb;
if (zzy != null) {
return zzy;
}
zzy zzd = zzd();
this.zzb = zzd;
return zzd;
}

@Deprecated
public final Object put(Object obj, Object obj2) {
throw new UnsupportedOperationException();
}

@Deprecated
public final void putAll(Map map) {
throw new UnsupportedOperationException();
}

@Deprecated
public final Object remove(Object obj) {
throw new UnsupportedOperationException();
}

public final String toString() {
int size = size();
if (size >= 0) {
StringBuilder sb = new StringBuilder((int) Math.min(((long) size) * 8, 1073741824));
sb.append('{');
boolean z = true;
for (Map.Entry entry : entrySet()) {
if (!z) {
sb.append(", ");
}
sb.append(entry.getKey());
sb.append('=');
sb.append(entry.getValue());
z = false;
}
sb.append('}');
return sb.toString();
}
throw new IllegalArgumentException(b.g("size cannot be negative but was: ", size));
}

public abstract zzr zza();

/* renamed from: zzb */
public final zzr values() {
zzr zzr = this.zzc;
if (zzr != null) {
return zzr;
}
zzr zza2 = zza();
this.zzc = zza2;
return zza2;
}

public abstract zzy zzc();

public abstract zzy zzd();

/* renamed from: zze */
public final zzy entrySet() {
zzy zzy = this.zza;
if (zzy != null) {
return zzy;
}
zzy zzc2 = zzc();
this.zza = zzc2;
return zzc2;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\internal\play_billing\zzy.java

package com.google.android.gms.internal.play_billing;

import java.util.Set;

public abstract class zzy extends zzr implements Set {
private transient zzu zza;

public final boolean equals(Object obj) {
if (obj == this || obj == this) {
return true;
}
if (obj instanceof Set) {
Set set = (Set) obj;
try {
if (size() == set.size() && containsAll(set)) {
return true;
}
} catch (ClassCastException | NullPointerException unused) {
}
}
return false;
}

public final int hashCode() {
return zzag.zza(this);
}

public zzu zzd() {
zzu zzu = this.zza;
if (zzu != null) {
return zzu;
}
zzu zzh = zzh();
this.zza = zzh;
return zzh;
}

/* renamed from: zze */
public abstract zzah iterator();

public zzu zzh() {
return zzu.zzi(toArray());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzjb.java

package com.google.android.gms.measurement.internal;

import android.os.RemoteException;
import com.google.android.gms.common.internal.Preconditions;
import java.util.concurrent.atomic.AtomicReference;

final class zzjb implements Runnable {
public final /* synthetic */ AtomicReference zza;
public final /* synthetic */ zzq zzb;
public final /* synthetic */ boolean zzc;
public final /* synthetic */ zzjy zzd;

public zzjb(zzjy zzjy, AtomicReference atomicReference, zzq zzq, boolean z) {
this.zzd = zzjy;
this.zza = atomicReference;
this.zzb = zzq;
this.zzc = z;
}

public final void run() {
AtomicReference atomicReference;
synchronized (this.zza) {
try {
zzjy zzjy = this.zzd;
zzek zzh = zzjy.zzh(zzjy);
if (zzh == null) {
zzjy.zzs.zzay().zzd().zza("Failed to get all user properties; not connected to service");
this.zza.notify();
return;
}
Preconditions.checkNotNull(this.zzb);
this.zza.set(zzh.zze(this.zzb, this.zzc));
zzjy.zzp(this.zzd);
atomicReference = this.zza;
atomicReference.notify();
} catch (RemoteException e) {
try {
this.zzd.zzs.zzay().zzd().zzb("Failed to get all user properties; remote exception", e);
atomicReference = this.zza;
} catch (Throwable th) {
this.zza.notify();
throw th;
}
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzjc.java

package com.google.android.gms.measurement.internal;

import android.os.RemoteException;
import android.support.v4.media.b;
import com.google.android.gms.common.internal.Preconditions;

final class zzjc implements Runnable {
public final /* synthetic */ zzq zza;
public final /* synthetic */ zzjy zzb;

public zzjc(zzjy zzjy, zzq zzq) {
this.zzb = zzjy;
this.zza = zzq;
}

public final void run() {
zzjy zzjy = this.zzb;
zzek zzh = zzjy.zzh(zzjy);
if (zzh == null) {
b.y(zzjy.zzs, "Failed to reset data on the service: not connected to service");
return;
}
try {
Preconditions.checkNotNull(this.zza);
zzh.zzm(this.zza);
} catch (RemoteException e) {
this.zzb.zzs.zzay().zzd().zzb("Failed to reset data on the service: remote exception", e);
}
zzjy.zzp(this.zzb);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzjd.java

package com.google.android.gms.measurement.internal;

import android.os.RemoteException;
import com.google.android.gms.common.internal.Preconditions;
import java.util.concurrent.atomic.AtomicReference;

final class zzjd implements Runnable {
public final /* synthetic */ AtomicReference zza;
public final /* synthetic */ zzq zzb;
public final /* synthetic */ zzjy zzc;

public zzjd(zzjy zzjy, AtomicReference atomicReference, zzq zzq) {
this.zzc = zzjy;
this.zza = atomicReference;
this.zzb = zzq;
}

public final void run() {
AtomicReference atomicReference;
synchronized (this.zza) {
try {
if (!this.zzc.zzs.zzm().zzc().zzi(zzah.zzb)) {
this.zzc.zzs.zzay().zzl().zza("Analytics storage consent denied; will not get app instance id");
this.zzc.zzs.zzq().zzO((String) null);
this.zzc.zzs.zzm().zze.zzb((String) null);
this.zza.set((Object) null);
this.zza.notify();
return;
}
zzjy zzjy = this.zzc;
zzek zzh = zzjy.zzh(zzjy);
if (zzh == null) {
zzjy.zzs.zzay().zzd().zza("Failed to get app instance id");
this.zza.notify();
return;
}
Preconditions.checkNotNull(this.zzb);
this.zza.set(zzh.zzd(this.zzb));
String str = (String) this.zza.get();
if (str != null) {
this.zzc.zzs.zzq().zzO(str);
this.zzc.zzs.zzm().zze.zzb(str);
}
zzjy.zzp(this.zzc);
atomicReference = this.zza;
atomicReference.notify();
} catch (RemoteException e) {
try {
this.zzc.zzs.zzay().zzd().zzb("Failed to get app instance id", e);
atomicReference = this.zza;
} catch (Throwable th) {
this.zza.notify();
throw th;
}
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzje.java

package com.google.android.gms.measurement.internal;

import android.os.RemoteException;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.internal.measurement.zzcf;

final class zzje implements Runnable {
public final /* synthetic */ zzq zza;
public final /* synthetic */ zzcf zzb;
public final /* synthetic */ zzjy zzc;

public zzje(zzjy zzjy, zzq zzq, zzcf zzcf) {
this.zzc = zzjy;
this.zza = zzq;
this.zzb = zzcf;
}

public final void run() {
zzge zzge;
String str = null;
try {
if (!this.zzc.zzs.zzm().zzc().zzi(zzah.zzb)) {
this.zzc.zzs.zzay().zzl().zza("Analytics storage consent denied; will not get app instance id");
this.zzc.zzs.zzq().zzO((String) null);
this.zzc.zzs.zzm().zze.zzb((String) null);
zzge = this.zzc.zzs;
} else {
zzjy zzjy = this.zzc;
zzek zzh = zzjy.zzh(zzjy);
if (zzh == null) {
zzjy.zzs.zzay().zzd().zza("Failed to get app instance id");
zzge = this.zzc.zzs;
} else {
Preconditions.checkNotNull(this.zza);
str = zzh.zzd(this.zza);
if (str != null) {
this.zzc.zzs.zzq().zzO(str);
this.zzc.zzs.zzm().zze.zzb(str);
}
zzjy.zzp(this.zzc);
zzge = this.zzc.zzs;
}
}
} catch (RemoteException e) {
this.zzc.zzs.zzay().zzd().zzb("Failed to get app instance id", e);
zzge = this.zzc.zzs;
} catch (Throwable th) {
this.zzc.zzs.zzv().zzV(this.zzb, (String) null);
throw th;
}
zzge.zzv().zzV(this.zzb, str);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzjf.java

package com.google.android.gms.measurement.internal;

import android.os.RemoteException;
import android.support.v4.media.b;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable;

final class zzjf implements Runnable {
public final /* synthetic */ zzq zza;
public final /* synthetic */ zzjy zzb;

public zzjf(zzjy zzjy, zzq zzq) {
this.zzb = zzjy;
this.zza = zzq;
}

public final void run() {
zzjy zzjy = this.zzb;
zzek zzh = zzjy.zzh(zzjy);
if (zzh == null) {
b.y(zzjy.zzs, "Discarding data. Failed to send app launch");
return;
}
try {
Preconditions.checkNotNull(this.zza);
zzh.zzj(this.zza);
this.zzb.zzs.zzi().zzm();
this.zzb.zzD(zzh, (AbstractSafeParcelable) null, this.zza);
zzjy.zzp(this.zzb);
} catch (RemoteException e) {
this.zzb.zzs.zzay().zzd().zzb("Failed to send app launch to the service", e);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzjg.java

package com.google.android.gms.measurement.internal;

import android.os.RemoteException;
import android.support.v4.media.b;

final class zzjg implements Runnable {
public final /* synthetic */ zziq zza;
public final /* synthetic */ zzjy zzb;

public zzjg(zzjy zzjy, zziq zziq) {
this.zzb = zzjy;
this.zza = zziq;
}

public final void run() {
zzjy zzjy = this.zzb;
zzek zzh = zzjy.zzh(zzjy);
if (zzh == null) {
b.y(zzjy.zzs, "Failed to send current screen to service");
return;
}
try {
zziq zziq = this.zza;
if (zziq == null) {
zzh.zzq(0, (String) null, (String) null, zzjy.zzs.zzau().getPackageName());
} else {
zzh.zzq(zziq.zzc, zziq.zza, zziq.zzb, zzjy.zzs.zzau().getPackageName());
}
zzjy.zzp(this.zzb);
} catch (RemoteException e) {
this.zzb.zzs.zzay().zzd().zzb("Failed to send current screen to the service", e);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzjh.java

package com.google.android.gms.measurement.internal;

import android.os.Bundle;
import android.os.RemoteException;
import android.support.v4.media.b;
import com.google.android.gms.common.internal.Preconditions;

final class zzjh implements Runnable {
public final /* synthetic */ zzq zza;
public final /* synthetic */ Bundle zzb;
public final /* synthetic */ zzjy zzc;

public zzjh(zzjy zzjy, zzq zzq, Bundle bundle) {
this.zzc = zzjy;
this.zza = zzq;
this.zzb = bundle;
}

public final void run() {
zzjy zzjy = this.zzc;
zzek zzh = zzjy.zzh(zzjy);
if (zzh == null) {
b.y(zzjy.zzs, "Failed to send default event parameters to service");
return;
}
try {
Preconditions.checkNotNull(this.zza);
zzh.zzr(this.zzb, this.zza);
} catch (RemoteException e) {
this.zzc.zzs.zzay().zzd().zzb("Failed to send default event parameters to service", e);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzji.java

package com.google.android.gms.measurement.internal;

final class zzji extends zzap {
public final /* synthetic */ zzjy zza;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public zzji(zzjy zzjy, zzgz zzgz) {
super(zzgz);
this.zza = zzjy;
}

public final void zzc() {
zzjy zzjy = this.zza;
zzjy.zzg();
if (zzjy.zzL()) {
zzjy.zzs.zzay().zzj().zza("Inactivity, disconnecting from the service");
zzjy.zzs();
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzjj.java

package com.google.android.gms.measurement.internal;

import android.os.RemoteException;
import com.google.android.gms.internal.measurement.zzcf;

final class zzjj implements Runnable {
public final /* synthetic */ zzaw zza;
public final /* synthetic */ String zzb;
public final /* synthetic */ zzcf zzc;
public final /* synthetic */ zzjy zzd;

public zzjj(zzjy zzjy, zzaw zzaw, String str, zzcf zzcf) {
this.zzd = zzjy;
this.zza = zzaw;
this.zzb = str;
this.zzc = zzcf;
}

public final void run() {
zzge zzge;
byte[] bArr = null;
try {
zzjy zzjy = this.zzd;
zzek zzh = zzjy.zzh(zzjy);
if (zzh == null) {
zzjy.zzs.zzay().zzd().zza("Discarding data. Failed to send event to service to bundle");
zzge = this.zzd.zzs;
} else {
bArr = zzh.zzu(this.zza, this.zzb);
zzjy.zzp(this.zzd);
zzge = this.zzd.zzs;
}
} catch (RemoteException e) {
this.zzd.zzs.zzay().zzd().zzb("Failed to send event to the service to bundle", e);
zzge = this.zzd.zzs;
} catch (Throwable th) {
this.zzd.zzs.zzv().zzS(this.zzc, bArr);
throw th;
}
zzge.zzv().zzS(this.zzc, bArr);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzjk.java

package com.google.android.gms.measurement.internal;

import android.support.v4.media.c;

final class zzjk extends zzap {
public final /* synthetic */ zzjy zza;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public zzjk(zzjy zzjy, zzgz zzgz) {
super(zzgz);
this.zza = zzjy;
}

public final void zzc() {
c.p(this.zza.zzs, "Tasks have been queued for a long time");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzjl.java

package com.google.android.gms.measurement.internal;

import android.os.RemoteException;
import android.support.v4.media.b;
import com.google.android.gms.common.internal.Preconditions;

final class zzjl implements Runnable {
public final /* synthetic */ zzq zza;
public final /* synthetic */ zzjy zzb;

public zzjl(zzjy zzjy, zzq zzq) {
this.zzb = zzjy;
this.zza = zzq;
}

public final void run() {
zzjy zzjy = this.zzb;
zzek zzh = zzjy.zzh(zzjy);
if (zzh == null) {
b.y(zzjy.zzs, "Failed to send measurementEnabled to service");
return;
}
try {
Preconditions.checkNotNull(this.zza);
zzh.zzs(this.zza);
zzjy.zzp(this.zzb);
} catch (RemoteException e) {
this.zzb.zzs.zzay().zzd().zzb("Failed to send measurementEnabled to the service", e);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzjm.java

package com.google.android.gms.measurement.internal;

import android.os.RemoteException;
import android.support.v4.media.b;
import com.bytedance.sdk.component.adexpress.theme.gDXJ.BBhKzWxqglRWF;
import com.google.android.gms.common.internal.Preconditions;

final class zzjm implements Runnable {
public final /* synthetic */ zzq zza;
public final /* synthetic */ zzjy zzb;

public zzjm(zzjy zzjy, zzq zzq) {
this.zzb = zzjy;
this.zza = zzq;
}

public final void run() {
zzjy zzjy = this.zzb;
zzek zzh = zzjy.zzh(zzjy);
if (zzh == null) {
b.y(zzjy.zzs, BBhKzWxqglRWF.zGPdeXJNu);
return;
}
try {
Preconditions.checkNotNull(this.zza);
zzh.zzp(this.zza);
zzjy.zzp(this.zzb);
} catch (RemoteException e) {
this.zzb.zzs.zzay().zzd().zzb("Failed to send consent settings to the service", e);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzjn.java

package com.google.android.gms.measurement.internal;

import android.support.v4.media.b;
import com.google.android.gms.common.internal.Preconditions;

final class zzjn implements Runnable {
public final /* synthetic */ zzq zza;
public final /* synthetic */ boolean zzb;
public final /* synthetic */ zzaw zzc;
public final /* synthetic */ String zzd;
public final /* synthetic */ zzjy zze;

public zzjn(zzjy zzjy, boolean z, zzq zzq, boolean z2, zzaw zzaw, String str) {
this.zze = zzjy;
this.zza = zzq;
this.zzb = z2;
this.zzc = zzaw;
this.zzd = str;
}

public final void run() {
zzjy zzjy = this.zze;
zzek zzh = zzjy.zzh(zzjy);
if (zzh == null) {
b.y(zzjy.zzs, "Discarding data. Failed to send event to service");
return;
}
Preconditions.checkNotNull(this.zza);
this.zze.zzD(zzh, this.zzb ? null : this.zzc, this.zza);
zzjy.zzp(this.zze);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzjq.java

package com.google.android.gms.measurement.internal;

import android.os.RemoteException;
import com.google.android.gms.common.internal.Preconditions;
import com.google.android.gms.internal.measurement.zzcf;
import java.util.ArrayList;

final class zzjq implements Runnable {
public final /* synthetic */ String zza;
public final /* synthetic */ String zzb;
public final /* synthetic */ zzq zzc;
public final /* synthetic */ zzcf zzd;
public final /* synthetic */ zzjy zze;

public zzjq(zzjy zzjy, String str, String str2, zzq zzq, zzcf zzcf) {
this.zze = zzjy;
this.zza = str;
this.zzb = str2;
this.zzc = zzq;
this.zzd = zzcf;
}

public final void run() {
zzge zzge;
ArrayList arrayList = new ArrayList();
try {
zzjy zzjy = this.zze;
zzek zzh = zzjy.zzh(zzjy);
if (zzh == null) {
zzjy.zzs.zzay().zzd().zzc("Failed to get conditional properties; not connected to service", this.zza, this.zzb);
zzge = this.zze.zzs;
} else {
Preconditions.checkNotNull(this.zzc);
arrayList = zzln.zzH(zzh.zzf(this.zza, this.zzb, this.zzc));
zzjy.zzp(this.zze);
zzge = this.zze.zzs;
}
} catch (RemoteException e) {
this.zze.zzs.zzay().zzd().zzd("Failed to get conditional properties; remote exception", this.zza, this.zzb, e);
zzge = this.zze.zzs;
} catch (Throwable th) {
this.zze.zzs.zzv().zzQ(this.zzd, arrayList);
throw th;
}
zzge.zzv().zzQ(this.zzd, arrayList);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzka.java

package com.google.android.gms.measurement.internal;

import android.util.Pair;
import androidx.annotation.WorkerThread;
import com.google.android.gms.ads.identifier.AdvertisingIdClient;
import com.google.firebase.installations.interop.BuildConfig;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Objects;

public final class zzka extends zzkt {
public final zzff zza;
public final zzff zzb;
public final zzff zzc;
public final zzff zzd;
public final zzff zze;
private final Map zzg = new HashMap();

public zzka(zzlf zzlf) {
super(zzlf);
zzfj zzm = this.zzs.zzm();
Objects.requireNonNull(zzm);
this.zza = new zzff(zzm, "last_delete_stale", 0);
zzfj zzm2 = this.zzs.zzm();
Objects.requireNonNull(zzm2);
this.zzb = new zzff(zzm2, "backoff", 0);
zzfj zzm3 = this.zzs.zzm();
Objects.requireNonNull(zzm3);
this.zzc = new zzff(zzm3, "last_upload", 0);
zzfj zzm4 = this.zzs.zzm();
Objects.requireNonNull(zzm4);
this.zzd = new zzff(zzm4, "last_upload_attempt", 0);
zzfj zzm5 = this.zzs.zzm();
Objects.requireNonNull(zzm5);
this.zze = new zzff(zzm5, "midnight_offset", 0);
}

@WorkerThread
@Deprecated
public final Pair zza(String str) {
zzjz zzjz;
zzg();
long elapsedRealtime = this.zzs.zzav().elapsedRealtime();
zzjz zzjz2 = (zzjz) this.zzg.get(str);
if (zzjz2 != null && elapsedRealtime < zzjz2.zzc) {
return new Pair(zzjz2.zza, Boolean.valueOf(zzjz2.zzb));
}
AdvertisingIdClient.setShouldSkipGmsCoreVersionCheck(true);
long zzi = this.zzs.zzf().zzi(str, zzeh.zza) + elapsedRealtime;
try {
AdvertisingIdClient.Info advertisingIdInfo = AdvertisingIdClient.getAdvertisingIdInfo(this.zzs.zzau());
if (advertisingIdInfo == null) {
return new Pair(BuildConfig.FLAVOR, Boolean.FALSE);
}
String id = advertisingIdInfo.getId();
zzjz = id != null ? new zzjz(id, advertisingIdInfo.isLimitAdTrackingEnabled(), zzi) : new zzjz(BuildConfig.FLAVOR, advertisingIdInfo.isLimitAdTrackingEnabled(), zzi);
this.zzg.put(str, zzjz);
AdvertisingIdClient.setShouldSkipGmsCoreVersionCheck(false);
return new Pair(zzjz.zza, Boolean.valueOf(zzjz.zzb));
} catch (Exception e) {
this.zzs.zzay().zzc().zzb("Unable to get advertising id", e);
zzjz = new zzjz(BuildConfig.FLAVOR, false, zzi);
}
}

public final boolean zzb() {
return false;
}

@WorkerThread
public final Pair zzd(String str, zzai zzai) {
return zzai.zzi(zzah.zza) ? zza(str) : new Pair(BuildConfig.FLAVOR, Boolean.FALSE);
}

@WorkerThread
@Deprecated
public final String zzf(String str, boolean z) {
zzg();
String str2 = (!this.zzs.zzf().zzs((String) null, zzeh.zzaj) || z) ? (String) zza(str).first : "00000000-0000-0000-0000-000000000000";
MessageDigest zzF = zzln.zzF();
if (zzF == null) {
return null;
}
return String.format(Locale.US, "%032X", new Object[]{new BigInteger(1, zzF.digest(str2.getBytes()))});
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzkb.java

package com.google.android.gms.measurement.internal;

import android.app.job.JobParameters;

public final /* synthetic */ class zzkb implements Runnable {
public final /* synthetic */ zzkf zza;
public final /* synthetic */ zzeu zzb;
public final /* synthetic */ JobParameters zzc;

public /* synthetic */ zzkb(zzkf zzkf, zzeu zzeu, JobParameters jobParameters) {
this.zza = zzkf;
this.zzb = zzeu;
this.zzc = jobParameters;
}

public final void run() {
this.zza.zzd(this.zzb, this.zzc);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\gms\measurement\internal\zzkc.java

package com.google.android.gms.measurement.internal;

import android.content.Intent;

public final /* synthetic */ class zzkc implements Runnable {
public final /* synthetic */ zzkf zza;
public final /* synthetic */ int zzb;
public final /* synthetic */ zzeu zzc;
public final /* synthetic */ Intent zzd;

public /* synthetic */ zzkc(zzkf zzkf, int i, zzeu zzeu, Intent intent) {
this.zza = zzkf;
this.zzb = i;
this.zzc = zzeu;
this.zzd = intent;
}

public final void run() {
this.zza.zzc(this.zzb, this.zzc, this.zzd);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\material\R$anim.java

package com.google.android.material;

public final class R$anim {
public static final int abc_fade_in = 2130771968;
public static final int abc_fade_out = 2130771969;
public static final int abc_grow_fade_in_from_bottom = 2130771970;
public static final int abc_popup_enter = 2130771971;
public static final int abc_popup_exit = 2130771972;
public static final int abc_shrink_fade_out_from_bottom = 2130771973;
public static final int abc_slide_in_bottom = 2130771974;
public static final int abc_slide_in_top = 2130771975;
public static final int abc_slide_out_bottom = 2130771976;
public static final int abc_slide_out_top = 2130771977;
public static final int abc_tooltip_enter = 2130771978;
public static final int abc_tooltip_exit = 2130771979;
public static final int btn_checkbox_to_checked_box_inner_merged_animation = 2130771986;
public static final int btn_checkbox_to_checked_box_outer_merged_animation = 2130771987;
public static final int btn_checkbox_to_checked_icon_null_animation = 2130771988;
public static final int btn_checkbox_to_unchecked_box_inner_merged_animation = 2130771989;
public static final int btn_checkbox_to_unchecked_check_path_merged_animation = 2130771990;
public static final int btn_checkbox_to_unchecked_icon_null_animation = 2130771991;
public static final int btn_radio_to_off_mtrl_dot_group_animation = 2130771992;
public static final int btn_radio_to_off_mtrl_ring_outer_animation = 2130771993;
public static final int btn_radio_to_off_mtrl_ring_outer_path_animation = 2130771994;
public static final int btn_radio_to_on_mtrl_dot_group_animation = 2130771995;
public static final int btn_radio_to_on_mtrl_ring_outer_animation = 2130771996;
public static final int btn_radio_to_on_mtrl_ring_outer_path_animation = 2130771997;
public static final int design_bottom_sheet_slide_in = 2130771998;
public static final int design_bottom_sheet_slide_out = 2130771999;
public static final int design_snackbar_in = 2130772000;
public static final int design_snackbar_out = 2130772001;
public static final int fragment_fast_out_extra_slow_in = 2130772002;
public static final int mtrl_bottom_sheet_slide_in = 2130772007;
public static final int mtrl_bottom_sheet_slide_out = 2130772008;
public static final int mtrl_card_lowers_interpolator = 2130772009;

private R$anim() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\material\badge\BadgeState$State.java

package com.google.android.material.badge;

import android.os.Parcel;
import android.os.Parcelable;
import androidx.annotation.ColorInt;
import androidx.annotation.Dimension;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.PluralsRes;
import androidx.annotation.StringRes;
import androidx.annotation.XmlRes;
import com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser;
import java.util.Locale;

public final class BadgeState$State implements Parcelable {
private static final int BADGE_NUMBER_NONE = -1;
public static final Parcelable.Creator<BadgeState$State> CREATOR = new 1();
private static final int NOT_SET = -2;
/* access modifiers changed from: private */
@Dimension(unit = 1)
public Integer additionalHorizontalOffset;
/* access modifiers changed from: private */
@Dimension(unit = 1)
public Integer additionalVerticalOffset;
/* access modifiers changed from: private */
public int alpha = DefaultImageHeaderParser.SEGMENT_START_ID;
/* access modifiers changed from: private */
@ColorInt
public Integer backgroundColor;
/* access modifiers changed from: private */
public Integer badgeGravity;
/* access modifiers changed from: private */
@XmlRes
public int badgeResId;
/* access modifiers changed from: private */
@ColorInt
public Integer badgeTextColor;
/* access modifiers changed from: private */
@StringRes
public int contentDescriptionExceedsMaxBadgeNumberRes;
/* access modifiers changed from: private */
@Nullable
public CharSequence contentDescriptionNumberless;
/* access modifiers changed from: private */
@PluralsRes
public int contentDescriptionQuantityStrings;
/* access modifiers changed from: private */
@Dimension(unit = 1)
public Integer horizontalOffsetWithText;
/* access modifiers changed from: private */
@Dimension(unit = 1)
public Integer horizontalOffsetWithoutText;
/* access modifiers changed from: private */
public Boolean isVisible = Boolean.TRUE;
/* access modifiers changed from: private */
public int maxCharacterCount = NOT_SET;
/* access modifiers changed from: private */
public int number = NOT_SET;
/* access modifiers changed from: private */
public Locale numberLocale;
/* access modifiers changed from: private */
@Dimension(unit = 1)
public Integer verticalOffsetWithText;
/* access modifiers changed from: private */
@Dimension(unit = 1)
public Integer verticalOffsetWithoutText;

public BadgeState$State() {
}

public BadgeState$State(@NonNull Parcel parcel) {
this.badgeResId = parcel.readInt();
this.backgroundColor = (Integer) parcel.readSerializable();
this.badgeTextColor = (Integer) parcel.readSerializable();
this.alpha = parcel.readInt();
this.number = parcel.readInt();
this.maxCharacterCount = parcel.readInt();
this.contentDescriptionNumberless = parcel.readString();
this.contentDescriptionQuantityStrings = parcel.readInt();
this.badgeGravity = (Integer) parcel.readSerializable();
this.horizontalOffsetWithoutText = (Integer) parcel.readSerializable();
this.verticalOffsetWithoutText = (Integer) parcel.readSerializable();
this.horizontalOffsetWithText = (Integer) parcel.readSerializable();
this.verticalOffsetWithText = (Integer) parcel.readSerializable();
this.additionalHorizontalOffset = (Integer) parcel.readSerializable();
this.additionalVerticalOffset = (Integer) parcel.readSerializable();
this.isVisible = (Boolean) parcel.readSerializable();
this.numberLocale = (Locale) parcel.readSerializable();
}

public int describeContents() {
return 0;
}

public void writeToParcel(@NonNull Parcel parcel, int i) {
parcel.writeInt(this.badgeResId);
parcel.writeSerializable(this.backgroundColor);
parcel.writeSerializable(this.badgeTextColor);
parcel.writeInt(this.alpha);
parcel.writeInt(this.number);
parcel.writeInt(this.maxCharacterCount);
CharSequence charSequence = this.contentDescriptionNumberless;
parcel.writeString(charSequence == null ? null : charSequence.toString());
parcel.writeInt(this.contentDescriptionQuantityStrings);
parcel.writeSerializable(this.badgeGravity);
parcel.writeSerializable(this.horizontalOffsetWithoutText);
parcel.writeSerializable(this.verticalOffsetWithoutText);
parcel.writeSerializable(this.horizontalOffsetWithText);
parcel.writeSerializable(this.verticalOffsetWithText);
parcel.writeSerializable(this.additionalHorizontalOffset);
parcel.writeSerializable(this.additionalVerticalOffset);
parcel.writeSerializable(this.isVisible);
parcel.writeSerializable(this.numberLocale);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\material\datepicker\MaterialDatePicker.java

package com.google.android.material.datepicker;

import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.res.ColorStateList;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.InsetDrawable;
import android.graphics.drawable.StateListDrawable;
import android.os.Bundle;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.StringRes;
import androidx.annotation.StyleRes;
import androidx.appcompat.content.res.AppCompatResources;
import androidx.core.view.AccessibilityDelegateCompat;
import androidx.core.view.ViewCompat;
import androidx.fragment.app.DialogFragment;
import androidx.fragment.app.FragmentTransaction;
import com.google.android.material.R;
import com.google.android.material.datepicker.CalendarConstraints;
import com.google.android.material.dialog.InsetDialogOnTouchListener;
import com.google.android.material.internal.CheckableImageButton;
import com.google.android.material.internal.EdgeToEdgeUtils;
import com.google.android.material.internal.ViewUtils;
import com.google.android.material.resources.MaterialAttributes;
import com.google.android.material.shape.MaterialShapeDrawable;
import java.util.Iterator;
import java.util.LinkedHashSet;

public final class MaterialDatePicker<S> extends DialogFragment {
private static final String CALENDAR_CONSTRAINTS_KEY = "CALENDAR_CONSTRAINTS_KEY";
public static final Object CANCEL_BUTTON_TAG = "CANCEL_BUTTON_TAG";
public static final Object CONFIRM_BUTTON_TAG = "CONFIRM_BUTTON_TAG";
private static final String DATE_SELECTOR_KEY = "DATE_SELECTOR_KEY";
public static final int INPUT_MODE_CALENDAR = 0;
private static final String INPUT_MODE_KEY = "INPUT_MODE_KEY";
public static final int INPUT_MODE_TEXT = 1;
private static final String NEGATIVE_BUTTON_TEXT_KEY = "NEGATIVE_BUTTON_TEXT_KEY";
private static final String NEGATIVE_BUTTON_TEXT_RES_ID_KEY = "NEGATIVE_BUTTON_TEXT_RES_ID_KEY";
private static final String OVERRIDE_THEME_RES_ID = "OVERRIDE_THEME_RES_ID";
private static final String POSITIVE_BUTTON_TEXT_KEY = "POSITIVE_BUTTON_TEXT_KEY";
private static final String POSITIVE_BUTTON_TEXT_RES_ID_KEY = "POSITIVE_BUTTON_TEXT_RES_ID_KEY";
private static final String TITLE_TEXT_KEY = "TITLE_TEXT_KEY";
private static final String TITLE_TEXT_RES_ID_KEY = "TITLE_TEXT_RES_ID_KEY";
public static final Object TOGGLE_BUTTON_TAG = "TOGGLE_BUTTON_TAG";
@Nullable
private MaterialShapeDrawable background;
private MaterialCalendar<S> calendar;
@Nullable
private CalendarConstraints calendarConstraints;
/* access modifiers changed from: private */
public Button confirmButton;
@Nullable
private DateSelector<S> dateSelector;
private boolean edgeToEdgeEnabled;
private boolean fullscreen;
private TextView headerSelectionText;
/* access modifiers changed from: private */
public CheckableImageButton headerToggleButton;
private int inputMode;
private CharSequence negativeButtonText;
@StringRes
private int negativeButtonTextResId;
private final LinkedHashSet<DialogInterface.OnCancelListener> onCancelListeners = new LinkedHashSet<>();
private final LinkedHashSet<DialogInterface.OnDismissListener> onDismissListeners = new LinkedHashSet<>();
/* access modifiers changed from: private */
public final LinkedHashSet<View.OnClickListener> onNegativeButtonClickListeners = new LinkedHashSet<>();
/* access modifiers changed from: private */
public final LinkedHashSet<MaterialPickerOnPositiveButtonClickListener<? super S>> onPositiveButtonClickListeners = new LinkedHashSet<>();
@StyleRes
private int overrideThemeResId;
private PickerFragment<S> pickerFragment;
private CharSequence positiveButtonText;
@StringRes
private int positiveButtonTextResId;
private CharSequence titleText;
@StringRes
private int titleTextResId;

@NonNull
private static Drawable createHeaderToggleDrawable(Context context) {
StateListDrawable stateListDrawable = new StateListDrawable();
stateListDrawable.addState(new int[]{16842912}, AppCompatResources.getDrawable(context, R.drawable.material_ic_calendar_black_24dp));
stateListDrawable.addState(new int[0], AppCompatResources.getDrawable(context, R.drawable.material_ic_edit_black_24dp));
return stateListDrawable;
}

private void enableEdgeToEdgeIfNeeded(Window window) {
if (!this.edgeToEdgeEnabled) {
View findViewById = requireView().findViewById(R.id.fullscreen_header);
EdgeToEdgeUtils.applyEdgeToEdge(window, true, ViewUtils.getBackgroundColor(findViewById), (Integer) null);
ViewCompat.setOnApplyWindowInsetsListener(findViewById, new 3(this, findViewById.getLayoutParams().height, findViewById, findViewById.getPaddingTop()));
this.edgeToEdgeEnabled = true;
}
}

/* access modifiers changed from: private */
public DateSelector<S> getDateSelector() {
if (this.dateSelector == null) {
this.dateSelector = (DateSelector) getArguments().getParcelable(DATE_SELECTOR_KEY);
}
return this.dateSelector;
}

private static int getPaddedPickerWidth(@NonNull Context context) {
Resources resources = context.getResources();
int dimensionPixelOffset = resources.getDimensionPixelOffset(R.dimen.mtrl_calendar_content_padding);
int i = Month.current().daysInWeek;
int dimensionPixelSize = resources.getDimensionPixelSize(R.dimen.mtrl_calendar_day_width) * i;
return ((i - 1) * resources.getDimensionPixelOffset(R.dimen.mtrl_calendar_month_horizontal_padding)) + dimensionPixelSize + (dimensionPixelOffset * 2);
}

private int getThemeResId(Context context) {
int i = this.overrideThemeResId;
return i != 0 ? i : getDateSelector().getDefaultThemeResId(context);
}

private void initHeaderToggle(Context context) {
this.headerToggleButton.setTag(TOGGLE_BUTTON_TAG);
this.headerToggleButton.setImageDrawable(createHeaderToggleDrawable(context));
this.headerToggleButton.setChecked(this.inputMode != 0);
ViewCompat.setAccessibilityDelegate(this.headerToggleButton, (AccessibilityDelegateCompat) null);
updateToggleContentDescription(this.headerToggleButton);
this.headerToggleButton.setOnClickListener(new 5(this));
}

public static boolean isFullscreen(@NonNull Context context) {
return readMaterialCalendarStyleBoolean(context, 16843277);
}

public static boolean isNestedScrollable(@NonNull Context context) {
return readMaterialCalendarStyleBoolean(context, R.attr.nestedScrollable);
}

@NonNull
public static <S> MaterialDatePicker<S> newInstance(@NonNull Builder<S> builder) {
MaterialDatePicker<S> materialDatePicker = new MaterialDatePicker<>();
Bundle bundle = new Bundle();
bundle.putInt(OVERRIDE_THEME_RES_ID, builder.overrideThemeResId);
bundle.putParcelable(DATE_SELECTOR_KEY, builder.dateSelector);
bundle.putParcelable(CALENDAR_CONSTRAINTS_KEY, builder.calendarConstraints);
bundle.putInt(TITLE_TEXT_RES_ID_KEY, builder.titleTextResId);
bundle.putCharSequence(TITLE_TEXT_KEY, builder.titleText);
bundle.putInt(INPUT_MODE_KEY, builder.inputMode);
bundle.putInt(POSITIVE_BUTTON_TEXT_RES_ID_KEY, builder.positiveButtonTextResId);
bundle.putCharSequence(POSITIVE_BUTTON_TEXT_KEY, builder.positiveButtonText);
bundle.putInt(NEGATIVE_BUTTON_TEXT_RES_ID_KEY, builder.negativeButtonTextResId);
bundle.putCharSequence(NEGATIVE_BUTTON_TEXT_KEY, builder.negativeButtonText);
materialDatePicker.setArguments(bundle);
return materialDatePicker;
}

public static boolean readMaterialCalendarStyleBoolean(@NonNull Context context, int i) {
TypedArray obtainStyledAttributes = context.obtainStyledAttributes(MaterialAttributes.resolveOrThrow(context, R.attr.materialCalendarStyle, MaterialCalendar.class.getCanonicalName()), new int[]{i});
boolean z = obtainStyledAttributes.getBoolean(0, false);
obtainStyledAttributes.recycle();
return z;
}

/* access modifiers changed from: private */
public void startPickerFragment() {
int themeResId = getThemeResId(requireContext());
this.calendar = MaterialCalendar.newInstance(getDateSelector(), themeResId, this.calendarConstraints);
this.pickerFragment = this.headerToggleButton.isChecked() ? MaterialTextInputPicker.newInstance(getDateSelector(), themeResId, this.calendarConstraints) : this.calendar;
updateHeader();
FragmentTransaction beginTransaction = getChildFragmentManager().beginTransaction();
beginTransaction.replace(R.id.mtrl_calendar_frame, this.pickerFragment);
beginTransaction.commitNow();
this.pickerFragment.addOnSelectionChangedListener(new 4(this));
}

public static long thisMonthInUtcMilliseconds() {
return Month.current().timeInMillis;
}

public static long todayInUtcMilliseconds() {
return UtcDates.getTodayCalendar().getTimeInMillis();
}

/* access modifiers changed from: private */
public void updateHeader() {
String headerText = getHeaderText();
this.headerSelectionText.setContentDescription(String.format(getString(R.string.mtrl_picker_announce_current_selection), new Object[]{headerText}));
this.headerSelectionText.setText(headerText);
}

/* access modifiers changed from: private */
public void updateToggleContentDescription(@NonNull CheckableImageButton checkableImageButton) {
this.headerToggleButton.setContentDescription(this.headerToggleButton.isChecked() ? checkableImageButton.getContext().getString(R.string.mtrl_picker_toggle_to_calendar_input_mode) : checkableImageButton.getContext().getString(R.string.mtrl_picker_toggle_to_text_input_mode));
}

public boolean addOnCancelListener(DialogInterface.OnCancelListener onCancelListener) {
return this.onCancelListeners.add(onCancelListener);
}

public boolean addOnDismissListener(DialogInterface.OnDismissListener onDismissListener) {
return this.onDismissListeners.add(onDismissListener);
}

public boolean addOnNegativeButtonClickListener(View.OnClickListener onClickListener) {
return this.onNegativeButtonClickListeners.add(onClickListener);
}

public boolean addOnPositiveButtonClickListener(MaterialPickerOnPositiveButtonClickListener<? super S> materialPickerOnPositiveButtonClickListener) {
return this.onPositiveButtonClickListeners.add(materialPickerOnPositiveButtonClickListener);
}

public void clearOnCancelListeners() {
this.onCancelListeners.clear();
}

public void clearOnDismissListeners() {
this.onDismissListeners.clear();
}

public void clearOnNegativeButtonClickListeners() {
this.onNegativeButtonClickListeners.clear();
}

public void clearOnPositiveButtonClickListeners() {
this.onPositiveButtonClickListeners.clear();
}

public String getHeaderText() {
return getDateSelector().getSelectionDisplayString(getContext());
}

@Nullable
public final S getSelection() {
return getDateSelector().getSelection();
}

public final void onCancel(@NonNull DialogInterface dialogInterface) {
Iterator<DialogInterface.OnCancelListener> it = this.onCancelListeners.iterator();
while (it.hasNext()) {
it.next().onCancel(dialogInterface);
}
MaterialDatePicker.super.onCancel(dialogInterface);
}

public final void onCreate(@Nullable Bundle bundle) {
MaterialDatePicker.super.onCreate(bundle);
if (bundle == null) {
bundle = getArguments();
}
this.overrideThemeResId = bundle.getInt(OVERRIDE_THEME_RES_ID);
this.dateSelector = (DateSelector) bundle.getParcelable(DATE_SELECTOR_KEY);
this.calendarConstraints = bundle.getParcelable(CALENDAR_CONSTRAINTS_KEY);
this.titleTextResId = bundle.getInt(TITLE_TEXT_RES_ID_KEY);
this.titleText = bundle.getCharSequence(TITLE_TEXT_KEY);
this.inputMode = bundle.getInt(INPUT_MODE_KEY);
this.positiveButtonTextResId = bundle.getInt(POSITIVE_BUTTON_TEXT_RES_ID_KEY);
this.positiveButtonText = bundle.getCharSequence(POSITIVE_BUTTON_TEXT_KEY);
this.negativeButtonTextResId = bundle.getInt(NEGATIVE_BUTTON_TEXT_RES_ID_KEY);
this.negativeButtonText = bundle.getCharSequence(NEGATIVE_BUTTON_TEXT_KEY);
}

@NonNull
public final Dialog onCreateDialog(@Nullable Bundle bundle) {
Dialog dialog = new Dialog(requireContext(), getThemeResId(requireContext()));
Context context = dialog.getContext();
this.fullscreen = isFullscreen(context);
int resolveOrThrow = MaterialAttributes.resolveOrThrow(context, R.attr.colorSurface, MaterialDatePicker.class.getCanonicalName());
MaterialShapeDrawable materialShapeDrawable = new MaterialShapeDrawable(context, (AttributeSet) null, R.attr.materialCalendarStyle, R.style.Widget_MaterialComponents_MaterialCalendar);
this.background = materialShapeDrawable;
materialShapeDrawable.initializeElevationOverlay(context);
this.background.setFillColor(ColorStateList.valueOf(resolveOrThrow));
this.background.setElevation(ViewCompat.getElevation(dialog.getWindow().getDecorView()));
return dialog;
}

@NonNull
public final View onCreateView(@NonNull LayoutInflater layoutInflater, @Nullable ViewGroup viewGroup, @Nullable Bundle bundle) {
View inflate = layoutInflater.inflate(this.fullscreen ? R.layout.mtrl_picker_fullscreen : R.layout.mtrl_picker_dialog, viewGroup);
Context context = inflate.getContext();
if (this.fullscreen) {
inflate.findViewById(R.id.mtrl_calendar_frame).setLayoutParams(new LinearLayout.LayoutParams(getPaddedPickerWidth(context), -2));
} else {
inflate.findViewById(R.id.mtrl_calendar_main_pane).setLayoutParams(new LinearLayout.LayoutParams(getPaddedPickerWidth(context), -1));
}
TextView textView = (TextView) inflate.findViewById(R.id.mtrl_picker_header_selection_text);
this.headerSelectionText = textView;
ViewCompat.setAccessibilityLiveRegion(textView, 1);
this.headerToggleButton = inflate.findViewById(R.id.mtrl_picker_header_toggle);
TextView textView2 = (TextView) inflate.findViewById(R.id.mtrl_picker_title_text);
CharSequence charSequence = this.titleText;
if (charSequence != null) {
textView2.setText(charSequence);
} else {
textView2.setText(this.titleTextResId);
}
initHeaderToggle(context);
this.confirmButton = (Button) inflate.findViewById(R.id.confirm_button);
if (getDateSelector().isSelectionComplete()) {
this.confirmButton.setEnabled(true);
} else {
this.confirmButton.setEnabled(false);
}
this.confirmButton.setTag(CONFIRM_BUTTON_TAG);
CharSequence charSequence2 = this.positiveButtonText;
if (charSequence2 != null) {
this.confirmButton.setText(charSequence2);
} else {
int i = this.positiveButtonTextResId;
if (i != 0) {
this.confirmButton.setText(i);
}
}
this.confirmButton.setOnClickListener(new 1(this));
Button button = (Button) inflate.findViewById(R.id.cancel_button);
button.setTag(CANCEL_BUTTON_TAG);
CharSequence charSequence3 = this.negativeButtonText;
if (charSequence3 != null) {
button.setText(charSequence3);
} else {
int i3 = this.negativeButtonTextResId;
if (i3 != 0) {
button.setText(i3);
}
}
button.setOnClickListener(new 2(this));
return inflate;
}

public final void onDismiss(@NonNull DialogInterface dialogInterface) {
Iterator<DialogInterface.OnDismissListener> it = this.onDismissListeners.iterator();
while (it.hasNext()) {
it.next().onDismiss(dialogInterface);
}
ViewGroup viewGroup = (ViewGroup) getView();
if (viewGroup != null) {
viewGroup.removeAllViews();
}
MaterialDatePicker.super.onDismiss(dialogInterface);
}

public final void onSaveInstanceState(@NonNull Bundle bundle) {
MaterialDatePicker.super.onSaveInstanceState(bundle);
bundle.putInt(OVERRIDE_THEME_RES_ID, this.overrideThemeResId);
bundle.putParcelable(DATE_SELECTOR_KEY, this.dateSelector);
CalendarConstraints.Builder builder = new CalendarConstraints.Builder(this.calendarConstraints);
if (this.calendar.getCurrentMonth() != null) {
builder.setOpenAt(this.calendar.getCurrentMonth().timeInMillis);
}
bundle.putParcelable(CALENDAR_CONSTRAINTS_KEY, builder.build());
bundle.putInt(TITLE_TEXT_RES_ID_KEY, this.titleTextResId);
bundle.putCharSequence(TITLE_TEXT_KEY, this.titleText);
bundle.putInt(POSITIVE_BUTTON_TEXT_RES_ID_KEY, this.positiveButtonTextResId);
bundle.putCharSequence(POSITIVE_BUTTON_TEXT_KEY, this.positiveButtonText);
bundle.putInt(NEGATIVE_BUTTON_TEXT_RES_ID_KEY, this.negativeButtonTextResId);
bundle.putCharSequence(NEGATIVE_BUTTON_TEXT_KEY, this.negativeButtonText);
}

public void onStart() {
MaterialDatePicker.super.onStart();
Window window = requireDialog().getWindow();
if (this.fullscreen) {
window.setLayout(-1, -1);
window.setBackgroundDrawable(this.background);
enableEdgeToEdgeIfNeeded(window);
} else {
window.setLayout(-2, -2);
int dimensionPixelOffset = getResources().getDimensionPixelOffset(R.dimen.mtrl_calendar_dialog_background_inset);
Rect rect = new Rect(dimensionPixelOffset, dimensionPixelOffset, dimensionPixelOffset, dimensionPixelOffset);
window.setBackgroundDrawable(new InsetDrawable(this.background, dimensionPixelOffset, dimensionPixelOffset, dimensionPixelOffset, dimensionPixelOffset));
window.getDecorView().setOnTouchListener(new InsetDialogOnTouchListener(requireDialog(), rect));
}
startPickerFragment();
}

public void onStop() {
this.pickerFragment.clearOnSelectionChangedListeners();
MaterialDatePicker.super.onStop();
}

public boolean removeOnCancelListener(DialogInterface.OnCancelListener onCancelListener) {
return this.onCancelListeners.remove(onCancelListener);
}

public boolean removeOnDismissListener(DialogInterface.OnDismissListener onDismissListener) {
return this.onDismissListeners.remove(onDismissListener);
}

public boolean removeOnNegativeButtonClickListener(View.OnClickListener onClickListener) {
return this.onNegativeButtonClickListeners.remove(onClickListener);
}

public boolean removeOnPositiveButtonClickListener(MaterialPickerOnPositiveButtonClickListener<? super S> materialPickerOnPositiveButtonClickListener) {
return this.onPositiveButtonClickListeners.remove(materialPickerOnPositiveButtonClickListener);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\material\datepicker\MaterialPickerOnPositiveButtonClickListener.java

package com.google.android.material.datepicker;

public interface MaterialPickerOnPositiveButtonClickListener<S> {
void onPositiveButtonClick(S s);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\material\floatingactionbutton\ExtendedFloatingActionButton$ShowStrategy.java

package com.google.android.material.floatingactionbutton;

import android.animation.Animator;
import androidx.annotation.Nullable;
import com.google.android.material.R;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;

public class ExtendedFloatingActionButton$ShowStrategy extends BaseMotionStrategy {
public final /* synthetic */ ExtendedFloatingActionButton this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public ExtendedFloatingActionButton$ShowStrategy(ExtendedFloatingActionButton extendedFloatingActionButton, AnimatorTracker animatorTracker) {
super(extendedFloatingActionButton, animatorTracker);
this.this$0 = extendedFloatingActionButton;
}

public int getDefaultMotionSpecResource() {
return R.animator.mtrl_extended_fab_show_motion_spec;
}

public void onAnimationEnd() {
ExtendedFloatingActionButton$ShowStrategy.super.onAnimationEnd();
ExtendedFloatingActionButton.access$902(this.this$0, 0);
}

public void onAnimationStart(Animator animator) {
ExtendedFloatingActionButton$ShowStrategy.super.onAnimationStart(animator);
this.this$0.setVisibility(0);
ExtendedFloatingActionButton.access$902(this.this$0, 2);
}

public void onChange(@Nullable ExtendedFloatingActionButton.OnChangedCallback onChangedCallback) {
if (onChangedCallback != null) {
onChangedCallback.onShown(this.this$0);
}
}

public void performNow() {
this.this$0.setVisibility(0);
this.this$0.setAlpha(1.0f);
this.this$0.setScaleY(1.0f);
this.this$0.setScaleX(1.0f);
}

public boolean shouldCancel() {
return ExtendedFloatingActionButton.access$1000(this.this$0);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\material\internal\ParcelableSparseIntArray$1.java

package com.google.android.material.internal;

import android.os.Parcel;
import android.os.Parcelable;
import androidx.annotation.NonNull;

public class ParcelableSparseIntArray$1 implements Parcelable.Creator<ParcelableSparseIntArray> {
@NonNull
public ParcelableSparseIntArray createFromParcel(@NonNull Parcel parcel) {
int readInt = parcel.readInt();
ParcelableSparseIntArray parcelableSparseIntArray = new ParcelableSparseIntArray(readInt);
int[] iArr = new int[readInt];
int[] iArr2 = new int[readInt];
parcel.readIntArray(iArr);
parcel.readIntArray(iArr2);
for (int i = 0; i < readInt; i++) {
parcelableSparseIntArray.put(iArr[i], iArr2[i]);
}
return parcelableSparseIntArray;
}

@NonNull
public ParcelableSparseIntArray[] newArray(int i) {
return new ParcelableSparseIntArray[i];
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\material\internal\ViewGroupOverlayApi18.java
private final ViewGroupOverlay viewGroupOverlay;

public ViewGroupOverlayApi18(@NonNull ViewGroup viewGroup) {
this.viewGroupOverlay = viewGroup.getOverlay();
}

public void add(@NonNull Drawable drawable) {
this.viewGroupOverlay.add(drawable);
}

public void add(@NonNull View view) {
this.viewGroupOverlay.add(view);
}

public void remove(@NonNull Drawable drawable) {
this.viewGroupOverlay.remove(drawable);
}

public void remove(@NonNull View view) {
this.viewGroupOverlay.remove(view);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\material\textfield\TextInputLayout$OnEditTextAttachedListener.java

package com.google.android.material.textfield;

import androidx.annotation.NonNull;

public interface TextInputLayout$OnEditTextAttachedListener {
void onEditTextAttached(@NonNull TextInputLayout textInputLayout);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\android\material\transition\MaterialContainerTransform$FadeMode.java

package com.google.android.material.transition;

import androidx.annotation.RestrictTo;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

@RestrictTo({RestrictTo.Scope.LIBRARY_GROUP})
@Retention(RetentionPolicy.SOURCE)
public @interface MaterialContainerTransform$FadeMode {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\auto\common\MoreElements.java

package com.google.auto.common;

import com.google.auto.common.Overrides;
import com.google.common.annotations.Beta;
import com.google.common.base.Optional;
import com.google.common.base.Predicate;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableSet;
import com.google.common.collect.LinkedHashMultimap;
import com.google.common.collect.SetMultimap;
import com.google.common.collect.UnmodifiableIterator;
import java.lang.annotation.Annotation;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.Set;
import javax.lang.model.element.AnnotationMirror;
import javax.lang.model.element.Element;
import javax.lang.model.element.ElementKind;
import javax.lang.model.element.ExecutableElement;
import javax.lang.model.element.Modifier;
import javax.lang.model.element.PackageElement;
import javax.lang.model.element.TypeElement;
import javax.lang.model.element.TypeParameterElement;
import javax.lang.model.element.VariableElement;
import javax.lang.model.type.TypeKind;
import javax.lang.model.type.TypeMirror;
import javax.lang.model.util.ElementFilter;
import javax.lang.model.util.Elements;
import javax.lang.model.util.Types;

@Beta
public final class MoreElements {
private MoreElements() {
}

public static ExecutableElement asExecutable(Element element) {
return (ExecutableElement) element.accept(ExecutableElementVisitor.access$400(), (Object) null);
}

public static PackageElement asPackage(Element element) {
return (PackageElement) element.accept(PackageElementVisitor.access$000(), (Object) null);
}

public static TypeElement asType(Element element) {
return (TypeElement) element.accept(TypeElementVisitor.access$100(), (Object) null);
}

public static TypeParameterElement asTypeParameter(Element element) {
return (TypeParameterElement) element.accept(TypeParameterElementVisitor.access$200(), (Object) null);
}

public static VariableElement asVariable(Element element) {
return (VariableElement) element.accept(VariableElementVisitor.access$300(), (Object) null);
}

private static ImmutableSet<ExecutableElement> getAllMethods(TypeElement typeElement, Overrides overrides) {
LinkedHashMultimap create = LinkedHashMultimap.create();
getAllMethods(typeElement, (SetMultimap<String, ExecutableElement>) create);
LinkedHashSet linkedHashSet = new LinkedHashSet();
for (Collection copyOf : create.asMap().values()) {
ImmutableList copyOf2 = ImmutableList.copyOf(copyOf);
int i = 0;
while (i < copyOf2.size()) {
ExecutableElement executableElement = (ExecutableElement) copyOf2.get(i);
i++;
int i3 = i;
while (true) {
if (i3 >= copyOf2.size()) {
break;
} else if (overrides.overrides((ExecutableElement) copyOf2.get(i3), executableElement, typeElement)) {
linkedHashSet.add(executableElement);
break;
} else {
i3++;
}
}
}
}
return (ImmutableSet) create.values().stream().filter(new a(linkedHashSet, 1)).collect(MoreStreams.toImmutableSet());
}

public static ImmutableSet<ExecutableElement> getAllMethods(TypeElement typeElement, Types types, Elements elements) {
return getAllMethods(typeElement, (Overrides) new Overrides.ExplicitOverrides(types));
}

private static void getAllMethods(TypeElement typeElement, SetMultimap<String, ExecutableElement> setMultimap) {
for (TypeMirror asTypeElement : typeElement.getInterfaces()) {
getAllMethods(MoreTypes.asTypeElement(asTypeElement), setMultimap);
}
if (typeElement.getSuperclass().getKind() != TypeKind.NONE) {
getAllMethods(MoreTypes.asTypeElement(typeElement.getSuperclass()), setMultimap);
}
for (ExecutableElement executableElement : ElementFilter.methodsIn(typeElement.getEnclosedElements())) {
setMultimap.put(executableElement.getSimpleName().toString(), executableElement);
}
}

public static Optional<AnnotationMirror> getAnnotationMirror(Element element, Class<? extends Annotation> cls) {
String canonicalName = cls.getCanonicalName();
return canonicalName == null ? Optional.absent() : getAnnotationMirror(element, canonicalName);
}

public static Optional<AnnotationMirror> getAnnotationMirror(Element element, String str) {
for (AnnotationMirror annotationMirror : element.getAnnotationMirrors()) {
if (asType(annotationMirror.getAnnotationType().asElement()).getQualifiedName().contentEquals(str)) {
return Optional.of(annotationMirror);
}
}
return Optional.absent();
}

public static Optional<AnnotationMirror> getAnnotationMirror(Element element, TypeElement typeElement) {
for (AnnotationMirror annotationMirror : element.getAnnotationMirrors()) {
if (annotationMirror.getAnnotationType().asElement().equals(typeElement)) {
return Optional.of(annotationMirror);
}
}
return Optional.absent();
}

private static ImmutableSet<ExecutableElement> getLocalAndInheritedMethods(TypeElement typeElement, Overrides overrides) {
PackageElement packageElement = getPackage(typeElement);
ImmutableSet.Builder builder = ImmutableSet.builder();
UnmodifiableIterator it = getAllMethods(typeElement, overrides).iterator();
while (it.hasNext()) {
ExecutableElement executableElement = (ExecutableElement) it.next();
if (!executableElement.getModifiers().contains(Modifier.STATIC) && methodVisibleFromPackage(executableElement, packageElement)) {
builder.add(executableElement);
}
}
return builder.build();
}

@Deprecated
public static ImmutableSet<ExecutableElement> getLocalAndInheritedMethods(TypeElement typeElement, Elements elements) {
return getLocalAndInheritedMethods(typeElement, (Overrides) new Overrides.NativeOverrides(elements));
}

public static ImmutableSet<ExecutableElement> getLocalAndInheritedMethods(TypeElement typeElement, Types types, Elements elements) {
return getLocalAndInheritedMethods(typeElement, (Overrides) new Overrides.ExplicitOverrides(types));
}

public static PackageElement getPackage(Element element) {
while (element.getKind() != ElementKind.PACKAGE) {
element = element.getEnclosingElement();
}
return (PackageElement) element;
}

public static <T extends Element> Predicate<T> hasModifiers(Set<Modifier> set) {
return new 1(set);
}

public static <T extends Element> Predicate<T> hasModifiers(Modifier... modifierArr) {
return hasModifiers((Set<Modifier>) ImmutableSet.copyOf(modifierArr));
}

public static boolean isAnnotationPresent(Element element, Class<? extends Annotation> cls) {
return getAnnotationMirror(element, cls).isPresent();
}

public static boolean isAnnotationPresent(Element element, String str) {
return getAnnotationMirror(element, str).isPresent();
}

public static boolean isAnnotationPresent(Element element, TypeElement typeElement) {
return getAnnotationMirror(element, typeElement).isPresent();
}

public static boolean isType(Element element) {
return element.getKind().isClass() || element.getKind().isInterface();
}

/* access modifiers changed from: private */
public static /* synthetic */ boolean lambda$getAllMethods$0(Set set, ExecutableElement executableElement) {
return !set.contains(executableElement);
}

public static boolean methodVisibleFromPackage(ExecutableElement executableElement, PackageElement packageElement) {
int i = 2.$SwitchMap$com$google$auto$common$Visibility[Visibility.ofElement(executableElement).ordinal()];
if (i == 1) {
return false;
}
if (i != 2) {
return true;
}
return getPackage(executableElement).equals(packageElement);
}

public static boolean overrides(ExecutableElement executableElement, ExecutableElement executableElement2, TypeElement typeElement, Types types) {
return new Overrides.ExplicitOverrides(types).overrides(executableElement, executableElement2, typeElement);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\base\CharMatcher$JavaLetter.java

package com.google.common.base;

import java.util.function.Predicate;

public final class CharMatcher$JavaLetter extends CharMatcher {
public static final CharMatcher$JavaLetter INSTANCE = new CharMatcher$JavaLetter();

private CharMatcher$JavaLetter() {
}

@Deprecated
public /* bridge */ /* synthetic */ boolean apply(Object obj) {
return CharMatcher$JavaLetter.super.apply((Character) obj);
}

public boolean matches(char c) {
return Character.isLetter(c);
}

public /* bridge */ /* synthetic */ Predicate negate() {
return CharMatcher$JavaLetter.super.negate();
}

public String toString() {
return "CharMatcher.javaLetter()";
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\base\Converter$ReverseConverter.java

package com.google.common.base;

import android.support.v4.media.b;
import java.io.Serializable;

public final class Converter$ReverseConverter<A, B> extends Converter<B, A> implements Serializable {
private static final long serialVersionUID = 0;
public final Converter<A, B> original;

public Converter$ReverseConverter(Converter<A, B> converter) {
this.original = converter;
}

public B correctedDoBackward(A a) {
return this.original.correctedDoForward(a);
}

public A correctedDoForward(B b) {
return this.original.correctedDoBackward(b);
}

public B doBackward(A a) {
throw new AssertionError();
}

public A doForward(B b) {
throw new AssertionError();
}

public boolean equals(Object obj) {
if (obj instanceof Converter$ReverseConverter) {
return this.original.equals(((Converter$ReverseConverter) obj).original);
}
return false;
}

public int hashCode() {
return ~this.original.hashCode();
}

public Converter<A, B> reverse() {
return this.original;
}

public String toString() {
String valueOf = String.valueOf(this.original);
return b.e(valueOf.length() + 10, valueOf, ".reverse()");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\base\Predicate.java

package com.google.common.base;

import com.google.common.annotations.GwtCompatible;
import com.google.errorprone.annotations.CanIgnoreReturnValue;

@GwtCompatible
@FunctionalInterface
@ElementTypesAreNonnullByDefault
public interface Predicate<T> extends java.util.function.Predicate<T> {
@CanIgnoreReturnValue
boolean apply(@ParametricNullness T t);

boolean equals(Object obj);

boolean test(@ParametricNullness T t);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\base\Suppliers$SupplierComposition.java

package com.google.common.base;

import android.support.v4.media.b;
import java.io.Serializable;

public class Suppliers$SupplierComposition<F, T> implements Supplier<T>, Serializable {
private static final long serialVersionUID = 0;
public final Function<? super F, T> function;
public final Supplier<F> supplier;

public Suppliers$SupplierComposition(Function<? super F, T> function2, Supplier<F> supplier2) {
this.function = (Function) Preconditions.checkNotNull(function2);
this.supplier = (Supplier) Preconditions.checkNotNull(supplier2);
}

public boolean equals(Object obj) {
if (!(obj instanceof Suppliers$SupplierComposition)) {
return false;
}
Suppliers$SupplierComposition suppliers$SupplierComposition = (Suppliers$SupplierComposition) obj;
return this.function.equals(suppliers$SupplierComposition.function) && this.supplier.equals(suppliers$SupplierComposition.supplier);
}

@ParametricNullness
public T get() {
return this.function.apply(this.supplier.get());
}

public int hashCode() {
return Objects.hashCode(new Object[]{this.function, this.supplier});
}

public String toString() {
String valueOf = String.valueOf(this.function);
String valueOf2 = String.valueOf(this.supplier);
StringBuilder p = b.p(valueOf2.length() + valueOf.length() + 21, "Suppliers.compose(", valueOf, ", ", valueOf2);
p.append(")");
return p.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\cache\RemovalCause$1.java

package com.google.common.cache;

/* 'enum' modifier removed */
public final class RemovalCause$1 extends RemovalCause {
public RemovalCause$1(String str, int i) {
super(str, i, (RemovalCause$1) null);
}

public boolean wasEvicted() {
return false;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\cache\RemovalCause$2.java

package com.google.common.cache;

/* 'enum' modifier removed */
public final class RemovalCause$2 extends RemovalCause {
public RemovalCause$2(String str, int i) {
super(str, i, (RemovalCause$1) null);
}

public boolean wasEvicted() {
return false;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\cache\RemovalCause$3.java

package com.google.common.cache;

/* 'enum' modifier removed */
public final class RemovalCause$3 extends RemovalCause {
public RemovalCause$3(String str, int i) {
super(str, i, (RemovalCause$1) null);
}

public boolean wasEvicted() {
return true;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\cache\RemovalCause$4.java

package com.google.common.cache;

/* 'enum' modifier removed */
public final class RemovalCause$4 extends RemovalCause {
public RemovalCause$4(String str, int i) {
super(str, i, (RemovalCause$1) null);
}

public boolean wasEvicted() {
return true;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\cache\RemovalCause$5.java

package com.google.common.cache;

/* 'enum' modifier removed */
public final class RemovalCause$5 extends RemovalCause {
public RemovalCause$5(String str, int i) {
super(str, i, (RemovalCause$1) null);
}

public boolean wasEvicted() {
return true;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\collect\AbstractBiMap$Inverse.java

package com.google.common.collect;

import com.google.common.annotations.GwtIncompatible;
import com.google.common.collect.AbstractBiMap;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Collection;
import java.util.Map;

public class AbstractBiMap$Inverse<K, V> extends AbstractBiMap<K, V> {
@GwtIncompatible
private static final long serialVersionUID = 0;

public AbstractBiMap$Inverse(Map<K, V> map, AbstractBiMap<V, K> abstractBiMap) {
super(map, abstractBiMap, (AbstractBiMap.1) null);
}

@GwtIncompatible
private void readObject(ObjectInputStream objectInputStream) throws IOException, ClassNotFoundException {
objectInputStream.defaultReadObject();
setInverse((AbstractBiMap) objectInputStream.readObject());
}

@GwtIncompatible
private void writeObject(ObjectOutputStream objectOutputStream) throws IOException {
objectOutputStream.defaultWriteObject();
objectOutputStream.writeObject(inverse());
}

@ParametricNullness
public K checkKey(@ParametricNullness K k) {
return this.inverse.checkValue(k);
}

@ParametricNullness
public V checkValue(@ParametricNullness V v) {
return this.inverse.checkKey(v);
}

public /* bridge */ /* synthetic */ Object delegate() {
return AbstractBiMap$Inverse.super.delegate();
}

@GwtIncompatible
public Object readResolve() {
return inverse().inverse();
}

public /* bridge */ /* synthetic */ Collection values() {
return AbstractBiMap$Inverse.super.values();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\collect\AbstractMapBasedMultiset$1.java

package com.google.common.collect;

import com.google.common.base.Preconditions;
import java.util.Iterator;
import java.util.Map;

public class AbstractMapBasedMultiset$1 implements Iterator<E> {
public final /* synthetic */ AbstractMapBasedMultiset this$0;
public Map.Entry<E, Count> toRemove;
public final /* synthetic */ Iterator val$backingEntries;

public AbstractMapBasedMultiset$1(AbstractMapBasedMultiset abstractMapBasedMultiset, Iterator it) {
this.this$0 = abstractMapBasedMultiset;
this.val$backingEntries = it;
}

public boolean hasNext() {
return this.val$backingEntries.hasNext();
}

@ParametricNullness
public E next() {
Map.Entry<E, Count> entry = (Map.Entry) this.val$backingEntries.next();
this.toRemove = entry;
return entry.getKey();
}

public void remove() {
Preconditions.checkState(this.toRemove != null, "no calls to next() since the last call to remove()");
AbstractMapBasedMultiset.access$022(this.this$0, (long) this.toRemove.getValue().getAndSet(0));
this.val$backingEntries.remove();
this.toRemove = null;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\collect\AbstractMapBasedMultiset$2.java

package com.google.common.collect;

import com.google.common.base.Preconditions;
import com.google.common.collect.Multiset;
import java.util.Iterator;
import java.util.Map;

public class AbstractMapBasedMultiset$2 implements Iterator<Multiset.Entry<E>> {
public final /* synthetic */ AbstractMapBasedMultiset this$0;
public Map.Entry<E, Count> toRemove;
public final /* synthetic */ Iterator val$backingEntries;

public AbstractMapBasedMultiset$2(AbstractMapBasedMultiset abstractMapBasedMultiset, Iterator it) {
this.this$0 = abstractMapBasedMultiset;
this.val$backingEntries = it;
}

public boolean hasNext() {
return this.val$backingEntries.hasNext();
}

public Multiset.Entry<E> next() {
Map.Entry<E, Count> entry = (Map.Entry) this.val$backingEntries.next();
this.toRemove = entry;
return new 1(this, entry);
}

public void remove() {
Preconditions.checkState(this.toRemove != null, "no calls to next() since the last call to remove()");
AbstractMapBasedMultiset.access$022(this.this$0, (long) this.toRemove.getValue().getAndSet(0));
this.val$backingEntries.remove();
this.toRemove = null;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\collect\ComparisonChain$1.java

package com.google.common.collect;

import com.google.common.primitives.Booleans;
import com.google.common.primitives.Ints;
import com.google.common.primitives.Longs;
import java.util.Comparator;

public class ComparisonChain$1 extends ComparisonChain {
public ComparisonChain$1() {
super((ComparisonChain$1) null);
}

public ComparisonChain classify(int i) {
return i < 0 ? ComparisonChain.access$100() : i > 0 ? ComparisonChain.access$200() : ComparisonChain.access$300();
}

public ComparisonChain compare(double d, double d2) {
return classify(Double.compare(d, d2));
}

public ComparisonChain compare(float f, float f2) {
return classify(Float.compare(f, f2));
}

public ComparisonChain compare(int i, int i3) {
return classify(Ints.compare(i, i3));
}

public ComparisonChain compare(long j2, long j3) {
return classify(Longs.compare(j2, j3));
}

public ComparisonChain compare(Comparable<?> comparable, Comparable<?> comparable2) {
return classify(comparable.compareTo(comparable2));
}

public <T> ComparisonChain compare(@ParametricNullness T t, @ParametricNullness T t2, Comparator<T> comparator) {
return classify(comparator.compare(t, t2));
}

public ComparisonChain compareFalseFirst(boolean z, boolean z2) {
return classify(Booleans.compare(z, z2));
}

public ComparisonChain compareTrueFirst(boolean z, boolean z2) {
return classify(Booleans.compare(z2, z));
}

public int result() {
return 0;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\collect\EnumMultiset.java

package com.google.common.collect;

import android.support.v4.media.a;
import com.google.common.annotations.GwtCompatible;
import com.google.common.annotations.GwtIncompatible;
import com.google.common.base.Preconditions;
import com.google.common.collect.Multiset;
import com.google.common.primitives.Ints;
import com.google.errorprone.annotations.CanIgnoreReturnValue;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.lang.Enum;
import java.util.Arrays;
import java.util.Iterator;
import java.util.Set;
import java.util.function.ObjIntConsumer;
import org.apache.poi.hpsf.WqM.zrtAcABpPYmqeJ;

@GwtCompatible(emulated = true)
@ElementTypesAreNonnullByDefault
public final class EnumMultiset<E extends Enum<E>> extends AbstractMultiset<E> implements Serializable {
@GwtIncompatible
private static final long serialVersionUID = 0;
/* access modifiers changed from: private */
public transient int[] counts;
private transient int distinctElements;
/* access modifiers changed from: private */
public transient E[] enumConstants;
private transient long size;
private transient Class<E> type;

private EnumMultiset(Class<E> cls) {
this.type = cls;
Preconditions.checkArgument(cls.isEnum());
E[] eArr = (Enum[]) cls.getEnumConstants();
this.enumConstants = eArr;
this.counts = new int[eArr.length];
}

public static /* synthetic */ int access$210(EnumMultiset enumMultiset) {
int i = enumMultiset.distinctElements;
enumMultiset.distinctElements = i - 1;
return i;
}

public static /* synthetic */ long access$322(EnumMultiset enumMultiset, long j2) {
long j3 = enumMultiset.size - j2;
enumMultiset.size = j3;
return j3;
}

private void checkIsE(Object obj) {
Preconditions.checkNotNull(obj);
if (!isActuallyE(obj)) {
String valueOf = String.valueOf(this.type);
String valueOf2 = String.valueOf(obj);
throw new ClassCastException(a.g(valueOf2.length() + valueOf.length() + 21, "Expected an ", valueOf, " but got ", valueOf2));
}
}

public static <E extends Enum<E>> EnumMultiset<E> create(Class<E> cls) {
return new EnumMultiset<>(cls);
}

/* JADX WARNING: type inference failed for: r1v1, types: [com.google.common.collect.EnumMultiset<E>, java.util.Collection, com.google.common.collect.EnumMultiset] */
public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> iterable) {
Iterator<E> it = iterable.iterator();
Preconditions.checkArgument(it.hasNext(), "EnumMultiset constructor passed empty Iterable");
? enumMultiset = new EnumMultiset(it.next().getDeclaringClass());
Iterables.addAll(enumMultiset, iterable);
return enumMultiset;
}

/* JADX WARNING: type inference failed for: r1v1, types: [com.google.common.collect.EnumMultiset<E>, java.util.Collection, com.google.common.collect.EnumMultiset] */
public static <E extends Enum<E>> EnumMultiset<E> create(Iterable<E> iterable, Class<E> cls) {
? create = create(cls);
Iterables.addAll(create, iterable);
return create;
}

private boolean isActuallyE(Object obj) {
if (!(obj instanceof Enum)) {
return false;
}
E e = (Enum) obj;
int ordinal = e.ordinal();
E[] eArr = this.enumConstants;
return ordinal < eArr.length && eArr[ordinal] == e;
}

@GwtIncompatible
private void readObject(ObjectInputStream objectInputStream) throws IOException, ClassNotFoundException {
objectInputStream.defaultReadObject();
Class<E> cls = (Class) objectInputStream.readObject();
this.type = cls;
E[] eArr = (Enum[]) cls.getEnumConstants();
this.enumConstants = eArr;
this.counts = new int[eArr.length];
Serialization.populateMultiset(this, objectInputStream);
}

@GwtIncompatible
private void writeObject(ObjectOutputStream objectOutputStream) throws IOException {
objectOutputStream.defaultWriteObject();
objectOutputStream.writeObject(this.type);
Serialization.writeMultiset(this, objectOutputStream);
}

@CanIgnoreReturnValue
public int add(E e, int i) {
checkIsE(e);
CollectPreconditions.checkNonnegative(i, "occurrences");
if (i == 0) {
return count(e);
}
int ordinal = e.ordinal();
int i3 = this.counts[ordinal];
long j2 = (long) i;
long j3 = ((long) i3) + j2;
Preconditions.checkArgument(j3 <= 2147483647L, "too many occurrences: %s", j3);
this.counts[ordinal] = (int) j3;
if (i3 == 0) {
this.distinctElements++;
}
this.size += j2;
return i3;
}

public void clear() {
Arrays.fill(this.counts, 0);
this.size = 0;
this.distinctElements = 0;
}

public /* bridge */ /* synthetic */ boolean contains(Object obj) {
return EnumMultiset.super.contains(obj);
}

public int count(Object obj) {
if (obj == null || !isActuallyE(obj)) {
return 0;
}
return this.counts[((Enum) obj).ordinal()];
}

public int distinctElements() {
return this.distinctElements;
}

public Iterator<E> elementIterator() {
return new 1(this);
}

public /* bridge */ /* synthetic */ Set elementSet() {
return EnumMultiset.super.elementSet();
}

public Iterator<Multiset.Entry<E>> entryIterator() {
return new 2(this);
}

public /* bridge */ /* synthetic */ Set entrySet() {
return EnumMultiset.super.entrySet();
}

public void forEachEntry(ObjIntConsumer<? super E> objIntConsumer) {
Preconditions.checkNotNull(objIntConsumer);
int i = 0;
while (true) {
E[] eArr = this.enumConstants;
if (i < eArr.length) {
int[] iArr = this.counts;
if (iArr[i] > 0) {
objIntConsumer.accept(eArr[i], iArr[i]);
}
i++;
} else {
return;
}
}
}

public /* bridge */ /* synthetic */ boolean isEmpty() {
return EnumMultiset.super.isEmpty();
}

public Iterator<E> iterator() {
return Multisets.iteratorImpl(this);
}

@CanIgnoreReturnValue
public int remove(Object obj, int i) {
if (obj == null || !isActuallyE(obj)) {
return 0;
}
Enum enumR = (Enum) obj;
CollectPreconditions.checkNonnegative(i, zrtAcABpPYmqeJ.TvCuLoIxz);
if (i == 0) {
return count(obj);
}
int ordinal = enumR.ordinal();
int[] iArr = this.counts;
int i3 = iArr[ordinal];
if (i3 == 0) {
return 0;
}
if (i3 <= i) {
iArr[ordinal] = 0;
this.distinctElements--;
this.size -= (long) i3;
} else {
iArr[ordinal] = i3 - i;
this.size -= (long) i;
}
return i3;
}

@CanIgnoreReturnValue
public int setCount(E e, int i) {
checkIsE(e);
CollectPreconditions.checkNonnegative(i, "count");
int ordinal = e.ordinal();
int[] iArr = this.counts;
int i3 = iArr[ordinal];
iArr[ordinal] = i;
this.size += (long) (i - i3);
if (i3 == 0 && i > 0) {
this.distinctElements++;
} else if (i3 > 0 && i == 0) {
this.distinctElements--;
}
return i3;
}

@CanIgnoreReturnValue
public /* bridge */ /* synthetic */ boolean setCount(@ParametricNullness Object obj, int i, int i3) {
return EnumMultiset.super.setCount(obj, i, i3);
}

public int size() {
return Ints.saturatedCast(this.size);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\collect\ForwardingNavigableMap$StandardDescendingMap.java

package com.google.common.collect;

import com.google.common.annotations.Beta;
import com.google.common.collect.Maps;
import java.util.Iterator;
import java.util.Map;
import java.util.NavigableMap;
import java.util.function.BiFunction;

@Beta
public class ForwardingNavigableMap$StandardDescendingMap extends Maps.DescendingMap<K, V> {
public final /* synthetic */ ForwardingNavigableMap this$0;

public ForwardingNavigableMap$StandardDescendingMap(ForwardingNavigableMap forwardingNavigableMap) {
this.this$0 = forwardingNavigableMap;
}

public Iterator<Map.Entry<K, V>> entryIterator() {
return new 1(this);
}

public NavigableMap<K, V> forward() {
return this.this$0;
}

public void replaceAll(BiFunction<? super K, ? super V, ? extends V> biFunction) {
forward().replaceAll(biFunction);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\collect\MapMakerInternalMap$AbstractSerializationProxy.java

package com.google.common.collect;

import com.google.common.base.Equivalence;
import com.google.common.collect.MapMakerInternalMap;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.Map;
import java.util.concurrent.ConcurrentMap;

public abstract class MapMakerInternalMap$AbstractSerializationProxy<K, V> extends ForwardingConcurrentMap<K, V> implements Serializable {
private static final long serialVersionUID = 3;
public final int concurrencyLevel;
public transient ConcurrentMap<K, V> delegate;
public final Equivalence<Object> keyEquivalence;
public final MapMakerInternalMap.Strength keyStrength;
public final Equivalence<Object> valueEquivalence;
public final MapMakerInternalMap.Strength valueStrength;

public MapMakerInternalMap$AbstractSerializationProxy(MapMakerInternalMap.Strength strength, MapMakerInternalMap.Strength strength2, Equivalence<Object> equivalence, Equivalence<Object> equivalence2, int i, ConcurrentMap<K, V> concurrentMap) {
this.keyStrength = strength;
this.valueStrength = strength2;
this.keyEquivalence = equivalence;
this.valueEquivalence = equivalence2;
this.concurrencyLevel = i;
this.delegate = concurrentMap;
}

public ConcurrentMap<K, V> delegate() {
return this.delegate;
}

public void readEntries(ObjectInputStream objectInputStream) throws IOException, ClassNotFoundException {
while (true) {
Object readObject = objectInputStream.readObject();
if (readObject != null) {
this.delegate.put(readObject, objectInputStream.readObject());
} else {
return;
}
}
}

public MapMaker readMapMaker(ObjectInputStream objectInputStream) throws IOException {
return new MapMaker().initialCapacity(objectInputStream.readInt()).setKeyStrength(this.keyStrength).setValueStrength(this.valueStrength).keyEquivalence(this.keyEquivalence).concurrencyLevel(this.concurrencyLevel);
}

public void writeMapTo(ObjectOutputStream objectOutputStream) throws IOException {
objectOutputStream.writeInt(this.delegate.size());
for (Map.Entry next : this.delegate.entrySet()) {
objectOutputStream.writeObject(next.getKey());
objectOutputStream.writeObject(next.getValue());
}
objectOutputStream.writeObject((Object) null);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\collect\MapMakerInternalMap$WeakKeyDummyValueEntry.java

package com.google.common.collect;

import com.google.common.collect.MapMaker;
import com.google.common.collect.MapMakerInternalMap;
import java.lang.ref.ReferenceQueue;

public final class MapMakerInternalMap$WeakKeyDummyValueEntry<K> extends MapMakerInternalMap.AbstractWeakKeyEntry<K, MapMaker.Dummy, MapMakerInternalMap$WeakKeyDummyValueEntry<K>> implements MapMakerInternalMap.StrongValueEntry<K, MapMaker.Dummy, MapMakerInternalMap$WeakKeyDummyValueEntry<K>> {
public MapMakerInternalMap$WeakKeyDummyValueEntry(ReferenceQueue<K> referenceQueue, K k, int i, MapMakerInternalMap$WeakKeyDummyValueEntry<K> mapMakerInternalMap$WeakKeyDummyValueEntry) {
super(referenceQueue, k, i, mapMakerInternalMap$WeakKeyDummyValueEntry);
}

public MapMakerInternalMap$WeakKeyDummyValueEntry<K> copy(ReferenceQueue<K> referenceQueue, MapMakerInternalMap$WeakKeyDummyValueEntry<K> mapMakerInternalMap$WeakKeyDummyValueEntry) {
return new MapMakerInternalMap$WeakKeyDummyValueEntry<>(referenceQueue, getKey(), this.hash, mapMakerInternalMap$WeakKeyDummyValueEntry);
}

public MapMaker.Dummy getValue() {
return MapMaker.Dummy.VALUE;
}

public void setValue(MapMaker.Dummy dummy) {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\collect\Ordering.java

package com.google.common.collect;

import com.google.common.annotations.GwtCompatible;
import com.google.common.base.Function;
import com.google.common.base.Preconditions;
import com.google.errorprone.annotations.CanIgnoreReturnValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

@GwtCompatible
@ElementTypesAreNonnullByDefault
public abstract class Ordering<T> implements Comparator<T> {
public static final int LEFT_IS_GREATER = 1;
public static final int RIGHT_IS_GREATER = -1;

@GwtCompatible(serializable = true)
public static Ordering<Object> allEqual() {
return AllEqualOrdering.INSTANCE;
}

public static Ordering<Object> arbitrary() {
return ArbitraryOrderingHolder.ARBITRARY_ORDERING;
}

@GwtCompatible(serializable = true)
public static <T> Ordering<T> compound(Iterable<? extends Comparator<? super T>> iterable) {
return new CompoundOrdering(iterable);
}

@GwtCompatible(serializable = true)
public static <T> Ordering<T> explicit(T t, T... tArr) {
return explicit(Lists.asList(t, tArr));
}

@GwtCompatible(serializable = true)
public static <T> Ordering<T> explicit(List<T> list) {
return new ExplicitOrdering(list);
}

@GwtCompatible(serializable = true)
@Deprecated
public static <T> Ordering<T> from(Ordering<T> ordering) {
return (Ordering) Preconditions.checkNotNull(ordering);
}

@GwtCompatible(serializable = true)
public static <T> Ordering<T> from(Comparator<T> comparator) {
return comparator instanceof Ordering ? (Ordering) comparator : new ComparatorOrdering<>(comparator);
}

@GwtCompatible(serializable = true)
public static <C extends Comparable> Ordering<C> natural() {
return NaturalOrdering.INSTANCE;
}

@GwtCompatible(serializable = true)
public static Ordering<Object> usingToString() {
return UsingToStringOrdering.INSTANCE;
}

@Deprecated
public int binarySearch(List<? extends T> list, @ParametricNullness T t) {
return Collections.binarySearch(list, t, this);
}

@CanIgnoreReturnValue
public abstract int compare(@ParametricNullness T t, @ParametricNullness T t2);

@GwtCompatible(serializable = true)
public <U extends T> Ordering<U> compound(Comparator<? super U> comparator) {
return new CompoundOrdering(this, (Comparator) Preconditions.checkNotNull(comparator));
}

public <E extends T> List<E> greatestOf(Iterable<E> iterable, int i) {
return reverse().leastOf(iterable, i);
}

public <E extends T> List<E> greatestOf(Iterator<E> it, int i) {
return reverse().leastOf(it, i);
}

public <E extends T> ImmutableList<E> immutableSortedCopy(Iterable<E> iterable) {
return ImmutableList.sortedCopyOf(this, iterable);
}

public boolean isOrdered(Iterable<? extends T> iterable) {
Iterator<? extends T> it = iterable.iterator();
if (!it.hasNext()) {
return true;
}
Object next = it.next();
while (it.hasNext()) {
Object next2 = it.next();
if (compare(next, next2) > 0) {
return false;
}
next = next2;
}
return true;
}

public boolean isStrictlyOrdered(Iterable<? extends T> iterable) {
Iterator<? extends T> it = iterable.iterator();
if (!it.hasNext()) {
return true;
}
Object next = it.next();
while (it.hasNext()) {
Object next2 = it.next();
if (compare(next, next2) >= 0) {
return false;
}
next = next2;
}
return true;
}

public <E extends T> List<E> leastOf(Iterable<E> iterable, int i) {
if (iterable instanceof Collection) {
Collection collection = (Collection) iterable;
if (((long) collection.size()) <= ((long) i) * 2) {
Object[] array = collection.toArray();
Arrays.sort(array, this);
if (array.length > i) {
array = Arrays.copyOf(array, i);
}
return Collections.unmodifiableList(Arrays.asList(array));
}
}
return leastOf(iterable.iterator(), i);
}

public <E extends T> List<E> leastOf(Iterator<E> it, int i) {
Preconditions.checkNotNull(it);
CollectPreconditions.checkNonnegative(i, "k");
if (i == 0 || !it.hasNext()) {
return Collections.emptyList();
}
if (i >= 1073741823) {
ArrayList newArrayList = Lists.newArrayList(it);
Collections.sort(newArrayList, this);
if (newArrayList.size() > i) {
newArrayList.subList(i, newArrayList.size()).clear();
}
newArrayList.trimToSize();
return Collections.unmodifiableList(newArrayList);
}
TopKSelector least = TopKSelector.least(i, this);
least.offerAll(it);
return least.topK();
}

@GwtCompatible(serializable = true)
public <S extends T> Ordering<Iterable<S>> lexicographical() {
return new LexicographicalOrdering(this);
}

@ParametricNullness
public <E extends T> E max(Iterable<E> iterable) {
return max(iterable.iterator());
}

@ParametricNullness
public <E extends T> E max(@ParametricNullness E e, @ParametricNullness E e2) {
return compare(e, e2) >= 0 ? e : e2;
}

@ParametricNullness
public <E extends T> E max(@ParametricNullness E e, @ParametricNullness E e2, @ParametricNullness E e3, E... eArr) {
E max = max(max(e, e2), e3);
for (E max2 : eArr) {
max = max(max, max2);
}
return max;
}

@ParametricNullness
public <E extends T> E max(Iterator<E> it) {
E next = it.next();
while (it.hasNext()) {
next = max(next, it.next());
}
return next;
}

@ParametricNullness
public <E extends T> E min(Iterable<E> iterable) {
return min(iterable.iterator());
}

@ParametricNullness
public <E extends T> E min(@ParametricNullness E e, @ParametricNullness E e2) {
return compare(e, e2) <= 0 ? e : e2;
}

@ParametricNullness
public <E extends T> E min(@ParametricNullness E e, @ParametricNullness E e2, @ParametricNullness E e3, E... eArr) {
E min = min(min(e, e2), e3);
for (E min2 : eArr) {
min = min(min, min2);
}
return min;
}

@ParametricNullness
public <E extends T> E min(Iterator<E> it) {
E next = it.next();
while (it.hasNext()) {
next = min(next, it.next());
}
return next;
}

@GwtCompatible(serializable = true)
public <S extends T> Ordering<S> nullsFirst() {
return new NullsFirstOrdering(this);
}

@GwtCompatible(serializable = true)
public <S extends T> Ordering<S> nullsLast() {
return new NullsLastOrdering(this);
}

public <T2 extends T> Ordering<Map.Entry<T2, ?>> onKeys() {
return onResultOf(Maps.keyFunction());
}

@GwtCompatible(serializable = true)
public <F> Ordering<F> onResultOf(Function<F, ? extends T> function) {
return new ByFunctionOrdering(function, this);
}

@GwtCompatible(serializable = true)
public <S extends T> Ordering<S> reverse() {
return new ReverseOrdering(this);
}

public <E extends T> List<E> sortedCopy(Iterable<E> iterable) {
Object[] array = Iterables.toArray(iterable);
Arrays.sort(array, this);
return Lists.newArrayList(Arrays.asList(array));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\collect\Range$RangeLexOrdering.java

package com.google.common.collect;

import java.io.Serializable;

public class Range$RangeLexOrdering extends Ordering<Range<?>> implements Serializable {
public static final Ordering<Range<?>> INSTANCE = new Range$RangeLexOrdering();
private static final long serialVersionUID = 0;

private Range$RangeLexOrdering() {
}

public int compare(Range<?> range, Range<?> range2) {
return ComparisonChain.start().compare(range.lowerBound, range2.lowerBound).compare(range.upperBound, range2.upperBound).result();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\collect\Serialization.java

package com.google.common.collect;

import com.google.common.annotations.GwtIncompatible;
import com.google.common.collect.Multiset;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Collection;
import java.util.Map;

@GwtIncompatible
@ElementTypesAreNonnullByDefault
final class Serialization {
private Serialization() {
}

public static <T> FieldSetter<T> getFieldSetter(Class<T> cls, String str) {
try {
return new FieldSetter<>(cls.getDeclaredField(str), (1) null);
} catch (NoSuchFieldException e) {
throw new AssertionError(e);
}
}

public static <K, V> void populateMap(Map<K, V> map, ObjectInputStream objectInputStream) throws IOException, ClassNotFoundException {
populateMap(map, objectInputStream, objectInputStream.readInt());
}

public static <K, V> void populateMap(Map<K, V> map, ObjectInputStream objectInputStream, int i) throws IOException, ClassNotFoundException {
for (int i3 = 0; i3 < i; i3++) {
map.put(objectInputStream.readObject(), objectInputStream.readObject());
}
}

public static <K, V> void populateMultimap(Multimap<K, V> multimap, ObjectInputStream objectInputStream) throws IOException, ClassNotFoundException {
populateMultimap(multimap, objectInputStream, objectInputStream.readInt());
}

public static <K, V> void populateMultimap(Multimap<K, V> multimap, ObjectInputStream objectInputStream, int i) throws IOException, ClassNotFoundException {
for (int i3 = 0; i3 < i; i3++) {
Collection collection = multimap.get(objectInputStream.readObject());
int readInt = objectInputStream.readInt();
for (int i4 = 0; i4 < readInt; i4++) {
collection.add(objectInputStream.readObject());
}
}
}

public static <E> void populateMultiset(Multiset<E> multiset, ObjectInputStream objectInputStream) throws IOException, ClassNotFoundException {
populateMultiset(multiset, objectInputStream, objectInputStream.readInt());
}

public static <E> void populateMultiset(Multiset<E> multiset, ObjectInputStream objectInputStream, int i) throws IOException, ClassNotFoundException {
for (int i3 = 0; i3 < i; i3++) {
multiset.add(objectInputStream.readObject(), objectInputStream.readInt());
}
}

public static int readCount(ObjectInputStream objectInputStream) throws IOException {
return objectInputStream.readInt();
}

public static <K, V> void writeMap(Map<K, V> map, ObjectOutputStream objectOutputStream) throws IOException {
objectOutputStream.writeInt(map.size());
for (Map.Entry next : map.entrySet()) {
objectOutputStream.writeObject(next.getKey());
objectOutputStream.writeObject(next.getValue());
}
}

public static <K, V> void writeMultimap(Multimap<K, V> multimap, ObjectOutputStream objectOutputStream) throws IOException {
objectOutputStream.writeInt(multimap.asMap().size());
for (Map.Entry entry : multimap.asMap().entrySet()) {
objectOutputStream.writeObject(entry.getKey());
objectOutputStream.writeInt(((Collection) entry.getValue()).size());
for (Object writeObject : (Collection) entry.getValue()) {
objectOutputStream.writeObject(writeObject);
}
}
}

public static <E> void writeMultiset(Multiset<E> multiset, ObjectOutputStream objectOutputStream) throws IOException {
objectOutputStream.writeInt(multiset.entrySet().size());
for (Multiset.Entry entry : multiset.entrySet()) {
objectOutputStream.writeObject(entry.getElement());
objectOutputStream.writeInt(entry.getCount());
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\collect\SingletonImmutableSet.java

package com.google.common.collect;

import android.support.v4.media.a;
import com.google.common.annotations.GwtCompatible;
import com.google.common.base.Preconditions;

@GwtCompatible(emulated = true, serializable = true)
@ElementTypesAreNonnullByDefault
final class SingletonImmutableSet<E> extends ImmutableSet<E> {
public final transient E element;

public SingletonImmutableSet(E e) {
this.element = Preconditions.checkNotNull(e);
}

public ImmutableList<E> asList() {
return ImmutableList.of(this.element);
}

public boolean contains(Object obj) {
return this.element.equals(obj);
}

public int copyIntoArray(Object[] objArr, int i) {
objArr[i] = this.element;
return i + 1;
}

public final int hashCode() {
return this.element.hashCode();
}

public boolean isPartialView() {
return false;
}

public UnmodifiableIterator<E> iterator() {
return Iterators.singletonIterator(this.element);
}

public int size() {
return 1;
}

public String toString() {
String obj = this.element.toString();
StringBuilder sb = new StringBuilder(a.c(obj, 2));
sb.append('[');
sb.append(obj);
sb.append(']');
return sb.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\collect\StandardTable$Column$Values.java

package com.google.common.collect;

import com.google.common.base.Predicates;
import com.google.common.collect.Maps;
import com.google.common.collect.StandardTable;
import java.util.Collection;

public class StandardTable$Column$Values extends Maps.Values<R, V> {
public final /* synthetic */ StandardTable.Column this$1;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public StandardTable$Column$Values(StandardTable.Column column) {
super(column);
this.this$1 = column;
}

public boolean remove(Object obj) {
return obj != null && this.this$1.removeFromColumnIf(Maps.valuePredicateOnEntries(Predicates.equalTo(obj)));
}

public boolean removeAll(Collection<?> collection) {
return this.this$1.removeFromColumnIf(Maps.valuePredicateOnEntries(Predicates.in(collection)));
}

public boolean retainAll(Collection<?> collection) {
return this.this$1.removeFromColumnIf(Maps.valuePredicateOnEntries(Predicates.not(Predicates.in(collection))));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\collect\TreeRangeMap$1.java

package com.google.common.collect;

import android.support.v4.media.a;
import com.google.common.base.Preconditions;
import java.util.Collections;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.function.BiFunction;

public class TreeRangeMap$1 implements RangeMap<Comparable<?>, Object> {
public Map<Range<Comparable<?>>, Object> asDescendingMapOfRanges() {
return Collections.emptyMap();
}

public Map<Range<Comparable<?>>, Object> asMapOfRanges() {
return Collections.emptyMap();
}

public void clear() {
}

public Object get(Comparable<?> comparable) {
return null;
}

public Map.Entry<Range<Comparable<?>>, Object> getEntry(Comparable<?> comparable) {
return null;
}

public void merge(Range<Comparable<?>> range, Object obj, BiFunction<? super Object, ? super Object, ? extends Object> biFunction) {
Preconditions.checkNotNull(range);
String valueOf = String.valueOf(range);
throw new IllegalArgumentException(a.f(valueOf.length() + 45, "Cannot merge range ", valueOf, " into an empty subRangeMap"));
}

public void put(Range<Comparable<?>> range, Object obj) {
Preconditions.checkNotNull(range);
String valueOf = String.valueOf(range);
throw new IllegalArgumentException(a.f(valueOf.length() + 46, "Cannot insert range ", valueOf, " into an empty subRangeMap"));
}

public void putAll(RangeMap<Comparable<?>, Object> rangeMap) {
if (!rangeMap.asMapOfRanges().isEmpty()) {
throw new IllegalArgumentException("Cannot putAll(nonEmptyRangeMap) into an empty subRangeMap");
}
}

public void putCoalescing(Range<Comparable<?>> range, Object obj) {
Preconditions.checkNotNull(range);
String valueOf = String.valueOf(range);
throw new IllegalArgumentException(a.f(valueOf.length() + 46, "Cannot insert range ", valueOf, " into an empty subRangeMap"));
}

public void remove(Range<Comparable<?>> range) {
Preconditions.checkNotNull(range);
}

public Range<Comparable<?>> span() {
throw new NoSuchElementException();
}

public RangeMap<Comparable<?>, Object> subRangeMap(Range<Comparable<?>> range) {
Preconditions.checkNotNull(range);
return this;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\eventbus\Dispatcher.java

package com.google.common.eventbus;

import java.util.Iterator;

@ElementTypesAreNonnullByDefault
abstract class Dispatcher {
public static Dispatcher immediate() {
return ImmediateDispatcher.access$200();
}

public static Dispatcher legacyAsync() {
return new LegacyAsyncDispatcher((1) null);
}

public static Dispatcher perThreadDispatchQueue() {
return new PerThreadQueuedDispatcher((1) null);
}

public abstract void dispatch(Object obj, Iterator<Subscriber> it);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\io\ByteSource$ConcatenatedByteSource.java

package com.google.common.io;

import android.support.v4.media.a;
import com.google.common.base.Optional;
import com.google.common.base.Preconditions;
import java.io.IOException;
import java.io.InputStream;
import java.util.Collection;

public final class ByteSource$ConcatenatedByteSource extends ByteSource {
public final Iterable<? extends ByteSource> sources;

public ByteSource$ConcatenatedByteSource(Iterable<? extends ByteSource> iterable) {
this.sources = (Iterable) Preconditions.checkNotNull(iterable);
}

public boolean isEmpty() throws IOException {
for (ByteSource isEmpty : this.sources) {
if (!isEmpty.isEmpty()) {
return false;
}
}
return true;
}

public InputStream openStream() throws IOException {
return new MultiInputStream(this.sources.iterator());
}

public long size() throws IOException {
long j2 = 0;
for (ByteSource size : this.sources) {
j2 += size.size();
if (j2 < 0) {
return Long.MAX_VALUE;
}
}
return j2;
}

public Optional<Long> sizeIfKnown() {
Iterable<? extends ByteSource> iterable = this.sources;
if (!(iterable instanceof Collection)) {
return Optional.absent();
}
long j2 = 0;
for (ByteSource sizeIfKnown : iterable) {
Optional sizeIfKnown2 = sizeIfKnown.sizeIfKnown();
if (!sizeIfKnown2.isPresent()) {
return Optional.absent();
}
j2 += ((Long) sizeIfKnown2.get()).longValue();
if (j2 < 0) {
return Optional.of(Long.MAX_VALUE);
}
}
return Optional.of(Long.valueOf(j2));
}

public String toString() {
String valueOf = String.valueOf(this.sources);
return a.f(valueOf.length() + 19, "ByteSource.concat(", valueOf, ")");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\io\Files$2.java

package com.google.common.io;

import com.google.common.graph.SuccessorsFunction;
import java.io.File;

public class Files$2 implements SuccessorsFunction<File> {
/* JADX WARNING: Code restructure failed: missing block: B:2:0x0006, code lost:
r2 = r2.listFiles();
*/
/* Code decompiled incorrectly, please refer to instructions dump. */
public java.lang.Iterable<java.io.File> successors(java.io.File r2) {
/*
r1 = this;
boolean r0 = r2.isDirectory()
if (r0 == 0) goto L_0x0015
java.io.File[] r2 = r2.listFiles()
if (r2 == 0) goto L_0x0015
java.util.List r2 = java.util.Arrays.asList(r2)
java.util.List r2 = java.util.Collections.unmodifiableList(r2)
return r2
L_0x0015:
com.google.common.collect.ImmutableList r2 = com.google.common.collect.ImmutableList.of()
return r2
*/
throw new UnsupportedOperationException("Method not decompiled: com.google.common.io.Files$2.successors(java.io.File):java.lang.Iterable");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\io\LineProcessor.java

package com.google.common.io;

import com.google.common.annotations.Beta;
import com.google.common.annotations.GwtIncompatible;
import com.google.errorprone.annotations.CanIgnoreReturnValue;
import java.io.IOException;

@GwtIncompatible
@ElementTypesAreNonnullByDefault
@Beta
public interface LineProcessor<T> {
@ParametricNullness
T getResult();

@CanIgnoreReturnValue
boolean processLine(String str) throws IOException;
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\io\MoreFiles$PathByteSource$1.java

package com.google.common.io;

import com.google.common.io.ByteSource;
import com.google.common.io.MoreFiles;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.util.stream.Stream;

public class MoreFiles$PathByteSource$1 extends ByteSource.AsCharSource {
public final /* synthetic */ MoreFiles.PathByteSource this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public MoreFiles$PathByteSource$1(MoreFiles.PathByteSource pathByteSource, Charset charset) {
super(pathByteSource, charset);
this.this$0 = pathByteSource;
}

public Stream<String> lines() throws IOException {
return Files.lines(MoreFiles.PathByteSource.access$100(this.this$0), this.charset);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\io\PatternFilenameFilter.java

package com.google.common.io;

import com.google.common.annotations.Beta;
import com.google.common.annotations.GwtIncompatible;
import com.google.common.base.Preconditions;
import java.io.File;
import java.io.FilenameFilter;
import java.util.regex.Pattern;

@ElementTypesAreNonnullByDefault
@GwtIncompatible
@Beta
public final class PatternFilenameFilter implements FilenameFilter {
private final Pattern pattern;

public PatternFilenameFilter(String str) {
this(Pattern.compile(str));
}

public PatternFilenameFilter(Pattern pattern2) {
this.pattern = (Pattern) Preconditions.checkNotNull(pattern2);
}

public boolean accept(File file, String str) {
return this.pattern.matcher(str).matches();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\primitives\ImmutableIntArray.java

package com.google.common.primitives;

import com.google.common.annotations.Beta;
import com.google.common.annotations.GwtCompatible;
import com.google.common.base.Preconditions;
import com.google.errorprone.annotations.Immutable;
import java.io.Serializable;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;
import java.util.Spliterator;
import java.util.Spliterators;
import java.util.function.IntConsumer;
import java.util.stream.IntStream;

@GwtCompatible
@ElementTypesAreNonnullByDefault
@Immutable
@Beta
public final class ImmutableIntArray implements Serializable {
/* access modifiers changed from: private */
public static final ImmutableIntArray EMPTY = new ImmutableIntArray(new int[0]);
/* access modifiers changed from: private */
public final int[] array;
private final int end;
/* access modifiers changed from: private */
public final transient int start;

private ImmutableIntArray(int[] iArr) {
this(iArr, 0, iArr.length);
}

private ImmutableIntArray(int[] iArr, int i, int i3) {
this.array = iArr;
this.start = i;
this.end = i3;
}

public static Builder builder() {
return new Builder(10);
}

public static Builder builder(int i) {
Preconditions.checkArgument(i >= 0, "Invalid initialCapacity: %s", i);
return new Builder(i);
}

public static ImmutableIntArray copyOf(Iterable<Integer> iterable) {
return iterable instanceof Collection ? copyOf((Collection<Integer>) (Collection) iterable) : builder().addAll(iterable).build();
}

public static ImmutableIntArray copyOf(Collection<Integer> collection) {
return collection.isEmpty() ? EMPTY : new ImmutableIntArray(Ints.toArray(collection));
}

public static ImmutableIntArray copyOf(IntStream intStream) {
int[] array2 = intStream.toArray();
return array2.length == 0 ? EMPTY : new ImmutableIntArray(array2);
}

public static ImmutableIntArray copyOf(int[] iArr) {
return iArr.length == 0 ? EMPTY : new ImmutableIntArray(Arrays.copyOf(iArr, iArr.length));
}

private boolean isPartialView() {
return this.start > 0 || this.end < this.array.length;
}

public static ImmutableIntArray of() {
return EMPTY;
}

public static ImmutableIntArray of(int i) {
return new ImmutableIntArray(new int[]{i});
}

public static ImmutableIntArray of(int i, int i3) {
return new ImmutableIntArray(new int[]{i, i3});
}

public static ImmutableIntArray of(int i, int i3, int i4) {
return new ImmutableIntArray(new int[]{i, i3, i4});
}

public static ImmutableIntArray of(int i, int i3, int i4, int i5) {
return new ImmutableIntArray(new int[]{i, i3, i4, i5});
}

public static ImmutableIntArray of(int i, int i3, int i4, int i5, int i6) {
return new ImmutableIntArray(new int[]{i, i3, i4, i5, i6});
}

public static ImmutableIntArray of(int i, int i3, int i4, int i5, int i6, int i7) {
return new ImmutableIntArray(new int[]{i, i3, i4, i5, i6, i7});
}

public static ImmutableIntArray of(int i, int... iArr) {
Preconditions.checkArgument(iArr.length <= 2147483646, "the total number of elements must fit in an int");
int[] iArr2 = new int[(iArr.length + 1)];
iArr2[0] = i;
System.arraycopy(iArr, 0, iArr2, 1, iArr.length);
return new ImmutableIntArray(iArr2);
}

/* access modifiers changed from: private */
public Spliterator.OfInt spliterator() {
return Spliterators.spliterator(this.array, this.start, this.end, 1040);
}

public List<Integer> asList() {
return new AsList(this, (1) null);
}

public boolean contains(int i) {
return indexOf(i) >= 0;
}

public boolean equals(Object obj) {
if (obj == this) {
return true;
}
if (!(obj instanceof ImmutableIntArray)) {
return false;
}
ImmutableIntArray immutableIntArray = (ImmutableIntArray) obj;
if (length() != immutableIntArray.length()) {
return false;
}
for (int i = 0; i < length(); i++) {
if (get(i) != immutableIntArray.get(i)) {
return false;
}
}
return true;
}

public void forEach(IntConsumer intConsumer) {
Preconditions.checkNotNull(intConsumer);
for (int i = this.start; i < this.end; i++) {
intConsumer.accept(this.array[i]);
}
}

public int get(int i) {
Preconditions.checkElementIndex(i, length());
return this.array[this.start + i];
}

public int hashCode() {
int i = 1;
for (int i3 = this.start; i3 < this.end; i3++) {
i = (i * 31) + Ints.hashCode(this.array[i3]);
}
return i;
}

public int indexOf(int i) {
for (int i3 = this.start; i3 < this.end; i3++) {
if (this.array[i3] == i) {
return i3 - this.start;
}
}
return -1;
}

public boolean isEmpty() {
return this.end == this.start;
}

public int lastIndexOf(int i) {
int i3 = this.end;
while (true) {
i3--;
int i4 = this.start;
if (i3 < i4) {
return -1;
}
if (this.array[i3] == i) {
return i3 - i4;
}
}
}

public int length() {
return this.end - this.start;
}

public Object readResolve() {
return isEmpty() ? EMPTY : this;
}

public IntStream stream() {
return Arrays.stream(this.array, this.start, this.end);
}

public ImmutableIntArray subArray(int i, int i3) {
Preconditions.checkPositionIndexes(i, i3, length());
if (i == i3) {
return EMPTY;
}
int[] iArr = this.array;
int i4 = this.start;
return new ImmutableIntArray(iArr, i + i4, i4 + i3);
}

public int[] toArray() {
return Arrays.copyOfRange(this.array, this.start, this.end);
}

public String toString() {
if (isEmpty()) {
return "[]";
}
StringBuilder sb = new StringBuilder(length() * 5);
sb.append('[');
sb.append(this.array[this.start]);
int i = this.start;
while (true) {
i++;
if (i < this.end) {
sb.append(", ");
sb.append(this.array[i]);
} else {
sb.append(']');
return sb.toString();
}
}
}

public ImmutableIntArray trimmed() {
return isPartialView() ? new ImmutableIntArray(toArray()) : this;
}

public Object writeReplace() {
return trimmed();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\util\concurrent\AbstractFuture$Trusted.java

package com.google.common.util.concurrent;

public interface AbstractFuture$Trusted<V> extends ListenableFuture<V> {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\util\concurrent\AbstractFuture$TrustedFuture.java

package com.google.common.util.concurrent;

import com.google.errorprone.annotations.CanIgnoreReturnValue;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.Executor;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;

public abstract class AbstractFuture$TrustedFuture<V> extends AbstractFuture<V> implements AbstractFuture$Trusted<V> {
public final void addListener(Runnable runnable, Executor executor) {
AbstractFuture$TrustedFuture.super.addListener(runnable, executor);
}

@CanIgnoreReturnValue
public final boolean cancel(boolean z) {
return AbstractFuture$TrustedFuture.super.cancel(z);
}

@CanIgnoreReturnValue
@ParametricNullness
public final V get() throws InterruptedException, ExecutionException {
return AbstractFuture$TrustedFuture.super.get();
}

@CanIgnoreReturnValue
@ParametricNullness
public final V get(long j2, TimeUnit timeUnit) throws InterruptedException, ExecutionException, TimeoutException {
return AbstractFuture$TrustedFuture.super.get(j2, timeUnit);
}

public final boolean isCancelled() {
return AbstractFuture$TrustedFuture.super.isCancelled();
}

public final boolean isDone() {
return AbstractFuture$TrustedFuture.super.isDone();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\util\concurrent\CycleDetectingLockFactory.java

package com.google.common.util.concurrent;

import android.support.v4.media.a;
import com.google.common.annotations.Beta;
import com.google.common.annotations.GwtIncompatible;
import com.google.common.annotations.VisibleForTesting;
import com.google.common.base.Preconditions;
import com.google.common.collect.Lists;
import com.google.common.collect.MapMaker;
import com.google.common.collect.Maps;
import com.google.errorprone.annotations.CanIgnoreReturnValue;
import java.util.ArrayList;
import java.util.Collections;
import java.util.EnumMap;
import java.util.Map;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.logging.Logger;

@GwtIncompatible
@CanIgnoreReturnValue
@ElementTypesAreNonnullByDefault
@Beta
public class CycleDetectingLockFactory {
private static final ThreadLocal<ArrayList<LockGraphNode>> acquiredLocks = new 1();
private static final ConcurrentMap<Class<? extends Enum<?>>, Map<? extends Enum<?>, LockGraphNode>> lockGraphNodesPerType = new MapMaker().weakKeys().makeMap();
/* access modifiers changed from: private */
public static final Logger logger = Logger.getLogger(CycleDetectingLockFactory.class.getName());
public final Policy policy;

private CycleDetectingLockFactory(Policy policy2) {
this.policy = (Policy) Preconditions.checkNotNull(policy2);
}

/* access modifiers changed from: private */
public void aboutToAcquire(CycleDetectingLock cycleDetectingLock) {
if (!cycleDetectingLock.isAcquiredByCurrentThread()) {
ArrayList arrayList = acquiredLocks.get();
LockGraphNode lockGraphNode = cycleDetectingLock.getLockGraphNode();
lockGraphNode.checkAcquiredLocks(this.policy, arrayList);
arrayList.add(lockGraphNode);
}
}

@VisibleForTesting
public static <E extends Enum<E>> Map<E, LockGraphNode> createNodes(Class<E> cls) {
EnumMap newEnumMap = Maps.newEnumMap(cls);
Enum[] enumArr = (Enum[]) cls.getEnumConstants();
int length = enumArr.length;
ArrayList newArrayListWithCapacity = Lists.newArrayListWithCapacity(length);
int i = 0;
for (Enum enumR : enumArr) {
LockGraphNode lockGraphNode = new LockGraphNode(getLockName(enumR));
newArrayListWithCapacity.add(lockGraphNode);
newEnumMap.put(enumR, lockGraphNode);
}
for (int i3 = 1; i3 < length; i3++) {
((LockGraphNode) newArrayListWithCapacity.get(i3)).checkAcquiredLocks(Policies.THROW, newArrayListWithCapacity.subList(0, i3));
}
while (i < length - 1) {
i++;
((LockGraphNode) newArrayListWithCapacity.get(i)).checkAcquiredLocks(Policies.DISABLED, newArrayListWithCapacity.subList(i, length));
}
return Collections.unmodifiableMap(newEnumMap);
}

private static String getLockName(Enum<?> enumR) {
String simpleName = enumR.getDeclaringClass().getSimpleName();
String name = enumR.name();
return a.f(a.c(name, simpleName.length() + 1), simpleName, ".", name);
}

/* JADX WARNING: type inference failed for: r2v0, types: [java.lang.Object, java.lang.Class, java.lang.Class<E>] */
/* JADX WARNING: Unknown variable types count: 1 */
/* Code decompiled incorrectly, please refer to instructions dump. */
private static <E extends java.lang.Enum<E>> java.util.Map<? extends E, com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode> getOrCreateNodes(java.lang.Class<E> r2) {
/*
java.util.concurrent.ConcurrentMap<java.lang.Class<? extends java.lang.Enum<?>>, java.util.Map<? extends java.lang.Enum<?>, com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode>> r0 = lockGraphNodesPerType
java.lang.Object r1 = r0.get(r2)
java.util.Map r1 = (java.util.Map) r1
if (r1 == 0) goto L_0x000b
return r1
L_0x000b:
java.util.Map r1 = createNodes(r2)
java.lang.Object r2 = r0.putIfAbsent(r2, r1)
java.util.Map r2 = (java.util.Map) r2
java.lang.Object r2 = com.google.common.base.MoreObjects.firstNonNull(r2, r1)
java.util.Map r2 = (java.util.Map) r2
return r2
*/
throw new UnsupportedOperationException("Method not decompiled: com.google.common.util.concurrent.CycleDetectingLockFactory.getOrCreateNodes(java.lang.Class):java.util.Map");
}

/* access modifiers changed from: private */
public static void lockStateChanged(CycleDetectingLock cycleDetectingLock) {
if (!cycleDetectingLock.isAcquiredByCurrentThread()) {
ArrayList arrayList = acquiredLocks.get();
LockGraphNode lockGraphNode = cycleDetectingLock.getLockGraphNode();
for (int size = arrayList.size() - 1; size >= 0; size--) {
if (arrayList.get(size) == lockGraphNode) {
arrayList.remove(size);
return;
}
}
}
}

public static CycleDetectingLockFactory newInstance(Policy policy2) {
return new CycleDetectingLockFactory(policy2);
}

public static <E extends Enum<E>> WithExplicitOrdering<E> newInstanceWithExplicitOrdering(Class<E> cls, Policy policy2) {
Preconditions.checkNotNull(cls);
Preconditions.checkNotNull(policy2);
return new WithExplicitOrdering<>(policy2, getOrCreateNodes(cls));
}

public ReentrantLock newReentrantLock(String str) {
return newReentrantLock(str, false);
}

public ReentrantLock newReentrantLock(String str, boolean z) {
return this.policy == Policies.DISABLED ? new ReentrantLock(z) : new CycleDetectingReentrantLock(this, new LockGraphNode(str), z, (1) null);
}

public ReentrantReadWriteLock newReentrantReadWriteLock(String str) {
return newReentrantReadWriteLock(str, false);
}

public ReentrantReadWriteLock newReentrantReadWriteLock(String str, boolean z) {
return this.policy == Policies.DISABLED ? new ReentrantReadWriteLock(z) : new CycleDetectingReentrantReadWriteLock(this, new LockGraphNode(str), z, (1) null);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\util\concurrent\ExecutionList$RunnableExecutorPair.java

package com.google.common.util.concurrent;

import java.util.concurrent.Executor;

public final class ExecutionList$RunnableExecutorPair {
public final Executor executor;
public ExecutionList$RunnableExecutorPair next;
public final Runnable runnable;

public ExecutionList$RunnableExecutorPair(Runnable runnable2, Executor executor2, ExecutionList$RunnableExecutorPair executionList$RunnableExecutorPair) {
this.runnable = runnable2;
this.executor = executor2;
this.next = executionList$RunnableExecutorPair;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\common\util\concurrent\FuturesGetChecked$GetCheckedTypeValidator.java

package com.google.common.util.concurrent;

import com.google.common.annotations.VisibleForTesting;

@VisibleForTesting
public interface FuturesGetChecked$GetCheckedTypeValidator {
void validateClass(Class<? extends Exception> cls);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\errorprone\annotations\OverridingMethodsMustInvokeSuper.java

package com.google.errorprone.annotations;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Documented
@Target({ElementType.METHOD})
@Retention(RetentionPolicy.CLASS)
public @interface OverridingMethodsMustInvokeSuper {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\firebase\FirebaseException.java

package com.google.firebase;

import androidx.annotation.NonNull;
import com.google.android.gms.common.internal.Preconditions;

public class FirebaseException extends Exception {
@Deprecated
public FirebaseException() {
}

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public FirebaseException(@NonNull String str) {
super(str);
Preconditions.checkNotEmpty(str, "Detail message must not be empty");
}

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public FirebaseException(@NonNull String str, @NonNull Throwable th) {
super(str, th);
Preconditions.checkNotEmpty(str, "Detail message must not be empty");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\firebase\analytics\connector\zzb.java

package com.google.firebase.analytics.connector;

import com.google.firebase.events.Event;
import com.google.firebase.events.EventHandler;

public final /* synthetic */ class zzb implements EventHandler {
public static final /* synthetic */ zzb zza = new zzb();

private /* synthetic */ zzb() {
}

public final void handle(Event event) {
AnalyticsConnectorImpl.zza(event);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\firebase\components\CycleDetector.java
public static void detect(List<Component<?>> list) {
Set<ComponentNode> graph = toGraph(list);
Set<ComponentNode> roots = getRoots(graph);
int i = 0;
while (!roots.isEmpty()) {
ComponentNode next = roots.iterator().next();
roots.remove(next);
i++;
for (ComponentNode componentNode : next.getDependencies()) {
componentNode.removeDependent(next);
if (componentNode.isRoot()) {
roots.add(componentNode);
}
}
}
if (i != list.size()) {
ArrayList arrayList = new ArrayList();
for (ComponentNode next2 : graph) {
if (!next2.isRoot() && !next2.isLeaf()) {
arrayList.add(next2.getComponent());
}
}
throw new DependencyCycleException(arrayList);
}
}

private static Set<ComponentNode> getRoots(Set<ComponentNode> set) {
HashSet hashSet = new HashSet();
for (ComponentNode next : set) {
if (next.isRoot()) {
hashSet.add(next);
}
}
return hashSet;
}

private static Set<ComponentNode> toGraph(List<Component<?>> list) {
Set<ComponentNode> set;
HashMap hashMap = new HashMap(list.size());
Iterator<Component<?>> it = list.iterator();
while (it.hasNext()) {
Component component = (Component) it.next();
ComponentNode componentNode = new ComponentNode(component);
Iterator it2 = component.getProvidedInterfaces().iterator();
while (true) {
if (it2.hasNext()) {
Class cls = (Class) it2.next();
Dep dep = new Dep(cls, !component.isValue(), (1) null);
if (!hashMap.containsKey(dep)) {
hashMap.put(dep, new HashSet());
}
Set set2 = (Set) hashMap.get(dep);
if (set2.isEmpty() || Dep.access$100(dep)) {
set2.add(componentNode);
} else {
throw new IllegalArgumentException(String.format("Multiple components provide %s.", new Object[]{cls}));
}
}
}
}
for (Set<ComponentNode> it3 : hashMap.values()) {
for (ComponentNode componentNode2 : it3) {
for (Dependency dependency : componentNode2.getComponent().getDependencies()) {
if (dependency.isDirectInjection() && (set = (Set) hashMap.get(new Dep(dependency.getInterface(), dependency.isSet(), (1) null))) != null) {
for (ComponentNode componentNode3 : set) {
componentNode2.addDependency(componentNode3);
componentNode3.addDependent(componentNode2);
}
}
}
}
}
HashSet hashSet = new HashSet();
for (Set addAll : hashMap.values()) {
hashSet.addAll(addAll);
}
return hashSet;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\firebase\crashlytics\CustomKeysAndValues.java

package com.google.firebase.crashlytics;

import androidx.annotation.NonNull;
import java.util.Map;

public class CustomKeysAndValues {
public final Map<String, String> keysAndValues;

public CustomKeysAndValues(@NonNull Builder builder) {
this.keysAndValues = Builder.access$000(builder);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\firebase\crashlytics\internal\model\CrashlyticsReport$Session$Event$Application$Execution.java

package com.google.firebase.crashlytics.internal.model;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.google.auto.value.AutoValue;
import com.google.firebase.crashlytics.internal.model.AutoValue_CrashlyticsReport_Session_Event_Application_Execution;
import com.google.firebase.crashlytics.internal.model.CrashlyticsReport;

@AutoValue
public abstract class CrashlyticsReport$Session$Event$Application$Execution {
@NonNull
public static Builder builder() {
return new AutoValue_CrashlyticsReport_Session_Event_Application_Execution.Builder();
}

@Nullable
public abstract CrashlyticsReport.ApplicationExitInfo getAppExitInfo();

@NonNull
public abstract ImmutableList<BinaryImage> getBinaries();

@Nullable
public abstract Exception getException();

@NonNull
public abstract Signal getSignal();

@Nullable
public abstract ImmutableList<Thread> getThreads();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\firebase\crashlytics\internal\model\StaticSessionData.java

package com.google.firebase.crashlytics.internal.model;

import com.google.auto.value.AutoValue;

@AutoValue
public abstract class StaticSessionData {
public static StaticSessionData create(AppData appData, OsData osData, DeviceData deviceData) {
return new AutoValue_StaticSessionData(appData, osData, deviceData);
}

public abstract AppData appData();

public abstract DeviceData deviceData();

public abstract OsData osData();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\firebase\crashlytics\internal\settings\DefaultSettingsJsonTransform.java
public static Settings defaultSettings(CurrentTimeProvider currentTimeProvider) {
return new Settings(currentTimeProvider.getCurrentTimeMillis() + ((long) 3600000), new Settings.SessionData(8, 4), new Settings.FeatureFlagData(true, false), 0, 3600, 10.0d, 1.2d, 60);
}

public Settings buildFromJson(CurrentTimeProvider currentTimeProvider, JSONObject jSONObject) {
return defaultSettings(currentTimeProvider);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\firebase\crashlytics\internal\settings\SettingsProvider.java

package com.google.firebase.crashlytics.internal.settings;

import com.google.android.gms.tasks.Task;

public interface SettingsProvider {
Task<Settings> getSettingsAsync();

Settings getSettingsSync();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\firebase\installations\a.java

package com.google.firebase.installations;

public final /* synthetic */ class a implements Runnable {
public final /* synthetic */ FirebaseInstallations c;
public final /* synthetic */ boolean d;

public /* synthetic */ a(FirebaseInstallations firebaseInstallations, boolean z) {
this.c = firebaseInstallations;
this.d = z;
}

public final void run() {
FirebaseInstallations.c(this.c, this.d);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\firebase\installations\interop\BuildConfig.java

package com.google.firebase.installations.interop;

public final class BuildConfig {
public static final String APPLICATION_ID = "com.google.firebase.installations.interop";
public static final String BUILD_TYPE = "release";
public static final boolean DEBUG = false;
public static final String FLAVOR = "";
public static final int VERSION_CODE = -1;
public static final String VERSION_NAME = "17.0.1";
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\firebase\messaging\EnhancedIntentService$1.java

package com.google.firebase.messaging;

import android.content.Intent;
import com.google.android.gms.common.annotation.KeepForSdk;
import com.google.android.gms.tasks.Task;
import com.google.firebase.messaging.WithinAppServiceBinder;

public class EnhancedIntentService$1 implements WithinAppServiceBinder.IntentHandler {
public final /* synthetic */ EnhancedIntentService this$0;

public EnhancedIntentService$1(EnhancedIntentService enhancedIntentService) {
this.this$0 = enhancedIntentService;
}

@KeepForSdk
public Task<Void> handle(Intent intent) {
return EnhancedIntentService.access$000(this.this$0, intent);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\firebase\messaging\RemoteMessage.java

package com.google.firebase.messaging;

import android.content.Intent;
import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.Log;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.google.android.gms.common.annotation.KeepForSdk;
import com.google.android.gms.common.internal.ShowFirstParty;
import com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable;
import com.google.android.gms.common.internal.safeparcel.SafeParcelable;
import com.google.firebase.messaging.Constants;
import java.util.Map;

@SafeParcelable.Class(creator = "RemoteMessageCreator")
@SafeParcelable.Reserved({1})
public final class RemoteMessage extends AbstractSafeParcelable {
public static final Parcelable.Creator<RemoteMessage> CREATOR = new RemoteMessageCreator();
public static final int PRIORITY_HIGH = 1;
public static final int PRIORITY_NORMAL = 2;
public static final int PRIORITY_UNKNOWN = 0;
@SafeParcelable.Field(id = 2)
public Bundle bundle;
private Map<String, String> data;
private Notification notification;

@SafeParcelable.Constructor
public RemoteMessage(@SafeParcelable.Param(id = 2) Bundle bundle2) {
this.bundle = bundle2;
}

private int getMessagePriority(String str) {
if ("high".equals(str)) {
return 1;
}
return "normal".equals(str) ? 2 : 0;
}

@Nullable
public String getCollapseKey() {
return this.bundle.getString("collapse_key");
}

@NonNull
public Map<String, String> getData() {
if (this.data == null) {
this.data = Constants.MessagePayloadKeys.extractDeveloperDefinedPayload(this.bundle);
}
return this.data;
}

@Nullable
public String getFrom() {
return this.bundle.getString("from");
}

@Nullable
public String getMessageId() {
String string = this.bundle.getString("google.message_id");
return string == null ? this.bundle.getString("message_id") : string;
}

@Nullable
public String getMessageType() {
return this.bundle.getString("message_type");
}

@Nullable
public Notification getNotification() {
if (this.notification == null && NotificationParams.isNotification(this.bundle)) {
this.notification = new Notification(new NotificationParams(this.bundle), (1) null);
}
return this.notification;
}

public int getOriginalPriority() {
String string = this.bundle.getString("google.original_priority");
if (string == null) {
string = this.bundle.getString("google.priority");
}
return getMessagePriority(string);
}

public int getPriority() {
String string = this.bundle.getString("google.delivered_priority");
if (string == null) {
if ("1".equals(this.bundle.getString("google.priority_reduced"))) {
return 2;
}
string = this.bundle.getString("google.priority");
}
return getMessagePriority(string);
}

@ShowFirstParty
@Nullable
public byte[] getRawData() {
return this.bundle.getByteArray("rawData");
}

@Nullable
public String getSenderId() {
return this.bundle.getString("google.c.sender.id");
}

public long getSentTime() {
Object obj = this.bundle.get("google.sent_time");
if (obj instanceof Long) {
return ((Long) obj).longValue();
}
if (!(obj instanceof String)) {
return 0;
}
try {
return Long.parseLong((String) obj);
} catch (NumberFormatException unused) {
Log.w("FirebaseMessaging", "Invalid sent time: " + obj);
return 0;
}
}

@Nullable
public String getTo() {
return this.bundle.getString("google.to");
}

public int getTtl() {
Object obj = this.bundle.get("google.ttl");
if (obj instanceof Integer) {
return ((Integer) obj).intValue();
}
if (!(obj instanceof String)) {
return 0;
}
try {
return Integer.parseInt((String) obj);
} catch (NumberFormatException unused) {
Log.w("FirebaseMessaging", "Invalid TTL: " + obj);
return 0;
}
}

public void populateSendMessageIntent(Intent intent) {
intent.putExtras(this.bundle);
}

@KeepForSdk
public Intent toIntent() {
Intent intent = new Intent();
intent.putExtras(this.bundle);
return intent;
}

public void writeToParcel(@NonNull Parcel parcel, int i) {
RemoteMessageCreator.writeToParcel(this, parcel, i);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\firebase\remoteconfig\internal\DefaultsXmlParser.java

package com.google.firebase.remoteconfig.internal;

import android.content.Context;
import android.content.res.Resources;
import android.content.res.XmlResourceParser;
import android.util.Log;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import org.xmlpull.v1.XmlPullParserException;

public class DefaultsXmlParser {
private static final String XML_TAG_ENTRY = "entry";
private static final String XML_TAG_KEY = "key";
private static final String XML_TAG_VALUE = "value";

public static Map<String, String> getDefaultsFromXml(Context context, int i) {
HashMap hashMap = new HashMap();
try {
Resources resources = context.getResources();
if (resources == null) {
Log.e("FirebaseRemoteConfig", "Could not find the resources of the current context while trying to set defaults from an XML.");
return hashMap;
}
XmlResourceParser xml = resources.getXml(i);
String str = null;
String str2 = null;
String str3 = null;
for (int eventType = xml.getEventType(); eventType != 1; eventType = xml.next()) {
if (eventType == 2) {
str = xml.getName();
} else if (eventType == 3) {
if (xml.getName().equals(XML_TAG_ENTRY)) {
if (str2 == null || str3 == null) {
Log.w("FirebaseRemoteConfig", "An entry in the defaults XML has an invalid key and/or value tag.");
} else {
hashMap.put(str2, str3);
}
str2 = null;
str3 = null;
}
str = null;
} else if (eventType == 4 && str != null) {
char c = 65535;
int hashCode = str.hashCode();
if (hashCode != 106079) {
if (hashCode == 111972721) {
if (str.equals(XML_TAG_VALUE)) {
c = 1;
}
}
} else if (str.equals(XML_TAG_KEY)) {
c = 0;
}
if (c == 0) {
str2 = xml.getText();
} else if (c != 1) {
Log.w("FirebaseRemoteConfig", "Encountered an unexpected tag while parsing the defaults XML.");
} else {
str3 = xml.getText();
}
}
}
return hashMap;
} catch (IOException | XmlPullParserException e) {
Log.e("FirebaseRemoteConfig", "Encountered an error while parsing the defaults XML file.", e);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\gson\JsonPrimitive.java

package com.google.gson;

import com.google.gson.internal.$Gson;
import com.google.gson.internal.LazilyParsedNumber;
import java.math.BigDecimal;
import java.math.BigInteger;

public final class JsonPrimitive extends JsonElement {
private final Object value;

public JsonPrimitive(Boolean bool) {
this.value = $Gson.Preconditions.checkNotNull(bool);
}

public JsonPrimitive(Character ch) {
this.value = ((Character) $Gson.Preconditions.checkNotNull(ch)).toString();
}

public JsonPrimitive(Number number) {
this.value = $Gson.Preconditions.checkNotNull(number);
}

public JsonPrimitive(String str) {
this.value = $Gson.Preconditions.checkNotNull(str);
}

private static boolean isIntegral(JsonPrimitive jsonPrimitive) {
Object obj = jsonPrimitive.value;
if (!(obj instanceof Number)) {
return false;
}
Number number = (Number) obj;
return (number instanceof BigInteger) || (number instanceof Long) || (number instanceof Integer) || (number instanceof Short) || (number instanceof Byte);
}

public JsonPrimitive deepCopy() {
return this;
}

public boolean equals(Object obj) {
if (this == obj) {
return true;
}
if (obj == null || JsonPrimitive.class != obj.getClass()) {
return false;
}
JsonPrimitive jsonPrimitive = (JsonPrimitive) obj;
if (this.value == null) {
return jsonPrimitive.value == null;
}
if (isIntegral(this) && isIntegral(jsonPrimitive)) {
return getAsNumber().longValue() == jsonPrimitive.getAsNumber().longValue();
}
Object obj2 = this.value;
if (!(obj2 instanceof Number) || !(jsonPrimitive.value instanceof Number)) {
return obj2.equals(jsonPrimitive.value);
}
double doubleValue = getAsNumber().doubleValue();
double doubleValue2 = jsonPrimitive.getAsNumber().doubleValue();
if (doubleValue != doubleValue2) {
return Double.isNaN(doubleValue) && Double.isNaN(doubleValue2);
}
return true;
}

public BigDecimal getAsBigDecimal() {
Object obj = this.value;
return obj instanceof BigDecimal ? (BigDecimal) obj : new BigDecimal(this.value.toString());
}

public BigInteger getAsBigInteger() {
Object obj = this.value;
return obj instanceof BigInteger ? (BigInteger) obj : new BigInteger(this.value.toString());
}

public boolean getAsBoolean() {
return isBoolean() ? ((Boolean) this.value).booleanValue() : Boolean.parseBoolean(getAsString());
}

public byte getAsByte() {
return isNumber() ? getAsNumber().byteValue() : Byte.parseByte(getAsString());
}

public char getAsCharacter() {
return getAsString().charAt(0);
}

public double getAsDouble() {
return isNumber() ? getAsNumber().doubleValue() : Double.parseDouble(getAsString());
}

public float getAsFloat() {
return isNumber() ? getAsNumber().floatValue() : Float.parseFloat(getAsString());
}

public int getAsInt() {
return isNumber() ? getAsNumber().intValue() : Integer.parseInt(getAsString());
}

public long getAsLong() {
return isNumber() ? getAsNumber().longValue() : Long.parseLong(getAsString());
}

public Number getAsNumber() {
Object obj = this.value;
return obj instanceof String ? new LazilyParsedNumber((String) obj) : (Number) obj;
}

public short getAsShort() {
return isNumber() ? getAsNumber().shortValue() : Short.parseShort(getAsString());
}

public String getAsString() {
return isNumber() ? getAsNumber().toString() : isBoolean() ? ((Boolean) this.value).toString() : (String) this.value;
}

public int hashCode() {
long doubleToLongBits;
if (this.value == null) {
return 31;
}
if (isIntegral(this)) {
doubleToLongBits = getAsNumber().longValue();
} else {
Object obj = this.value;
if (!(obj instanceof Number)) {
return obj.hashCode();
}
doubleToLongBits = Double.doubleToLongBits(getAsNumber().doubleValue());
}
return (int) ((doubleToLongBits >>> 32) ^ doubleToLongBits);
}

public boolean isBoolean() {
return this.value instanceof Boolean;
}

public boolean isNumber() {
return this.value instanceof Number;
}

public boolean isString() {
return this.value instanceof String;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\gson\internal\Primitives.java

package com.google.gson.internal;

import java.lang.reflect.Type;

public final class Primitives {
private Primitives() {
}

public static boolean isPrimitive(Type type) {
return (type instanceof Class) && ((Class) type).isPrimitive();
}

public static boolean isWrapperType(Type type) {
return type == Integer.class || type == Float.class || type == Byte.class || type == Double.class || type == Long.class || type == Character.class || type == Boolean.class || type == Short.class || type == Void.class;
}

public static <T> Class<T> unwrap(Class<T> cls) {
return cls == Integer.class ? Integer.TYPE : cls == Float.class ? Float.TYPE : cls == Byte.class ? Byte.TYPE : cls == Double.class ? Double.TYPE : cls == Long.class ? Long.TYPE : cls == Character.class ? Character.TYPE : cls == Boolean.class ? Boolean.TYPE : cls == Short.class ? Short.TYPE : cls == Void.class ? Void.TYPE : cls;
}

public static <T> Class<T> wrap(Class<T> cls) {
return cls == Integer.TYPE ? Integer.class : cls == Float.TYPE ? Float.class : cls == Byte.TYPE ? Byte.class : cls == Double.TYPE ? Double.class : cls == Long.TYPE ? Long.class : cls == Character.TYPE ? Character.class : cls == Boolean.TYPE ? Boolean.class : cls == Short.TYPE ? Short.class : cls == Void.TYPE ? Void.class : cls;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\google\gson\internal\bind\JsonTreeReader$1.java

package com.google.gson.internal.bind;

import java.io.IOException;
import java.io.Reader;

public class JsonTreeReader$1 extends Reader {
public void close() throws IOException {
throw new AssertionError();
}

public int read(char[] cArr, int i, int i3) throws IOException {
throw new AssertionError();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\hilyfux\crop\util\CropUtil$RotateBitmapResult.java

package com.hilyfux.crop.util;

import android.graphics.Bitmap;

public final class CropUtil$RotateBitmapResult {
public final Bitmap bitmap;
public final int degrees;

public CropUtil$RotateBitmapResult(Bitmap bitmap2, int i) {
this.bitmap = bitmap2;
this.degrees = i;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\hilyfux\crop\view\CropImageView$OnSetCropWindowChangeListener.java

package com.hilyfux.crop.view;

public interface CropImageView$OnSetCropWindowChangeListener {
void onCropWindowChanged();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\microsoft\schemas\office\visio\x2012\main\CellType$Factory.java

package com.microsoft.schemas.office.visio.x2012.main;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class CellType$Factory {
private CellType$Factory() {
}

public static CellType newInstance() {
return POIXMLTypeLoader.newInstance(CellType.type, (XmlOptions) null);
}

public static CellType newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(CellType.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CellType.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CellType.type, xmlOptions);
}

public static CellType parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CellType.type, (XmlOptions) null);
}

public static CellType parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CellType.type, xmlOptions);
}

public static CellType parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CellType.type, (XmlOptions) null);
}

public static CellType parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CellType.type, xmlOptions);
}

public static CellType parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CellType.type, (XmlOptions) null);
}

public static CellType parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CellType.type, xmlOptions);
}

public static CellType parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, CellType.type, (XmlOptions) null);
}

public static CellType parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, CellType.type, xmlOptions);
}

public static CellType parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CellType.type, (XmlOptions) null);
}

public static CellType parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CellType.type, xmlOptions);
}

public static CellType parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CellType.type, (XmlOptions) null);
}

public static CellType parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CellType.type, xmlOptions);
}

public static CellType parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CellType.type, (XmlOptions) null);
}

public static CellType parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CellType.type, xmlOptions);
}

public static CellType parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, CellType.type, (XmlOptions) null);
}

public static CellType parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, CellType.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\microsoft\schemas\office\x2006\digsig\CTSignatureInfoV1.java

package com.microsoft.schemas.office.x2006.digsig;

import android.support.v4.media.b;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlAnyURI;
import org.apache.xmlbeans.XmlBase64Binary;
import org.apache.xmlbeans.XmlInt;
import org.apache.xmlbeans.XmlObject;
import org.apache.xmlbeans.XmlString;

public interface CTSignatureInfoV1 extends XmlObject {
public static final SchemaType type = b.v(CTSignatureInfoV1.class, "schemaorg_apache_xmlbeans.system.s8C3F193EE11A2F798ACF65489B9E6078", "ctsignatureinfov13a5ftype");

String getApplicationVersion();

int getColorDepth();

String getDelegateSuggestedSigner();

String getDelegateSuggestedSigner2();

String getDelegateSuggestedSignerEmail();

int getHorizontalResolution();

String getManifestHashAlgorithm();

int getMonitors();

String getOfficeVersion();

String getSetupID();

String getSignatureComments();

byte[] getSignatureImage();

int getSignatureProviderDetails();

String getSignatureProviderId();

String getSignatureProviderUrl();

String getSignatureText();

int getSignatureType();

int getVerticalResolution();

String getWindowsVersion();

boolean isSetDelegateSuggestedSigner();

boolean isSetDelegateSuggestedSigner2();

boolean isSetDelegateSuggestedSignerEmail();

boolean isSetManifestHashAlgorithm();

void setApplicationVersion(String str);

void setColorDepth(int i);

void setDelegateSuggestedSigner(String str);

void setDelegateSuggestedSigner2(String str);

void setDelegateSuggestedSignerEmail(String str);

void setHorizontalResolution(int i);

void setManifestHashAlgorithm(String str);

void setMonitors(int i);

void setOfficeVersion(String str);

void setSetupID(String str);

void setSignatureComments(String str);

void setSignatureImage(byte[] bArr);

void setSignatureProviderDetails(int i);

void setSignatureProviderId(String str);

void setSignatureProviderUrl(String str);

void setSignatureText(String str);

void setSignatureType(int i);

void setVerticalResolution(int i);

void setWindowsVersion(String str);

void unsetDelegateSuggestedSigner();

void unsetDelegateSuggestedSigner2();

void unsetDelegateSuggestedSignerEmail();

void unsetManifestHashAlgorithm();

STVersion xgetApplicationVersion();

STPositiveInteger xgetColorDepth();

XmlString xgetDelegateSuggestedSigner();

XmlString xgetDelegateSuggestedSigner2();

XmlString xgetDelegateSuggestedSignerEmail();

STPositiveInteger xgetHorizontalResolution();

XmlAnyURI xgetManifestHashAlgorithm();

STPositiveInteger xgetMonitors();

STVersion xgetOfficeVersion();

STUniqueIdentifierWithBraces xgetSetupID();

STSignatureComments xgetSignatureComments();

XmlBase64Binary xgetSignatureImage();

XmlInt xgetSignatureProviderDetails();

STUniqueIdentifierWithBraces xgetSignatureProviderId();

STSignatureProviderUrl xgetSignatureProviderUrl();

STSignatureText xgetSignatureText();

STSignatureType xgetSignatureType();

STPositiveInteger xgetVerticalResolution();

STVersion xgetWindowsVersion();

void xsetApplicationVersion(STVersion sTVersion);

void xsetColorDepth(STPositiveInteger sTPositiveInteger);

void xsetDelegateSuggestedSigner(XmlString xmlString);

void xsetDelegateSuggestedSigner2(XmlString xmlString);

void xsetDelegateSuggestedSignerEmail(XmlString xmlString);

void xsetHorizontalResolution(STPositiveInteger sTPositiveInteger);

void xsetManifestHashAlgorithm(XmlAnyURI xmlAnyURI);

void xsetMonitors(STPositiveInteger sTPositiveInteger);

void xsetOfficeVersion(STVersion sTVersion);

void xsetSetupID(STUniqueIdentifierWithBraces sTUniqueIdentifierWithBraces);

void xsetSignatureComments(STSignatureComments sTSignatureComments);

void xsetSignatureImage(XmlBase64Binary xmlBase64Binary);

void xsetSignatureProviderDetails(XmlInt xmlInt);

void xsetSignatureProviderId(STUniqueIdentifierWithBraces sTUniqueIdentifierWithBraces);

void xsetSignatureProviderUrl(STSignatureProviderUrl sTSignatureProviderUrl);

void xsetSignatureText(STSignatureText sTSignatureText);

void xsetSignatureType(STSignatureType sTSignatureType);

void xsetVerticalResolution(STPositiveInteger sTPositiveInteger);

void xsetWindowsVersion(STVersion sTVersion);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\microsoft\schemas\office\x2006\encryption\CTDataIntegrity.java

package com.microsoft.schemas.office.x2006.encryption;

import android.support.v4.media.b;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlBase64Binary;
import org.apache.xmlbeans.XmlObject;

public interface CTDataIntegrity extends XmlObject {
public static final SchemaType type = b.v(CTDataIntegrity.class, "schemaorg_apache_xmlbeans.system.s8C3F193EE11A2F798ACF65489B9E6078", "ctdataintegrity6eb5type");

byte[] getEncryptedHmacKey();

byte[] getEncryptedHmacValue();

void setEncryptedHmacKey(byte[] bArr);

void setEncryptedHmacValue(byte[] bArr);

XmlBase64Binary xgetEncryptedHmacKey();

XmlBase64Binary xgetEncryptedHmacValue();

void xsetEncryptedHmacKey(XmlBase64Binary xmlBase64Binary);

void xsetEncryptedHmacValue(XmlBase64Binary xmlBase64Binary);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\microsoft\schemas\office\x2006\encryption\impl\STSaltSizeImpl.java

package com.microsoft.schemas.office.x2006.encryption.impl;

import com.microsoft.schemas.office.x2006.encryption.STSaltSize;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.impl.values.JavaIntHolderEx;

public class STSaltSizeImpl extends JavaIntHolderEx implements STSaltSize {
public STSaltSizeImpl(SchemaType schemaType) {
super(schemaType, false);
}

public STSaltSizeImpl(SchemaType schemaType, boolean z) {
super(schemaType, z);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\safedk\android\analytics\brandsafety\i$1.java

final /* synthetic */ i a;

i$1(i iVar) {
this.a = iVar;
}

public void a(String str, Bundle bundle) {
Logger.d("ImageUploadManager", "Response received");
i.a(this.a, bundle);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\safedk\android\analytics\events\CaughtCrashEvent.java

package com.safedk.android.analytics.events;

import com.google.firebase.installations.interop.BuildConfig;
import com.safedk.android.analytics.StatsCollector;
import com.safedk.android.analytics.events.base.StatsEvent;
import java.io.Serializable;
import org.json.JSONObject;

public class CaughtCrashEvent extends CrashEvent implements Serializable {

/* renamed from: j  reason: collision with root package name */
private static final String f6j = "CaughtCrashEvent";
private static final long serialVersionUID = 0;

public CaughtCrashEvent(JSONObject jSONObject) {
super((String) null, StatsCollector.EventType.l, jSONObject);
}

public void a(StatsEvent statsEvent) {
}

/* access modifiers changed from: protected */
public boolean a() {
return true;
}

public StatsCollector.EventType b() {
return StatsCollector.EventType.l;
}

public String c() {
return BuildConfig.FLAVOR;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\tbruyelle\rxpermissions2\RxPermissions$Lazy.java

package com.tbruyelle.rxpermissions2;

@FunctionalInterface
public interface RxPermissions$Lazy<V> {
V get();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\tencent\mmkv\MMKVContentProvider.java

package com.tencent.mmkv;

import android.app.ActivityManager;
import android.content.ComponentName;
import android.content.ContentProvider;
import android.content.ContentValues;
import android.content.Context;
import android.content.pm.PackageManager;
import android.content.pm.ProviderInfo;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.media.c;
import android.util.Log;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.google.firebase.installations.interop.BuildConfig;
import com.safedk.android.internal.DexBridge;
import com.safedk.android.utils.Logger;

public class MMKVContentProvider extends ContentProvider {
public static final String FUNCTION_NAME = "mmkvFromAshmemID";
public static final String KEY = "KEY";
public static final String KEY_CRYPT = "KEY_CRYPT";
public static final String KEY_MODE = "KEY_MODE";
public static final String KEY_SIZE = "KEY_SIZE";
private static Uri gUri;

@Nullable
public static Uri contentUri(Context context) {
String queryAuthority;
Uri uri = gUri;
if (uri != null) {
return uri;
}
if (context == null || (queryAuthority = queryAuthority(context)) == null) {
return null;
}
Uri parse = Uri.parse("content://" + queryAuthority);
gUri = parse;
return parse;
}

public static String getProcessNameByPID(Context context, int i) {
ActivityManager activityManager = (ActivityManager) context.getSystemService("activity");
if (activityManager == null) {
return BuildConfig.FLAVOR;
}
for (ActivityManager.RunningAppProcessInfo next : activityManager.getRunningAppProcesses()) {
if (next.pid == i) {
return next.processName;
}
}
return BuildConfig.FLAVOR;
}

private Bundle mmkvFromAshmemID(String str, int i, int i3, String str2) {
MMKV mmkvWithAshmemID = MMKV.mmkvWithAshmemID(getContext(), str, i, i3, str2);
if (mmkvWithAshmemID == null) {
return null;
}
ParcelableMMKV parcelableMMKV = new ParcelableMMKV(mmkvWithAshmemID);
StringBuilder m = c.m(str, " fd = ");
m.append(mmkvWithAshmemID.ashmemFD());
m.append(", meta fd = ");
m.append(mmkvWithAshmemID.ashmemMetaFD());
Log.i("MMKV", m.toString());
Bundle bundle = new Bundle();
bundle.putParcelable(KEY, parcelableMMKV);
return bundle;
}

private static String queryAuthority(Context context) {
ProviderInfo providerInfo;
try {
ComponentName componentName = new ComponentName(context, MMKVContentProvider.class.getName());
PackageManager packageManager = context.getPackageManager();
if (packageManager == null || (providerInfo = packageManager.getProviderInfo(componentName, 0)) == null) {
return null;
}
return providerInfo.authority;
} catch (Exception e) {
e.printStackTrace();
return null;
}
}

@Nullable
public Bundle call(@NonNull String str, @Nullable String str2, @Nullable Bundle bundle) {
if (!str.equals(FUNCTION_NAME) || bundle == null) {
return null;
}
return mmkvFromAshmemID(str2, bundle.getInt(KEY_SIZE), bundle.getInt(KEY_MODE), bundle.getString(KEY_CRYPT));
}

public int delete(@NonNull Uri uri, @Nullable String str, @Nullable String[] strArr) {
throw new UnsupportedOperationException("Not implement in MMKV");
}

@Nullable
public String getType(@NonNull Uri uri) {
return null;
}

@Nullable
public Uri insert(@NonNull Uri uri, @Nullable ContentValues contentValues) {
throw new UnsupportedOperationException("Not implement in MMKV");
}

public boolean onCreate() {
Logger.d("Tencent|SafeDK: Execution> Lcom/tencent/mmkv/MMKVContentProvider;->onCreate()Z");
DexBridge.providerOnCreateBefore(this);
return safedk_MMKVContentProvider_onCreate_12a9325c39c6aff6a9c52f17615e3a7f();
}

@Nullable
public Cursor query(@NonNull Uri uri, @Nullable String[] strArr, @Nullable String str, @Nullable String[] strArr2, @Nullable String str2) {
throw new UnsupportedOperationException("Not implement in MMKV");
}

public boolean safedk_MMKVContentProvider_onCreate_12a9325c39c6aff6a9c52f17615e3a7f() {
String queryAuthority;
Context context = getContext();
if (context == null || (queryAuthority = queryAuthority(context)) == null) {
return false;
}
if (gUri != null) {
return true;
}
gUri = Uri.parse("content://" + queryAuthority);
return true;
}

public int update(@NonNull Uri uri, @Nullable ContentValues contentValues, @Nullable String str, @Nullable String[] strArr) {
throw new UnsupportedOperationException("Not implement in MMKV");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\vungle\warren\log\LogManager.java

package com.vungle.warren.log;

import android.content.Context;
import android.text.TextUtils;
import android.util.Log;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.VisibleForTesting;
import com.google.firebase.installations.interop.BuildConfig;
import com.google.gson.Gson;
import com.vungle.warren.Vungle;
import com.vungle.warren.VungleApiClient;
import com.vungle.warren.VungleLogger;
import com.vungle.warren.persistence.CacheManager;
import com.vungle.warren.persistence.FilePreferences;
import java.io.File;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.Executor;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicInteger;

public class LogManager {
public static final boolean DEFAULT_CRASH_COLLECT_ENABLED = false;
public static final int DEFAULT_CRASH_SEND_BATCH_MAX = 5;
public static final boolean DEFAULT_LOGGING_ENABLED = false;
public static final String LOGGER_PREFS_FILENAME = "com.vungle.sdk";
public static final String PREFS_CRASH_BATCH_MAX_KEY = "crash_batch_max";
public static final String PREFS_CRASH_COLLECT_FILTER_KEY = "crash_collect_filter";
public static final String PREFS_CRASH_REPORT_ENABLED_KEY = "crash_report_enabled";
@VisibleForTesting
public static final String PREFS_LOGGING_ENABLED_KEY = "logging_enabled";
private static final String TAG = "LogManager";
public static String sDefaultCollectFilter = "com.vungle";
/* access modifiers changed from: private */
public final String bundleID;
private AtomicInteger crashBatchMax;
private String crashCollectFilter;
private final AtomicBoolean crashReportEnabled;
private final Map<String, String> customDataMap;
private Gson gson;
private final Executor ioExecutor;
private boolean isCrashReportInit;
private JVMCrashCollector jvmCrashCollector;
/* access modifiers changed from: private */
public final LogPersister logPersister;
private final LogSender logSender;
private final AtomicBoolean loggingEnabled;
private final FilePreferences prefs;
private SdkLoggingEventListener sdkLoggingEventListener;

@VisibleForTesting
public LogManager(@NonNull Context context, @NonNull LogPersister logPersister2, @NonNull LogSender logSender2, @NonNull Executor executor, @NonNull FilePreferences filePreferences) {
AtomicBoolean atomicBoolean = new AtomicBoolean(false);
this.loggingEnabled = atomicBoolean;
AtomicBoolean atomicBoolean2 = new AtomicBoolean(false);
this.crashReportEnabled = atomicBoolean2;
this.crashCollectFilter = sDefaultCollectFilter;
this.crashBatchMax = new AtomicInteger(5);
this.isCrashReportInit = false;
this.customDataMap = new ConcurrentHashMap();
this.gson = new Gson();
this.sdkLoggingEventListener = new 2(this);
this.bundleID = context.getPackageName();
this.logSender = logSender2;
this.logPersister = logPersister2;
this.ioExecutor = executor;
this.prefs = filePreferences;
logPersister2.setSdkLoggingEventListener(this.sdkLoggingEventListener);
Package packageR = Vungle.class.getPackage();
if (packageR != null) {
sDefaultCollectFilter = packageR.getName();
}
atomicBoolean.set(filePreferences.getBoolean(PREFS_LOGGING_ENABLED_KEY, false));
atomicBoolean2.set(filePreferences.getBoolean(PREFS_CRASH_REPORT_ENABLED_KEY, false));
this.crashCollectFilter = filePreferences.getString(PREFS_CRASH_COLLECT_FILTER_KEY, sDefaultCollectFilter);
this.crashBatchMax.set(filePreferences.getInt(PREFS_CRASH_BATCH_MAX_KEY, 5));
initJvmCollector();
}

public LogManager(@NonNull Context context, @NonNull CacheManager cacheManager, @NonNull VungleApiClient vungleApiClient, @NonNull Executor executor, @NonNull FilePreferences filePreferences) {
this(context, new LogPersister(cacheManager.getCache()), new LogSender(vungleApiClient, filePreferences), executor, filePreferences);
}

/* access modifiers changed from: private */
public String getCustomData() {
if (this.customDataMap.isEmpty()) {
return null;
}
return this.gson.toJson(this.customDataMap);
}

private void sendCrashLogs() {
if (!isCrashReportEnabled()) {
Log.d(TAG, "Crash report disabled, no need to send crash log files.");
return;
}
File[] crashReportFiles = this.logPersister.getCrashReportFiles(this.crashBatchMax.get());
if (crashReportFiles == null || crashReportFiles.length == 0) {
Log.d(TAG, "No need to send empty crash log files.");
} else {
this.logSender.sendLogs(crashReportFiles);
}
}

/* access modifiers changed from: private */
public void sendPendingLogs() {
if (!isLoggingEnabled()) {
Log.d(TAG, "Logging disabled, no need to send log files.");
return;
}
File[] pendingFiles = this.logPersister.getPendingFiles();
if (pendingFiles == null || pendingFiles.length == 0) {
Log.d(TAG, "No need to send empty files.");
} else {
this.logSender.sendLogs(pendingFiles);
}
}

public void addCustomData(@NonNull String str, @NonNull String str2) {
this.customDataMap.put(str, str2);
}

/* JADX WARNING: Code restructure failed: missing block: B:15:0x002c, code lost:
return;
*/
/* Code decompiled incorrectly, please refer to instructions dump. */
public synchronized void initJvmCollector() {
/*
r2 = this;
monitor-enter(r2)
boolean r0 = r2.isCrashReportInit     // Catch:{ all -> 0x002d }
if (r0 != 0) goto L_0x002b
boolean r0 = r2.isCrashReportEnabled()     // Catch:{ all -> 0x002d }
if (r0 != 0) goto L_0x0014
java.lang.String r0 = TAG     // Catch:{ all -> 0x002d }
java.lang.String r1 = "crash report is disabled."
android.util.Log.d(r0, r1)     // Catch:{ all -> 0x002d }
monitor-exit(r2)
return
L_0x0014:
com.vungle.warren.log.JVMCrashCollector r0 = r2.jvmCrashCollector     // Catch:{ all -> 0x002d }
if (r0 != 0) goto L_0x0021
com.vungle.warren.log.JVMCrashCollector r0 = new com.vungle.warren.log.JVMCrashCollector     // Catch:{ all -> 0x002d }
com.vungle.warren.log.LogManager$SdkLoggingEventListener r1 = r2.sdkLoggingEventListener     // Catch:{ all -> 0x002d }
r0.<init>(r1)     // Catch:{ all -> 0x002d }
r2.jvmCrashCollector = r0     // Catch:{ all -> 0x002d }
L_0x0021:
com.vungle.warren.log.JVMCrashCollector r0 = r2.jvmCrashCollector     // Catch:{ all -> 0x002d }
java.lang.String r1 = r2.crashCollectFilter     // Catch:{ all -> 0x002d }
r0.updateConfig(r1)     // Catch:{ all -> 0x002d }
r0 = 1
r2.isCrashReportInit = r0     // Catch:{ all -> 0x002d }
L_0x002b:
monitor-exit(r2)
return
L_0x002d:
r0 = move-exception
monitor-exit(r2)
throw r0
*/
throw new UnsupportedOperationException("Method not decompiled: com.vungle.warren.log.LogManager.initJvmCollector():void");
}

public boolean isCrashReportEnabled() {
return this.crashReportEnabled.get();
}

public boolean isLoggingEnabled() {
return this.loggingEnabled.get();
}

public void removeCustomData(@NonNull String str) {
this.customDataMap.remove(str);
}

public void saveLog(@NonNull VungleLogger.LoggerLevel loggerLevel, @NonNull String str, @NonNull String str2, @Nullable String str3, @Nullable String str4) {
String headerUa = VungleApiClient.getHeaderUa();
if (loggerLevel != VungleLogger.LoggerLevel.CRASH || !isCrashReportEnabled()) {
this.ioExecutor.execute(new 1(this, str2, loggerLevel, str, headerUa, str3, str4));
return;
}
synchronized (this) {
this.logPersister.saveCrashLogData(str2, loggerLevel.toString(), str, BuildConfig.FLAVOR, headerUa, this.bundleID, getCustomData(), str3, str4);
}
}

public void sendSdkLogs() {
sendCrashLogs();
sendPendingLogs();
}

public void setLoggingEnabled(boolean z) {
if (this.loggingEnabled.compareAndSet(!z, z)) {
this.prefs.put(PREFS_LOGGING_ENABLED_KEY, z);
this.prefs.apply();
}
}

public void setMaxEntries(int i) {
LogPersister logPersister2 = this.logPersister;
if (i <= 0) {
i = 100;
}
logPersister2.setMaximumEntries(i);
}

public synchronized void updateCrashReportConfig(boolean z, @Nullable String str, int i) {
boolean z2 = true;
boolean z3 = this.crashReportEnabled.get() != z;
boolean z4 = !TextUtils.isEmpty(str) && !str.equals(this.crashCollectFilter);
int max = Math.max(i, 0);
if (this.crashBatchMax.get() == max) {
z2 = false;
}
if (z3 || z4 || z2) {
if (z3) {
this.crashReportEnabled.set(z);
this.prefs.put(PREFS_CRASH_REPORT_ENABLED_KEY, z);
}
if (z4) {
if ("*".equals(str)) {
this.crashCollectFilter = BuildConfig.FLAVOR;
} else {
this.crashCollectFilter = str;
}
this.prefs.put(PREFS_CRASH_COLLECT_FILTER_KEY, this.crashCollectFilter);
}
if (z2) {
this.crashBatchMax.set(max);
this.prefs.put(PREFS_CRASH_BATCH_MAX_KEY, max);
}
this.prefs.apply();
JVMCrashCollector jVMCrashCollector = this.jvmCrashCollector;
if (jVMCrashCollector != null) {
jVMCrashCollector.updateConfig(this.crashCollectFilter);
}
if (z) {
initJvmCollector();
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\vungle\warren\model\Advertisement$Checkpoint.java

package com.vungle.warren.model;

import androidx.annotation.NonNull;
import com.google.firebase.installations.interop.BuildConfig;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import java.util.Arrays;

public class Advertisement$Checkpoint implements Comparable<Advertisement$Checkpoint> {
@SerializedName("percentage")
private byte percentage;
@SerializedName("urls")
private String[] urls;

public Advertisement$Checkpoint(JsonArray jsonArray, byte b) {
if (jsonArray.size() != 0) {
this.urls = new String[jsonArray.size()];
for (int i = 0; i < jsonArray.size(); i++) {
this.urls[i] = jsonArray.get(i).getAsString();
}
this.percentage = b;
return;
}
throw new IllegalArgumentException("Empty URLS!");
}

public Advertisement$Checkpoint(JsonObject jsonObject) throws IllegalArgumentException {
if (JsonUtil.hasNonNull(jsonObject, "checkpoint")) {
this.percentage = (byte) ((int) (jsonObject.get("checkpoint").getAsFloat() * 100.0f));
if (JsonUtil.hasNonNull(jsonObject, "urls")) {
JsonArray asJsonArray = jsonObject.getAsJsonArray("urls");
this.urls = new String[asJsonArray.size()];
for (int i = 0; i < asJsonArray.size(); i++) {
if (asJsonArray.get(i) == null || "null".equalsIgnoreCase(asJsonArray.get(i).toString())) {
this.urls[i] = BuildConfig.FLAVOR;
} else {
this.urls[i] = asJsonArray.get(i).getAsString();
}
}
return;
}
throw new IllegalArgumentException("Checkpoint missing reporting URL!");
}
throw new IllegalArgumentException("Checkpoint missing percentage!");
}

public int compareTo(@NonNull Advertisement$Checkpoint advertisement$Checkpoint) {
return Float.compare((float) this.percentage, (float) advertisement$Checkpoint.percentage);
}

public boolean equals(Object obj) {
if (this == obj) {
return true;
}
if (!(obj instanceof Advertisement$Checkpoint)) {
return false;
}
Advertisement$Checkpoint advertisement$Checkpoint = (Advertisement$Checkpoint) obj;
if (advertisement$Checkpoint.percentage != this.percentage || advertisement$Checkpoint.urls.length != this.urls.length) {
return false;
}
int i = 0;
while (true) {
String[] strArr = this.urls;
if (i >= strArr.length) {
return true;
}
if (!advertisement$Checkpoint.urls[i].equals(strArr[i])) {
return false;
}
i++;
}
}

public byte getPercentage() {
return this.percentage;
}

public String[] getUrls() {
return (String[]) this.urls.clone();
}

public int hashCode() {
String[] strArr = this.urls;
return (((this.percentage * 31) + strArr.length) * 31) + Arrays.hashCode(strArr);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\vungle\warren\model\Cookie.java

package com.vungle.warren.model;

import androidx.annotation.NonNull;
import com.vungle.warren.VungleLogger;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

public class Cookie {
public static final String APP_ID = "appId";
public static final String APP_SET_ID = "appSetId";
public static final String APP_SET_ID_COOKIE = "appSetIdCookie";
public static final String CACHE_BUST_COOKIE = "cacheBustSettings";
public static final String CCPA_CONSENT_STATUS = "ccpa_status";
public static final String CCPA_COOKIE = "ccpaIsImportantToVungle";
public static final String CONFIG_COOKIE = "configSettings";
public static final String CONFIG_EXTENSION = "config_extension";
public static final String CONSENT_COOKIE = "consentIsImportantToVungle";
public static final String CONSENT_STATUS_OPTED_IN = "opted_in";
public static final String CONSENT_STATUS_OPTED_OUT = "opted_out";
public static final String COPPA_COOKIE = "coppa_cookie";
public static final String COPPA_DISABLE_AD_ID = "disable_ad_id";
public static final String COPPA_KEY = "coppa";
public static final String COPPA_STATUS_KEY = "is_coppa";
public static final String INCENTIVIZED_TEXT_COOKIE = "incentivizedTextSetByPub";
public static final String IS_PLAY_SERVICE_AVAILABLE = "isPlaySvcAvailable";
public static final String LAST_CACHE_BUST = "last_cache_bust";
public static final String USER_AGENT_ID_COOKIE = "userAgent";
public Map<String, Boolean> booleans = new ConcurrentHashMap();
public String identifier;
public Map<String, Integer> integers = new ConcurrentHashMap();
public Map<String, Long> longs = new ConcurrentHashMap();
public Map<String, String> strings = new ConcurrentHashMap();

public Cookie(String str) {
this.identifier = str;
}

public boolean equals(Object obj) {
if (this == obj) {
return true;
}
if (obj == null || getClass() != obj.getClass()) {
return false;
}
Cookie cookie = (Cookie) obj;
Map<String, String> map = this.strings;
if (map == null ? cookie.strings != null : !map.equals(cookie.strings)) {
return false;
}
Map<String, Boolean> map2 = this.booleans;
if (map2 == null ? cookie.booleans != null : !map2.equals(cookie.booleans)) {
return false;
}
Map<String, Integer> map3 = this.integers;
if (map3 == null ? cookie.integers != null : !map3.equals(cookie.integers)) {
return false;
}
Map<String, Long> map4 = this.longs;
if (map4 == null ? cookie.longs != null : !map4.equals(cookie.longs)) {
return false;
}
String str = this.identifier;
String str2 = cookie.identifier;
return str != null ? str.equals(str2) : str2 == null;
}

public Boolean getBoolean(String str) {
return Boolean.valueOf(this.booleans.get(str) != null && this.booleans.get(str).booleanValue());
}

public Boolean getBooleanOrNull(String str) {
return this.booleans.get(str);
}

@NonNull
public String getId() {
return this.identifier;
}

public Integer getInt(String str) {
return this.integers.get(str);
}

public Long getLong(String str) {
return Long.valueOf(this.longs.get(str) != null ? this.longs.get(str).longValue() : 0);
}

public String getString(String str) {
return this.strings.get(str);
}

public int hashCode() {
Map<String, String> map = this.strings;
int i = 0;
int hashCode = (map != null ? map.hashCode() : 0) * 31;
Map<String, Boolean> map2 = this.booleans;
int hashCode2 = (hashCode + (map2 != null ? map2.hashCode() : 0)) * 31;
Map<String, Integer> map3 = this.integers;
int hashCode3 = (hashCode2 + (map3 != null ? map3.hashCode() : 0)) * 31;
Map<String, Long> map4 = this.longs;
int hashCode4 = (hashCode3 + (map4 != null ? map4.hashCode() : 0)) * 31;
String str = this.identifier;
if (str != null) {
i = str.hashCode();
}
return hashCode4 + i;
}

public <T> void putValue(String str, T t) {
if (t == null) {
VungleLogger.critical(true, "Cookie", "putValue", String.format("Value for key \"%s\" should not be null", new Object[]{str}));
} else if (t instanceof String) {
this.strings.put(str, (String) t);
} else if (t instanceof Boolean) {
this.booleans.put(str, (Boolean) t);
} else if (t instanceof Integer) {
this.integers.put(str, (Integer) t);
} else if (t instanceof Long) {
this.longs.put(str, (Long) t);
} else {
VungleLogger.critical(true, "Cookie", "putValue", "Value type is not supported!");
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\vungle\warren\omsdk\OMInjector.java

package com.vungle.warren.omsdk;

import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import androidx.annotation.NonNull;
import androidx.annotation.WorkerThread;
import java.io.Closeable;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.atomic.AtomicReference;

public class OMInjector {
private static final String OM_SDK_JS = "omsdk.js";
private static final String OM_SESSION_JS = "omsdk-session.js";
/* access modifiers changed from: private */
public AtomicReference<Context> contextRef;
private Handler uiHandler = new Handler(Looper.getMainLooper());

public OMInjector(Context context) {
this.contextRef = new AtomicReference<>(context.getApplicationContext());
}

private void closeQuietly(Closeable closeable) {
if (closeable != null) {
try {
closeable.close();
} catch (IOException unused) {
}
}
}

private File writeToFile(String str, File file) throws IOException {
FileWriter fileWriter = null;
try {
FileWriter fileWriter2 = new FileWriter(file);
try {
fileWriter2.write(str);
fileWriter2.flush();
closeQuietly(fileWriter2);
return file;
} catch (Throwable th) {
th = th;
fileWriter = fileWriter2;
closeQuietly(fileWriter);
throw th;
}
} catch (Throwable th2) {
th = th2;
closeQuietly(fileWriter);
throw th;
}
}

public void init() {
this.uiHandler.post(new 1(this));
}

@WorkerThread
@NonNull
public List<File> injectJsFiles(@NonNull File file) throws IOException {
ArrayList arrayList = new ArrayList();
arrayList.add(writeToFile(";(function(omidGlobal) {\n  'use strict';var n;function aa(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}function p(a){var b='undefined'!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):{next:aa(a)}}function q(a){if(!(a instanceof Array)){a=p(a);for(var b,c=[];!(b=a.next()).done;)c.push(b.value);a=c}return a}var ba='function'==typeof Object.create?Object.create:function(a){function b(){}b.prototype=a;return new b},ca;\nif('function'==typeof Object.setPrototypeOf)ca=Object.setPrototypeOf;else{var da;a:{var ea={S:!0},fa={};try{fa.__proto__=ea;da=fa.S;break a}catch(a){}da=!1}ca=da?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+' is not extensible');return a}:null}var ha=ca;\nfunction r(a,b){a.prototype=ba(b.prototype);a.prototype.constructor=a;if(ha)ha(a,b);else for(var c in b)if('prototype'!=c)if(Object.defineProperties){var d=Object.getOwnPropertyDescriptor(b,c);d&&Object.defineProperty(a,c,d)}else a[c]=b[c];a.Ca=b.prototype}var t='undefined'!=typeof window&&window===this?this:'undefined'!=typeof global&&null!=global?global:this;function u(a,b){return Object.prototype.hasOwnProperty.call(a,b)}\nvar ia='function'==typeof Object.assign?Object.assign:function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(d)for(var e in d)u(d,e)&&(a[e]=d[e])}return a},w='function'==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};\nfunction y(a,b){if(b){var c=t;a=a.split('.');for(var d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&w(c,a,{configurable:!0,writable:!0,value:b})}}y('Object.assign',function(a){return a||ia});function ja(){ja=function(){};t.Symbol||(t.Symbol=ka)}function la(a,b){this.a=a;w(this,'description',{configurable:!0,writable:!0,value:b})}la.prototype.toString=function(){return this.a};\nvar ka=function(){function a(c){if(this instanceof a)throw new TypeError('Symbol is not a constructor');return new la('jscomp_symbol_'+(c||'')+'_'+b++,c)}var b=0;return a}();function ma(){ja();var a=t.Symbol.iterator;a||(a=t.Symbol.iterator=t.Symbol('Symbol.iterator'));'function'!=typeof Array.prototype[a]&&w(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return na(aa(this))}});ma=function(){}}function na(a){ma();a={next:a};a[t.Symbol.iterator]=function(){return this};return a}\ny('WeakMap',function(a){function b(g){this.a=(l+=Math.random()+1).toString();if(g){g=p(g);for(var h;!(h=g.next()).done;)h=h.value,this.set(h[0],h[1])}}function c(){}function d(g){if(!u(g,f)){var h=new c;w(g,f,{value:h})}}function e(g){var h=Object[g];h&&(Object[g]=function(k){if(k instanceof c)return k;d(k);return h(k)})}if(function(){if(!a||!Object.seal)return!1;try{var g=Object.seal({}),h=Object.seal({}),k=new a([[g,2],[h,3]]);if(2!=k.get(g)||3!=k.get(h))return!1;k.delete(g);k.set(h,4);return!k.has(g)&&\n4==k.get(h)}catch(m){return!1}}())return a;var f='$jscomp_hidden_'+Math.random();e('freeze');e('preventExtensions');e('seal');var l=0;b.prototype.set=function(g,h){d(g);if(!u(g,f))throw Error('WeakMap key fail: '+g);g[f][this.a]=h;return this};b.prototype.get=function(g){return u(g,f)?g[f][this.a]:void 0};b.prototype.has=function(g){return u(g,f)&&u(g[f],this.a)};b.prototype.delete=function(g){return u(g,f)&&u(g[f],this.a)?delete g[f][this.a]:!1};return b});\ny('Map',function(a){function b(){var g={};return g.A=g.next=g.head=g}function c(g,h){var k=g.a;return na(function(){if(k){for(;k.head!=g.a;)k=k.A;for(;k.next!=k.head;)return k=k.next,{done:!1,value:h(k)};k=null}return{done:!0,value:void 0}})}function d(g,h){var k=h&&typeof h;'object'==k||'function'==k?f.has(h)?k=f.get(h):(k=''+ ++l,f.set(h,k)):k='p_'+h;var m=g.b[k];if(m&&u(g.b,k))for(g=0;g<m.length;g++){var v=m[g];if(h!==h&&v.key!==v.key||h===v.key)return{id:k,list:m,index:g,s:v}}return{id:k,list:m,\nindex:-1,s:void 0}}function e(g){this.b={};this.a=b();this.size=0;if(g){g=p(g);for(var h;!(h=g.next()).done;)h=h.value,this.set(h[0],h[1])}}if(function(){if(!a||'function'!=typeof a||!a.prototype.entries||'function'!=typeof Object.seal)return!1;try{var g=Object.seal({x:4}),h=new a(p([[g,'s']]));if('s'!=h.get(g)||1!=h.size||h.get({x:4})||h.set({x:4},'t')!=h||2!=h.size)return!1;var k=h.entries(),m=k.next();if(m.done||m.value[0]!=g||'s'!=m.value[1])return!1;m=k.next();return m.done||4!=m.value[0].x||\n't'!=m.value[1]||!k.next().done?!1:!0}catch(v){return!1}}())return a;ma();var f=new WeakMap;e.prototype.set=function(g,h){g=0===g?0:g;var k=d(this,g);k.list||(k.list=this.b[k.id]=[]);k.s?k.s.value=h:(k.s={next:this.a,A:this.a.A,head:this.a,key:g,value:h},k.list.push(k.s),this.a.A.next=k.s,this.a.A=k.s,this.size++);return this};e.prototype.delete=function(g){g=d(this,g);return g.s&&g.list?(g.list.splice(g.index,1),g.list.length||delete this.b[g.id],g.s.A.next=g.s.next,g.s.next.A=g.s.A,g.s.head=null,\nthis.size--,!0):!1};e.prototype.clear=function(){this.b={};this.a=this.a.A=b();this.size=0};e.prototype.has=function(g){return!!d(this,g).s};e.prototype.get=function(g){return(g=d(this,g).s)&&g.value};e.prototype.entries=function(){return c(this,function(g){return[g.key,g.value]})};e.prototype.keys=function(){return c(this,function(g){return g.key})};e.prototype.values=function(){return c(this,function(g){return g.value})};e.prototype.forEach=function(g,h){for(var k=this.entries(),m;!(m=k.next()).done;)m=\nm.value,g.call(h,m[1],m[0],this)};e.prototype[Symbol.iterator]=e.prototype.entries;var l=0;return e});y('Object.values',function(a){return a?a:function(b){var c=[],d;for(d in b)u(b,d)&&c.push(b[d]);return c}});\ny('Set',function(a){function b(c){this.a=new Map;if(c){c=p(c);for(var d;!(d=c.next()).done;)this.add(d.value)}this.size=this.a.size}if(function(){if(!a||'function'!=typeof a||!a.prototype.entries||'function'!=typeof Object.seal)return!1;try{var c=Object.seal({x:4}),d=new a(p([c]));if(!d.has(c)||1!=d.size||d.add(c)!=d||1!=d.size||d.add({x:4})!=d||2!=d.size)return!1;var e=d.entries(),f=e.next();if(f.done||f.value[0]!=c||f.value[1]!=c)return!1;f=e.next();return f.done||f.value[0]==c||4!=f.value[0].x||\nf.value[1]!=f.value[0]?!1:e.next().done}catch(l){return!1}}())return a;ma();b.prototype.add=function(c){c=0===c?0:c;this.a.set(c,c);this.size=this.a.size;return this};b.prototype.delete=function(c){c=this.a.delete(c);this.size=this.a.size;return c};b.prototype.clear=function(){this.a.clear();this.size=0};b.prototype.has=function(c){return this.a.has(c)};b.prototype.entries=function(){return this.a.entries()};b.prototype.values=function(){return this.a.values()};b.prototype.keys=b.prototype.values;\nb.prototype[Symbol.iterator]=b.prototype.values;b.prototype.forEach=function(c,d){var e=this;this.a.forEach(function(f){return c.call(d,f,f,e)})};return b});y('Object.is',function(a){return a?a:function(b,c){return b===c?0!==b||1/b===1/c:b!==b&&c!==c}});y('Array.prototype.includes',function(a){return a?a:function(b,c){var d=this;d instanceof String&&(d=String(d));var e=d.length;c=c||0;for(0>c&&(c=Math.max(c+e,0));c<e;c++){var f=d[c];if(f===b||Object.is(f,b))return!0}return!1}});\ny('Object.entries',function(a){return a?a:function(b){var c=[],d;for(d in b)u(b,d)&&c.push([d,b[d]]);return c}});\nvar z={qa:'loaded',xa:'start',ka:'firstQuartile',sa:'midpoint',ya:'thirdQuartile',ia:'complete',ta:'pause',va:'resume',ha:'bufferStart',ga:'bufferFinish',wa:'skipped',Aa:'volumeChange',ua:'playerStateChange',da:'adUserInteraction'},oa={na:'generic',za:'video',ra:'media'},qa={R:'native',oa:'html',P:'javascript'},ra={R:'native',P:'javascript',NONE:'none'},sa={ma:'full',ja:'domain',pa:'limited'},ta={fa:'backgrounded',la:'foregrounded'},ua={ea:'app',Ba:'web'};function A(a,b){this.x=null!=a.x?a.x:a.left;this.y=null!=a.y?a.y:a.top;this.width=a.width;this.height=a.height;this.endX=this.x+this.width;this.endY=this.y+this.height;this.adSessionId=a.adSessionId||void 0;this.isFriendlyObstructionFor=a.isFriendlyObstructionFor||[];this.b=a.friendlyObstructionClass||void 0;this.c=a.friendlyObstructionPurpose||void 0;this.f=a.friendlyObstructionReason||void 0;this.clipsToBounds=void 0!==a.clipsToBounds?!0===a.clipsToBounds:!0;this.notVisibleReason=a.notVisibleReason||\nvoid 0;this.childViews=a.childViews||[];this.isCreative=a.isCreative||!1;this.a=b}function va(a){var b={};return b.width=a.width,b.height=a.height,b}function C(a){var b={};return Object.assign({},va(a),(b.x=a.x,b.y=a.y,b))}function wa(a){var b=C(a),c={};return Object.assign({},b,(c.endX=a.endX,c.endY=a.endY,c))}function xa(a,b,c){a.x+=b;a.y+=c;a.endX+=b;a.endY+=c}\nA.prototype.J=function(a){if(null==a)return!1;a=C(a);var b=a.y,c=a.width,d=a.height;return this.x===a.x&&this.y===b&&this.width===c&&this.height===d};function ya(a){return a.width*a.height};function za(a,b){a=C(a);for(var c=[],d=[],e=0;e<b.length;e++){var f=C(b[e]);f=Aa(a,f);Ba(c,f.x);Ba(c,f.endX);Ba(d,f.y);Ba(d,f.endY)}c=c.sort(function(l,g){return l-g});d=d.sort(function(l,g){return l-g});return{ba:c,ca:d}}function Aa(a,b){return{x:Math.max(a.x,b.x),y:Math.max(a.y,b.y),endX:Math.min(a.x+a.width,b.x+b.width),endY:Math.min(a.y+a.height,b.y+b.height)}}function Ba(a,b){-1===a.indexOf(b)&&a.push(b)};function Ca(){this.b=this.a=this.v=this.l=this.g=this.j=void 0;this.m=0;this.h=[];this.o=[];this.u=0;this.i=[];this.c=[];this.f=[]}Ca.prototype.J=function(a){return null==a?!1:JSON.stringify(Da(this))===JSON.stringify(Da(a))};\nfunction Da(a){var b=[],c=[],d={viewport:a.j,adView:{percentageInView:a.m,reasons:a.f},declaredFriendlyObstructions:a.h.length};if(void 0!==a.a){d.adView.geometry=C(a.a);d.adView.geometry.pixels=ya(a.a);d.adView.onScreenGeometry=C(a.b);d.adView.onScreenGeometry.pixels=a.u;for(var e=0;e<a.c.length;e++)b.push(C(a.c[e]));for(e=0;e<a.o.length;e++){var f=a.o[e],l=f,g={};l.b&&(g.obstructionClass=l.b);l.c&&(g.obstructionPurpose=l.c);l.f&&(g.obstructionReason=l.f);f=Aa(a.a,f);c.push(Object.assign({},{x:f.x,\ny:f.y,width:f.endX-f.x,height:f.endY-f.y},g))}d.adView.onScreenGeometry.obstructions=b;d.adView.onScreenGeometry.friendlyObstructions=c;void 0!==a.l&&void 0!==a.v&&(d.adView.containerGeometry=C(a.l),d.adView.onScreenContainerGeometry=C(a.v),d.adView.measuringElement=!0)}return d}function Ea(a,b){b=va(b);a.j={};a.j.width=b.width;a.j.height=b.height;a.g={};a.g.x=0;a.g.y=0;a.g.width=b.width;a.g.height=b.height;a.g.endX=b.width;a.g.endY=b.height}\nfunction Fa(){return{x:0,y:0,endX:0,endY:0,width:0,height:0}}function Ga(a,b){var c={};c.x=Math.max(a.x,b.x);c.y=Math.max(a.y,b.y);c.endX=Math.min(a.endX,b.endX);c.endY=Math.min(a.endY,b.endY);c.width=Math.max(0,c.endX-c.x);c.height=Math.max(0,c.endY-c.y);return c}function Ha(a,b){return.01<b.width-a.width||.01<b.height-a.height}\nfunction Ia(a){if(-1!==a.f.indexOf('backgrounded'))a.m=0,a.u=0;else{var b=ya(a.a);if(0!==b){var c=ya(a.b);var d=a.c,e=0;if(0<d.length){var f=za(a.b,d),l=f.ba;f=f.ca;for(var g=0;g<l.length-1;g++)for(var h=(l[g]+(l[g]+1))/2,k=l[g+1]-l[g],m=0;m<f.length-1;m++){for(var v=(f[m]+(f[m]+1))/2,B=f[m+1]-f[m],x=!1,F=0;F<d.length;F++){var K=C(d[F]);if(K.x<h&&K.x+K.width>h&&K.y<v&&K.y+K.height>v){x=!0;break}}x&&(e+=Math.round(k)*Math.round(B))}}c-=e;b=Math.round(c/b*100);a.m=Math.max(b,0);a.u=Math.max(c,0)}}}\nfunction Ja(a,b){if(0!==b.width&&0!==b.height&&a.b){var c=wa(a.b),d=c.y,e=c.endX;a=c.endY;var f=b.endX;c=c.x;(f=f<c||.01>Math.abs(f-c))||(f=b.x,f=f>e||.01>Math.abs(f-e));(e=f)||(e=b.endY,e=e<d||.01>Math.abs(e-d));(d=e)||(b=b.y,d=b>a||.01>Math.abs(b-a));b=!d}else b=!1;return b}function D(a,b){for(var c=!1,d=0;d<a.f.length;d++)a.f[d]===b&&(c=!0);c||a.f.push(b)};function Ka(a,b,c,d,e){var f=new Ca;b=new A(b,!1);Ea(f,b);La(a,b,f,d);if(!e)return f.f=['unmeasurable'],f.j=void 0,f.m=0,f.c=[],f.a&&(a=f.a,c={},a=new A((c.x=0,c.y=0,c.width=a.width,c.height=a.height,c),a.a),f.a=a),f.b=Fa(),f;if('backgrounded'===c)D(f,'backgrounded');else if(void 0!==f.a){for(a=0;a<f.h.length;a++)Ja(f,f.h[a])&&f.o.push(f.h[a]);for(a=0;a<f.i.length;a++){if(c=Ja(f,f.i[a])){a:{c=f.i[a];for(d=0;d<f.c.length;d++)if(f.c[d].J(c)){c=!0;break a}c=!1}c=!c}c&&(D(f,'obstructed'),f.c.push(f.i[a]))}Ia(f)}else D(f,\n'notFound');return f}\nfunction La(a,b,c,d){var e=b.isCreative?!0:b.adSessionId===d;if(e){c.a=b;var f=wa(c.a);a=Ga(c.g,f);var l=c.a;'notAttached'===l.notVisibleReason||'noWindowFocus'===l.notVisibleReason||'noAdView'===l.notVisibleReason?(D(c,'notFound'),c.b=new A(Fa(),!1)):(l=c.a,'viewInvisible'===l.notVisibleReason||'viewGone'===l.notVisibleReason||'viewNotVisible'===l.notVisibleReason||'viewAlphaZero'===l.notVisibleReason||'viewHidden'===l.notVisibleReason||void 0!==c.a.notVisibleReason?(D(c,'hidden'),c.b=new A(Fa(),\n!1)):(Ha(a,f)&&D(c,'clipped'),c.b=new A(a,!1)))}else if(f=!0,b.a&&(f=-1!==b.isFriendlyObstructionFor.indexOf(d)?!1:!1===b.clipsToBounds),f){l=b.childViews;for(var g=0;g<l.length;g++)f=void 0!==c.a,La(a,new A(l[g],f),c,d)}e||void 0===c.a||(b.a?-1!==b.isFriendlyObstructionFor.indexOf(d)?c.h.push(b):c.i.push(b):(e=wa(b),d=wa(c.b),C(c.b),a=c.b,0!==a.width&&0!==a.height&&b.clipsToBounds&&(b=Ga(d,e),Ha(b,d)&&(D(c,'clipped'),c.b=new A(b,!1)))))};function Ma(a,b){this.y=this.x=0;this.width=a;this.height=b};function Na(){return{apiVersion:'1.0',accessMode:'limited',environment:'app',omidJsInfo:{omidImplementer:'omsdk',serviceVersion:'1.3.21-iab2898'}}}function Oa(){this.adSessionId=null;this.c=Na();this.o=null;this.m='foregrounded';this.l=this.i='none';this.j=this.g=this.f=this.h=this.a=this.b=this.B=this.u=null;this.C=!0;this.v=new Map}var G;function H(){G||(G=new Oa);return G};var Pa=eval('this'),I=function(){if('undefined'!==typeof omidGlobal&&omidGlobal)return omidGlobal;if('undefined'!==typeof global&&global)return global;if('undefined'!==typeof window&&window)return window;if('undefined'!==typeof Pa&&Pa)return Pa;throw Error('Could not determine global object context.');}();function Qa(a,b){this.a=a;this.b=b}t.Object.defineProperties(Qa.prototype,{event:{configurable:!0,enumerable:!0,get:function(){return this.a}},origin:{configurable:!0,enumerable:!0,get:function(){return this.b}}});function J(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=arguments[c];Ra(function(){throw new (Function.prototype.bind.apply(Error,[null,'Could not complete the test successfully - '].concat(q(b))));},function(){return console.error.apply(console,q(b))})}function Sa(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=arguments[c];Ra(function(){},function(){return console.error.apply(console,q(b))})}\nfunction Ra(a,b){'undefined'!==typeof jasmine&&jasmine?a():'undefined'!==typeof console&&console&&console.error&&b()};function Ta(){this.f=[];this.b=[];this.c=[];this.g=[];this.i={};this.a=H()}function Ua(a){a.f=[];a.b=[];a.c=[];a.g=[];a.i={};G.adSessionId=null;G.c=Na();G.o=null;G.G=void 0;G.K=void 0;G.H=null;G.I=null;G.D=null;G.m='foregrounded';G.i='none';G.l='none';G.u=null;G.B=null;G.b=null;G.a=null;G.h=null;G.f=null;G.g=null;G.j=null;G.C=!0;G.v=new Map}\nfunction Va(a,b){void 0!==a.a&&a.a.adSessionId&&!1!==Wa(a,b)&&a.c.filter(function(c){return c.type===b.event.type}).forEach(function(c){return a.h(c.F,b.event)})}function Xa(a,b){a.f.push(b);Va(a,b)}function Ya(a,b,c){void 0!==a.a&&a.a.adSessionId&&a.f.filter(function(d){return d.event.type===b&&Wa(a,d)}).map(function(d){return d.event}).forEach(c)}\nfunction Wa(a,b){var c=b.event.type,d=-1!==Object.values(z).indexOf(c)&&'volumeChange'!==c;return'impression'===c||'loaded'===c&&a.a.a?b.origin===H().l:d?b.origin===H().i:!0}function Za(a,b,c){'media'===b||'video'===b?$a(a,c):(a.c.push({type:b,F:c}),Ya(a,b,c))}function $a(a,b){Object.keys(z).forEach(function(c){c=z[c];a.c.push({type:c,F:b});Ya(a,c,b)})}function ab(a,b,c,d){var e={O:c,L:d,F:b};a.g.push(e);a.b.forEach(function(f){var l=bb(f);'sessionStart'===f.event.type&&cb(a,l,e);a.h(b,l)})}\nfunction db(a,b,c){var d=L(a,'sessionError','native',{errorType:b,message:c});a.b.push(d);a.g.forEach(function(e){a.h(e.F,d.event)})}function eb(a,b){a.i=Object.assign(a.i,b);b=a.a.c;if(void 0!==b){b=Object.assign({},fb(a,gb(a,{context:b}),!0),{supportsLoadedEvent:!!a.a.a||'video'==a.a.b});Object.assign(b,{pageUrl:null,contentUrl:a.a.o});var c=L(a,'sessionStart','native',b);a.b.push(c);a.g.forEach(function(d){var e=d.F,f=bb(c);cb(a,f,d);a.h(e,f)},a);hb(a)}}\nfunction cb(a,b,c){c.O&&(b.data.verificationParameters=a.i[c.O]);c.L&&(c=a.a.v.get(c.L))&&(b.data.verificationParameters=c.verificationParameters,b.data.context.accessMode=c.accessMode,'full'===c.accessMode&&(a.a.g&&(b.data.context.videoElement=a.a.g),a.a.f&&(b.data.context.slotElement=a.a.f)))}function ib(a){var b=a.g,c=L(a,'sessionFinish','native');a.b.push(c);var d=a.a.c;d&&'native'==d.adSessionType||Ua(a);b.forEach(function(e){return a.h(e.F,c.event)})}\nTa.prototype.h=function(a,b){for(var c=[],d=1;d<arguments.length;++d)c[d-1]=arguments[d];try{a.apply(null,q(c))}catch(e){Sa(e)}};function jb(a,b){var c=(c=H().D)?Da(c):void 0;c=fb(a,gb(a,c));Xa(a,L(a,'impression',b,c))}function kb(a,b,c){if(a.a.a||'display'!=a.a.b)b=L(a,'loaded',b,fb(a,gb(a,void 0===c?null:c))),Xa(a,b)}\nfunction lb(a,b,c,d){'start'!==b&&'volumeChange'!==b||null!=(d&&d.deviceVolume)||(d.deviceVolume=a.a.u);if(d&&('start'===b||'volumeChange'===b)){var e=d.videoPlayerVolume,f=d.mediaPlayerVolume;null!=e?(Object.assign(d,{mediaPlayerVolume:e}),a.a.B=e):null!=f&&(Object.assign(d,{videoPlayerVolume:f}),a.a.B=f)}Xa(a,L(a,b,c,d))}\nfunction hb(a){var b=a.f.filter(function(f){return Object.values(z).includes(f.event.type)&&'video'==a.a.b&&f.origin===a.a.i||'loaded'==f.event.type&&'display'==a.a.b&&f.origin===a.a.l?!0:!1}).map(function(f){return f.event}),c=a.a.adSessionId||'',d={};b=p(b);for(var e=b.next();!e.done;d={w:d.w},e=b.next()){d.w=e.value;d.w.adSessionId||(d.w.adSessionId=c);if('loaded'==d.w.type){if(!a.a.a&&'display'==a.a.b)continue;d.w.data=fb(a,gb(a,d.w.data))}a.c.filter(function(f){return function(l){return l.type===\nf.w.type}}(d)).forEach(function(f){return function(l){return l.F(f.w)}}(d))}}function mb(a,b,c){a:{c=new Set(c);a=p(a.f.concat(a.b));for(var d=a.next();!d.done;d=a.next())if(d=d.value,c.has(d.event.type)&&d.origin!=b){b=!0;break a}b=!1}return b?(J('Event owner cannot be registered after its events have already been published.'),!1):!0}function nb(a,b){mb(a,b,Object.values(z))&&M(a,b)&&(a.a.i=b)}function ob(a,b){mb(a,b,['impression'])&&pb(a,b)&&(a.a.l=b)}\nfunction pb(a,b){var c=a.a.l;return'none'!=c&&c!=b?(J('Impression event is owned by '+(a.a.l+', not ')+(b+'.')),!1):!0}function M(a,b){var c=a.a.i;return'none'!=c&&c!=b?(J('Media events are owned by '+(a.a.i+', not '+b+'.')),!1):!0}function fb(a,b,c){c=void 0===c?!1:c;b=Object.assign({},b);a.a.b&&Object.assign(b,{mediaType:a.a.b});a.a.a&&(c||'definedByJavaScript'!==a.a.a)&&Object.assign(b,{creativeType:a.a.a});return b}function gb(a,b){return a.a.h?Object.assign({},b,{impressionType:a.a.h}):b}\nfunction L(a,b,c,d){return new Qa({adSessionId:a.a.adSessionId||'',timestamp:(new Date).getTime(),type:b,data:d},c)}function bb(a){a=a.event;return{adSessionId:a.adSessionId,timestamp:a.timestamp,type:a.type,data:a.data}};function qb(a,b,c){'container'===b&&void 0!==a.a.G&&void 0!==a.a&&null!=a.a.adSessionId&&(a.a.H=Ka(a.c,a.a.G,a.a.m,a.a.adSessionId,!0));b=a.a;var d=b.H,e=b.I;if(d)if(e){b=new Ca;var f=d.j,l=d.a,g=d.b,h=e.a;e=e.b;f&&l&&g&&h&&e&&(Ea(b,f),b.l=new A(l,!1),b.v=new A(g,!1),b.i=Object.assign([],d.i),b.c=Object.assign([],d.c),b.h=Object.assign([],d.h),b.o=Object.assign([],d.o),b.f=Object.assign([],d.f),d=b.l.x,f=b.l.y,h=new A(h,!1),e=new A(e,!1),xa(h,d,f),xa(e,d,f),b.a=h,b.b=Ga(e,g),Ia(b))}else b=d;else b=\nnull;g=a.a.D;if(b&&!b.J(g)||c)g=Da(b),c&&(g.adView.reasons=g.adView.reasons||[c]),c=a.b,'audio'!=c.a.a&&Xa(c,L(c,'geometryChange','native',g)),a.a.D=b};function N(a){return'object'===typeof a}function rb(a){return'number'===typeof a&&!isNaN(a)&&0<=a}function O(a){return'string'===typeof a}function P(a,b){return O(a)&&-1!==Object.values(b).indexOf(a)}function sb(a){var b=a&&a.tagName&&'iframe'===a.tagName.toLowerCase();try{b=b&&a instanceof HTMLIFrameElement}catch(c){}return b}function tb(a){var b=a&&a.tagName;try{b=b&&a instanceof a.ownerDocument.defaultView.HTMLElement}catch(c){}return b}\nfunction ub(a){var b=a&&a.tagName&&'video'===a.tagName.toLowerCase();try{b=b&&a instanceof a.ownerDocument.defaultView.HTMLVideoElement}catch(c){}return b};function Q(a,b,c){this.f=a;this.K=b;this.G=c;this.c=H();this.b=null;this.a=this.g=this.u=void 0;this.I=!0;this.B=void 0;R(this)}function R(a){if(!a.b){var b;a:{if((b=a.f.document)&&b.getElementsByClassName&&(b=b.getElementsByClassName('omid-element'))){if(1==b.length){b=b[0];break a}1<b.length&&a.I&&(db(a.G,'generic',\"More than one element with 'omid-element' class name.\"),a.I=!1)}b=null}if(ub(b))a.c.g=b;else if(tb(b))a.c.f=b;else return;vb(a)}}\nfunction vb(a){a.c.g?(a.b=a.c.g,a.i()):a.c.f&&(a.b=a.c.f,sb(a.b)?a.c.j&&a.i():a.i())}function wb(a){a.a&&(sb(a.b)?a.c.j&&(a.D(),xb(a)):(a.D(),xb(a)))}Q.prototype.m=function(){this.B&&(this.f.document.removeEventListener('visibilitychange',this.B),this.B=void 0)};Q.prototype.i=function(){};function xb(a){a.u&&(a.c.I=a.u,qb(a.K,'creative'))}function yb(a){if(a.a&&a.c.j){var b=new A(a.c.j,!1);xa(b,a.a.x,a.a.y);b.clipsToBounds=!0;return b}};function zb(a,b,c){return Ab(a,'setInterval')(b,c)}function Bb(a,b){Ab(a,'clearInterval')(b)}function Cb(a,b){Ab(a,'clearTimeout')(b)}function Ab(a,b){return a.a&&a.a[b]?a.a[b]:Db(a,b)}\nfunction Eb(a,b,c,d){if(a.a.document&&a.a.document.body){var e=a.a.document.createElement('img');e.width=1;e.height=1;e.style.display='none';e.src=b;c&&e.addEventListener('load',function(){return c()});d&&e.addEventListener('error',function(){return d()});a.a.document.body.appendChild(e)}else Db(a,'sendUrl')(b,c,d)}function Db(a,b){if(a.a&&a.a.omidNative&&a.a.omidNative[b])return a.a.omidNative[b].bind(a.a.omidNative);throw Error('Native interface method \"'+b+'\" not found.');};function S(a,b,c,d,e){Q.call(this,a,c,e);this.l=b;this.h=void 0;this.j=d}r(S,Q);S.prototype.m=function(){void 0!==this.h&&(Bb(this.j,this.h),this.h=void 0);Q.prototype.m.call(this)};S.prototype.i=function(){var a=this;Q.prototype.i.call(this);null==this.b?this.h=void 0:void 0===this.h&&(this.h=zb(this.j,function(){return Fb(a)},200),Fb(this))};\nS.prototype.D=function(){if(this.g){var a=yb(this);if(a){this.a.isCreative=!1;a.isCreative=!0;for(var b=!1,c=0;c<this.a.childViews.length;c++)if(this.a.childViews[c].isCreative){this.a.childViews[c]=a;b=!0;break}b||this.a.childViews.push(a)}else this.a.isCreative=!0;this.u=Ka(this.l,this.g,this.c.m,this.c.adSessionId,this.C())}};S.prototype.C=function(){return!0};\nfunction Fb(a){if(void 0!==a.h){b:{try{var b=a.f.top;var c=0<=b.innerHeight&&0<=b.innerWidth;break b}catch(d){}c=!1}c?(c=a.f.top,c=new A(new Ma(c.innerWidth,c.innerHeight),!1)):c=new A(new Ma(0,0),!1);b=a.b.getBoundingClientRect();if(null==b.x||isNaN(b.x))b.x=b.left;if(null==b.y||isNaN(b.y))b.y=b.top;b=new A(b,!1);c.J(a.g)&&b.J(a.a)||(a.a=b,a.a.clipsToBounds=!0,a.g=c,a.g.childViews.push(a.a),wb(a))}};function T(a,b,c,d){Q.call(this,a,c,d);this.o=this.j=this.l=this.h=void 0;this.H=!1;this.v=void 0}r(T,Q);T.prototype.m=function(){this.h&&this.h.disconnect();Gb(this);Q.prototype.m.call(this)};T.prototype.i=function(){Q.prototype.i.call(this);this.b&&(this.h||(this.h=Hb(this)),Ib(this),Jb(this.b)&&Kb(this))};\nT.prototype.D=function(){if(this.a&&this.v){var a=yb(this);if(a){var b=a;var c=this.v;var d=Math.max(a.x,c.x);var e=Math.max(a.y,c.y),f=Math.min(a.endX,c.endX);a=Math.min(a.endY,c.endY);f<=d||a<=e?d=null:(c={},d=new A((c.x=d,c.y=e,c.width=Math.abs(f-d),c.height=Math.abs(a-e),c),!1));d||(d=new A({x:0,y:0,width:0,height:0},!1))}else b=this.a,d=this.v;e=new Ca;this.g&&Ea(e,this.g);e.a=b;e.b=d;Ia(e);this.H?100===e.m||D(e,'clipped'):D(e,'viewport');this.u=e}};T.prototype.C=function(){return!0};\nfunction Gb(a){a.l&&(a.l.disconnect(),a.l=void 0);a.j&&(a.j.disconnect(),a.j=void 0);a.o&&((0,a.f.removeEventListener)('resize',a.o),a.o=void 0)}function Ib(a){a.h&&a.b&&(a.h.unobserve(a.b),a.h.observe(a.b))}function Jb(a){a=a.getBoundingClientRect();return 0==a.width||0==a.height}\nfunction Hb(a){return new a.f.IntersectionObserver(function(b){try{if(b.length){for(var c,d=b[0],e=1;e<b.length;e++)b[e].time>d.time&&(d=b[e]);c=d;a.g=Lb(c.rootBounds);a.a=Lb(c.boundingClientRect);a.v=Lb(c.intersectionRect);a.H=!!c.isIntersecting;wb(a)}}catch(f){a.m(),db(a.G,'generic','Problem handling IntersectionObserver callback: '+f.message)}},{root:null,rootMargin:'0px',threshold:[0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1]})}\nfunction Kb(a){a.f.ResizeObserver?a.l||(a.l=Mb(a,function(){return Ob(a)}),a.l.observe(a.b)):(a.o||(a.o=function(){return Ob(a)},(0,a.f.addEventListener)('resize',a.o)),a.j||(a.j=new MutationObserver(function(){return Ob(a)}),a.j.observe(a.b,{childList:!1,attributes:!0,subtree:!1})))}function Ob(a){a.b&&!Jb(a.b)&&(Ib(a),Gb(a))}function Mb(a,b){return new a.f.ResizeObserver(b)}function Lb(a){if(a&&null!==a.x&&null!==a.y&&null!==a.width&&null!==a.height)return new A(a,!1)};function Pb(a){return a&&N(a)?Object.entries(a).reduce(function(b,c){var d=p(c);c=d.next().value;d=d.next().value;return b&&O(c)&&null!=d&&N(d)&&O(d.resourceUrl)},!0):!1};function U(a,b,c,d){this.b=a;this.method=b;this.version=c;this.a=d}function Qb(a){return!!a&&void 0!==a.omid_message_guid&&void 0!==a.omid_message_method&&void 0!==a.omid_message_version&&'string'===typeof a.omid_message_guid&&'string'===typeof a.omid_message_method&&'string'===typeof a.omid_message_version&&(void 0===a.omid_message_args||void 0!==a.omid_message_args)}function Rb(a){return new U(a.omid_message_guid,a.omid_message_method,a.omid_message_version,a.omid_message_args)}\nfunction Sb(a){var b={};b=(b.omid_message_guid=a.b,b.omid_message_method=a.method,b.omid_message_version=a.version,b);void 0!==a.a&&(b.omid_message_args=a.a);return b};function Tb(a){this.c=a};function V(a){this.c=a;this.handleExportedMessage=V.prototype.f.bind(this)}r(V,Tb);V.prototype.b=function(a,b){b=void 0===b?this.c:b;if(!b)throw Error('Message destination must be defined at construction time or when sending the message.');b.handleExportedMessage(Sb(a),this)};V.prototype.f=function(a,b){Qb(a)&&this.a&&this.a(Rb(a),b)};function Ub(a,b){this.c=b=void 0===b?I:b;var c=this;a.addEventListener('message',function(d){if('object'===typeof d.data){var e=d.data;Qb(e)&&d.source&&c.a&&c.a(Rb(e),d.source)}})}r(Ub,Tb);Ub.prototype.b=function(a,b){b=void 0===b?this.c:b;if(!b)throw Error('Message destination must be defined at construction time or when sending the message.');b.postMessage(Sb(a),'*')};function Vb(){return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(a){var b=16*Math.random()|0;return'y'===a?(b&3|8).toString(16):b.toString(16)})};function Wb(a){if(!a.a||!a.a.document)throw Error('OMID Service Script is not running within a window.');var b=a.b;a.b=[];b.forEach(function(c){try{var d=a.c.C?'limited':'full',e=P(c.accessMode,sa)?c.accessMode:null;var f=e?'full'==e&&'limited'==d?d:'domain'==e?'limited':e:d;c.accessMode=f;a:{var l=c.resourceUrl,g=a.a.location.origin;try{var h=new URL(l,g);break a}catch(F){}try{h=new URL(l);break a}catch(F){}h=null}if(d=h){var k=Vb(),m=a.a.document,v=m.createElement('iframe');v.id='omid-verification-script-frame-'+\nk;v.style.display='none';['full','limited'].includes(f)?v.srcdoc=\"<html><head>\\n<script type=\\\"text/javascript\\\">window['omidVerificationProperties'] = {\\n'serviceWindow': window.parent,\\n'injectionSource': 'app',\\n'injectionId': '\"+(k+'\\',\\n};\\x3c/script>\\n<script type=\"text/javascript\" src=\"')+d.href+'\">\\x3c/script>\\n</head><body></body></html>':'domain'==f&&(v.src=Xb(a,k,d).href);['domain','limited'].includes(f)&&(v.sandbox='allow-scripts');m.body.appendChild(v);var B=c.vendorKey,x=c.verificationParameters;\nB=void 0===B?'':B;x=void 0===x?'':x;B&&'string'===typeof B&&''!==B&&x&&'string'===typeof x&&''!==x&&(a.f.i[B]=x);a.c.v.set(k,c)}}catch(F){Sa('OMID verification script '+c.resourceUrl+' failed to load: '+F)}})}\nfunction Xb(a,b,c){var d='/.well-known/omid/omloader-v1.html#';(new Map([['verificationScriptUrl',c.href],['injectionId',b]])).forEach(function(e,f){d+=encodeURIComponent(f)+'='+encodeURIComponent(e)+'&'});b=null;try{b=new URL(d,a.a.parent.location.origin)}catch(e){throw Error('OMID Service Script cannot access the parent window.');}return b};function Yb(){var a=Zb,b=$b,c=this;this.c=W;this.b=a;this.a=H();this.g=b;this.f=!1;this.registerSessionObserver(function(d){return ac(c,d)})}n=Yb.prototype;n.registerSessionObserver=function(a){ab(this.c,a)};n.setSlotElement=function(a){tb(a)?(this.a.f=a,this.b&&vb(this.b)):J('setSlotElement called with a non-HTMLElement.  It will be ignored.')};n.setElementBounds=function(a){this.a.j=a;this.b&&vb(this.b);this.b&&wb(this.b)};n.error=function(a,b){db(this.c,a,b)};\nn.registerAdEvents=function(){ob(this.c,'javascript')};n.registerMediaEvents=function(){nb(this.c,'javascript')};function Y(a,b,c){'impression'==b?pb(a.c,'javascript')&&(jb(a.c,'javascript'),a.b&&R(a.b)):('loaded'==b?(c=void 0===c?null:c,M(a.c,'javascript')&&kb(a.c,'javascript',c)):M(a.c,'javascript')&&lb(a.c,b,'javascript',c),['loaded','start'].includes(b)&&a.b&&R(a.b))}n.injectVerificationScriptResources=function(a){var b=this.g;b.b.push.apply(b.b,q(a));if(this.f)try{Wb(this.g)}catch(c){J(c.message)}};\nn.setCreativeType=function(a,b){b=void 0===b?null:b;if(!this.a.b||this.a.a)this.a.a=a,'video'==a||'audio'==a?this.a.b='video':'htmlDisplay'==a||'nativeDisplay'==a?this.a.b='display':'definedByJavaScript'==a&&b&&(this.a.b='none'==b?'display':'video')};n.setImpressionType=function(a){if(!this.a.b||this.a.a)this.a.h=a};\nfunction ac(a,b){if('sessionStart'===b.type){a.f=!0;try{Wb(a.g)}catch(c){J(c.message)}}'sessionFinish'===b.type&&(a.f=!1,(b=H().c)&&'native'==b.adSessionType||a.registerSessionObserver(function(c){return ac(a,c)}))}n.setClientInfo=function(a,b,c){var d=this.a.c||{};d.omidJsInfo=Object.assign({},d.omidJsInfo,{sessionClientVersion:a,partnerName:b,partnerVersion:c});this.a.c=d;return this.a.c.omidJsInfo.serviceVersion};function bc(a){return/\\d+\\.\\d+\\.\\d+(-.*)?/.test(a)}function cc(a){a=a.split('-')[0].split('.');for(var b=['1','0','3'],c=0;3>c;c++){var d=parseInt(a[c],10),e=parseInt(b[c],10);if(d>e)break;else if(d<e)return!1}return!0};function dc(a,b){return bc(a)&&cc(a)?b?b:[]:b&&'string'===typeof b?JSON.parse(b):[]};function ec(){var a=fc;var b=void 0===b?omidGlobal:b;this.a=a;this.f=b;this.b=new V;this.f.omid=this.f.omid||{};this.f.omid.v1_SessionServiceCommunication=this.b;this.c=b&&b.addEventListener&&b.postMessage?new Ub(b):null;this.g=null;this.b.a=this.h.bind(this);this.c&&(this.c.a=this.i.bind(this))}ec.prototype.h=function(a,b){gc(this,a,b,this.b)};\nec.prototype.i=function(a,b){this.g||(this.g=b);this.g!=b?J('The source window of session client post messages cannot be changed from the source of the first message.'):gc(this,a,b,this.c)};\nfunction gc(a,b,c,d){function e(h){for(var k=[],m=0;m<arguments.length;++m)k[m]=arguments[m];k=new U(f,'response',g,bc(g)&&cc(g)?k:JSON.stringify(k));d.b(k,c)}var f=b.b,l=b.method,g=b.version;b=dc(g,b.a);try{hc(a,l,e,b)}catch(h){d.b(new U(f,'error',g,'\\n        name: '+h.name+'\\n        message: '+h.message+'\\n        filename: '+h.filename+'\\n        lineNumber: '+h.lineNumber+'\\n        columnNumber: '+h.columnNumber+'\\n        stack: '+h.stack+'\\n        toString(): '+h.toString()),c)}}\nfunction hc(a,b,c,d){switch(b){case 'SessionService.registerAdEvents':a.a.registerAdEvents();break;case 'SessionService.registerMediaEvents':a.a.registerMediaEvents();break;case 'SessionService.registerSessionObserver':a.a.registerSessionObserver(c);break;case 'SessionService.setSlotElement':c=p(d).next().value;a.a.setSlotElement(c);break;case 'SessionService.setVideoElement':c=p(d).next().value;a=a.a;ub(c)?(a.a.g=c,a.b&&vb(a.b)):J('setVideoElement called with a non-HTMLVideoElement. It will be ignored.');\nbreak;case 'SessionService.setElementBounds':c=p(d).next().value;a.a.setElementBounds(c);break;case 'SessionService.startSession':J('Session start from JS is not supported in mobile app.');break;case 'SessionService.finishSession':J('Session finish from JS is not supported in mobile app.');break;case 'SessionService.impressionOccurred':Y(a.a,'impression');break;case 'SessionService.loaded':(c=p(d).next().value)?(b={skippable:c.isSkippable,autoPlay:c.isAutoPlay,position:c.position},c.isSkippable&&\n(b.skipOffset=c.skipOffset),Y(a.a,'loaded',b)):Y(a.a,'loaded');break;case 'SessionService.start':b=p(d);c=b.next().value;b=b.next().value;Y(a.a,'start',{duration:c,mediaPlayerVolume:b});break;case 'SessionService.firstQuartile':Y(a.a,'firstQuartile');break;case 'SessionService.midpoint':Y(a.a,'midpoint');break;case 'SessionService.thirdQuartile':Y(a.a,'thirdQuartile');break;case 'SessionService.complete':Y(a.a,'complete');break;case 'SessionService.pause':Y(a.a,'pause');break;case 'SessionService.resume':Y(a.a,\n'resume');break;case 'SessionService.bufferStart':Y(a.a,'bufferStart');break;case 'SessionService.bufferFinish':Y(a.a,'bufferFinish');break;case 'SessionService.skipped':Y(a.a,'skipped');break;case 'SessionService.volumeChange':c={mediaPlayerVolume:p(d).next().value};Y(a.a,'volumeChange',c);break;case 'SessionService.playerStateChange':c={state:p(d).next().value};Y(a.a,'playerStateChange',c);break;case 'SessionService.adUserInteraction':c={interactionType:p(d).next().value};Y(a.a,'adUserInteraction',\nc);break;case 'SessionService.setClientInfo':var e=p(d);b=e.next().value;d=e.next().value;e=e.next().value;a=a.a.setClientInfo(b,d,e);c(a);break;case 'SessionService.injectVerificationScriptResources':c=p(d).next().value;a.a.injectVerificationScriptResources(c);break;case 'SessionService.setCreativeType':c=p(d).next().value;a.a.setCreativeType(c);break;case 'SessionService.setImpressionType':c=p(d).next().value;a.a.setImpressionType(c);break;case 'SessionService.setContentUrl':c=p(d).next().value;\na.a.a.o=c;break;case 'SessionService.sessionError':b=p(d),c=b.next().value,b=b.next().value,a.a.error(c,b)}};function Z(){var a=W,b=ic,c=jc,d=Zb;this.f=fc;this.a=a;this.c=b;this.h=c;this.g=d;this.b=H()}n=Z.prototype;\nn.T=function(a){if(!(!(a&&N(a)&&P(a.impressionOwner,ra))||'videoEventsOwner'in a&&null!=a.videoEventsOwner&&!P(a.videoEventsOwner,ra)||'mediaEventsOwner'in a&&null!=a.mediaEventsOwner&&!P(a.mediaEventsOwner,ra))){if(a.creativeType&&a.impressionType){var b=a.mediaEventsOwner;null==this.b.a&&this.f.setCreativeType(a.creativeType,b);null==this.b.h&&(this.b.h=a.impressionType);nb(this.a,b)}else b=a.videoEventsOwner,this.b.b=null==b||'none'===b?'display':'video',this.b.a=null,this.b.h=null,nb(this.a,b);\nob(this.a,a.impressionOwner);a&&null!=a.isolateVerificationScripts&&'boolean'===typeof a.isolateVerificationScripts&&(this.b.C=a.isolateVerificationScripts)}};\nn.W=function(a,b,c,d){var e;if(N(b)){if(e=P(b.environment,ua)&&P(b.adSessionType,qa))e=b.omidNativeInfo,e=N(e)?O(e.partnerName)&&O(e.partnerVersion):!1;e&&(e=b.app,e=N(e)?O(e.libraryVersion)&&O(e.appId):!1)}else e=!1;e&&(Pb(d)&&(this.b.v=new Map(Object.entries(d))),d=this.f,c=void 0===c?null:c,null==a&&(a=Vb()),b.canMeasureVisibility=d.b.C(),d.a.adSessionId=a,a=d.a,e=b,void 0!==e.contentUrl&&(a.o=e.contentUrl,e.contentUrl=void 0),e=a.c||{},b.omidJsInfo=Object.assign({},e.omidJsInfo||{},b.omidJsInfo||\n{}),e=b=Object.assign({},e,b),a.C||(null!=a.g?(e.videoElement=a.g,e.accessMode='full'):null!=a.f&&(e.slotElement=a.f,e.accessMode='full')),a.c=b,eb(d.c,c),d.b&&R(d.b))};n.U=function(){var a=this.f;ib(a.c);a.b.m()};n.$=function(a){N(a)&&rb(a.x)&&rb(a.y)&&rb(a.width)&&rb(a.height)&&(this.b.G=a,qb(this.c,'container'))};n.aa=function(a){P(a,ta)&&(this.b.m=a,'backgrounded'===a?qb(this.c,'container','backgrounded'):qb(this.c,'container'))};n.X=function(a){'impression'===a&&(this.M(),this.g&&R(this.g))};\nn.M=function(){pb(this.a,'native')&&jb(this.a,'native')};n.V=function(a){a=void 0===a?null:a;M(this.a,'native')&&kb(this.a,'native',a)};n.error=function(a,b){P(a,oa)&&db(this.a,a,b)};n.Y=function(a,b){this.N(a,b)};n.N=function(a,b){M(this.a,'native')&&P(a,z)&&(void 0===b||N(b))&&('loaded'==a?kb(this.a,'native',b):lb(this.a,a,'native',b))};\nn.Z=function(a){if('none'!==this.a.a.i&&'number'===typeof a&&!isNaN(a)){this.b.u=a;a=this.h;var b=a.a.B;null!=b&&lb(a.b,'volumeChange','native',{mediaPlayerVolume:b,deviceVolume:a.a.u})}};Z.prototype.startSession=Z.prototype.W;Z.prototype.error=Z.prototype.error;Z.prototype.finishSession=Z.prototype.U;Z.prototype.publishAdEvent=Z.prototype.X;Z.prototype.publishImpressionEvent=Z.prototype.M;Z.prototype.publishVideoEvent=Z.prototype.Y;Z.prototype.publishMediaEvent=Z.prototype.N;\nZ.prototype.publishLoadedEvent=Z.prototype.V;Z.prototype.setNativeViewHierarchy=Z.prototype.$;Z.prototype.setState=Z.prototype.aa;Z.prototype.setDeviceVolume=Z.prototype.Z;Z.prototype.init=Z.prototype.T;function kc(){var a=W,b=lc;var c=void 0===c?I:c;this.g=a;this.a=b;this.h={};this.f={};this.c=new V;c.omid=c.omid||{};c.omid.v1_VerificationServiceCommunication=this.c;this.b=null;c&&c.addEventListener&&c.postMessage&&(this.b=new Ub(c));this.c.a=this.i.bind(this);this.b&&(this.b.a=this.j.bind(this))}function mc(a,b,c,d){Eb(a.a,b,c,d)}function nc(a,b,c,d){Db(a.a,'downloadJavaScriptResource')(b,c,d)}kc.prototype.j=function(a,b){this.b&&oc(this,a,b,this.b)};kc.prototype.i=function(a,b){oc(this,a,b,this.c)};\nfunction oc(a,b,c,d){function e(E){for(var X=[],pa=0;pa<arguments.length;++pa)X[pa]=arguments[pa];X=new U(f,'response',g,bc(g)&&cc(g)?X:JSON.stringify(X));d.b(X,c)}var f=b.b,l=b.method,g=b.version;b=dc(g,b.a);try{switch(l){case 'VerificationService.addEventListener':var h=p(b).next().value;Za(a.g,h,e);break;case 'VerificationService.addSessionListener':var k=p(b),m=k.next().value,v=k.next().value;ab(a.g,e,m,v);break;case 'VerificationService.sendUrl':var B=p(b).next().value;mc(a,B,function(){return e(!0)},\nfunction(){return e(!1)});break;case 'VerificationService.setTimeout':var x=p(b),F=x.next().value,K=x.next().value;a.h[F]=Ab(a.a,'setTimeout')(e,K);break;case 'VerificationService.clearTimeout':var tc=p(b).next().value;Cb(a.a,a.h[tc]);break;case 'VerificationService.setInterval':var Nb=p(b),uc=Nb.next().value,vc=Nb.next().value;a.f[uc]=zb(a.a,e,vc);break;case 'VerificationService.clearInterval':var wc=p(b).next().value;Bb(a.a,a.f[wc]);break;case 'VerificationService.injectJavaScriptResource':var xc=\np(b).next().value;nc(a,xc,function(E){return e(!0,E)},function(){return e(!1)});break;case 'VerificationService.getVersion':p(b).next();var yc=H().c.omidJsInfo;e(yc.serviceVersion)}}catch(E){d.b(new U(f,'error',g,'\\n              name: '+E.name+'\\n              message: '+E.message+'\\n              filename: '+E.filename+'\\n              lineNumber: '+E.lineNumber+'\\n              columnNumber: '+E.columnNumber+'\\n              stack: '+E.stack+'\\n              toString(): '+E.toString()+'\\n          '),\nc)}};function pc(){var a=I.document.createElement('iframe');a.id='omid_v1_present';a.name='omid_v1_present';a.style.display='none';I.document.body.appendChild(a)}function qc(){var a=new MutationObserver(function(b){b.forEach(function(c){'BODY'===c.addedNodes[0].nodeName&&(pc(),a.disconnect())})});a.observe(I.document.documentElement,{childList:!0})};var W=new Ta,lc=new function(){var a;this.a=a=void 0===a?omidGlobal:a};new kc;var rc=new function(){},sc=new function(){},ic=new function(){this.b=W;this.c=sc;this.a=H()},zc;I?zc=I.IntersectionObserver&&(I.MutationObserver||I.ResizeObserver)?new T(I,rc,ic,W):new S(I,sc,ic,lc,W):zc=null;var Zb=zc,$b=new function(){var a=W;var b=void 0===b?I:b;this.f=a;this.a=b;this.c=H();this.b=[]},fc=new Yb,jc=new function(){var a=W,b=H();this.b=a;this.a=b};I.omidBridge=new Z;new ec;\nif(I.frames&&I.document&&!('omid_v1_present'in I.frames)){var Ac;if(Ac=null==I.document.body)Ac='MutationObserver'in I;Ac?qc():I.document.body?pc():I.document.write('<iframe style=\"display:none\" id=\"omid_v1_present\" name=\"omid_v1_present\"></iframe>')};\n}).call(this, this);\n\n", new File(file, OM_SDK_JS)));
arrayList.add(writeToFile(";(function(omidGlobal, factory, exports) {\n  // CommonJS support\n  if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n    factory(omidGlobal, exports);\n\n  // If neither AMD nor CommonJS are used, export to a versioned name in the\n  // global context.\n  } else {\n    var exports = {};\n    var versions = ['1.3.21-iab2898'];\n    var additionalVersionString = 'default';\n    if (!!additionalVersionString) {\n       versions.push(additionalVersionString);\n    }\n\n    factory(omidGlobal, exports);\n\n    function deepFreeze(object) {\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          object[key] = deepFreeze(object[key]);\n        }\n      }\n      return Object.freeze(object);\n    }\n\n    // Inject and freeze the exported components of omid.\n    for (var key in exports) {\n      if (exports.hasOwnProperty(key)) {\n        if (Object.getOwnPropertyDescriptor(omidGlobal, key) == null) {\n          // Define the top level property in the global scope\n          Object.defineProperty(omidGlobal, key, {\n            value: {},\n          });\n        }\n        versions.forEach(function(version) {\n          if (Object.getOwnPropertyDescriptor(omidGlobal[key], version) == null) {\n            var frozenObject = deepFreeze(exports[key]);\n            // Define the object exports keyed-off versions\n            Object.defineProperty(omidGlobal[key], version, {\n              get: function () {\n                return frozenObject;\n              },\n              enumerable: true,\n            });\n          }\n        });\n      }\n    }\n  }\n}(typeof global === 'undefined' ? this : global, function(omidGlobal, omidExports) {\n  'use strict';\nvar $jscomp = $jscomp || {};\n$jscomp.scope = {};\n$jscomp.arrayIteratorImpl = function(a) {\n  var b = 0;\n  return function() {\n    return b < a.length ? {done:!1, value:a[b++]} : {done:!0};\n  };\n};\n$jscomp.arrayIterator = function(a) {\n  return {next:$jscomp.arrayIteratorImpl(a)};\n};\n$jscomp.makeIterator = function(a) {\n  var b = \"undefined\" != typeof Symbol && Symbol.iterator && a[Symbol.iterator];\n  return b ? b.call(a) : $jscomp.arrayIterator(a);\n};\n$jscomp.arrayFromIterator = function(a) {\n  for (var b, c = []; !(b = a.next()).done;) {\n    c.push(b.value);\n  }\n  return c;\n};\n$jscomp.arrayFromIterable = function(a) {\n  return a instanceof Array ? a : $jscomp.arrayFromIterator($jscomp.makeIterator(a));\n};\n$jscomp.ASSUME_ES5 = !1;\n$jscomp.ASSUME_NO_NATIVE_MAP = !1;\n$jscomp.ASSUME_NO_NATIVE_SET = !1;\n$jscomp.SIMPLE_FROUND_POLYFILL = !1;\n$jscomp.objectCreate = $jscomp.ASSUME_ES5 || \"function\" == typeof Object.create ? Object.create : function(a) {\n  var b = function() {\n  };\n  b.prototype = a;\n  return new b;\n};\n$jscomp.underscoreProtoCanBeSet = function() {\n  var a = {a:!0}, b = {};\n  try {\n    return b.__proto__ = a, b.a;\n  } catch (c) {\n  }\n  return !1;\n};\n$jscomp.setPrototypeOf = \"function\" == typeof Object.setPrototypeOf ? Object.setPrototypeOf : $jscomp.underscoreProtoCanBeSet() ? function(a, b) {\n  a.__proto__ = b;\n  if (a.__proto__ !== b) {\n    throw new TypeError(a + \" is not extensible\");\n  }\n  return a;\n} : null;\n$jscomp.inherits = function(a, b) {\n  a.prototype = $jscomp.objectCreate(b.prototype);\n  a.prototype.constructor = a;\n  if ($jscomp.setPrototypeOf) {\n    var c = $jscomp.setPrototypeOf;\n    c(a, b);\n  } else {\n    for (c in b) {\n      if (\"prototype\" != c) {\n        if (Object.defineProperties) {\n          var d = Object.getOwnPropertyDescriptor(b, c);\n          d && Object.defineProperty(a, c, d);\n        } else {\n          a[c] = b[c];\n        }\n      }\n    }\n  }\n  a.superClass_ = b.prototype;\n};\n$jscomp.defineProperty = $jscomp.ASSUME_ES5 || \"function\" == typeof Object.defineProperties ? Object.defineProperty : function(a, b, c) {\n  a != Array.prototype && a != Object.prototype && (a[b] = c.value);\n};\n$jscomp.getGlobal = function(a) {\n  return \"undefined\" != typeof window && window === a ? a : \"undefined\" != typeof global && null != global ? global : a;\n};\n$jscomp.global = $jscomp.getGlobal(this);\n$jscomp.SYMBOL_PREFIX = \"jscomp_symbol_\";\n$jscomp.initSymbol = function() {\n  $jscomp.initSymbol = function() {\n  };\n  $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol);\n};\n$jscomp.SymbolClass = function(a, b) {\n  this.$jscomp$symbol$id_ = a;\n  $jscomp.defineProperty(this, \"description\", {configurable:!0, writable:!0, value:b});\n};\n$jscomp.SymbolClass.prototype.toString = function() {\n  return this.$jscomp$symbol$id_;\n};\n$jscomp.Symbol = function() {\n  function a(c) {\n    if (this instanceof a) {\n      throw new TypeError(\"Symbol is not a constructor\");\n    }\n    return new $jscomp.SymbolClass($jscomp.SYMBOL_PREFIX + (c || \"\") + \"_\" + b++, c);\n  }\n  var b = 0;\n  return a;\n}();\n$jscomp.initSymbolIterator = function() {\n  $jscomp.initSymbol();\n  var a = $jscomp.global.Symbol.iterator;\n  a || (a = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol(\"Symbol.iterator\"));\n  \"function\" != typeof Array.prototype[a] && $jscomp.defineProperty(Array.prototype, a, {configurable:!0, writable:!0, value:function() {\n    return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this));\n  }});\n  $jscomp.initSymbolIterator = function() {\n  };\n};\n$jscomp.initSymbolAsyncIterator = function() {\n  $jscomp.initSymbol();\n  var a = $jscomp.global.Symbol.asyncIterator;\n  a || (a = $jscomp.global.Symbol.asyncIterator = $jscomp.global.Symbol(\"Symbol.asyncIterator\"));\n  $jscomp.initSymbolAsyncIterator = function() {\n  };\n};\n$jscomp.iteratorPrototype = function(a) {\n  $jscomp.initSymbolIterator();\n  a = {next:a};\n  a[$jscomp.global.Symbol.iterator] = function() {\n    return this;\n  };\n  return a;\n};\n$jscomp.iteratorFromArray = function(a, b) {\n  $jscomp.initSymbolIterator();\n  a instanceof String && (a += \"\");\n  var c = 0, d = {next:function() {\n    if (c < a.length) {\n      var e = c++;\n      return {value:b(e, a[e]), done:!1};\n    }\n    d.next = function() {\n      return {done:!0, value:void 0};\n    };\n    return d.next();\n  }};\n  d[Symbol.iterator] = function() {\n    return d;\n  };\n  return d;\n};\n$jscomp.polyfill = function(a, b, c, d) {\n  if (b) {\n    c = $jscomp.global;\n    a = a.split(\".\");\n    for (d = 0; d < a.length - 1; d++) {\n      var e = a[d];\n      e in c || (c[e] = {});\n      c = c[e];\n    }\n    a = a[a.length - 1];\n    d = c[a];\n    b = b(d);\n    b != d && null != b && $jscomp.defineProperty(c, a, {configurable:!0, writable:!0, value:b});\n  }\n};\nvar module$exports$omid$common$constants = {AdEventType:{IMPRESSION:\"impression\", LOADED:\"loaded\", GEOMETRY_CHANGE:\"geometryChange\", SESSION_START:\"sessionStart\", SESSION_ERROR:\"sessionError\", SESSION_FINISH:\"sessionFinish\", MEDIA:\"media\", VIDEO:\"video\", START:\"start\", FIRST_QUARTILE:\"firstQuartile\", MIDPOINT:\"midpoint\", THIRD_QUARTILE:\"thirdQuartile\", COMPLETE:\"complete\", PAUSE:\"pause\", RESUME:\"resume\", BUFFER_START:\"bufferStart\", BUFFER_FINISH:\"bufferFinish\", SKIPPED:\"skipped\", VOLUME_CHANGE:\"volumeChange\", \nPLAYER_STATE_CHANGE:\"playerStateChange\", AD_USER_INTERACTION:\"adUserInteraction\", STATE_CHANGE:\"stateChange\"}, MediaEventType:{LOADED:\"loaded\", START:\"start\", FIRST_QUARTILE:\"firstQuartile\", MIDPOINT:\"midpoint\", THIRD_QUARTILE:\"thirdQuartile\", COMPLETE:\"complete\", PAUSE:\"pause\", RESUME:\"resume\", BUFFER_START:\"bufferStart\", BUFFER_FINISH:\"bufferFinish\", SKIPPED:\"skipped\", VOLUME_CHANGE:\"volumeChange\", PLAYER_STATE_CHANGE:\"playerStateChange\", AD_USER_INTERACTION:\"adUserInteraction\"}, ImpressionType:{DEFINED_BY_JAVASCRIPT:\"definedByJavaScript\", \nUNSPECIFIED:\"unspecified\", LOADED:\"loaded\", BEGIN_TO_RENDER:\"beginToRender\", ONE_PIXEL:\"onePixel\", VIEWABLE:\"viewable\", AUDIBLE:\"audible\", OTHER:\"other\"}, ErrorType:{GENERIC:\"generic\", VIDEO:\"video\", MEDIA:\"media\"}, AdSessionType:{NATIVE:\"native\", HTML:\"html\", JAVASCRIPT:\"javascript\"}, EventOwner:{NATIVE:\"native\", JAVASCRIPT:\"javascript\", NONE:\"none\"}, AccessMode:{FULL:\"full\", DOMAIN:\"domain\", LIMITED:\"limited\"}, AppState:{BACKGROUNDED:\"backgrounded\", FOREGROUNDED:\"foregrounded\"}, Environment:{APP:\"app\", \nWEB:\"web\"}, InteractionType:{CLICK:\"click\", INVITATION_ACCEPT:\"invitationAccept\"}, CreativeType:{DEFINED_BY_JAVASCRIPT:\"definedByJavaScript\", HTML_DISPLAY:\"htmlDisplay\", NATIVE_DISPLAY:\"nativeDisplay\", VIDEO:\"video\", AUDIO:\"audio\"}, MediaType:{DISPLAY:\"display\", VIDEO:\"video\"}, Reason:{NOT_FOUND:\"notFound\", HIDDEN:\"hidden\", BACKGROUNDED:\"backgrounded\", VIEWPORT:\"viewport\", OBSTRUCTED:\"obstructed\", CLIPPED:\"clipped\", UNMEASURABLE:\"unmeasurable\"}, SupportedFeatures:{CONTAINER:\"clid\", VIDEO:\"vlid\"}, \nVideoPosition:{PREROLL:\"preroll\", MIDROLL:\"midroll\", POSTROLL:\"postroll\", STANDALONE:\"standalone\"}, VideoPlayerState:{MINIMIZED:\"minimized\", COLLAPSED:\"collapsed\", NORMAL:\"normal\", EXPANDED:\"expanded\", FULLSCREEN:\"fullscreen\"}, NativeViewKeys:{X:\"x\", LEFT:\"left\", Y:\"y\", TOP:\"top\", WIDTH:\"width\", HEIGHT:\"height\", AD_SESSION_ID:\"adSessionId\", IS_FRIENDLY_OBSTRUCTION_FOR:\"isFriendlyObstructionFor\", CLIPS_TO_BOUNDS:\"clipsToBounds\", CHILD_VIEWS:\"childViews\", END_X:\"endX\", END_Y:\"endY\", OBSTRUCTIONS:\"obstructions\", \nOBSTRUCTION_CLASS:\"obstructionClass\", OBSTRUCTION_PURPOSE:\"obstructionPurpose\", OBSTRUCTION_REASON:\"obstructionReason\", PIXELS:\"pixels\"}, MeasurementStateChangeSource:{CONTAINER:\"container\", CREATIVE:\"creative\"}, ElementMarkup:{OMID_ELEMENT_CLASS_NAME:\"omid-element\"}, CommunicationType:{NONE:\"NONE\", DIRECT:\"DIRECT\", POST_MESSAGE:\"POST_MESSAGE\"}, OmidImplementer:{OMSDK:\"omsdk\"}};\nvar module$contents$omid$common$InternalMessage_GUID_KEY = \"omid_message_guid\", module$contents$omid$common$InternalMessage_METHOD_KEY = \"omid_message_method\", module$contents$omid$common$InternalMessage_VERSION_KEY = \"omid_message_version\", module$contents$omid$common$InternalMessage_ARGS_KEY = \"omid_message_args\", module$exports$omid$common$InternalMessage = function(a, b, c, d) {\n  this.guid = a;\n  this.method = b;\n  this.version = c;\n  this.args = d;\n};\nmodule$exports$omid$common$InternalMessage.isValidSerializedMessage = function(a) {\n  return !!a && void 0 !== a[module$contents$omid$common$InternalMessage_GUID_KEY] && void 0 !== a[module$contents$omid$common$InternalMessage_METHOD_KEY] && void 0 !== a[module$contents$omid$common$InternalMessage_VERSION_KEY] && \"string\" === typeof a[module$contents$omid$common$InternalMessage_GUID_KEY] && \"string\" === typeof a[module$contents$omid$common$InternalMessage_METHOD_KEY] && \"string\" === typeof a[module$contents$omid$common$InternalMessage_VERSION_KEY] && (void 0 === a[module$contents$omid$common$InternalMessage_ARGS_KEY] || \n  void 0 !== a[module$contents$omid$common$InternalMessage_ARGS_KEY]);\n};\nmodule$exports$omid$common$InternalMessage.deserialize = function(a) {\n  return new module$exports$omid$common$InternalMessage(a[module$contents$omid$common$InternalMessage_GUID_KEY], a[module$contents$omid$common$InternalMessage_METHOD_KEY], a[module$contents$omid$common$InternalMessage_VERSION_KEY], a[module$contents$omid$common$InternalMessage_ARGS_KEY]);\n};\nmodule$exports$omid$common$InternalMessage.prototype.serialize = function() {\n  var a = {};\n  a = (a[module$contents$omid$common$InternalMessage_GUID_KEY] = this.guid, a[module$contents$omid$common$InternalMessage_METHOD_KEY] = this.method, a[module$contents$omid$common$InternalMessage_VERSION_KEY] = this.version, a);\n  void 0 !== this.args && (a[module$contents$omid$common$InternalMessage_ARGS_KEY] = this.args);\n  return a;\n};\nvar module$exports$omid$common$Communication = function(a) {\n  this.to = a;\n  this.communicationType_ = module$exports$omid$common$constants.CommunicationType.NONE;\n};\nmodule$exports$omid$common$Communication.prototype.sendMessage = function(a, b) {\n};\nmodule$exports$omid$common$Communication.prototype.handleMessage = function(a, b) {\n  if (this.onMessage) {\n    this.onMessage(a, b);\n  }\n};\nmodule$exports$omid$common$Communication.prototype.serialize = function(a) {\n  return JSON.stringify(a);\n};\nmodule$exports$omid$common$Communication.prototype.deserialize = function(a) {\n  return JSON.parse(a);\n};\nmodule$exports$omid$common$Communication.prototype.isDirectCommunication = function() {\n  return this.communicationType_ === module$exports$omid$common$constants.CommunicationType.DIRECT;\n};\nmodule$exports$omid$common$Communication.prototype.isCrossOrigin = function() {\n};\nvar module$exports$omid$common$argsChecker = {assertTruthyString:function(a, b) {\n  if (!b) {\n    throw Error(\"Value for \" + a + \" is undefined, null or blank.\");\n  }\n  if (\"string\" !== typeof b && !(b instanceof String)) {\n    throw Error(\"Value for \" + a + \" is not a string.\");\n  }\n  if (\"\" === b.trim()) {\n    throw Error(\"Value for \" + a + \" is empty string.\");\n  }\n}, assertNotNullObject:function(a, b) {\n  if (null == b) {\n    throw Error(\"Value for \" + a + \" is undefined or null\");\n  }\n}, assertNumber:function(a, b) {\n  if (null == b) {\n    throw Error(a + \" must not be null or undefined.\");\n  }\n  if (\"number\" !== typeof b || isNaN(b)) {\n    throw Error(\"Value for \" + a + \" is not a number\");\n  }\n}, assertNumberBetween:function(a, b, c, d) {\n  (0,module$exports$omid$common$argsChecker.assertNumber)(a, b);\n  if (b < c || b > d) {\n    throw Error(\"Value for \" + a + \" is outside the range [\" + c + \",\" + d + \"]\");\n  }\n}, assertFunction:function(a, b) {\n  if (!b) {\n    throw Error(a + \" must not be truthy.\");\n  }\n}, assertPositiveNumber:function(a, b) {\n  (0,module$exports$omid$common$argsChecker.assertNumber)(a, b);\n  if (0 > b) {\n    throw Error(a + \" must be a positive number.\");\n  }\n}};\nvar module$exports$omid$common$exporter = {};\nfunction module$contents$omid$common$exporter_getOmidExports() {\n  return \"undefined\" === typeof omidExports ? null : omidExports;\n}\nfunction module$contents$omid$common$exporter_getOrCreateName(a, b) {\n  return a && (a[b] || (a[b] = {}));\n}\nmodule$exports$omid$common$exporter.packageExport = function(a, b, c) {\n  if (c = void 0 === c ? module$contents$omid$common$exporter_getOmidExports() : c) {\n    a = a.split(\".\"), a.slice(0, a.length - 1).reduce(module$contents$omid$common$exporter_getOrCreateName, c)[a[a.length - 1]] = b;\n  }\n};\nvar module$exports$omid$sessionClient$Partner = function(a, b) {\n  module$exports$omid$common$argsChecker.assertTruthyString(\"Partner.name\", a);\n  module$exports$omid$common$argsChecker.assertTruthyString(\"Partner.version\", b);\n  this.name = a;\n  this.version = b;\n};\n(0,module$exports$omid$common$exporter.packageExport)(\"OmidSessionClient.Partner\", module$exports$omid$sessionClient$Partner);\nvar module$exports$omid$sessionClient$VerificationScriptResource = function(a, b, c, d) {\n  d = void 0 === d ? module$exports$omid$common$constants.AccessMode.FULL : d;\n  module$exports$omid$common$argsChecker.assertTruthyString(\"VerificationScriptResource.resourceUrl\", a);\n  this.resourceUrl = a;\n  this.vendorKey = b;\n  this.verificationParameters = c;\n  this.accessMode = d;\n};\nmodule$exports$omid$sessionClient$VerificationScriptResource.prototype.toJSON = function() {\n  return {accessMode:this.accessMode, resourceUrl:this.resourceUrl, vendorKey:this.vendorKey, verificationParameters:this.verificationParameters};\n};\n(0,module$exports$omid$common$exporter.packageExport)(\"OmidSessionClient.VerificationScriptResource\", module$exports$omid$sessionClient$VerificationScriptResource);\nvar module$exports$omid$sessionClient$Context = function(a, b, c, d) {\n  c = void 0 === c ? null : c;\n  d = void 0 === d ? null : d;\n  module$exports$omid$common$argsChecker.assertNotNullObject(\"Context.partner\", a);\n  this.partner = a;\n  this.verificationScriptResources = b;\n  this.videoElement = this.slotElement = null;\n  this.contentUrl = c;\n  this.customReferenceData = d;\n  this.underEvaluation = !1;\n  this.serviceWindow = null;\n};\nmodule$exports$omid$sessionClient$Context.prototype.setVideoElement = function(a) {\n  module$exports$omid$common$argsChecker.assertNotNullObject(\"Context.videoElement\", a);\n  this.videoElement = a;\n};\nmodule$exports$omid$sessionClient$Context.prototype.setSlotElement = function(a) {\n  module$exports$omid$common$argsChecker.assertNotNullObject(\"Context.slotElement\", a);\n  this.slotElement = a;\n};\nmodule$exports$omid$sessionClient$Context.prototype.setServiceWindow = function(a) {\n  module$exports$omid$common$argsChecker.assertNotNullObject(\"Context.serviceWindow\", a);\n  this.serviceWindow = a;\n};\n(0,module$exports$omid$common$exporter.packageExport)(\"OmidSessionClient.Context\", module$exports$omid$sessionClient$Context);\nvar module$exports$omid$common$OmidGlobalProvider = {}, module$contents$omid$common$OmidGlobalProvider_globalThis = eval(\"this\");\nfunction module$contents$omid$common$OmidGlobalProvider_getOmidGlobal() {\n  if (\"undefined\" !== typeof omidGlobal && omidGlobal) {\n    return omidGlobal;\n  }\n  if (\"undefined\" !== typeof global && global) {\n    return global;\n  }\n  if (\"undefined\" !== typeof window && window) {\n    return window;\n  }\n  if (\"undefined\" !== typeof module$contents$omid$common$OmidGlobalProvider_globalThis && module$contents$omid$common$OmidGlobalProvider_globalThis) {\n    return module$contents$omid$common$OmidGlobalProvider_globalThis;\n  }\n  throw Error(\"Could not determine global object context.\");\n}\nmodule$exports$omid$common$OmidGlobalProvider.omidGlobal = module$contents$omid$common$OmidGlobalProvider_getOmidGlobal();\nvar module$contents$omid$sessionClient$OmidJsSessionInterface_ExportedNodeKeys = {ROOT:\"omidSessionInterface\", AD_EVENTS:\"adEvents\", MEDIA_EVENTS:\"mediaEvents\"}, module$contents$omid$sessionClient$OmidJsSessionInterface_MethodNameMap = {sessionError:\"reportError\"}, module$contents$omid$sessionClient$OmidJsSessionInterface_MediaEventMethodNames = Object.keys(module$exports$omid$common$constants.MediaEventType).map(function(a) {\n  return module$exports$omid$common$constants.MediaEventType[a];\n}), module$contents$omid$sessionClient$OmidJsSessionInterface_AdEventMethodNames = [\"impressionOccurred\"], module$exports$omid$sessionClient$OmidJsSessionInterface = function(a) {\n  a = void 0 === a ? module$exports$omid$common$OmidGlobalProvider.omidGlobal : a;\n  this.interfaceRoot_ = a[module$contents$omid$sessionClient$OmidJsSessionInterface_ExportedNodeKeys.ROOT];\n};\nmodule$exports$omid$sessionClient$OmidJsSessionInterface.prototype.isSupported = function() {\n  return null != this.interfaceRoot_;\n};\nmodule$exports$omid$sessionClient$OmidJsSessionInterface.prototype.sendMessage = function(a, b, c) {\n  \"registerSessionObserver\" == a && (c = [b]);\n  module$contents$omid$sessionClient$OmidJsSessionInterface_MethodNameMap[a] && (a = module$contents$omid$sessionClient$OmidJsSessionInterface_MethodNameMap[a]);\n  b = this.interfaceRoot_;\n  0 <= module$contents$omid$sessionClient$OmidJsSessionInterface_AdEventMethodNames.indexOf(a) && (b = b[module$contents$omid$sessionClient$OmidJsSessionInterface_ExportedNodeKeys.AD_EVENTS]);\n  0 <= module$contents$omid$sessionClient$OmidJsSessionInterface_MediaEventMethodNames.indexOf(a) && (b = b[module$contents$omid$sessionClient$OmidJsSessionInterface_ExportedNodeKeys.MEDIA_EVENTS]);\n  b = b[a];\n  if (!b) {\n    throw Error(\"Unrecognized method name: \" + a + \".\");\n  }\n  b.apply(null, $jscomp.arrayFromIterable(c));\n};\nvar module$exports$omid$common$Rectangle = function(a, b, c, d) {\n  this.x = a;\n  this.y = b;\n  this.width = c;\n  this.height = d;\n};\nvar module$exports$omid$common$logger = {error:function(a) {\n  for (var b = [], c = 0; c < arguments.length; ++c) {\n    b[c - 0] = arguments[c];\n  }\n  module$contents$omid$common$logger_executeLog(function() {\n    throw new (Function.prototype.bind.apply(Error, [null, \"Could not complete the test successfully - \"].concat($jscomp.arrayFromIterable(b))));\n  }, function() {\n    return console.error.apply(console, $jscomp.arrayFromIterable(b));\n  });\n}, debug:function(a) {\n  for (var b = [], c = 0; c < arguments.length; ++c) {\n    b[c - 0] = arguments[c];\n  }\n  module$contents$omid$common$logger_executeLog(function() {\n  }, function() {\n    return console.error.apply(console, $jscomp.arrayFromIterable(b));\n  });\n}};\nfunction module$contents$omid$common$logger_executeLog(a, b) {\n  \"undefined\" !== typeof jasmine && jasmine ? a() : \"undefined\" !== typeof console && console && console.error && b();\n}\n;var module$exports$omid$common$eventTypedefs = {};\nvar module$exports$omid$common$version = {ApiVersion:\"1.0\", Version:\"1.3.21-iab2898\"};\nvar module$exports$omid$common$VersionUtils = {}, module$contents$omid$common$VersionUtils_SEMVER_DIGITS_NUMBER = 3;\nmodule$exports$omid$common$VersionUtils.isValidVersion = function(a) {\n  return /\\d+\\.\\d+\\.\\d+(-.*)?/.test(a);\n};\nmodule$exports$omid$common$VersionUtils.versionGreaterOrEqual = function(a, b) {\n  a = a.split(\"-\")[0].split(\".\");\n  b = b.split(\"-\")[0].split(\".\");\n  for (var c = 0; c < module$contents$omid$common$VersionUtils_SEMVER_DIGITS_NUMBER; c++) {\n    var d = parseInt(a[c], 10), e = parseInt(b[c], 10);\n    if (d > e) {\n      break;\n    } else {\n      if (d < e) {\n        return !1;\n      }\n    }\n  }\n  return !0;\n};\nvar module$exports$omid$common$ArgsSerDe = {}, module$contents$omid$common$ArgsSerDe_ARGS_NOT_SERIALIZED_VERSION = \"1.0.3\";\nmodule$exports$omid$common$ArgsSerDe.serializeMessageArgs = function(a, b) {\n  return (0,module$exports$omid$common$VersionUtils.isValidVersion)(a) && (0,module$exports$omid$common$VersionUtils.versionGreaterOrEqual)(a, module$contents$omid$common$ArgsSerDe_ARGS_NOT_SERIALIZED_VERSION) ? b : JSON.stringify(b);\n};\nmodule$exports$omid$common$ArgsSerDe.deserializeMessageArgs = function(a, b) {\n  return (0,module$exports$omid$common$VersionUtils.isValidVersion)(a) && (0,module$exports$omid$common$VersionUtils.versionGreaterOrEqual)(a, module$contents$omid$common$ArgsSerDe_ARGS_NOT_SERIALIZED_VERSION) ? b ? b : [] : b && \"string\" === typeof b ? JSON.parse(b) : [];\n};\nvar module$exports$omid$common$guid = {generateGuid:function() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(a) {\n    var b = 16 * Math.random() | 0;\n    a = \"y\" === a ? (b & 3 | 8).toString(16) : b.toString(16);\n    return a;\n  });\n}};\nvar module$exports$omid$common$windowUtils = {};\nfunction module$contents$omid$common$windowUtils_isValidWindow(a) {\n  return null != a && \"undefined\" !== typeof a.top && null != a.top;\n}\nmodule$exports$omid$common$windowUtils.isCrossOrigin = function(a) {\n  if (a === module$exports$omid$common$OmidGlobalProvider.omidGlobal) {\n    return !1;\n  }\n  try {\n    if (\"undefined\" === typeof a.location.hostname) {\n      return !0;\n    }\n    module$contents$omid$common$windowUtils_isSameOriginForIE(a);\n  } catch (b) {\n    return !0;\n  }\n  return !1;\n};\nfunction module$contents$omid$common$windowUtils_isSameOriginForIE(a) {\n  return \"\" === a.x || \"\" !== a.x;\n}\nmodule$exports$omid$common$windowUtils.resolveGlobalContext = function(a) {\n  \"undefined\" === typeof a && \"undefined\" !== typeof window && window && (a = window);\n  return module$contents$omid$common$windowUtils_isValidWindow(a) ? a : module$exports$omid$common$OmidGlobalProvider.omidGlobal;\n};\nmodule$exports$omid$common$windowUtils.resolveTopWindowContext = function(a) {\n  return module$contents$omid$common$windowUtils_isValidWindow(a) ? a.top : module$exports$omid$common$OmidGlobalProvider.omidGlobal;\n};\nmodule$exports$omid$common$windowUtils.isTopWindowAccessible = function(a) {\n  try {\n    return a.top.location.href ? !0 : !1;\n  } catch (b) {\n    return !1;\n  }\n};\nmodule$exports$omid$common$windowUtils.evaluatePageUrl = function(a) {\n  if (!module$contents$omid$common$windowUtils_isValidWindow(a)) {\n    return null;\n  }\n  try {\n    var b = a.top;\n    return (0,module$exports$omid$common$windowUtils.isCrossOrigin)(b) ? null : b.location.href;\n  } catch (c) {\n    return null;\n  }\n};\nvar module$exports$omid$common$DirectCommunication = function(a) {\n  module$exports$omid$common$Communication.call(this, a);\n  this.communicationType_ = module$exports$omid$common$constants.CommunicationType.DIRECT;\n  this.handleExportedMessage = module$exports$omid$common$DirectCommunication.prototype.handleExportedMessage.bind(this);\n};\n$jscomp.inherits(module$exports$omid$common$DirectCommunication, module$exports$omid$common$Communication);\nmodule$exports$omid$common$DirectCommunication.prototype.sendMessage = function(a, b) {\n  b = void 0 === b ? this.to : b;\n  if (!b) {\n    throw Error(\"Message destination must be defined at construction time or when sending the message.\");\n  }\n  b.handleExportedMessage(a.serialize(), this);\n};\nmodule$exports$omid$common$DirectCommunication.prototype.handleExportedMessage = function(a, b) {\n  module$exports$omid$common$InternalMessage.isValidSerializedMessage(a) && this.handleMessage(module$exports$omid$common$InternalMessage.deserialize(a), b);\n};\nmodule$exports$omid$common$DirectCommunication.prototype.isCrossOrigin = function() {\n  return !1;\n};\nvar module$exports$omid$common$PostMessageCommunication = function(a, b) {\n  b = void 0 === b ? module$exports$omid$common$OmidGlobalProvider.omidGlobal : b;\n  module$exports$omid$common$Communication.call(this, b);\n  var c = this;\n  this.communicationType_ = module$exports$omid$common$constants.CommunicationType.POST_MESSAGE;\n  a.addEventListener(\"message\", function(a) {\n    if (\"object\" === typeof a.data) {\n      var b = a.data;\n      module$exports$omid$common$InternalMessage.isValidSerializedMessage(b) && (b = module$exports$omid$common$InternalMessage.deserialize(b), a.source && c.handleMessage(b, a.source));\n    }\n  });\n};\n$jscomp.inherits(module$exports$omid$common$PostMessageCommunication, module$exports$omid$common$Communication);\nmodule$exports$omid$common$PostMessageCommunication.isCompatibleContext = function(a) {\n  return !!(a && a.addEventListener && a.postMessage);\n};\nmodule$exports$omid$common$PostMessageCommunication.prototype.sendMessage = function(a, b) {\n  b = void 0 === b ? this.to : b;\n  if (!b) {\n    throw Error(\"Message destination must be defined at construction time or when sending the message.\");\n  }\n  b.postMessage(a.serialize(), \"*\");\n};\nmodule$exports$omid$common$PostMessageCommunication.prototype.isCrossOrigin = function() {\n  return this.to ? (0,module$exports$omid$common$windowUtils.isCrossOrigin)(this.to) : !0;\n};\nvar module$exports$omid$common$DetectOmid = {OMID_PRESENT_FRAME_NAME:\"omid_v1_present\", isOmidPresent:function(a) {\n  try {\n    return a.frames ? !!a.frames[module$exports$omid$common$DetectOmid.OMID_PRESENT_FRAME_NAME] : !1;\n  } catch (b) {\n    return !1;\n  }\n}, declareOmidPresence:function(a) {\n  a.frames && a.document && (module$exports$omid$common$DetectOmid.OMID_PRESENT_FRAME_NAME in a.frames || (null == a.document.body && module$exports$omid$common$DetectOmid.isMutationObserverAvailable_(a) ? module$exports$omid$common$DetectOmid.registerMutationObserver_(a) : a.document.body ? module$exports$omid$common$DetectOmid.appendPresenceIframe_(a) : a.document.write('<iframe style=\"display:none\" id=\"' + (module$exports$omid$common$DetectOmid.OMID_PRESENT_FRAME_NAME + '\" name=\"') + (module$exports$omid$common$DetectOmid.OMID_PRESENT_FRAME_NAME + \n  '\"></iframe>'))));\n}, appendPresenceIframe_:function(a) {\n  var b = a.document.createElement(\"iframe\");\n  b.id = module$exports$omid$common$DetectOmid.OMID_PRESENT_FRAME_NAME;\n  b.name = module$exports$omid$common$DetectOmid.OMID_PRESENT_FRAME_NAME;\n  b.style.display = \"none\";\n  a.document.body.appendChild(b);\n}, isMutationObserverAvailable_:function(a) {\n  return \"MutationObserver\" in a;\n}, registerMutationObserver_:function(a) {\n  var b = new MutationObserver(function(c) {\n    c.forEach(function(c) {\n      \"BODY\" === c.addedNodes[0].nodeName && (module$exports$omid$common$DetectOmid.appendPresenceIframe_(a), b.disconnect());\n    });\n  });\n  b.observe(a.document.documentElement, {childList:!0});\n}};\nvar module$exports$omid$common$serviceCommunication = {}, module$contents$omid$common$serviceCommunication_EXPORTED_SESSION_COMMUNICATION_NAME = [\"omid\", \"v1_SessionServiceCommunication\"], module$contents$omid$common$serviceCommunication_EXPORTED_VERIFICATION_COMMUNICATION_NAME = [\"omid\", \"v1_VerificationServiceCommunication\"], module$contents$omid$common$serviceCommunication_EXPORTED_SERVICE_WINDOW_NAME = [\"omidVerificationProperties\", \"serviceWindow\"];\nfunction module$contents$omid$common$serviceCommunication_getValueForKeypath(a, b) {\n  return b.reduce(function(a, b) {\n    return a && a[b];\n  }, a);\n}\nfunction module$contents$omid$common$serviceCommunication_startServiceCommunication(a, b, c, d) {\n  if (!(0,module$exports$omid$common$windowUtils.isCrossOrigin)(b)) {\n    try {\n      var e = module$contents$omid$common$serviceCommunication_getValueForKeypath(b, c);\n      if (e) {\n        return new module$exports$omid$common$DirectCommunication(e);\n      }\n    } catch (f) {\n    }\n  }\n  return d(b) ? new module$exports$omid$common$PostMessageCommunication(a, b) : null;\n}\nfunction module$contents$omid$common$serviceCommunication_startServiceCommunicationFromCandidates(a, b, c, d) {\n  b = $jscomp.makeIterator(b);\n  for (var e = b.next(); !e.done; e = b.next()) {\n    if (e = module$contents$omid$common$serviceCommunication_startServiceCommunication(a, e.value, c, d)) {\n      return e;\n    }\n  }\n  return null;\n}\nmodule$exports$omid$common$serviceCommunication.startSessionServiceCommunication = function(a, b, c) {\n  c = void 0 === c ? module$exports$omid$common$DetectOmid.isOmidPresent : c;\n  var d = [a, (0,module$exports$omid$common$windowUtils.resolveTopWindowContext)(a)];\n  b && d.unshift(b);\n  return module$contents$omid$common$serviceCommunication_startServiceCommunicationFromCandidates(a, d, module$contents$omid$common$serviceCommunication_EXPORTED_SESSION_COMMUNICATION_NAME, c);\n};\nmodule$exports$omid$common$serviceCommunication.startVerificationServiceCommunication = function(a, b) {\n  b = void 0 === b ? module$exports$omid$common$DetectOmid.isOmidPresent : b;\n  var c = [], d = module$contents$omid$common$serviceCommunication_getValueForKeypath(a, module$contents$omid$common$serviceCommunication_EXPORTED_SERVICE_WINDOW_NAME);\n  d && c.push(d);\n  c.push((0,module$exports$omid$common$windowUtils.resolveTopWindowContext)(a));\n  return module$contents$omid$common$serviceCommunication_startServiceCommunicationFromCandidates(a, c, module$contents$omid$common$serviceCommunication_EXPORTED_VERIFICATION_COMMUNICATION_NAME, b);\n};\nvar module$contents$omid$sessionClient$AdSession_SESSION_CLIENT_VERSION = module$exports$omid$common$version.Version, module$exports$omid$sessionClient$AdSession = function(a, b, c) {\n  module$exports$omid$common$argsChecker.assertNotNullObject(\"AdSession.context\", a);\n  this.context_ = a;\n  this.impressionOccurred_ = !1;\n  var d = this.context_.serviceWindow || void 0;\n  this.communication_ = b || (0,module$exports$omid$common$serviceCommunication.startSessionServiceCommunication)((0,module$exports$omid$common$windowUtils.resolveGlobalContext)(), d);\n  this.sessionInterface_ = c || new module$exports$omid$sessionClient$OmidJsSessionInterface;\n  this.isSessionRunning_ = this.hasMediaEvents_ = this.hasAdEvents_ = !1;\n  this.impressionType_ = this.creativeType_ = null;\n  this.creativeLoaded_ = !1;\n  this.callbackMap_ = {};\n  this.communication_ && (this.communication_.onMessage = this.handleInternalMessage_.bind(this));\n  this.setClientInfo_();\n  this.injectVerificationScripts_(a.verificationScriptResources);\n  this.sendSlotElement_(a.slotElement);\n  this.sendVideoElement_(a.videoElement);\n  this.sendContentUrl_(a.contentUrl);\n  this.watchSessionEvents_();\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.setCreativeType = function(a) {\n  if (a === module$exports$omid$common$constants.CreativeType.DEFINED_BY_JAVASCRIPT) {\n    throw Error(\"Creative type cannot be redefined with value \" + module$exports$omid$common$constants.CreativeType.DEFINED_BY_JAVASCRIPT);\n  }\n  if (this.impressionOccurred_) {\n    throw Error(\"Impression has already occurred\");\n  }\n  if (this.creativeLoaded_) {\n    throw Error(\"Creative has already loaded\");\n  }\n  if (this.creativeType_ && this.creativeType_ !== module$exports$omid$common$constants.CreativeType.DEFINED_BY_JAVASCRIPT) {\n    throw Error(\"Creative type cannot be redefined\");\n  }\n  if (void 0 === this.creativeType_) {\n    throw Error(\"Native integration is using OMID 1.2 or earlier\");\n  }\n  this.sendOneWayMessage(\"setCreativeType\", a);\n  this.creativeType_ = a;\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.setImpressionType = function(a) {\n  if (a === module$exports$omid$common$constants.ImpressionType.DEFINED_BY_JAVASCRIPT) {\n    throw Error(\"Impression type cannot be redefined with value \" + module$exports$omid$common$constants.ImpressionType.DEFINED_BY_JAVASCRIPT);\n  }\n  if (this.impressionOccurred_) {\n    throw Error(\"Impression has already occurred\");\n  }\n  if (this.creativeLoaded_) {\n    throw Error(\"Creative has already loaded\");\n  }\n  if (this.impressionType_ && this.impressionType_ !== module$exports$omid$common$constants.ImpressionType.DEFINED_BY_JAVASCRIPT) {\n    throw Error(\"Impression type cannot be redefined\");\n  }\n  if (void 0 === this.impressionType_) {\n    throw Error(\"Native integration is using OMID 1.2 or earlier\");\n  }\n  this.sendOneWayMessage(\"setImpressionType\", a);\n  this.impressionType_ = a;\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.isSupported = function() {\n  return !!this.communication_ || this.sessionInterface_.isSupported();\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.isSendingElementsSupported_ = function() {\n  return this.communication_ ? this.communication_.isDirectCommunication() : this.sessionInterface_.isSupported();\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.registerSessionObserver = function(a) {\n  this.sendMessage(\"registerSessionObserver\", a);\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.start = function() {\n  this.sendOneWayMessage(\"startSession\", {customReferenceData:this.context_.customReferenceData, underEvaluation:this.context_.underEvaluation});\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.finish = function() {\n  this.sendOneWayMessage(\"finishSession\");\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.error = function(a, b) {\n  this.sendOneWayMessage(\"sessionError\", a, b);\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.registerAdEvents = function() {\n  if (this.hasAdEvents_) {\n    throw Error(\"AdEvents already registered.\");\n  }\n  this.hasAdEvents_ = !0;\n  this.sendOneWayMessage(\"registerAdEvents\");\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.registerMediaEvents = function() {\n  if (this.hasMediaEvents_) {\n    throw Error(\"MediaEvents already registered.\");\n  }\n  this.hasMediaEvents_ = !0;\n  this.sendOneWayMessage(\"registerMediaEvents\");\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.sendOneWayMessage = function(a, b) {\n  for (var c = [], d = 1; d < arguments.length; ++d) {\n    c[d - 1] = arguments[d];\n  }\n  this.sendMessage.apply(this, [a, null].concat($jscomp.arrayFromIterable(c)));\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.sendMessage = function(a, b, c) {\n  for (var d = [], e = 2; e < arguments.length; ++e) {\n    d[e - 2] = arguments[e];\n  }\n  this.communication_ ? this.sendInternalMessage_(a, b, d) : this.sessionInterface_.isSupported() && this.sendInterfaceMessage_(a, b, d);\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.sendInternalMessage_ = function(a, b, c) {\n  var d = (0,module$exports$omid$common$guid.generateGuid)();\n  b && (this.callbackMap_[d] = b);\n  a = new module$exports$omid$common$InternalMessage(d, \"SessionService.\" + a, module$contents$omid$sessionClient$AdSession_SESSION_CLIENT_VERSION, (0,module$exports$omid$common$ArgsSerDe.serializeMessageArgs)(module$contents$omid$sessionClient$AdSession_SESSION_CLIENT_VERSION, c));\n  this.communication_.sendMessage(a);\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.handleInternalMessage_ = function(a, b) {\n  b = a.method;\n  var c = a.guid;\n  a = a.args;\n  if (\"response\" === b && this.callbackMap_[c]) {\n    var d = (0,module$exports$omid$common$ArgsSerDe.deserializeMessageArgs)(module$contents$omid$sessionClient$AdSession_SESSION_CLIENT_VERSION, a);\n    this.callbackMap_[c].apply(this, d);\n  }\n  \"error\" === b && window.console && module$exports$omid$common$logger.error(a);\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.sendInterfaceMessage_ = function(a, b, c) {\n  try {\n    this.sessionInterface_.sendMessage(a, b, c);\n  } catch (d) {\n    module$exports$omid$common$logger.error(\"Failed to communicate with SessionInterface with error:\"), module$exports$omid$common$logger.error(d);\n  }\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.assertSessionRunning = function() {\n  if (!this.isSessionRunning_) {\n    throw Error(\"Session not started.\");\n  }\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.impressionOccurred = function() {\n  if (this.creativeType_ === module$exports$omid$common$constants.CreativeType.DEFINED_BY_JAVASCRIPT) {\n    throw Error(\"Creative type has not been redefined\");\n  }\n  if (this.impressionType_ === module$exports$omid$common$constants.ImpressionType.DEFINED_BY_JAVASCRIPT) {\n    throw Error(\"Impression type has not been redefined\");\n  }\n  this.impressionOccurred_ = !0;\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.creativeLoaded = function() {\n  if (this.creativeType_ === module$exports$omid$common$constants.CreativeType.DEFINED_BY_JAVASCRIPT) {\n    throw Error(\"Creative type has not been redefined\");\n  }\n  if (this.impressionType_ === module$exports$omid$common$constants.ImpressionType.DEFINED_BY_JAVASCRIPT) {\n    throw Error(\"Impression type has not been redefined\");\n  }\n  this.creativeLoaded_ = !0;\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.setClientInfo_ = function() {\n  this.sendOneWayMessage(\"setClientInfo\", module$contents$omid$sessionClient$AdSession_SESSION_CLIENT_VERSION, this.context_.partner.name, this.context_.partner.version);\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.injectVerificationScripts_ = function(a) {\n  a && (a = a.map(function(a) {\n    return a.toJSON();\n  }), this.sendOneWayMessage(\"injectVerificationScriptResources\", a));\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.sendSlotElement_ = function(a) {\n  this.sendElement_(a, \"setSlotElement\");\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.sendVideoElement_ = function(a) {\n  this.sendElement_(a, \"setVideoElement\");\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.sendElement_ = function(a, b) {\n  a && (this.isSendingElementsSupported_() ? this.sendOneWayMessage(b, a) : this.error(module$exports$omid$common$constants.ErrorType.GENERIC, \"Session Client \" + b + \" called when communication is cross-origin\"));\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.sendContentUrl_ = function(a) {\n  a && this.sendOneWayMessage(\"setContentUrl\", a);\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.setElementBounds = function(a) {\n  module$exports$omid$common$argsChecker.assertNotNullObject(\"AdSession.elementBounds\", a);\n  this.sendOneWayMessage(\"setElementBounds\", a);\n};\nmodule$exports$omid$sessionClient$AdSession.prototype.watchSessionEvents_ = function() {\n  var a = this;\n  this.registerSessionObserver(function(b) {\n    b.type === module$exports$omid$common$constants.AdEventType.SESSION_START && (a.isSessionRunning_ = !0, a.creativeType_ = b.data.creativeType, a.impressionType_ = b.data.impressionType);\n    b.type === module$exports$omid$common$constants.AdEventType.SESSION_FINISH && (a.isSessionRunning_ = !1);\n  });\n};\n(0,module$exports$omid$common$exporter.packageExport)(\"OmidSessionClient.AdSession\", module$exports$omid$sessionClient$AdSession);\nvar module$exports$omid$common$VastProperties = function(a, b, c, d) {\n  this.isSkippable = a;\n  this.skipOffset = b;\n  this.isAutoPlay = c;\n  this.position = d;\n};\nmodule$exports$omid$common$VastProperties.prototype.toJSON = function() {\n  return {isSkippable:this.isSkippable, skipOffset:this.skipOffset, isAutoPlay:this.isAutoPlay, position:this.position};\n};\nvar module$exports$omid$sessionClient$AdEvents = function(a) {\n  module$exports$omid$common$argsChecker.assertNotNullObject(\"AdEvents.adSession\", a);\n  try {\n    a.registerAdEvents(), this.adSession = a;\n  } catch (b) {\n    throw Error(\"AdSession already has an ad events instance registered\");\n  }\n};\nmodule$exports$omid$sessionClient$AdEvents.prototype.impressionOccurred = function() {\n  this.adSession.assertSessionRunning();\n  this.adSession.impressionOccurred();\n  this.adSession.sendOneWayMessage(\"impressionOccurred\");\n};\nmodule$exports$omid$sessionClient$AdEvents.prototype.loaded = function(a) {\n  a = void 0 === a ? null : a;\n  this.adSession.creativeLoaded();\n  a ? this.adSession.sendOneWayMessage(\"loaded\", a.toJSON()) : this.adSession.sendOneWayMessage(\"loaded\");\n};\n(0,module$exports$omid$common$exporter.packageExport)(\"OmidSessionClient.AdEvents\", module$exports$omid$sessionClient$AdEvents);\nvar module$exports$omid$sessionClient$MediaEvents = function(a) {\n  module$exports$omid$common$argsChecker.assertNotNullObject(\"MediaEvents.adSession\", a);\n  try {\n    a.registerMediaEvents(), this.adSession = a;\n  } catch (b) {\n    throw Error(\"AdSession already has a media events instance registered\");\n  }\n};\nmodule$exports$omid$sessionClient$MediaEvents.prototype.start = function(a, b) {\n  module$exports$omid$common$argsChecker.assertNumber(\"MediaEvents.start.duration\", a);\n  module$exports$omid$common$argsChecker.assertNumberBetween(\"MediaEvents.start.mediaPlayerVolume\", b, 0, 1);\n  this.adSession.sendOneWayMessage(\"start\", a, b);\n};\nmodule$exports$omid$sessionClient$MediaEvents.prototype.firstQuartile = function() {\n  this.adSession.sendOneWayMessage(\"firstQuartile\");\n};\nmodule$exports$omid$sessionClient$MediaEvents.prototype.midpoint = function() {\n  this.adSession.sendOneWayMessage(\"midpoint\");\n};\nmodule$exports$omid$sessionClient$MediaEvents.prototype.thirdQuartile = function() {\n  this.adSession.sendOneWayMessage(\"thirdQuartile\");\n};\nmodule$exports$omid$sessionClient$MediaEvents.prototype.complete = function() {\n  this.adSession.sendOneWayMessage(\"complete\");\n};\nmodule$exports$omid$sessionClient$MediaEvents.prototype.pause = function() {\n  this.adSession.sendOneWayMessage(\"pause\");\n};\nmodule$exports$omid$sessionClient$MediaEvents.prototype.resume = function() {\n  this.adSession.sendOneWayMessage(\"resume\");\n};\nmodule$exports$omid$sessionClient$MediaEvents.prototype.bufferStart = function() {\n  this.adSession.sendOneWayMessage(\"bufferStart\");\n};\nmodule$exports$omid$sessionClient$MediaEvents.prototype.bufferFinish = function() {\n  this.adSession.sendOneWayMessage(\"bufferFinish\");\n};\nmodule$exports$omid$sessionClient$MediaEvents.prototype.skipped = function() {\n  this.adSession.sendOneWayMessage(\"skipped\");\n};\nmodule$exports$omid$sessionClient$MediaEvents.prototype.volumeChange = function(a) {\n  module$exports$omid$common$argsChecker.assertNumberBetween(\"MediaEvents.volumeChange.mediaPlayerVolume\", a, 0, 1);\n  this.adSession.sendOneWayMessage(\"volumeChange\", a);\n};\nmodule$exports$omid$sessionClient$MediaEvents.prototype.playerStateChange = function(a) {\n  module$exports$omid$common$argsChecker.assertNotNullObject(\"MediaEvents.playerStateChange.playerState\", a);\n  this.adSession.sendOneWayMessage(\"playerStateChange\", a);\n};\nmodule$exports$omid$sessionClient$MediaEvents.prototype.adUserInteraction = function(a) {\n  module$exports$omid$common$argsChecker.assertNotNullObject(\"MediaEvents.adUserInteraction.interactionType\", a);\n  this.adSession.sendOneWayMessage(\"adUserInteraction\", a);\n};\n(0,module$exports$omid$common$exporter.packageExport)(\"OmidSessionClient.MediaEvents\", module$exports$omid$sessionClient$MediaEvents);\nvar module$exports$omid$sessionClient$OmidVersion = function(a, b) {\n  module$exports$omid$common$argsChecker.assertTruthyString(\"OmidVersion.semanticVersion\", a);\n  module$exports$omid$common$argsChecker.assertTruthyString(\"OmidVersion.apiLevel\", b);\n};\n(0,module$exports$omid$common$exporter.packageExport)(\"OmidSessionClient.OmidVersion\", module$exports$omid$sessionClient$OmidVersion);\nvar module$exports$omid$sessionClient$VastPropertiesExports = {};\n(0,module$exports$omid$common$exporter.packageExport)(\"OmidSessionClient.VastProperties\", module$exports$omid$common$VastProperties);\nvar module$exports$omid$common$FloatComparer = {}, module$contents$omid$common$FloatComparer_FLOAT_ROUGH_DIFF_TOLERANCE = 0.01;\nfunction module$contents$omid$common$FloatComparer_roughlyEqual(a, b) {\n  return Math.abs(a - b) < module$contents$omid$common$FloatComparer_FLOAT_ROUGH_DIFF_TOLERANCE;\n}\nmodule$exports$omid$common$FloatComparer.roughlyLessThan = function(a, b) {\n  return b - a > module$contents$omid$common$FloatComparer_FLOAT_ROUGH_DIFF_TOLERANCE;\n};\nmodule$exports$omid$common$FloatComparer.lessThanOrRoughlyEqual = function(a, b) {\n  return a < b || module$contents$omid$common$FloatComparer_roughlyEqual(a, b);\n};\nmodule$exports$omid$common$FloatComparer.greaterThanOrRoughlyEqual = function(a, b) {\n  return a > b || module$contents$omid$common$FloatComparer_roughlyEqual(a, b);\n};\n\n}, typeof exports === 'undefined' ? undefined : exports));\n\n", new File(file, OM_SESSION_JS)));
return arrayList;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\vungle\warren\omsdk\WebViewObserver.java

package com.vungle.warren.omsdk;

import android.webkit.WebView;
import androidx.annotation.NonNull;

public interface WebViewObserver {
void onPageFinished(@NonNull WebView webView);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\vungle\warren\utility\ActivityManager$LeftApplicationCallback.java

package com.vungle.warren.utility;

public interface ActivityManager$LeftApplicationCallback {
void onLeftApplication();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\vungle\warren\utility\ThreadUtil.java

package com.vungle.warren.utility;

import android.os.Handler;
import android.os.Looper;
import androidx.annotation.NonNull;

public class ThreadUtil {
private static final Handler UI_HANDLER = new Handler(Looper.getMainLooper());

public static boolean isMainThread() {
Looper mainLooper = Looper.getMainLooper();
if (mainLooper == null) {
return false;
}
return mainLooper.isCurrentThread();
}

public static void runOnUiThread(@NonNull Runnable runnable) {
if (isMainThread()) {
runnable.run();
} else {
UI_HANDLER.post(runnable);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\youth\banner\Banner$1.java

package com.youth.banner;

import androidx.recyclerview.widget.RecyclerView;

public class Banner$1 extends RecyclerView.AdapterDataObserver {
public final /* synthetic */ Banner this$0;

public Banner$1(Banner banner) {
this.this$0 = banner;
}

public void onChanged() {
if (this.this$0.getItemCount() <= 1) {
this.this$0.stop();
} else {
this.this$0.start();
}
this.this$0.setIndicatorPageChange();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\com\youth\banner\R$dimen.java

package com.youth.banner;

public final class R$dimen {
public static final int compat_button_inset_horizontal_material = 2131165316;
public static final int compat_button_inset_vertical_material = 2131165317;
public static final int compat_button_padding_horizontal_material = 2131165318;
public static final int compat_button_padding_vertical_material = 2131165319;
public static final int compat_control_corner_material = 2131165320;
public static final int compat_notification_large_icon_max_height = 2131165321;
public static final int compat_notification_large_icon_max_width = 2131165322;
public static final int fastscroll_default_thickness = 2131165778;
public static final int fastscroll_margin = 2131165779;
public static final int fastscroll_minimum_range = 2131165780;
public static final int item_touch_helper_max_drag_scroll_per_frame = 2131165810;
public static final int item_touch_helper_swipe_escape_max_velocity = 2131165811;
public static final int item_touch_helper_swipe_escape_velocity = 2131165812;
public static final int notification_action_icon_size = 2131166209;
public static final int notification_action_text_size = 2131166210;
public static final int notification_big_circle_margin = 2131166211;
public static final int notification_content_margin_start = 2131166212;
public static final int notification_large_icon_height = 2131166213;
public static final int notification_large_icon_width = 2131166214;
public static final int notification_main_column_padding_top = 2131166215;
public static final int notification_media_narrow_margin = 2131166216;
public static final int notification_right_icon_size = 2131166217;
public static final int notification_right_side_padding_top = 2131166218;
public static final int notification_small_icon_background_padding = 2131166219;
public static final int notification_small_icon_size_as_large = 2131166220;
public static final int notification_subtext_size = 2131166221;
public static final int notification_top_pad = 2131166222;
public static final int notification_top_pad_large_text = 2131166223;

private R$dimen() {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\i2\a.java

package i2;

import android.view.View;

public interface a {
void cancel();

void setDuration(int i);

void setGravity(int i, int i3, int i4);

void setMargin(float f, float f2);

void setText(CharSequence charSequence);

void setView(View view);

void show();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\i2\b.java

package i2;

public interface b {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\i2\c.java

package i2;

import android.content.Context;
import android.view.View;

public interface c<V extends View> {
int a();

int b();

int c();

float d();

float e();

V f(Context context);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\io\reactivex\internal\observers\LambdaObserver.java

package io.reactivex.internal.observers;

import io.reactivex.disposables.b;
import io.reactivex.exceptions.CompositeException;
import io.reactivex.internal.disposables.DisposableHelper;
import io.reactivex.internal.functions.Functions;
import j3.t;
import java.util.concurrent.atomic.AtomicReference;
import m3.a;
import m3.g;

public final class LambdaObserver<T> extends AtomicReference<b> implements t<T>, b {
private static final long serialVersionUID = -7251123623727029452L;
public final a onComplete;
public final g<? super Throwable> onError;
public final g<? super T> onNext;
public final g<? super b> onSubscribe;

public LambdaObserver(g<? super T> gVar, g<? super Throwable> gVar2, a aVar, g<? super b> gVar3) {
this.onNext = gVar;
this.onError = gVar2;
this.onComplete = aVar;
this.onSubscribe = gVar3;
}

public void dispose() {
DisposableHelper.dispose(this);
}

public boolean hasCustomOnError() {
return this.onError != Functions.e;
}

public boolean isDisposed() {
return get() == DisposableHelper.DISPOSED;
}

public void onComplete() {
if (!isDisposed()) {
lazySet(DisposableHelper.DISPOSED);
try {
this.onComplete.run();
} catch (Throwable th) {
z.a.o(th);
s3.a.b(th);
}
}
}

public void onError(Throwable th) {
if (!isDisposed()) {
lazySet(DisposableHelper.DISPOSED);
try {
this.onError.accept(th);
} catch (Throwable th2) {
z.a.o(th2);
s3.a.b(new CompositeException(new Throwable[]{th, th2}));
}
} else {
s3.a.b(th);
}
}

public void onNext(T t) {
if (!isDisposed()) {
try {
this.onNext.accept(t);
} catch (Throwable th) {
z.a.o(th);
((b) get()).dispose();
onError(th);
}
}
}

public void onSubscribe(b bVar) {
if (DisposableHelper.setOnce(this, bVar)) {
try {
this.onSubscribe.accept(this);
} catch (Throwable th) {
z.a.o(th);
bVar.dispose();
onError(th);
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\io\reactivex\internal\operators\completable\CompletableMerge$CompletableMergeSubscriber.java

package io.reactivex.internal.operators.completable;

import io.reactivex.disposables.a;
import io.reactivex.disposables.b;
import io.reactivex.internal.subscriptions.SubscriptionHelper;
import io.reactivex.internal.util.AtomicThrowable;
import j3.c;
import j3.h;
import java.util.concurrent.atomic.AtomicInteger;
import org.reactivestreams.Subscription;

final class CompletableMerge$CompletableMergeSubscriber extends AtomicInteger implements h<c>, b {
private static final long serialVersionUID = -2108443387387077490L;
public final boolean delayErrors;
public final j3.b downstream;
public final AtomicThrowable error = new AtomicThrowable();
public final int maxConcurrency;
public final a set = new a();
public Subscription upstream;

public CompletableMerge$CompletableMergeSubscriber(j3.b bVar, int i, boolean z) {
this.downstream = bVar;
this.maxConcurrency = i;
this.delayErrors = z;
lazySet(1);
}

public void dispose() {
this.upstream.cancel();
this.set.dispose();
}

public void innerComplete(MergeInnerObserver mergeInnerObserver) {
this.set.b(mergeInnerObserver);
if (decrementAndGet() == 0) {
Throwable th = (Throwable) this.error.get();
if (th != null) {
this.downstream.onError(th);
} else {
this.downstream.onComplete();
}
} else if (this.maxConcurrency != Integer.MAX_VALUE) {
this.upstream.request(1);
}
}

public void innerError(MergeInnerObserver mergeInnerObserver, Throwable th) {
this.set.b(mergeInnerObserver);
if (!this.delayErrors) {
this.upstream.cancel();
this.set.dispose();
if (!this.error.addThrowable(th)) {
s3.a.b(th);
} else if (getAndSet(0) > 0) {
this.downstream.onError(this.error.terminate());
}
} else if (!this.error.addThrowable(th)) {
s3.a.b(th);
} else if (decrementAndGet() == 0) {
this.downstream.onError(this.error.terminate());
} else if (this.maxConcurrency != Integer.MAX_VALUE) {
this.upstream.request(1);
}
}

public boolean isDisposed() {
return this.set.d;
}

public void onComplete() {
if (decrementAndGet() != 0) {
return;
}
if (((Throwable) this.error.get()) != null) {
this.downstream.onError(this.error.terminate());
} else {
this.downstream.onComplete();
}
}

public void onError(Throwable th) {
if (!this.delayErrors) {
this.set.dispose();
if (!this.error.addThrowable(th)) {
s3.a.b(th);
} else if (getAndSet(0) > 0) {
this.downstream.onError(this.error.terminate());
}
} else if (!this.error.addThrowable(th)) {
s3.a.b(th);
} else if (decrementAndGet() == 0) {
this.downstream.onError(this.error.terminate());
}
}

public void onNext(c cVar) {
getAndIncrement();
MergeInnerObserver mergeInnerObserver = new MergeInnerObserver(this);
this.set.c(mergeInnerObserver);
cVar.a(mergeInnerObserver);
}

public void onSubscribe(Subscription subscription) {
if (SubscriptionHelper.validate(this.upstream, subscription)) {
this.upstream = subscription;
this.downstream.onSubscribe(this);
int i = this.maxConcurrency;
if (i == Integer.MAX_VALUE) {
subscription.request(Long.MAX_VALUE);
} else {
subscription.request((long) i);
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\io\reactivex\internal\operators\flowable\FlowableCreate$SerializedEmitter.java

package io.reactivex.internal.operators.flowable;

import io.reactivex.disposables.b;
import io.reactivex.internal.operators.flowable.FlowableCreate;
import io.reactivex.internal.queue.a;
import io.reactivex.internal.util.AtomicThrowable;
import j3.f;
import java.util.concurrent.atomic.AtomicInteger;
import o3.g;

public final class FlowableCreate$SerializedEmitter<T> extends AtomicInteger implements f<T> {
private static final long serialVersionUID = 4883307006032401862L;
public volatile boolean done;
public final FlowableCreate.BaseEmitter<T> emitter;
public final AtomicThrowable error = new AtomicThrowable();
public final g<T> queue = new a(16);

public FlowableCreate$SerializedEmitter(FlowableCreate.BaseEmitter<T> baseEmitter) {
this.emitter = baseEmitter;
}

public void drain() {
if (getAndIncrement() == 0) {
drainLoop();
}
}

public void drainLoop() {
FlowableCreate.BaseEmitter<T> baseEmitter = this.emitter;
g<T> gVar = this.queue;
AtomicThrowable atomicThrowable = this.error;
int i = 1;
while (!baseEmitter.isCancelled()) {
if (atomicThrowable.get() != null) {
gVar.clear();
baseEmitter.onError(atomicThrowable.terminate());
return;
}
boolean z = this.done;
Object poll = gVar.poll();
boolean z2 = poll == null;
if (z && z2) {
baseEmitter.onComplete();
return;
} else if (z2) {
i = addAndGet(-i);
if (i == 0) {
return;
}
} else {
baseEmitter.onNext(poll);
}
}
gVar.clear();
}

public boolean isCancelled() {
return this.emitter.isCancelled();
}

public void onComplete() {
if (!this.emitter.isCancelled() && !this.done) {
this.done = true;
drain();
}
}

public void onError(Throwable th) {
if (!tryOnError(th)) {
s3.a.b(th);
}
}

public void onNext(T t) {
if (!this.emitter.isCancelled() && !this.done) {
if (t == null) {
onError(new NullPointerException("onNext called with null. Null values are generally not allowed in 2.x operators and sources."));
return;
}
if (get() != 0 || !compareAndSet(0, 1)) {
g<T> gVar = this.queue;
synchronized (gVar) {
gVar.offer(t);
}
if (getAndIncrement() != 0) {
return;
}
} else {
this.emitter.onNext(t);
if (decrementAndGet() == 0) {
return;
}
}
drainLoop();
}
}

public long requested() {
return this.emitter.requested();
}

public f<T> serialize() {
return this;
}

public void setCancellable(m3.f fVar) {
this.emitter.setCancellable(fVar);
}

public void setDisposable(b bVar) {
this.emitter.setDisposable(bVar);
}

public String toString() {
return this.emitter.toString();
}

public boolean tryOnError(Throwable th) {
if (!this.emitter.isCancelled() && !this.done) {
if (th == null) {
th = new NullPointerException("onError called with null. Null values are generally not allowed in 2.x operators and sources.");
}
if (this.error.addThrowable(th)) {
this.done = true;
drain();
return true;
}
}
return false;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\io\reactivex\internal\operators\flowable\FlowableObserveOn$ObserveOnConditionalSubscriber.java

package io.reactivex.internal.operators.flowable;

import io.reactivex.internal.operators.flowable.FlowableObserveOn;
import io.reactivex.internal.queue.SpscArrayQueue;
import io.reactivex.internal.subscriptions.SubscriptionHelper;
import j3.u;
import o3.a;
import o3.e;
import o3.h;
import org.reactivestreams.Subscription;

public final class FlowableObserveOn$ObserveOnConditionalSubscriber<T> extends FlowableObserveOn.BaseObserveOnSubscriber<T> {
private static final long serialVersionUID = 644624475404284533L;
public long consumed;
public final a<? super T> downstream;

public FlowableObserveOn$ObserveOnConditionalSubscriber(a<? super T> aVar, u.c cVar, boolean z, int i) {
super(cVar, z, i);
this.downstream = aVar;
}

public void onSubscribe(Subscription subscription) {
if (SubscriptionHelper.validate(this.upstream, subscription)) {
this.upstream = subscription;
if (subscription instanceof e) {
e eVar = (e) subscription;
int requestFusion = eVar.requestFusion(7);
if (requestFusion == 1) {
this.sourceMode = 1;
this.queue = eVar;
this.done = true;
this.downstream.onSubscribe(this);
return;
} else if (requestFusion == 2) {
this.sourceMode = 2;
this.queue = eVar;
this.downstream.onSubscribe(this);
subscription.request((long) this.prefetch);
return;
}
}
this.queue = new SpscArrayQueue(this.prefetch);
this.downstream.onSubscribe(this);
subscription.request((long) this.prefetch);
}
}

public T poll() throws Exception {
T poll = this.queue.poll();
if (!(poll == null || this.sourceMode == 1)) {
long j2 = this.consumed + 1;
if (j2 == ((long) this.limit)) {
this.consumed = 0;
this.upstream.request(j2);
} else {
this.consumed = j2;
}
}
return poll;
}

/* JADX WARNING: type inference failed for: r14v0, types: [io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber, java.util.concurrent.atomic.AtomicInteger, io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber] */
public void runAsync() {
int i;
a<? super T> aVar = this.downstream;
h hVar = this.queue;
long j2 = this.produced;
long j3 = this.consumed;
int i3 = 1;
while (true) {
long j5 = this.requested.get();
while (true) {
i = (j2 > j5 ? 1 : (j2 == j5 ? 0 : -1));
if (i == 0) {
break;
}
boolean z = this.done;
try {
Object poll = hVar.poll();
boolean z2 = poll == null;
if (!checkTerminated(z, z2, aVar)) {
if (z2) {
break;
}
if (aVar.tryOnNext(poll)) {
j2++;
}
j3++;
if (j3 == ((long) this.limit)) {
this.upstream.request(j3);
j3 = 0;
}
} else {
return;
}
} catch (Throwable th) {
z.a.o(th);
this.cancelled = true;
this.upstream.cancel();
hVar.clear();
aVar.onError(th);
this.worker.dispose();
return;
}
}
if (i != 0 || !checkTerminated(this.done, hVar.isEmpty(), aVar)) {
int i4 = get();
if (i3 == i4) {
this.produced = j2;
this.consumed = j3;
i3 = addAndGet(-i3);
if (i3 == 0) {
return;
}
} else {
i3 = i4;
}
} else {
return;
}
}
}

/* JADX WARNING: type inference failed for: r5v0, types: [io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber, java.util.concurrent.atomic.AtomicInteger, io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber] */
public void runBackfused() {
int i = 1;
while (!this.cancelled) {
boolean z = this.done;
this.downstream.onNext((Object) null);
if (z) {
this.cancelled = true;
Throwable th = this.error;
if (th != null) {
this.downstream.onError(th);
} else {
this.downstream.onComplete();
}
this.worker.dispose();
return;
}
i = addAndGet(-i);
if (i == 0) {
return;
}
}
}

/* JADX WARNING: type inference failed for: r10v0, types: [io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber, java.util.concurrent.atomic.AtomicInteger, io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber] */
public void runSync() {
a<? super T> aVar = this.downstream;
h hVar = this.queue;
long j2 = this.produced;
int i = 1;
while (true) {
long j3 = this.requested.get();
while (j2 != j3) {
try {
Object poll = hVar.poll();
if (!this.cancelled) {
if (poll == null) {
this.cancelled = true;
aVar.onComplete();
this.worker.dispose();
return;
} else if (aVar.tryOnNext(poll)) {
j2++;
}
} else {
return;
}
} catch (Throwable th) {
z.a.o(th);
this.cancelled = true;
this.upstream.cancel();
aVar.onError(th);
this.worker.dispose();
return;
}
}
if (!this.cancelled) {
if (hVar.isEmpty()) {
this.cancelled = true;
aVar.onComplete();
this.worker.dispose();
return;
}
int i3 = get();
if (i == i3) {
this.produced = j2;
i = addAndGet(-i);
if (i == 0) {
return;
}
} else {
i = i3;
}
} else {
return;
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\io\reactivex\internal\operators\flowable\FlowableRepeatUntil$RepeatSubscriber.java

package io.reactivex.internal.operators.flowable;

import io.reactivex.internal.subscriptions.SubscriptionArbiter;
import j3.h;
import java.util.concurrent.atomic.AtomicInteger;
import m3.e;
import org.reactivestreams.Publisher;
import org.reactivestreams.Subscriber;
import org.reactivestreams.Subscription;
import z.a;

final class FlowableRepeatUntil$RepeatSubscriber<T> extends AtomicInteger implements h<T> {
private static final long serialVersionUID = -7098360935104053232L;
public final Subscriber<? super T> downstream;
public long produced;
public final SubscriptionArbiter sa;
public final Publisher<? extends T> source;
public final e stop;

public FlowableRepeatUntil$RepeatSubscriber(Subscriber<? super T> subscriber, e eVar, SubscriptionArbiter subscriptionArbiter, Publisher<? extends T> publisher) {
this.downstream = subscriber;
this.sa = subscriptionArbiter;
this.source = publisher;
this.stop = eVar;
}

public void onComplete() {
try {
if (this.stop.getAsBoolean()) {
this.downstream.onComplete();
} else {
subscribeNext();
}
} catch (Throwable th) {
a.o(th);
this.downstream.onError(th);
}
}

public void onError(Throwable th) {
this.downstream.onError(th);
}

public void onNext(T t) {
this.produced++;
this.downstream.onNext(t);
}

public void onSubscribe(Subscription subscription) {
this.sa.setSubscription(subscription);
}

public void subscribeNext() {
if (getAndIncrement() == 0) {
int i = 1;
while (!this.sa.isCancelled()) {
long j2 = this.produced;
if (j2 != 0) {
this.produced = 0;
this.sa.produced(j2);
}
this.source.subscribe(this);
i = addAndGet(-i);
if (i == 0) {
return;
}
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\io\reactivex\internal\operators\maybe\MaybeDoFinally$DoFinallyObserver.java

package io.reactivex.internal.operators.maybe;

import io.reactivex.disposables.b;
import io.reactivex.internal.disposables.DisposableHelper;
import j3.j;
import java.util.concurrent.atomic.AtomicInteger;
import m3.a;

final class MaybeDoFinally$DoFinallyObserver<T> extends AtomicInteger implements j<T>, b {
private static final long serialVersionUID = 4109457741734051389L;
public final j<? super T> downstream;
public final a onFinally;
public b upstream;

public MaybeDoFinally$DoFinallyObserver(j<? super T> jVar, a aVar) {
this.downstream = jVar;
this.onFinally = aVar;
}

public void dispose() {
this.upstream.dispose();
runFinally();
}

public boolean isDisposed() {
return this.upstream.isDisposed();
}

public void onComplete() {
this.downstream.onComplete();
runFinally();
}

public void onError(Throwable th) {
this.downstream.onError(th);
runFinally();
}

public void onSubscribe(b bVar) {
if (DisposableHelper.validate(this.upstream, bVar)) {
this.upstream = bVar;
this.downstream.onSubscribe(this);
}
}

public void onSuccess(T t) {
this.downstream.onSuccess(t);
runFinally();
}

public void runFinally() {
if (compareAndSet(0, 1)) {
try {
this.onFinally.run();
} catch (Throwable th) {
z.a.o(th);
s3.a.b(th);
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\io\reactivex\internal\operators\observable\c1.java

package io.reactivex.internal.operators.observable;

import j3.d;
import m3.c;
import m3.g;

public final class c1<T, S> implements c<S, d<T>, S> {
public final g<d<T>> c;

public c1(g<d<T>> gVar) {
this.c = gVar;
}

public final Object apply(Object obj, Object obj2) throws Exception {
this.c.accept((d) obj2);
return obj;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\io\reactivex\internal\operators\observable\c2.java

package io.reactivex.internal.operators.observable;

import j3.r;
import j3.t;

public final class c2<T> extends a {
public final long d;

public c2(r<T> rVar, long j2) {
super(rVar);
this.d = j2;
}

public final void subscribeActual(t<? super T> tVar) {
((r) this.c).subscribe(new a(tVar, this.d));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\io\reactivex\internal\operators\observable\ObservableConcatWithSingle$ConcatWithObserver.java

package io.reactivex.internal.operators.observable;

import io.reactivex.disposables.b;
import io.reactivex.internal.disposables.DisposableHelper;
import j3.t;
import j3.x;
import j3.z;
import java.util.concurrent.atomic.AtomicReference;

public final class ObservableConcatWithSingle$ConcatWithObserver<T> extends AtomicReference<b> implements t<T>, x<T>, b {
private static final long serialVersionUID = -1953724749712440952L;
public final t<? super T> downstream;
public boolean inSingle;
public z<? extends T> other;

public ObservableConcatWithSingle$ConcatWithObserver(t<? super T> tVar, z<? extends T> zVar) {
this.downstream = tVar;
this.other = zVar;
}

public void dispose() {
DisposableHelper.dispose(this);
}

public boolean isDisposed() {
return DisposableHelper.isDisposed((b) get());
}

public void onComplete() {
this.inSingle = true;
DisposableHelper.replace(this, (b) null);
z<? extends T> zVar = this.other;
this.other = null;
zVar.a(this);
}

public void onError(Throwable th) {
this.downstream.onError(th);
}

public void onNext(T t) {
this.downstream.onNext(t);
}

public void onSubscribe(b bVar) {
if (DisposableHelper.setOnce(this, bVar) && !this.inSingle) {
this.downstream.onSubscribe(this);
}
}

public void onSuccess(T t) {
this.downstream.onNext(t);
this.downstream.onComplete();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\io\reactivex\internal\operators\observable\ObservableSampleWithObservable$SampleMainEmitLast.java

package io.reactivex.internal.operators.observable;

import io.reactivex.internal.operators.observable.ObservableSampleWithObservable;
import j3.r;
import j3.t;
import java.util.concurrent.atomic.AtomicInteger;

public final class ObservableSampleWithObservable$SampleMainEmitLast<T> extends ObservableSampleWithObservable.SampleMainObserver<T> {
private static final long serialVersionUID = -3029755663834015785L;
public volatile boolean done;
public final AtomicInteger wip = new AtomicInteger();

public ObservableSampleWithObservable$SampleMainEmitLast(t<? super T> tVar, r<?> rVar) {
super(tVar, rVar);
}

public void completion() {
this.done = true;
if (this.wip.getAndIncrement() == 0) {
emit();
this.downstream.onComplete();
}
}

public void run() {
if (this.wip.getAndIncrement() == 0) {
do {
boolean z = this.done;
emit();
if (z) {
this.downstream.onComplete();
return;
}
} while (this.wip.decrementAndGet() != 0);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\io\reactivex\internal\operators\observable\ObservableSkipLastTimed.java

package io.reactivex.internal.operators.observable;

import j3.r;
import j3.t;
import j3.u;
import java.util.concurrent.TimeUnit;

public final class ObservableSkipLastTimed<T> extends a {
public final long d;
public final TimeUnit e;
public final u f;
public final int g;
public final boolean h;

public ObservableSkipLastTimed(r<T> rVar, long j2, TimeUnit timeUnit, u uVar, int i, boolean z) {
super(rVar);
this.d = j2;
this.e = timeUnit;
this.f = uVar;
this.g = i;
this.h = z;
}

public final void subscribeActual(t<? super T> tVar) {
((r) this.c).subscribe(new SkipLastTimedObserver(tVar, this.d, this.e, this.f, this.g, this.h));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\io\reactivex\internal\operators\observable\ObservableTakeLastTimed$TakeLastTimedObserver.java

package io.reactivex.internal.operators.observable;

import io.reactivex.disposables.b;
import io.reactivex.internal.disposables.DisposableHelper;
import io.reactivex.internal.queue.a;
import j3.t;
import j3.u;
import java.util.Objects;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicBoolean;

public final class ObservableTakeLastTimed$TakeLastTimedObserver<T> extends AtomicBoolean implements t<T>, b {
private static final long serialVersionUID = -5677354903406201275L;
public volatile boolean cancelled;
public final long count;
public final boolean delayError;
public final t<? super T> downstream;
public Throwable error;
public final a<Object> queue;
public final u scheduler;
public final long time;
public final TimeUnit unit;
public b upstream;

public ObservableTakeLastTimed$TakeLastTimedObserver(t<? super T> tVar, long j2, long j3, TimeUnit timeUnit, u uVar, int i, boolean z) {
this.downstream = tVar;
this.count = j2;
this.time = j3;
this.unit = timeUnit;
this.scheduler = uVar;
this.queue = new a<>(i);
this.delayError = z;
}

public void dispose() {
if (!this.cancelled) {
this.cancelled = true;
this.upstream.dispose();
if (compareAndSet(false, true)) {
this.queue.clear();
}
}
}

public void drain() {
Throwable th;
if (compareAndSet(false, true)) {
t<? super T> tVar = this.downstream;
a<Object> aVar = this.queue;
boolean z = this.delayError;
u uVar = this.scheduler;
TimeUnit timeUnit = this.unit;
Objects.requireNonNull(uVar);
long a = u.a(timeUnit) - this.time;
while (!this.cancelled) {
if (z || (th = this.error) == null) {
Object poll = aVar.poll();
if (poll == null) {
Throwable th2 = this.error;
if (th2 != null) {
tVar.onError(th2);
return;
} else {
tVar.onComplete();
return;
}
} else {
Object poll2 = aVar.poll();
if (((Long) poll).longValue() >= a) {
tVar.onNext(poll2);
}
}
} else {
aVar.clear();
tVar.onError(th);
return;
}
}
aVar.clear();
}
}

public boolean isDisposed() {
return this.cancelled;
}

public void onComplete() {
drain();
}

public void onError(Throwable th) {
this.error = th;
drain();
}

public void onNext(T t) {
a<Object> aVar = this.queue;
u uVar = this.scheduler;
TimeUnit timeUnit = this.unit;
Objects.requireNonNull(uVar);
long a = u.a(timeUnit);
long j2 = this.time;
long j3 = this.count;
boolean z = j3 == Long.MAX_VALUE;
aVar.c(Long.valueOf(a), t);
while (!aVar.isEmpty()) {
if (((Long) aVar.peek()).longValue() <= a - j2 || (!z && ((long) (aVar.d() >> 1)) > j3)) {
aVar.poll();
aVar.poll();
} else {
return;
}
}
}

public void onSubscribe(b bVar) {
if (DisposableHelper.validate(this.upstream, bVar)) {
this.upstream = bVar;
this.downstream.onSubscribe(this);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\io\reactivex\internal\subscriptions\BasicQueueSubscription.java

package io.reactivex.internal.subscriptions;

import java.util.concurrent.atomic.AtomicLong;
import o3.e;

public abstract class BasicQueueSubscription<T> extends AtomicLong implements e<T> {
private static final long serialVersionUID = -6671519529404341862L;

public abstract /* synthetic */ void clear();

public abstract /* synthetic */ boolean isEmpty();

public final boolean offer(T t) {
throw new UnsupportedOperationException("Should not be called!");
}

public final boolean offer(T t, T t2) {
throw new UnsupportedOperationException("Should not be called!");
}

public abstract /* synthetic */ T poll() throws Exception;

public abstract /* synthetic */ int requestFusion(int i);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\io\reactivex\subjects\ReplaySubject$Node.java

package io.reactivex.subjects;

import java.util.concurrent.atomic.AtomicReference;

public final class ReplaySubject$Node<T> extends AtomicReference<ReplaySubject$Node<T>> {
private static final long serialVersionUID = 6404226426336033100L;
public final T value;

public ReplaySubject$Node(T t) {
this.value = t;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\j\AyKa\PIKrbITY.java

package j.AyKa;

public class PIKrbITY {
public static String BZzmkjLiEc;
public static String BuctuAS;
public static String CqswN;
public static String DMqIW;
public static String EjVZL;
public static String FxpvIXJaPjLoZP;
public static String Gtom;
public static String Kjpkb;
public static String LyfixevU;
public static String MAzjCvV;
public static String NLhztveCqTqceLo;
public static String NdADpkYURdCKTu;
public static String NdlvQE;
public static String NvAcQl;
public static String NxihtiUtMut;
public static String ROxSoE;
public static String SUQ;
public static String TziyaHArcw;
public static String ULAWmDCJT;
public static String VLQchoUvPp;
public static String WEJl;
public static String XrqyCCWZs;
public static String YSrEWTRQWfvZvmN;
public static String aqRLrCtxY;
public static String bopaCHlzFMtRF;
public static String dLFDvj;
public static String dhmbMp;
public static String gWkYzLr;
public static String hpFrunvyMUVzp;
public static String hqSJXIhuxb;
public static String izKJnTMICTfgnS;
public static String jnfEgaDWiBU;
public static String kocUOlwlOhlobwG;
public static String ksxQICv;
public static String mkkhVOvLDLJcjE;
public static String oAqjA;
public static String rQhCQJG;
public static String sJZHk;
public static String xUiHV;
public static String zjODLTEuCvx;
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\j4\a.java

package j4;

import java.util.concurrent.Executor;
import kotlin.coroutines.EmptyCoroutineContext;
import kotlin.coroutines.e;
import kotlinx.coroutines.CoroutineDispatcher;
import kotlinx.coroutines.internal.f;
import kotlinx.coroutines.internal.x;
import kotlinx.coroutines.u0;
import org.jetbrains.annotations.NotNull;

public final class a extends u0 implements Executor {
@NotNull
public static final a c = new a();
@NotNull
public static final CoroutineDispatcher d;

static {
j jVar = j.c;
int i = x.a;
if (64 >= i) {
i = 64;
}
d = jVar.limitedParallelism(f.f("kotlinx.coroutines.io.parallelism", i, 0, 0, 12));
}

public final void close() {
throw new IllegalStateException("Cannot be invoked on Dispatchers.IO".toString());
}

public final void dispatch(@NotNull e eVar, @NotNull Runnable runnable) {
d.dispatch(eVar, runnable);
}

public final void dispatchYield(@NotNull e eVar, @NotNull Runnable runnable) {
d.dispatchYield(eVar, runnable);
}

public final void execute(@NotNull Runnable runnable) {
dispatch(EmptyCoroutineContext.INSTANCE, runnable);
}

@NotNull
public final CoroutineDispatcher limitedParallelism(int i) {
return j.c.limitedParallelism(i);
}

@NotNull
public final String toString() {
return "Dispatchers.IO";
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\j4\b.java

package j4;

import org.jetbrains.annotations.NotNull;

public final class b extends e {
@NotNull
public static final b d = new b();

public b() {
super(i.b, i.c, i.d);
}

public final void close() {
throw new UnsupportedOperationException("Dispatchers.Default cannot be closed");
}

@NotNull
public final String toString() {
return "Dispatchers.Default";
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\j4\c.java

package j4;

import kotlinx.coroutines.internal.m;

public final class c extends m<f> {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\j4\d.java

package j4;

import com.android.billingclient.api.b;
import org.jetbrains.annotations.NotNull;

public final class d extends b {
@NotNull
public static final d a = new d();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\j4\e.java

package j4;

import kotlinx.coroutines.scheduling.CoroutineScheduler;
import kotlinx.coroutines.u0;
import org.jetbrains.annotations.NotNull;

public class e extends u0 {
@NotNull
public CoroutineScheduler c;

public e(int i, int i3, long j2) {
this.c = new CoroutineScheduler(i, i3, j2, "DefaultDispatcher");
}

public final void dispatch(@NotNull kotlin.coroutines.e eVar, @NotNull Runnable runnable) {
CoroutineScheduler.d(this.c, runnable, false, 6);
}

public final void dispatchYield(@NotNull kotlin.coroutines.e eVar, @NotNull Runnable runnable) {
CoroutineScheduler.d(this.c, runnable, true, 2);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\j4\f.java

package j4;

import com.energysh.aichat.init.c;
import org.jetbrains.annotations.NotNull;

public abstract class f implements Runnable {
public long c;
@NotNull
public g d;

public f() {
c cVar = i.f;
this.c = 0;
this.d = cVar;
}

public f(long j2, @NotNull g gVar) {
this.c = j2;
this.d = gVar;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\j4\i.java

package j4;

import com.energysh.aichat.init.c;
import java.util.concurrent.TimeUnit;
import kotlinx.coroutines.internal.f;
import kotlinx.coroutines.internal.x;
import org.jetbrains.annotations.NotNull;

public final class i {
public static final long a = f.g("kotlinx.coroutines.scheduler.resolution.ns", 100000);
public static final int b;
public static final int c = f.f("kotlinx.coroutines.scheduler.max.pool.size", 2097150, 0, 2097150, 4);
public static final long d = TimeUnit.SECONDS.toNanos(f.g("kotlinx.coroutines.scheduler.keep.alive.sec", 60));
@NotNull
public static d e = d.a;
@NotNull
public static final c f = new c(0);
@NotNull
public static final c g = new c(1);

static {
int i = x.a;
if (i < 2) {
i = 2;
}
b = f.f("kotlinx.coroutines.scheduler.core.pool.size", i, 1, 0, 8);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\j4\j.java

package j4;

import kotlin.coroutines.e;
import kotlinx.coroutines.CoroutineDispatcher;
import org.jetbrains.annotations.NotNull;

public final class j extends CoroutineDispatcher {
@NotNull
public static final j c = new j();

public final void dispatch(@NotNull e eVar, @NotNull Runnable runnable) {
b bVar = b.d;
bVar.c.c(runnable, i.g, false);
}

public final void dispatchYield(@NotNull e eVar, @NotNull Runnable runnable) {
b bVar = b.d;
bVar.c.c(runnable, i.g, true);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\kotlin\coroutines\e$a$a.java

package kotlin.coroutines;

import kotlin.coroutines.CoroutineContext;
import kotlin.coroutines.e;
import kotlin.jvm.internal.o;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class e$a$a {
@Nullable
public static <E extends e.a> E a(@NotNull e.a aVar, @NotNull e.b<E> bVar) {
o.f(bVar, "key");
if (o.a(aVar.getKey(), bVar)) {
return aVar;
}
return null;
}

@NotNull
public static e b(@NotNull e.a aVar, @NotNull e.b<?> bVar) {
o.f(bVar, "key");
return o.a(aVar.getKey(), bVar) ? EmptyCoroutineContext.INSTANCE : aVar;
}

@NotNull
public static e c(@NotNull e.a aVar, @NotNull e eVar) {
o.f(eVar, "context");
return eVar == EmptyCoroutineContext.INSTANCE ? aVar : (e) eVar.fold(aVar, CoroutineContext.plus.1.INSTANCE);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\kotlin\jvm\KotlinReflectionNotSupportedError.java

package kotlin.jvm;

import org.jetbrains.annotations.Nullable;

public class KotlinReflectionNotSupportedError extends Error {
public KotlinReflectionNotSupportedError() {
super("Kotlin reflection implementation is not found at runtime. Make sure you have kotlin-reflect.jar in the classpath");
}

public KotlinReflectionNotSupportedError(@Nullable String str) {
super(str);
}

public KotlinReflectionNotSupportedError(@Nullable String str, @Nullable Throwable th) {
super(str, th);
}

public KotlinReflectionNotSupportedError(@Nullable Throwable th) {
super(th);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\kotlin\sequences\SequencesKt__SequencesKt$generateSequence$1.java

package kotlin.sequences;

import d4.a;
import d4.l;
import kotlin.jvm.internal.Lambda;
import kotlin.jvm.internal.o;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

final class SequencesKt__SequencesKt$generateSequence$1 extends Lambda implements l<Object, Object> {
public final /* synthetic */ a<Object> $nextFunction;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public SequencesKt__SequencesKt$generateSequence$1(a<Object> aVar) {
super(1);
this.$nextFunction = aVar;
}

@Nullable
public final Object invoke(@NotNull Object obj) {
o.f(obj, "it");
return this.$nextFunction.invoke();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\kotlin\sequences\SequencesKt__SequencesKt$generateSequence$2.java

package kotlin.sequences;

import d4.a;
import kotlin.jvm.internal.Lambda;
import org.jetbrains.annotations.Nullable;

public final class SequencesKt__SequencesKt$generateSequence$2 extends Lambda implements a<T> {
public final /* synthetic */ T $seed;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public SequencesKt__SequencesKt$generateSequence$2(T t) {
super(0);
this.$seed = t;
}

@Nullable
public final T invoke() {
return this.$seed;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\kotlin\sequences\SequencesKt___SequencesKt$minus$2$iterator$1.java

package kotlin.sequences;

import d4.l;
import java.util.Collection;
import kotlin.jvm.internal.Lambda;
import org.jetbrains.annotations.NotNull;

final class SequencesKt___SequencesKt$minus$2$iterator$1 extends Lambda implements l<Object, Boolean> {
public final /* synthetic */ Collection<Object> $other;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public SequencesKt___SequencesKt$minus$2$iterator$1(Collection<Object> collection) {
super(1);
this.$other = collection;
}

@NotNull
public final Boolean invoke(Object obj) {
return Boolean.valueOf(this.$other.contains(obj));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\kotlinx\coroutines\CoroutineContextKt$foldCopies$folded$1.java

package kotlinx.coroutines;

import d4.p;
import kotlin.coroutines.e;
import kotlin.jvm.internal.Lambda;
import kotlin.jvm.internal.Ref;
import org.jetbrains.annotations.NotNull;

public final class CoroutineContextKt$foldCopies$folded$1 extends Lambda implements p<e, e.a, e> {
public final /* synthetic */ boolean $isNewCoroutine;
public final /* synthetic */ Ref.ObjectRef<e> $leftoverContext;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public CoroutineContextKt$foldCopies$folded$1(Ref.ObjectRef<e> objectRef, boolean z) {
super(2);
this.$leftoverContext = objectRef;
this.$isNewCoroutine = z;
}

@NotNull
public final e invoke(@NotNull e eVar, @NotNull e.a aVar) {
if (!(aVar instanceof x)) {
return eVar.plus(aVar);
}
if (((e) this.$leftoverContext.element).get(aVar.getKey()) == null) {
x xVar = (x) aVar;
if (this.$isNewCoroutine) {
xVar = xVar.c();
}
return eVar.plus(xVar);
}
Ref.ObjectRef<e> objectRef = this.$leftoverContext;
objectRef.element = ((e) objectRef.element).minusKey(aVar.getKey());
return eVar.plus(((x) aVar).j());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\kotlinx\coroutines\flow\c1.java

package kotlinx.coroutines.flow;

public final class c1 implements c<Object> {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\kotlinx\coroutines\flow\FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1.java

package kotlinx.coroutines.flow;

import kotlin.coroutines.c;
import kotlin.coroutines.jvm.internal.ContinuationImpl;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import y3.d;

@d(c = "kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6", f = "Builders.kt", l = {115}, m = "collect")
public final class FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1 extends ContinuationImpl {
public int I$0;
public int I$1;
public Object L$0;
public Object L$1;
public int label;
public /* synthetic */ Object result;
public final /* synthetic */ j this$0;

public FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1(j jVar, c cVar) {
super(cVar);
}

@Nullable
public final Object invokeSuspend(@NotNull Object obj) {
this.result = obj;
this.label |= Integer.MIN_VALUE;
throw null;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\kotlinx\coroutines\flow\FlowKt__CollectKt$collectIndexed$2$emit$1.java

package kotlinx.coroutines.flow;

import kotlin.coroutines.c;
import kotlin.coroutines.jvm.internal.ContinuationImpl;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class FlowKt__CollectKt$collectIndexed$2$emit$1 extends ContinuationImpl {
public int label;
public /* synthetic */ Object result;
public final /* synthetic */ q this$0;

public FlowKt__CollectKt$collectIndexed$2$emit$1(q qVar, c<? super FlowKt__CollectKt$collectIndexed$2$emit$1> cVar) {
super(cVar);
}

@Nullable
public final Object invokeSuspend(@NotNull Object obj) {
this.result = obj;
this.label |= Integer.MIN_VALUE;
throw null;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\kotlinx\coroutines\flow\FlowKt__ZipKt$combineTransformUnsafe$1.java

package kotlinx.coroutines.flow;

import d4.p;
import d4.q;
import kotlin.coroutines.c;
import kotlin.coroutines.intrinsics.CoroutineSingletons;
import kotlin.coroutines.jvm.internal.SuspendLambda;
import kotlin.f;
import kotlin.jvm.internal.o;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import y3.d;

@d(c = "kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1", f = "Zip.kt", l = {273}, m = "invokeSuspend")
public final class FlowKt__ZipKt$combineTransformUnsafe$1 extends SuspendLambda implements p<d<Object>, c<? super kotlin.p>, Object> {
public final /* synthetic */ c<Object>[] $flows;
public final /* synthetic */ q<d<Object>, Object[], c<? super kotlin.p>, Object> $transform;
private /* synthetic */ Object L$0;
public int label;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public FlowKt__ZipKt$combineTransformUnsafe$1(c<Object>[] cVarArr, q<? super d<Object>, ? super Object[], ? super c<? super kotlin.p>, ? extends Object> qVar, c<? super FlowKt__ZipKt$combineTransformUnsafe$1> cVar) {
super(2, cVar);
this.$flows = cVarArr;
this.$transform = qVar;
}

@NotNull
public final c<kotlin.p> create(@Nullable Object obj, @NotNull c<?> cVar) {
FlowKt__ZipKt$combineTransformUnsafe$1 flowKt__ZipKt$combineTransformUnsafe$1 = new FlowKt__ZipKt$combineTransformUnsafe$1(this.$flows, this.$transform, cVar);
flowKt__ZipKt$combineTransformUnsafe$1.L$0 = obj;
return flowKt__ZipKt$combineTransformUnsafe$1;
}

@Nullable
public final Object invoke(@NotNull d<Object> dVar, @Nullable c<? super kotlin.p> cVar) {
return create(dVar, cVar).invokeSuspend(kotlin.p.a);
}

@Nullable
public final Object invokeSuspend(@NotNull Object obj) {
CoroutineSingletons coroutineSingletons = CoroutineSingletons.COROUTINE_SUSPENDED;
int i = this.label;
if (i == 0) {
f.b(obj);
d dVar = (d) this.L$0;
o.l();
throw null;
} else if (i == 1) {
f.b(obj);
return kotlin.p.a;
} else {
throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine");
}
}

@Nullable
public final Object invokeSuspend$$forInline(@NotNull Object obj) {
d dVar = (d) this.L$0;
o.l();
throw null;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\kotlinx\coroutines\flow\SubscribedSharedFlow$collect$1.java

package kotlinx.coroutines.flow;

import kotlin.coroutines.c;
import kotlin.coroutines.jvm.internal.ContinuationImpl;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import y3.d;

@d(c = "kotlinx.coroutines.flow.SubscribedSharedFlow", f = "Share.kt", l = {409}, m = "collect")
final class SubscribedSharedFlow$collect$1 extends ContinuationImpl {
public int label;
public /* synthetic */ Object result;
public final /* synthetic */ o1<Object> this$0;

public SubscribedSharedFlow$collect$1(o1<Object> o1Var, c<? super SubscribedSharedFlow$collect$1> cVar) {
super(cVar);
}

@Nullable
public final Object invokeSuspend(@NotNull Object obj) {
this.result = obj;
this.label |= Integer.MIN_VALUE;
throw null;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\ms\bd\o\Pgl\pbla.java

package ms.bd.o.Pgl;

import com.bytedance.retrofit2.client.Header;
import java.util.List;

public final class pbla extends pblo {
private String a(List<Header> list) {
if (list != null && list.size() > 0) {
for (Header next : list) {
if (next != null && ((String) pblk.a(16777217, 0, 0, "95a3b9", new byte[]{48, 122, 6, 83, 16, 34, 53, 19, 57, 103})).equalsIgnoreCase(next.getName())) {
return next.getValue();
}
}
}
return null;
}

/* JADX WARNING: Removed duplicated region for block: B:79:0x0411 A[Catch:{ all -> 0x0435 }] */
/* JADX WARNING: Removed duplicated region for block: B:80:0x041a A[Catch:{ all -> 0x0435 }] */
/* JADX WARNING: Removed duplicated region for block: B:84:0x0426 A[DONT_GENERATE] */
/* Code decompiled incorrectly, please refer to instructions dump. */
private java.lang.Object[] a(java.lang.String r36, byte[] r37, java.lang.String r38, java.lang.String r39, java.lang.String r40, boolean r41) {
/*
r35 = this;
r1 = r35
r0 = r36
r2 = r39
r3 = r40
ms.bd.o.Pgl.pblm$pgla r4 = new ms.bd.o.Pgl.pblm$pgla
r4.<init>()
r6 = 49
r9 = 5
r10 = 4
r11 = 1
r12 = 2
r13 = 6
r14 = 3
r15 = 0
r16 = -1
java.util.ArrayList r8 = new java.util.ArrayList     // Catch:{ all -> 0x03d4 }
r8.<init>()     // Catch:{ all -> 0x03d4 }
com.bytedance.retrofit2.client.Header r5 = new com.bytedance.retrofit2.client.Header     // Catch:{ all -> 0x03d4 }
r18 = 16777217(0x1000001, float:2.350989E-38)
r19 = 0
r20 = 0
java.lang.String r22 = "d29e0b"
byte[] r7 = new byte[r13]     // Catch:{ all -> 0x03d4 }
r23 = 86
r7[r15] = r23     // Catch:{ all -> 0x03d4 }
r23 = 63
r7[r11] = r23     // Catch:{ all -> 0x03d4 }
r23 = 69
r7[r12] = r23     // Catch:{ all -> 0x03d4 }
r23 = 26
r7[r14] = r23     // Catch:{ all -> 0x03d4 }
r7[r10] = r13     // Catch:{ all -> 0x03d4 }
r23 = 112(0x70, float:1.57E-43)
r7[r9] = r23     // Catch:{ all -> 0x03d4 }
r23 = r7
java.lang.Object r7 = ms.bd.o.Pgl.pblk.a(r18, r19, r20, r22, r23)     // Catch:{ all -> 0x03d4 }
java.lang.String r7 = (java.lang.String) r7     // Catch:{ all -> 0x03d4 }
java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ all -> 0x03d4 }
r13.<init>()     // Catch:{ all -> 0x03d4 }
r25 = 16777217(0x1000001, float:2.350989E-38)
r26 = 0
r27 = 0
java.lang.String r29 = "262d47"
r9 = 10
byte[] r10 = new byte[r9]     // Catch:{ all -> 0x03d4 }
r21 = 48
r10[r15] = r21     // Catch:{ all -> 0x03d4 }
r10[r11] = r6     // Catch:{ all -> 0x03d4 }
r21 = 82
r10[r12] = r21     // Catch:{ all -> 0x03d4 }
r10[r14] = r14     // Catch:{ all -> 0x03d4 }
r20 = 4
r10[r20] = r12     // Catch:{ all -> 0x03d4 }
r21 = 47
r19 = 5
r10[r19] = r21     // Catch:{ all -> 0x03d4 }
r21 = 63
r18 = 6
r10[r18] = r21     // Catch:{ all -> 0x03d4 }
r21 = 30
r22 = 7
r10[r22] = r21     // Catch:{ all -> 0x03d4 }
r21 = 103(0x67, float:1.44E-43)
r23 = 8
r10[r23] = r21     // Catch:{ all -> 0x03d4 }
r30 = 105(0x69, float:1.47E-43)
r31 = 9
r10[r31] = r30     // Catch:{ all -> 0x03d4 }
r30 = r10
java.lang.Object r10 = ms.bd.o.Pgl.pblk.a(r25, r26, r27, r29, r30)     // Catch:{ all -> 0x03d4 }
java.lang.String r10 = (java.lang.String) r10     // Catch:{ all -> 0x03d4 }
r13.append(r10)     // Catch:{ all -> 0x03d4 }
r10 = r38
r13.append(r10)     // Catch:{ all -> 0x03d4 }
java.lang.String r10 = r13.toString()     // Catch:{ all -> 0x03d4 }
r5.<init>(r7, r10)     // Catch:{ all -> 0x03d4 }
r8.add(r5)     // Catch:{ all -> 0x03d4 }
com.bytedance.retrofit2.client.Header r5 = new com.bytedance.retrofit2.client.Header     // Catch:{ all -> 0x03d4 }
r25 = 16777217(0x1000001, float:2.350989E-38)
r26 = 0
r27 = 0
java.lang.String r29 = "810288"
r7 = 6
byte[] r10 = new byte[r7]     // Catch:{ all -> 0x03d4 }
r10[r15] = r23     // Catch:{ all -> 0x03d4 }
r7 = 48
r10[r11] = r7     // Catch:{ all -> 0x03d4 }
r7 = 64
r10[r12] = r7     // Catch:{ all -> 0x03d4 }
r7 = 67
r10[r14] = r7     // Catch:{ all -> 0x03d4 }
r7 = 23
r13 = 4
r10[r13] = r7     // Catch:{ all -> 0x03d4 }
r7 = 59
r13 = 5
r10[r13] = r7     // Catch:{ all -> 0x03d4 }
r30 = r10
java.lang.Object r7 = ms.bd.o.Pgl.pblk.a(r25, r26, r27, r29, r30)     // Catch:{ all -> 0x03d4 }
java.lang.String r7 = (java.lang.String) r7     // Catch:{ all -> 0x03d4 }
r25 = 16777217(0x1000001, float:2.350989E-38)
r26 = 0
r27 = 0
java.lang.String r29 = "a1f748"
byte[] r10 = new byte[r14]     // Catch:{ all -> 0x03d4 }
r13 = 58
r10[r15] = r13     // Catch:{ all -> 0x03d4 }
r13 = 124(0x7c, float:1.74E-43)
r10[r11] = r13     // Catch:{ all -> 0x03d4 }
r13 = 95
r10[r12] = r13     // Catch:{ all -> 0x03d4 }
r30 = r10
java.lang.Object r10 = ms.bd.o.Pgl.pblk.a(r25, r26, r27, r29, r30)     // Catch:{ all -> 0x03d4 }
java.lang.String r10 = (java.lang.String) r10     // Catch:{ all -> 0x03d4 }
r5.<init>(r7, r10)     // Catch:{ all -> 0x03d4 }
r8.add(r5)     // Catch:{ all -> 0x03d4 }
com.bytedance.retrofit2.client.Header r5 = new com.bytedance.retrofit2.client.Header     // Catch:{ all -> 0x03d4 }
r25 = 16777217(0x1000001, float:2.350989E-38)
r26 = 0
r27 = 0
java.lang.String r29 = "5c829a"
byte[] r7 = new byte[r9]     // Catch:{ all -> 0x03d4 }
r10 = 17
r7[r15] = r10     // Catch:{ all -> 0x03d4 }
r13 = 114(0x72, float:1.6E-43)
r7[r11] = r13     // Catch:{ all -> 0x03d4 }
r13 = 78
r7[r12] = r13     // Catch:{ all -> 0x03d4 }
r13 = 84
r7[r14] = r13     // Catch:{ all -> 0x03d4 }
r13 = 75
r20 = 4
r7[r20] = r13     // Catch:{ all -> 0x03d4 }
r13 = 87
r19 = 5
r7[r19] = r13     // Catch:{ all -> 0x03d4 }
r13 = 6
r7[r13] = r6     // Catch:{ all -> 0x03d4 }
r13 = 71
r7[r22] = r13     // Catch:{ all -> 0x03d4 }
r7[r23] = r21     // Catch:{ all -> 0x03d4 }
r13 = 118(0x76, float:1.65E-43)
r7[r31] = r13     // Catch:{ all -> 0x03d4 }
r30 = r7
java.lang.Object r7 = ms.bd.o.Pgl.pblk.a(r25, r26, r27, r29, r30)     // Catch:{ all -> 0x03d4 }
java.lang.String r7 = (java.lang.String) r7     // Catch:{ all -> 0x03d4 }
r25 = 16777217(0x1000001, float:2.350989E-38)
r26 = 0
r27 = 0
java.lang.String r29 = "5923e1"
r13 = 15
byte[] r6 = new byte[r13]     // Catch:{ all -> 0x03d4 }
r13 = 6
r6[r15] = r13     // Catch:{ all -> 0x03d4 }
r13 = 34
r6[r11] = r13     // Catch:{ all -> 0x03d4 }
r13 = 85
r6[r12] = r13     // Catch:{ all -> 0x03d4 }
r13 = 66
r6[r14] = r13     // Catch:{ all -> 0x03d4 }
r13 = 126(0x7e, float:1.77E-43)
r20 = 4
r6[r20] = r13     // Catch:{ all -> 0x03d4 }
r13 = 39
r19 = 5
r6[r19] = r13     // Catch:{ all -> 0x03d4 }
r13 = 56
r18 = 6
r6[r18] = r13     // Catch:{ all -> 0x03d4 }
r13 = 27
r6[r22] = r13     // Catch:{ all -> 0x03d4 }
r13 = 102(0x66, float:1.43E-43)
r6[r23] = r13     // Catch:{ all -> 0x03d4 }
r13 = 46
r6[r31] = r13     // Catch:{ all -> 0x03d4 }
r6[r9] = r31     // Catch:{ all -> 0x03d4 }
r13 = 11
r6[r13] = r23     // Catch:{ all -> 0x03d4 }
r30 = 114(0x72, float:1.6E-43)
r10 = 12
r6[r10] = r30     // Catch:{ all -> 0x03d4 }
r30 = 99
r32 = 13
r6[r32] = r30     // Catch:{ all -> 0x03d4 }
r30 = 113(0x71, float:1.58E-43)
r33 = 14
r6[r33] = r30     // Catch:{ all -> 0x03d4 }
r30 = r6
java.lang.Object r6 = ms.bd.o.Pgl.pblk.a(r25, r26, r27, r29, r30)     // Catch:{ all -> 0x03d4 }
java.lang.String r6 = (java.lang.String) r6     // Catch:{ all -> 0x03d4 }
r5.<init>(r7, r6)     // Catch:{ all -> 0x03d4 }
r8.add(r5)     // Catch:{ all -> 0x03d4 }
com.bytedance.retrofit2.client.Header r5 = new com.bytedance.retrofit2.client.Header     // Catch:{ all -> 0x03d4 }
r25 = 16777217(0x1000001, float:2.350989E-38)
r26 = 0
r27 = 0
java.lang.String r29 = "6f4769"
byte[] r6 = new byte[r10]     // Catch:{ all -> 0x03d4 }
r7 = 4
r6[r15] = r7     // Catch:{ all -> 0x03d4 }
r20 = 107(0x6b, float:1.5E-43)
r6[r11] = r20     // Catch:{ all -> 0x03d4 }
r20 = 73
r6[r12] = r20     // Catch:{ all -> 0x03d4 }
r20 = 87
r6[r14] = r20     // Catch:{ all -> 0x03d4 }
r6[r7] = r10     // Catch:{ all -> 0x03d4 }
r7 = 32
r19 = 5
r6[r19] = r7     // Catch:{ all -> 0x03d4 }
r7 = 33
r18 = 6
r6[r18] = r7     // Catch:{ all -> 0x03d4 }
r6[r22] = r9     // Catch:{ all -> 0x03d4 }
r30 = 81
r6[r23] = r30     // Catch:{ all -> 0x03d4 }
r30 = 126(0x7e, float:1.77E-43)
r6[r31] = r30     // Catch:{ all -> 0x03d4 }
r30 = 55
r6[r9] = r30     // Catch:{ all -> 0x03d4 }
r30 = 97
r6[r13] = r30     // Catch:{ all -> 0x03d4 }
r30 = r6
java.lang.Object r6 = ms.bd.o.Pgl.pblk.a(r25, r26, r27, r29, r30)     // Catch:{ all -> 0x03d4 }
java.lang.String r6 = (java.lang.String) r6     // Catch:{ all -> 0x03d4 }
r25 = 16777217(0x1000001, float:2.350989E-38)
r26 = 0
r27 = 0
java.lang.String r29 = "015d33"
r7 = 24
byte[] r7 = new byte[r7]     // Catch:{ all -> 0x03d4 }
r30 = 32
r7[r15] = r30     // Catch:{ all -> 0x03d4 }
r30 = 35
r7[r11] = r30     // Catch:{ all -> 0x03d4 }
r30 = 86
r7[r12] = r30     // Catch:{ all -> 0x03d4 }
r30 = 28
r7[r14] = r30     // Catch:{ all -> 0x03d4 }
r19 = 5
r20 = 4
r7[r20] = r19     // Catch:{ all -> 0x03d4 }
r30 = 39
r7[r19] = r30     // Catch:{ all -> 0x03d4 }
r30 = 50
r18 = 6
r7[r18] = r30     // Catch:{ all -> 0x03d4 }
r7[r22] = r20     // Catch:{ all -> 0x03d4 }
r30 = 109(0x6d, float:1.53E-43)
r7[r23] = r30     // Catch:{ all -> 0x03d4 }
r30 = 59
r7[r31] = r30     // Catch:{ all -> 0x03d4 }
r30 = 47
r7[r9] = r30     // Catch:{ all -> 0x03d4 }
r30 = 124(0x7c, float:1.74E-43)
r7[r13] = r30     // Catch:{ all -> 0x03d4 }
r30 = 73
r7[r10] = r30     // Catch:{ all -> 0x03d4 }
r30 = 19
r7[r32] = r30     // Catch:{ all -> 0x03d4 }
r30 = 24
r7[r33] = r30     // Catch:{ all -> 0x03d4 }
r24 = 33
r30 = 15
r7[r30] = r24     // Catch:{ all -> 0x03d4 }
r30 = 16
r34 = 39
r7[r30] = r34     // Catch:{ all -> 0x03d4 }
r30 = 93
r34 = 17
r7[r34] = r30     // Catch:{ all -> 0x03d4 }
r30 = 18
r34 = 119(0x77, float:1.67E-43)
r7[r30] = r34     // Catch:{ all -> 0x03d4 }
r30 = 19
r34 = 32
r7[r30] = r34     // Catch:{ all -> 0x03d4 }
r30 = 20
r34 = 51
r7[r30] = r34     // Catch:{ all -> 0x03d4 }
r30 = 54
r17 = 21
r7[r17] = r30     // Catch:{ all -> 0x03d4 }
r30 = 22
r34 = 71
r7[r30] = r34     // Catch:{ all -> 0x03d4 }
r30 = 23
r34 = 29
r7[r30] = r34     // Catch:{ all -> 0x03d4 }
r30 = r7
java.lang.Object r7 = ms.bd.o.Pgl.pblk.a(r25, r26, r27, r29, r30)     // Catch:{ all -> 0x03d4 }
java.lang.String r7 = (java.lang.String) r7     // Catch:{ all -> 0x03d4 }
r5.<init>(r6, r7)     // Catch:{ all -> 0x03d4 }
r8.add(r5)     // Catch:{ all -> 0x03d4 }
if (r2 == 0) goto L_0x02cd
java.lang.String r5 = r39.trim()     // Catch:{ all -> 0x03d4 }
int r5 = r5.length()     // Catch:{ all -> 0x03d4 }
if (r5 <= 0) goto L_0x02cd
com.bytedance.retrofit2.client.Header r5 = new com.bytedance.retrofit2.client.Header     // Catch:{ all -> 0x03d4 }
r25 = 16777217(0x1000001, float:2.350989E-38)
r26 = 0
r27 = 0
java.lang.String r29 = "ed2c94"
r6 = 16
byte[] r6 = new byte[r6]     // Catch:{ all -> 0x03d4 }
r7 = 108(0x6c, float:1.51E-43)
r6[r15] = r7     // Catch:{ all -> 0x03d4 }
r7 = 43
r6[r11] = r7     // Catch:{ all -> 0x03d4 }
r7 = 85
r6[r12] = r7     // Catch:{ all -> 0x03d4 }
r6[r14] = r14     // Catch:{ all -> 0x03d4 }
r7 = 75
r20 = 4
r6[r20] = r7     // Catch:{ all -> 0x03d4 }
r7 = 49
r19 = 5
r6[r19] = r7     // Catch:{ all -> 0x03d4 }
r7 = 99
r18 = 6
r6[r18] = r7     // Catch:{ all -> 0x03d4 }
r7 = 84
r6[r22] = r7     // Catch:{ all -> 0x03d4 }
r7 = 118(0x76, float:1.65E-43)
r6[r23] = r7     // Catch:{ all -> 0x03d4 }
r7 = 54
r6[r31] = r7     // Catch:{ all -> 0x03d4 }
r6[r9] = r21     // Catch:{ all -> 0x03d4 }
r7 = 114(0x72, float:1.6E-43)
r6[r13] = r7     // Catch:{ all -> 0x03d4 }
r6[r10] = r10     // Catch:{ all -> 0x03d4 }
r6[r32] = r14     // Catch:{ all -> 0x03d4 }
r6[r33] = r22     // Catch:{ all -> 0x03d4 }
r7 = 36
r21 = 15
r6[r21] = r7     // Catch:{ all -> 0x03d4 }
r30 = r6
java.lang.Object r6 = ms.bd.o.Pgl.pblk.a(r25, r26, r27, r29, r30)     // Catch:{ all -> 0x03d4 }
java.lang.String r6 = (java.lang.String) r6     // Catch:{ all -> 0x03d4 }
r5.<init>(r6, r2)     // Catch:{ all -> 0x03d4 }
r8.add(r5)     // Catch:{ all -> 0x03d4 }
L_0x02cd:
com.bytedance.retrofit2.Retrofit r2 = com.bytedance.ttnet.utils.RetrofitUtils.getSsRetrofit(r36)     // Catch:{ all -> 0x03d4 }
java.lang.Class<ms.bd.o.Pgl.a> r5 = ms.bd.o.Pgl.a.class
java.lang.Object r2 = r2.create(r5)     // Catch:{ all -> 0x03d4 }
ms.bd.o.Pgl.a r2 = (ms.bd.o.Pgl.a) r2     // Catch:{ all -> 0x03d4 }
if (r41 == 0) goto L_0x0370
com.bytedance.retrofit2.mime.TypedByteArray r5 = new com.bytedance.retrofit2.mime.TypedByteArray     // Catch:{ all -> 0x03d4 }
r25 = 16777217(0x1000001, float:2.350989E-38)
r26 = 0
r27 = 0
java.lang.String r29 = "13c0da"
r6 = 24
byte[] r6 = new byte[r6]     // Catch:{ all -> 0x03d4 }
r7 = 33
r6[r15] = r7     // Catch:{ all -> 0x03d4 }
r6[r11] = r7     // Catch:{ all -> 0x03d4 }
r6[r12] = r15     // Catch:{ all -> 0x03d4 }
r7 = 72
r6[r14] = r7     // Catch:{ all -> 0x03d4 }
r7 = 82
r20 = 4
r6[r20] = r7     // Catch:{ all -> 0x03d4 }
r7 = 117(0x75, float:1.64E-43)
r19 = 5
r6[r19] = r7     // Catch:{ all -> 0x03d4 }
r7 = 51
r18 = 6
r6[r18] = r7     // Catch:{ all -> 0x03d4 }
r6[r22] = r18     // Catch:{ all -> 0x03d4 }
r7 = 59
r6[r23] = r7     // Catch:{ all -> 0x03d4 }
r7 = 111(0x6f, float:1.56E-43)
r6[r31] = r7     // Catch:{ all -> 0x03d4 }
r7 = 46
r6[r9] = r7     // Catch:{ all -> 0x03d4 }
r7 = 126(0x7e, float:1.77E-43)
r6[r13] = r7     // Catch:{ all -> 0x03d4 }
r7 = 31
r6[r10] = r7     // Catch:{ all -> 0x03d4 }
r7 = 71
r6[r32] = r7     // Catch:{ all -> 0x03d4 }
r7 = 79
r6[r33] = r7     // Catch:{ all -> 0x03d4 }
r7 = 115(0x73, float:1.61E-43)
r9 = 15
r6[r9] = r7     // Catch:{ all -> 0x03d4 }
r7 = 16
r9 = 38
r6[r7] = r9     // Catch:{ all -> 0x03d4 }
r7 = 95
r9 = 17
r6[r9] = r7     // Catch:{ all -> 0x03d4 }
r7 = 18
r9 = 33
r6[r7] = r9     // Catch:{ all -> 0x03d4 }
r7 = 19
r9 = 116(0x74, float:1.63E-43)
r6[r7] = r9     // Catch:{ all -> 0x03d4 }
r7 = 20
r9 = 50
r6[r7] = r9     // Catch:{ all -> 0x03d4 }
r7 = 52
r9 = 21
r6[r9] = r7     // Catch:{ all -> 0x03d4 }
r7 = 22
r9 = 17
r6[r7] = r9     // Catch:{ all -> 0x03d4 }
r7 = 23
r9 = 73
r6[r7] = r9     // Catch:{ all -> 0x03d4 }
r30 = r6
java.lang.Object r6 = ms.bd.o.Pgl.pblk.a(r25, r26, r27, r29, r30)     // Catch:{ all -> 0x03d4 }
java.lang.String r6 = (java.lang.String) r6     // Catch:{ all -> 0x03d4 }
java.lang.String[] r7 = new java.lang.String[r15]     // Catch:{ all -> 0x03d4 }
r9 = r37
r5.<init>(r6, r9, r7)     // Catch:{ all -> 0x03d4 }
com.bytedance.retrofit2.Call r2 = r2.a(r0, r8, r5)     // Catch:{ all -> 0x03d4 }
goto L_0x0374
L_0x0370:
com.bytedance.retrofit2.Call r2 = r2.a(r0, r8)     // Catch:{ all -> 0x03d4 }
L_0x0374:
r4.a(r0)     // Catch:{ all -> 0x03d0 }
com.bytedance.retrofit2.SsResponse r0 = r2.execute()     // Catch:{ all -> 0x03d0 }
int r5 = r0.code()     // Catch:{ all -> 0x03d1 }
java.util.List r6 = r0.headers()     // Catch:{ all -> 0x03cd }
java.lang.String r6 = r1.a(r6)     // Catch:{ all -> 0x03cd }
r4.b(r6, r5)     // Catch:{ all -> 0x03cd }
if (r3 == 0) goto L_0x0392
java.io.FileOutputStream r6 = new java.io.FileOutputStream     // Catch:{ all -> 0x03cd }
r6.<init>(r3)     // Catch:{ all -> 0x03cd }
goto L_0x0397
L_0x0392:
java.io.ByteArrayOutputStream r6 = new java.io.ByteArrayOutputStream     // Catch:{ all -> 0x03cd }
r6.<init>()     // Catch:{ all -> 0x03cd }
L_0x0397:
java.lang.Object r3 = r0.body()     // Catch:{ all -> 0x03cb }
com.bytedance.retrofit2.mime.TypedInput r3 = (com.bytedance.retrofit2.mime.TypedInput) r3     // Catch:{ all -> 0x03cb }
java.io.InputStream r3 = r3.in()     // Catch:{ all -> 0x03cb }
r7 = 1024(0x400, float:1.435E-42)
byte[] r7 = new byte[r7]     // Catch:{ all -> 0x03da }
L_0x03a5:
r8 = 1024(0x400, float:1.435E-42)
int r8 = r3.read(r7, r15, r8)     // Catch:{ all -> 0x03da }
if (r8 <= 0) goto L_0x03b1
r6.write(r7, r15, r8)     // Catch:{ all -> 0x03da }
goto L_0x03a5
L_0x03b1:
r6.flush()     // Catch:{ all -> 0x03da }
boolean r7 = r6 instanceof java.io.ByteArrayOutputStream     // Catch:{ all -> 0x03da }
if (r7 == 0) goto L_0x03c0
r7 = r6
java.io.ByteArrayOutputStream r7 = (java.io.ByteArrayOutputStream) r7     // Catch:{ all -> 0x03da }
byte[] r8 = r7.toByteArray()     // Catch:{ all -> 0x03da }
goto L_0x03c1
L_0x03c0:
r8 = 0
L_0x03c1:
com.bytedance.frameworks.baselib.network.http.parser.StreamParser.safeClose(r3)
com.bytedance.frameworks.baselib.network.http.parser.StreamParser.safeClose(r6)
r2.cancel()
goto L_0x042a
L_0x03cb:
r3 = 0
goto L_0x03da
L_0x03cd:
r16 = r5
goto L_0x03d1
L_0x03d0:
r0 = 0
L_0x03d1:
r5 = r16
goto L_0x03d8
L_0x03d4:
r5 = r16
r0 = 0
r2 = 0
L_0x03d8:
r3 = 0
r6 = 0
L_0x03da:
r7 = 16777217(0x1000001, float:2.350989E-38)
r8 = 0
java.lang.String r13 = "84e687"
r9 = 6
byte[] r9 = new byte[r9]     // Catch:{ all -> 0x0435 }
r10 = 61
r9[r15] = r10     // Catch:{ all -> 0x0435 }
r10 = 62
r9[r11] = r10     // Catch:{ all -> 0x0435 }
r10 = 21
r9[r12] = r10     // Catch:{ all -> 0x0435 }
r10 = 125(0x7d, float:1.75E-43)
r9[r14] = r10     // Catch:{ all -> 0x0435 }
r10 = 15
r14 = 4
r9[r14] = r10     // Catch:{ all -> 0x0435 }
r10 = 49
r14 = 5
r9[r14] = r10     // Catch:{ all -> 0x0435 }
r36 = r7
r37 = r8
r7 = 0
r38 = r7
r40 = r13
r41 = r9
java.lang.Object r7 = ms.bd.o.Pgl.pblk.a(r36, r37, r38, r40, r41)     // Catch:{ all -> 0x0435 }
java.lang.String r7 = (java.lang.String) r7     // Catch:{ all -> 0x0435 }
if (r0 == 0) goto L_0x041a
java.util.List r0 = r0.headers()     // Catch:{ all -> 0x0435 }
java.lang.String r0 = r1.a(r0)     // Catch:{ all -> 0x0435 }
goto L_0x041b
L_0x041a:
r0 = 0
L_0x041b:
r4.a(r0, r5)     // Catch:{ all -> 0x0435 }
com.bytedance.frameworks.baselib.network.http.parser.StreamParser.safeClose(r3)
com.bytedance.frameworks.baselib.network.http.parser.StreamParser.safeClose(r6)
if (r2 == 0) goto L_0x0429
r2.cancel()
L_0x0429:
r8 = 0
L_0x042a:
java.lang.Object[] r0 = new java.lang.Object[r12]
java.lang.String r2 = java.lang.String.valueOf(r5)
r0[r15] = r2
r0[r11] = r8
return r0
L_0x0435:
r0 = move-exception
com.bytedance.frameworks.baselib.network.http.parser.StreamParser.safeClose(r3)
com.bytedance.frameworks.baselib.network.http.parser.StreamParser.safeClose(r6)
if (r2 == 0) goto L_0x0441
r2.cancel()
L_0x0441:
throw r0
*/
throw new UnsupportedOperationException("Method not decompiled: ms.bd.o.Pgl.pbla.a(java.lang.String, byte[], java.lang.String, java.lang.String, java.lang.String, boolean):java.lang.Object[]");
}

public Object[] a(String str, String str2, String str3) {
return a(str, (byte[]) null, (String) null, str3, str2, false);
}

public Object[] a(String str, byte[] bArr, String str2, String str3) {
return a(str, bArr, str2, str3, (String) null, true);
}

public Object[] b(String str, String str2, String str3) {
return a(str, (byte[]) null, str2, str3, (String) null, false);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\ms\bd\o\Pgl\pblb.java

package ms.bd.o.Pgl;

import android.util.SparseArray;

public final class pblb {
private static final SparseArray<pgla> a = new SparseArray<>();

public static Object a(int i) {
return pblk.a(i, 0, 0, (String) null, (Object) null);
}

public static Object a(int i, int i3, long j2, String str, Object obj) {
return pblk.a(i, i3, j2, str, obj);
}

public static Object a(int i, long j2) {
return pblk.a(i, 0, j2, (String) null, (Object) null);
}

public static Object a(int i, String str) {
return pblk.a(i, 0, 0, str, (Object) null);
}

public static void a(int i, pgla pgla) {
SparseArray<pgla> sparseArray = a;
pgla pgla2 = sparseArray.get(i);
if (pgla2 == null) {
sparseArray.put(i, pgla);
} else {
throw new RuntimeException(String.format((String) pblk.a(16777217, 0, 0, "4fa152", new byte[]{96, 119, 82, 77, 11, 33, 119, 69, 53, 100, 43, 36, 0, 64, 13, 44, 36, 83, 53, 115, 107}), new Object[]{pgla2.toString()}));
}
}

public static Object b(int i, int i3, long j2, String str, Object obj) {
pgla pgla = a.get(i);
if (pgla != null) {
try {
return pgla.a(i, i3, j2, str, obj);
} catch (Throwable th) {
throw new RuntimeException(th);
}
} else {
throw new RuntimeException(String.format((String) pblk.a(16777217, 0, 0, "0b8fa0", new byte[]{46, 112, 11, 17, 81, 35, 54, 3, 44, 50, 97, 105, 88, 82, 87, 41, 37, 66, 101, 63, 37}), new Object[]{Integer.valueOf(i)}));
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\ms\bd\o\Pgl\pblc.java

package ms.bd.o.Pgl;

import android.content.Context;
import com.google.firebase.installations.interop.BuildConfig;
import ms.bd.o.Pgl.pblb;

final class pblc extends pblb.pgla {
public Object a(int i, long j2, String str, Object obj) throws Throwable {
try {
Context b = pgla.a().b();
return b.getPackageManager().getPackageInfo(b.getPackageName(), 0).versionName;
} catch (Throwable unused) {
String str2 = (String) pblk.a(16777217, 0, 0, "b2bafb", new byte[]{122, 57});
return BuildConfig.FLAVOR;
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\ms\bd\o\Pgl\y0.java

package ms.bd.o.Pgl;

public class y0 {
private static volatile y0 c;
private int a = 0;
private Throwable b = null;

private y0() {
}

public static y0 a() {
if (c == null) {
synchronized (y0.class) {
if (c == null) {
c = new y0();
}
}
}
return c;
}

public synchronized Throwable b() {
return this.b;
}

/* JADX WARNING: Code restructure failed: missing block: B:11:0x001d, code lost:
return;
*/
/* Code decompiled incorrectly, please refer to instructions dump. */
public synchronized void c() {
/*
r2 = this;
monitor-enter(r2)
java.lang.Throwable r0 = r2.b     // Catch:{ all -> 0x001e }
if (r0 != 0) goto L_0x001c
int r0 = r2.a     // Catch:{ all -> 0x001e }
int r1 = r0 + 1
r2.a = r1     // Catch:{ all -> 0x001e }
r1 = 30
if (r0 >= r1) goto L_0x0010
goto L_0x001c
L_0x0010:
r0 = 0
r2.a = r0     // Catch:{ all -> 0x001e }
java.lang.Throwable r0 = new java.lang.Throwable     // Catch:{ all -> 0x001e }
r0.<init>()     // Catch:{ all -> 0x001e }
r2.b = r0     // Catch:{ all -> 0x001e }
monitor-exit(r2)
return
L_0x001c:
monitor-exit(r2)
return
L_0x001e:
r0 = move-exception
monitor-exit(r2)
throw r0
*/
throw new UnsupportedOperationException("Method not decompiled: ms.bd.o.Pgl.y0.c():void");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\okhttp3\EventListener$Factory.java

package okhttp3;

import org.jetbrains.annotations.NotNull;

public interface EventListener$Factory {
@NotNull
EventListener create(@NotNull Call call);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\okhttp3\internal\authenticator\JavaNetAuthenticator$WhenMappings.java

package okhttp3.internal.authenticator;

import java.net.Proxy;

public /* synthetic */ class JavaNetAuthenticator$WhenMappings {
public static final /* synthetic */ int[] $EnumSwitchMapping$0;

static {
int[] iArr = new int[Proxy.Type.values().length];
iArr[Proxy.Type.DIRECT.ordinal()] = 1;
$EnumSwitchMapping$0 = iArr;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\okhttp3\internal\http2\Http2ExchangeCodec.java

package okhttp3.internal.http2;

import java.io.IOException;
import java.util.List;
import java.util.concurrent.TimeUnit;
import kotlin.jvm.internal.m;
import kotlin.jvm.internal.o;
import okhttp3.Headers;
import okhttp3.OkHttpClient;
import okhttp3.Protocol;
import okhttp3.Request;
import okhttp3.Response;
import okhttp3.internal.Util;
import okhttp3.internal.connection.RealConnection;
import okhttp3.internal.http.ExchangeCodec;
import okhttp3.internal.http.HttpHeaders;
import okhttp3.internal.http.RealInterceptorChain;
import okio.Sink;
import okio.Source;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class Http2ExchangeCodec implements ExchangeCodec {
@NotNull
private static final String CONNECTION = "connection";
@NotNull
public static final Companion Companion = new Companion((m) null);
@NotNull
private static final String ENCODING = "encoding";
@NotNull
private static final String HOST = "host";
/* access modifiers changed from: private */
@NotNull
public static final List<String> HTTP_2_SKIPPED_REQUEST_HEADERS = Util.immutableListOf(new String[]{CONNECTION, HOST, KEEP_ALIVE, PROXY_CONNECTION, TE, TRANSFER_ENCODING, ENCODING, UPGRADE, ":method", ":path", ":scheme", ":authority"});
/* access modifiers changed from: private */
@NotNull
public static final List<String> HTTP_2_SKIPPED_RESPONSE_HEADERS = Util.immutableListOf(new String[]{CONNECTION, HOST, KEEP_ALIVE, PROXY_CONNECTION, TE, TRANSFER_ENCODING, ENCODING, UPGRADE});
@NotNull
private static final String KEEP_ALIVE = "keep-alive";
@NotNull
private static final String PROXY_CONNECTION = "proxy-connection";
@NotNull
private static final String TE = "te";
@NotNull
private static final String TRANSFER_ENCODING = "transfer-encoding";
@NotNull
private static final String UPGRADE = "upgrade";
private volatile boolean canceled;
@NotNull
private final RealInterceptorChain chain;
@NotNull
private final RealConnection connection;
@NotNull
private final Http2Connection http2Connection;
@NotNull
private final Protocol protocol;
@Nullable
private volatile Http2Stream stream;

public Http2ExchangeCodec(@NotNull OkHttpClient okHttpClient, @NotNull RealConnection realConnection, @NotNull RealInterceptorChain realInterceptorChain, @NotNull Http2Connection http2Connection2) {
o.f(okHttpClient, "client");
o.f(realConnection, CONNECTION);
o.f(realInterceptorChain, "chain");
o.f(http2Connection2, "http2Connection");
this.connection = realConnection;
this.chain = realInterceptorChain;
this.http2Connection = http2Connection2;
List protocols = okHttpClient.protocols();
Protocol protocol2 = Protocol.H2_PRIOR_KNOWLEDGE;
this.protocol = !protocols.contains(protocol2) ? Protocol.HTTP_2 : protocol2;
}

public void cancel() {
this.canceled = true;
Http2Stream http2Stream = this.stream;
if (http2Stream != null) {
http2Stream.closeLater(ErrorCode.CANCEL);
}
}

@NotNull
public Sink createRequestBody(@NotNull Request request, long j2) {
o.f(request, "request");
Http2Stream http2Stream = this.stream;
o.c(http2Stream);
return http2Stream.getSink();
}

public void finishRequest() {
Http2Stream http2Stream = this.stream;
o.c(http2Stream);
http2Stream.getSink().close();
}

public void flushRequest() {
this.http2Connection.flush();
}

@NotNull
public RealConnection getConnection() {
return this.connection;
}

@NotNull
public Source openResponseBodySource(@NotNull Response response) {
o.f(response, "response");
Http2Stream http2Stream = this.stream;
o.c(http2Stream);
return http2Stream.getSource$okhttp();
}

@Nullable
public Response.Builder readResponseHeaders(boolean z) {
Http2Stream http2Stream = this.stream;
o.c(http2Stream);
Response.Builder readHttp2HeadersList = Companion.readHttp2HeadersList(http2Stream.takeHeaders(), this.protocol);
if (!z || readHttp2HeadersList.getCode$okhttp() != 100) {
return readHttp2HeadersList;
}
return null;
}

public long reportedContentLength(@NotNull Response response) {
o.f(response, "response");
if (!HttpHeaders.promisesBody(response)) {
return 0;
}
return Util.headersContentLength(response);
}

@NotNull
public Headers trailers() {
Http2Stream http2Stream = this.stream;
o.c(http2Stream);
return http2Stream.trailers();
}

public void writeRequestHeaders(@NotNull Request request) {
o.f(request, "request");
if (this.stream == null) {
this.stream = this.http2Connection.newStream(Companion.http2HeadersList(request), request.body() != null);
if (!this.canceled) {
Http2Stream http2Stream = this.stream;
o.c(http2Stream);
TimeUnit timeUnit = TimeUnit.MILLISECONDS;
http2Stream.readTimeout().timeout((long) this.chain.getReadTimeoutMillis$okhttp(), timeUnit);
Http2Stream http2Stream2 = this.stream;
o.c(http2Stream2);
http2Stream2.writeTimeout().timeout((long) this.chain.getWriteTimeoutMillis$okhttp(), timeUnit);
return;
}
Http2Stream http2Stream3 = this.stream;
o.c(http2Stream3);
http2Stream3.closeLater(ErrorCode.CANCEL);
throw new IOException("Canceled");
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\okhttp3\internal\platform\Platform$Companion.java

package okhttp3.internal.platform;

import java.security.Security;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import kotlin.collections.n;
import kotlin.jvm.internal.m;
import kotlin.jvm.internal.o;
import okhttp3.Protocol;
import okhttp3.internal.platform.android.AndroidLog;
import okio.Buffer;
import org.jetbrains.annotations.NotNull;

public final class Platform$Companion {
private Platform$Companion() {
}

public /* synthetic */ Platform$Companion(m mVar) {
this();
}

private final Platform findAndroidPlatform() {
AndroidLog.INSTANCE.enable();
Platform buildIfSupported = Android10Platform.Companion.buildIfSupported();
if (buildIfSupported != null) {
return buildIfSupported;
}
Platform buildIfSupported2 = AndroidPlatform.Companion.buildIfSupported();
o.c(buildIfSupported2);
return buildIfSupported2;
}

private final Platform findJvmPlatform() {
OpenJSSEPlatform buildIfSupported;
BouncyCastlePlatform buildIfSupported2;
ConscryptPlatform buildIfSupported3;
if (isConscryptPreferred() && (buildIfSupported3 = ConscryptPlatform.Companion.buildIfSupported()) != null) {
return buildIfSupported3;
}
if (isBouncyCastlePreferred() && (buildIfSupported2 = BouncyCastlePlatform.Companion.buildIfSupported()) != null) {
return buildIfSupported2;
}
if (isOpenJSSEPreferred() && (buildIfSupported = OpenJSSEPlatform.Companion.buildIfSupported()) != null) {
return buildIfSupported;
}
Jdk9Platform buildIfSupported4 = Jdk9Platform.Companion.buildIfSupported();
if (buildIfSupported4 != null) {
return buildIfSupported4;
}
Platform buildIfSupported5 = Jdk8WithJettyBootPlatform.Companion.buildIfSupported();
return buildIfSupported5 != null ? buildIfSupported5 : new Platform();
}

/* access modifiers changed from: private */
public final Platform findPlatform() {
return isAndroid() ? findAndroidPlatform() : findJvmPlatform();
}

private final boolean isBouncyCastlePreferred() {
return o.a("BC", Security.getProviders()[0].getName());
}

private final boolean isConscryptPreferred() {
return o.a("Conscrypt", Security.getProviders()[0].getName());
}

private final boolean isOpenJSSEPreferred() {
return o.a("OpenJSSE", Security.getProviders()[0].getName());
}

public static /* synthetic */ void resetForTests$default(Platform$Companion platform$Companion, Platform platform, int i, Object obj) {
if ((i & 1) != 0) {
platform = platform$Companion.findPlatform();
}
platform$Companion.resetForTests(platform);
}

@NotNull
public final List<String> alpnProtocolNames(@NotNull List<? extends Protocol> list) {
o.f(list, "protocols");
ArrayList arrayList = new ArrayList();
for (T next : list) {
if (((Protocol) next) != Protocol.HTTP_1_0) {
arrayList.add(next);
}
}
ArrayList arrayList2 = new ArrayList(n.j(arrayList));
Iterator it = arrayList.iterator();
while (it.hasNext()) {
arrayList2.add(((Protocol) it.next()).toString());
}
return arrayList2;
}

@NotNull
public final byte[] concatLengthPrefixed(@NotNull List<? extends Protocol> list) {
o.f(list, "protocols");
Buffer buffer = new Buffer();
for (String next : alpnProtocolNames(list)) {
buffer.writeByte(next.length());
buffer.writeUtf8(next);
}
return buffer.readByteArray();
}

@NotNull
public final Platform get() {
return Platform.access$getPlatform$cp();
}

public final boolean isAndroid() {
return o.a("Dalvik", System.getProperty("java.vm.name"));
}

public final void resetForTests(@NotNull Platform platform) {
o.f(platform, "platform");
Platform.access$setPlatform$cp(platform);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\okhttp3\internal\tls\CertificateChainCleaner.java

package okhttp3.internal.tls;

import java.security.cert.Certificate;
import java.util.List;
import javax.net.ssl.SSLPeerUnverifiedException;
import kotlin.jvm.internal.m;
import org.jetbrains.annotations.NotNull;

public abstract class CertificateChainCleaner {
@NotNull
public static final Companion Companion = new Companion((m) null);

@NotNull
public abstract List<Certificate> clean(@NotNull List<? extends Certificate> list, @NotNull String str) throws SSLPeerUnverifiedException;
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\okhttp3\internal\ws\RealWebSocket$Close.java

package okhttp3.internal.ws;

import okio.ByteString;
import org.jetbrains.annotations.Nullable;

public final class RealWebSocket$Close {
private final long cancelAfterCloseMillis;
private final int code;
@Nullable
private final ByteString reason;

public RealWebSocket$Close(int i, @Nullable ByteString byteString, long j2) {
this.code = i;
this.reason = byteString;
this.cancelAfterCloseMillis = j2;
}

public final long getCancelAfterCloseMillis() {
return this.cancelAfterCloseMillis;
}

public final int getCode() {
return this.code;
}

@Nullable
public final ByteString getReason() {
return this.reason;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\okhttp3\internal\ws\RealWebSocket$connect$1.java

package okhttp3.internal.ws;

import java.io.IOException;
import kotlin.jvm.internal.o;
import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.Request;
import okhttp3.Response;
import okhttp3.internal.Util;
import okhttp3.internal.connection.Exchange;
import okhttp3.internal.ws.RealWebSocket;
import org.jetbrains.annotations.NotNull;

public final class RealWebSocket$connect$1 implements Callback {
public final /* synthetic */ Request $request;
public final /* synthetic */ RealWebSocket this$0;

public RealWebSocket$connect$1(RealWebSocket realWebSocket, Request request) {
this.this$0 = realWebSocket;
this.$request = request;
}

public void onFailure(@NotNull Call call, @NotNull IOException iOException) {
o.f(call, "call");
o.f(iOException, "e");
this.this$0.failWebSocket(iOException, (Response) null);
}

public void onResponse(@NotNull Call call, @NotNull Response response) {
o.f(call, "call");
o.f(response, "response");
Exchange exchange = response.exchange();
try {
this.this$0.checkUpgradeSuccess$okhttp(response, exchange);
o.c(exchange);
RealWebSocket.Streams newWebSocketStreams = exchange.newWebSocketStreams();
WebSocketExtensions parse = WebSocketExtensions.Companion.parse(response.headers());
RealWebSocket.access$setExtensions$p(this.this$0, parse);
if (!RealWebSocket.access$isValid(this.this$0, parse)) {
RealWebSocket realWebSocket = this.this$0;
synchronized (realWebSocket) {
RealWebSocket.access$getMessageAndCloseQueue$p(realWebSocket).clear();
realWebSocket.close(1010, "unexpected Sec-WebSocket-Extensions in response header");
}
}
try {
this.this$0.initReaderAndWriter(Util.okHttpName + " WebSocket " + this.$request.url().redact(), newWebSocketStreams);
this.this$0.getListener$okhttp().onOpen(this.this$0, response);
this.this$0.loopReader();
} catch (Exception e) {
this.this$0.failWebSocket(e, (Response) null);
}
} catch (IOException e2) {
if (exchange != null) {
exchange.webSocketUpgradeFailed();
}
this.this$0.failWebSocket(e2, response);
Util.closeQuietly(response);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\okio\ZipFileSystem.java

package okio;

import com.bytedance.sdk.component.d.c.c.MZr.PkQEGFNAPgv;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.zip.Inflater;
import kotlin.a;
import kotlin.collections.r;
import kotlin.jvm.internal.m;
import kotlin.jvm.internal.o;
import okio.Path;
import okio.internal.FixedLengthSource;
import okio.internal.ZipEntry;
import okio.internal.ZipKt;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class ZipFileSystem extends FileSystem {
@NotNull
private static final Companion Companion = new Companion((m) null);
/* access modifiers changed from: private */
@NotNull
@Deprecated
public static final Path ROOT = Path.Companion.get$default(Path.Companion, "/", false, 1, (Object) null);
@Nullable
private final String comment;
@NotNull
private final Map<Path, ZipEntry> entries;
@NotNull
private final FileSystem fileSystem;
@NotNull
private final Path zipPath;

public ZipFileSystem(@NotNull Path path, @NotNull FileSystem fileSystem2, @NotNull Map<Path, ZipEntry> map, @Nullable String str) {
o.f(path, "zipPath");
o.f(fileSystem2, "fileSystem");
o.f(map, "entries");
this.zipPath = path;
this.fileSystem = fileSystem2;
this.entries = map;
this.comment = str;
}

private final Path canonicalizeInternal(Path path) {
return ROOT.resolve(path, true);
}

private final List<Path> list(Path path, boolean z) {
ZipEntry zipEntry = this.entries.get(canonicalizeInternal(path));
if (zipEntry != null) {
return r.G(zipEntry.getChildren());
}
if (!z) {
return null;
}
throw new IOException(o.o("not a directory: ", path));
}

@NotNull
public Sink appendingSink(@NotNull Path path, boolean z) {
o.f(path, "file");
throw new IOException(PkQEGFNAPgv.NWgayZVShuTLV);
}

public void atomicMove(@NotNull Path path, @NotNull Path path2) {
o.f(path, "source");
o.f(path2, "target");
throw new IOException("zip file systems are read-only");
}

@NotNull
public Path canonicalize(@NotNull Path path) {
o.f(path, "path");
return canonicalizeInternal(path);
}

public void createDirectory(@NotNull Path path, boolean z) {
o.f(path, "dir");
throw new IOException("zip file systems are read-only");
}

public void createSymlink(@NotNull Path path, @NotNull Path path2) {
o.f(path, "source");
o.f(path2, "target");
throw new IOException("zip file systems are read-only");
}

public void delete(@NotNull Path path, boolean z) {
o.f(path, "path");
throw new IOException("zip file systems are read-only");
}

@NotNull
public List<Path> list(@NotNull Path path) {
o.f(path, "dir");
List<Path> list = list(path, true);
o.c(list);
return list;
}

@Nullable
public List<Path> listOrNull(@NotNull Path path) {
o.f(path, "dir");
return list(path, false);
}

@Nullable
public FileMetadata metadataOrNull(@NotNull Path path) {
BufferedSource bufferedSource;
o.f(path, "path");
ZipEntry zipEntry = this.entries.get(canonicalizeInternal(path));
Throwable th = null;
if (zipEntry == null) {
return null;
}
FileMetadata fileMetadata = new FileMetadata(!zipEntry.isDirectory(), zipEntry.isDirectory(), (Path) null, zipEntry.isDirectory() ? null : Long.valueOf(zipEntry.getSize()), (Long) null, zipEntry.getLastModifiedAtMillis(), (Long) null, (Map) null, 128, (m) null);
if (zipEntry.getOffset() == -1) {
return fileMetadata;
}
FileHandle openReadOnly = this.fileSystem.openReadOnly(this.zipPath);
try {
bufferedSource = Okio.buffer(openReadOnly.source(zipEntry.getOffset()));
} catch (Throwable th2) {
th = th2;
bufferedSource = null;
}
if (openReadOnly != null) {
try {
openReadOnly.close();
} catch (Throwable th3) {
if (th == null) {
th = th3;
} else {
a.a(th, th3);
}
}
}
if (th == null) {
o.c(bufferedSource);
return ZipKt.readLocalHeader(bufferedSource, fileMetadata);
}
throw th;
}

@NotNull
public FileHandle openReadOnly(@NotNull Path path) {
o.f(path, "file");
throw new UnsupportedOperationException("not implemented yet!");
}

@NotNull
public FileHandle openReadWrite(@NotNull Path path, boolean z, boolean z2) {
o.f(path, "file");
throw new IOException("zip entries are not writable");
}

@NotNull
public Sink sink(@NotNull Path path, boolean z) {
o.f(path, "file");
throw new IOException("zip file systems are read-only");
}

@NotNull
public Source source(@NotNull Path path) throws IOException {
BufferedSource bufferedSource;
o.f(path, "path");
ZipEntry zipEntry = this.entries.get(canonicalizeInternal(path));
if (zipEntry != null) {
FileHandle openReadOnly = this.fileSystem.openReadOnly(this.zipPath);
Throwable th = null;
try {
bufferedSource = Okio.buffer(openReadOnly.source(zipEntry.getOffset()));
} catch (Throwable th2) {
Throwable th3 = th2;
bufferedSource = null;
th = th3;
}
if (openReadOnly != null) {
try {
openReadOnly.close();
} catch (Throwable th4) {
if (th == null) {
th = th4;
} else {
a.a(th, th4);
}
}
}
if (th == null) {
o.c(bufferedSource);
ZipKt.skipLocalHeader(bufferedSource);
return zipEntry.getCompressionMethod() == 0 ? new FixedLengthSource(bufferedSource, zipEntry.getSize(), true) : new FixedLengthSource(new InflaterSource(new FixedLengthSource(bufferedSource, zipEntry.getCompressedSize(), true), new Inflater(true)), zipEntry.getSize(), false);
}
throw th;
}
throw new FileNotFoundException(o.o("no such file: ", path));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\Closure.java

package org.apache.commons.collections4;

public interface Closure<T> {
void execute(T t);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\OrderedMapIterator.java

package org.apache.commons.collections4;

public interface OrderedMapIterator<K, V> extends MapIterator<K, V>, OrderedIterator<K> {
boolean hasPrevious();

K previous();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\SetUtils$1.java

package org.apache.commons.collections4;

import java.util.Iterator;
import java.util.Set;
import org.apache.commons.collections4.SetUtils;

public class SetUtils$1 extends SetUtils.SetView<E> {
public final /* synthetic */ Set val$a;
public final /* synthetic */ Set val$b;
public final /* synthetic */ SetUtils.SetView val$bMinusA;

public SetUtils$1(Set set, Set set2, SetUtils.SetView setView) {
this.val$a = set;
this.val$b = set2;
this.val$bMinusA = setView;
}

public boolean contains(Object obj) {
return this.val$a.contains(obj) || this.val$b.contains(obj);
}

public Iterator<E> createIterator() {
return IteratorUtils.chainedIterator(this.val$a.iterator(), this.val$bMinusA.iterator());
}

public boolean isEmpty() {
return this.val$a.isEmpty() && this.val$b.isEmpty();
}

public int size() {
return this.val$bMinusA.size() + this.val$a.size();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\SetUtils$2.java

package org.apache.commons.collections4;

import java.util.Set;

public class SetUtils$2 implements Predicate<E> {
public final /* synthetic */ Set val$b;

public SetUtils$2(Set set) {
this.val$b = set;
}

public boolean evaluate(E e) {
return !this.val$b.contains(e);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\SetUtils$3.java

package org.apache.commons.collections4;

import java.util.Iterator;
import java.util.Set;
import org.apache.commons.collections4.SetUtils;

public class SetUtils$3 extends SetUtils.SetView<E> {
public final /* synthetic */ Set val$a;
public final /* synthetic */ Set val$b;
public final /* synthetic */ Predicate val$notContainedInB;

public SetUtils$3(Set set, Set set2, Predicate predicate) {
this.val$a = set;
this.val$b = set2;
this.val$notContainedInB = predicate;
}

public boolean contains(Object obj) {
return this.val$a.contains(obj) && !this.val$b.contains(obj);
}

public Iterator<E> createIterator() {
return IteratorUtils.filteredIterator(this.val$a.iterator(), this.val$notContainedInB);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\SetUtils$4.java

package org.apache.commons.collections4;

import java.util.Set;

public class SetUtils$4 implements Predicate<E> {
public final /* synthetic */ Set val$b;

public SetUtils$4(Set set) {
this.val$b = set;
}

public boolean evaluate(E e) {
return this.val$b.contains(e);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\SetUtils$5.java

package org.apache.commons.collections4;

import java.util.Iterator;
import java.util.Set;
import org.apache.commons.collections4.SetUtils;

public class SetUtils$5 extends SetUtils.SetView<E> {
public final /* synthetic */ Set val$a;
public final /* synthetic */ Set val$b;
public final /* synthetic */ Predicate val$containedInB;

public SetUtils$5(Set set, Set set2, Predicate predicate) {
this.val$a = set;
this.val$b = set2;
this.val$containedInB = predicate;
}

public boolean contains(Object obj) {
return this.val$a.contains(obj) && this.val$b.contains(obj);
}

public Iterator<E> createIterator() {
return IteratorUtils.filteredIterator(this.val$a.iterator(), this.val$containedInB);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\SetUtils$6.java

package org.apache.commons.collections4;

import java.util.Iterator;
import java.util.Set;
import org.apache.commons.collections4.SetUtils;

public class SetUtils$6 extends SetUtils.SetView<E> {
public final /* synthetic */ Set val$a;
public final /* synthetic */ SetUtils.SetView val$aMinusB;
public final /* synthetic */ Set val$b;
public final /* synthetic */ SetUtils.SetView val$bMinusA;

public SetUtils$6(Set set, Set set2, SetUtils.SetView setView, SetUtils.SetView setView2) {
this.val$a = set;
this.val$b = set2;
this.val$aMinusB = setView;
this.val$bMinusA = setView2;
}

public boolean contains(Object obj) {
return this.val$b.contains(obj) ^ this.val$a.contains(obj);
}

public Iterator<E> createIterator() {
return IteratorUtils.chainedIterator(this.val$aMinusB.iterator(), this.val$bMinusA.iterator());
}

public boolean isEmpty() {
return this.val$aMinusB.isEmpty() && this.val$bMinusA.isEmpty();
}

public int size() {
return this.val$bMinusA.size() + this.val$aMinusB.size();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\bidimap\DualTreeBidiMap$BidiOrderedMapIterator.java

package org.apache.commons.collections4.bidimap;

import android.support.v4.media.b;
import java.util.ArrayList;
import java.util.ListIterator;
import java.util.Map;
import org.apache.commons.collections4.OrderedMapIterator;
import org.apache.commons.collections4.ResettableIterator;
import org.apache.poi.ss.util.nMbD.zzDeZDCoaw;

public class DualTreeBidiMap$BidiOrderedMapIterator<K, V> implements OrderedMapIterator<K, V>, ResettableIterator<K> {
private ListIterator<Map.Entry<K, V>> iterator;
private Map.Entry<K, V> last = null;
private final AbstractDualBidiMap<K, V> parent;

public DualTreeBidiMap$BidiOrderedMapIterator(AbstractDualBidiMap<K, V> abstractDualBidiMap) {
this.parent = abstractDualBidiMap;
this.iterator = new ArrayList(abstractDualBidiMap.entrySet()).listIterator();
}

public K getKey() {
Map.Entry<K, V> entry = this.last;
if (entry != null) {
return entry.getKey();
}
throw new IllegalStateException("Iterator getKey() can only be called after next() and before remove()");
}

public V getValue() {
Map.Entry<K, V> entry = this.last;
if (entry != null) {
return entry.getValue();
}
throw new IllegalStateException("Iterator getValue() can only be called after next() and before remove()");
}

public boolean hasNext() {
return this.iterator.hasNext();
}

public boolean hasPrevious() {
return this.iterator.hasPrevious();
}

public K next() {
Map.Entry<K, V> next = this.iterator.next();
this.last = next;
return next.getKey();
}

public K previous() {
Map.Entry<K, V> previous = this.iterator.previous();
this.last = previous;
return previous.getKey();
}

public void remove() {
this.iterator.remove();
this.parent.remove(this.last.getKey());
this.last = null;
}

public void reset() {
this.iterator = new ArrayList(this.parent.entrySet()).listIterator();
this.last = null;
}

public V setValue(V v) {
if (this.last == null) {
throw new IllegalStateException("Iterator setValue() can only be called after next() and before remove()");
} else if (!this.parent.reverseMap.containsKey(v) || this.parent.reverseMap.get(v) == this.last.getKey()) {
V put = this.parent.put(this.last.getKey(), v);
this.last.setValue(v);
return put;
} else {
throw new IllegalArgumentException("Cannot use setValue() when the object being set is already in the map");
}
}

public String toString() {
if (this.last == null) {
return zzDeZDCoaw.pDoKgncHNQ;
}
StringBuilder q = b.q("MapIterator[");
q.append(getKey());
q.append("=");
q.append(getValue());
q.append("]");
return q.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\functors\OrPredicate.java

package org.apache.commons.collections4.functors;

import java.io.Serializable;
import org.apache.commons.collections4.Predicate;

public final class OrPredicate<T> implements PredicateDecorator<T>, Serializable {
private static final long serialVersionUID = -8791518325735182855L;
private final Predicate<? super T> iPredicate1;
private final Predicate<? super T> iPredicate2;

public OrPredicate(Predicate<? super T> predicate, Predicate<? super T> predicate2) {
this.iPredicate1 = predicate;
this.iPredicate2 = predicate2;
}

public static <T> Predicate<T> orPredicate(Predicate<? super T> predicate, Predicate<? super T> predicate2) {
if (predicate != null && predicate2 != null) {
return new OrPredicate(predicate, predicate2);
}
throw new NullPointerException("Predicate must not be null");
}

public boolean evaluate(T t) {
return this.iPredicate1.evaluate(t) || this.iPredicate2.evaluate(t);
}

public Predicate<? super T>[] getPredicates() {
return new Predicate[]{this.iPredicate1, this.iPredicate2};
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\list\LazyList.java

package org.apache.commons.collections4.list;

import java.util.List;
import org.apache.commons.collections4.Factory;

public class LazyList<E> extends AbstractSerializableListDecorator<E> {
private static final long serialVersionUID = -1708388017160694542L;
private final Factory<? extends E> factory;

public LazyList(List<E> list, Factory<? extends E> factory2) {
super(list);
if (factory2 != null) {
this.factory = factory2;
return;
}
throw new IllegalArgumentException("Factory must not be null");
}

public static <E> LazyList<E> lazyList(List<E> list, Factory<? extends E> factory2) {
return new LazyList<>(list, factory2);
}

public E get(int i) {
int size = decorated().size();
if (i < size) {
E e = decorated().get(i);
if (e != null) {
return e;
}
E create = this.factory.create();
decorated().set(i, create);
return create;
}
while (size < i) {
decorated().add((Object) null);
size++;
}
E create2 = this.factory.create();
decorated().add(create2);
return create2;
}

/* JADX WARNING: type inference failed for: r3v1, types: [java.util.List<E>, org.apache.commons.collections4.list.LazyList] */
public List<E> subList(int i, int i3) {
return new LazyList(decorated().subList(i, i3), this.factory);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\map\AbstractLinkedMap$ValuesIterator.java

package org.apache.commons.collections4.map;

import org.apache.commons.collections4.OrderedIterator;
import org.apache.commons.collections4.ResettableIterator;
import org.apache.commons.collections4.map.AbstractLinkedMap;

public class AbstractLinkedMap$ValuesIterator<V> extends AbstractLinkedMap.LinkIterator<Object, V> implements OrderedIterator<V>, ResettableIterator<V> {
public AbstractLinkedMap$ValuesIterator(AbstractLinkedMap<?, V> abstractLinkedMap) {
super(abstractLinkedMap);
}

public V next() {
return AbstractLinkedMap$ValuesIterator.super.nextEntry().getValue();
}

public V previous() {
return AbstractLinkedMap$ValuesIterator.super.previousEntry().getValue();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\map\PassiveExpiringMap$ExpirationPolicy.java

package org.apache.commons.collections4.map;

import java.io.Serializable;

public interface PassiveExpiringMap$ExpirationPolicy<K, V> extends Serializable {
long expirationTime(K k, V v);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\multiset\AbstractMapMultiSet.java

package org.apache.commons.collections4.multiset;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.lang.reflect.Array;
import java.util.Iterator;
import java.util.Map;
import org.apache.commons.collections4.MultiSet;

public abstract class AbstractMapMultiSet<E> extends AbstractMultiSet<E> {
/* access modifiers changed from: private */
public transient Map<E, MutableInteger> map;
/* access modifiers changed from: private */
public transient int modCount;
private transient int size;

public AbstractMapMultiSet() {
}

public AbstractMapMultiSet(Map<E, MutableInteger> map2) {
this.map = map2;
}

public static /* synthetic */ int access$210(AbstractMapMultiSet abstractMapMultiSet) {
int i = abstractMapMultiSet.size;
abstractMapMultiSet.size = i - 1;
return i;
}

public int add(E e, int i) {
if (i >= 0) {
MutableInteger mutableInteger = this.map.get(e);
int i3 = mutableInteger != null ? mutableInteger.value : 0;
if (i > 0) {
this.modCount++;
this.size += i;
if (mutableInteger == null) {
this.map.put(e, new MutableInteger(i));
} else {
mutableInteger.value += i;
}
}
return i3;
}
throw new IllegalArgumentException("Occurrences must not be negative.");
}

public void clear() {
this.modCount++;
this.map.clear();
this.size = 0;
}

public boolean contains(Object obj) {
return this.map.containsKey(obj);
}

public Iterator<MultiSet.Entry<E>> createEntrySetIterator() {
return new EntrySetIterator(this.map.entrySet().iterator(), this);
}

public Iterator<E> createUniqueSetIterator() {
return new UniqueSetIterator(getMap().keySet().iterator(), this);
}

public void doReadObject(ObjectInputStream objectInputStream) throws IOException, ClassNotFoundException {
int readInt = objectInputStream.readInt();
for (int i = 0; i < readInt; i++) {
Object readObject = objectInputStream.readObject();
int readInt2 = objectInputStream.readInt();
this.map.put(readObject, new MutableInteger(readInt2));
this.size += readInt2;
}
}

public void doWriteObject(ObjectOutputStream objectOutputStream) throws IOException {
objectOutputStream.writeInt(this.map.size());
for (Map.Entry next : this.map.entrySet()) {
objectOutputStream.writeObject(next.getKey());
objectOutputStream.writeInt(((MutableInteger) next.getValue()).value);
}
}

public boolean equals(Object obj) {
if (obj == this) {
return true;
}
if (!(obj instanceof MultiSet)) {
return false;
}
MultiSet multiSet = (MultiSet) obj;
if (multiSet.size() != size()) {
return false;
}
for (E next : this.map.keySet()) {
if (multiSet.getCount(next) != getCount(next)) {
return false;
}
}
return true;
}

public int getCount(Object obj) {
MutableInteger mutableInteger = this.map.get(obj);
if (mutableInteger != null) {
return mutableInteger.value;
}
return 0;
}

public Map<E, MutableInteger> getMap() {
return this.map;
}

public int hashCode() {
int i = 0;
for (Map.Entry next : this.map.entrySet()) {
Object key = next.getKey();
i += ((MutableInteger) next.getValue()).value ^ (key == null ? 0 : key.hashCode());
}
return i;
}

public boolean isEmpty() {
return this.map.isEmpty();
}

public Iterator<E> iterator() {
return new MapBasedMultiSetIterator(this);
}

public int remove(Object obj, int i) {
if (i >= 0) {
MutableInteger mutableInteger = this.map.get(obj);
if (mutableInteger == null) {
return 0;
}
int i3 = mutableInteger.value;
if (i > 0) {
this.modCount++;
if (i < i3) {
mutableInteger.value = i3 - i;
this.size -= i;
} else {
this.map.remove(obj);
this.size -= mutableInteger.value;
}
}
return i3;
}
throw new IllegalArgumentException("Occurrences must not be negative.");
}

public void setMap(Map<E, MutableInteger> map2) {
this.map = map2;
}

public int size() {
return this.size;
}

public Object[] toArray() {
Object[] objArr = new Object[size()];
int i = 0;
for (Map.Entry next : this.map.entrySet()) {
Object key = next.getKey();
int i3 = ((MutableInteger) next.getValue()).value;
while (i3 > 0) {
objArr[i] = key;
i3--;
i++;
}
}
return objArr;
}

public <T> T[] toArray(T[] tArr) {
int size2 = size();
if (tArr.length < size2) {
tArr = (Object[]) Array.newInstance(tArr.getClass().getComponentType(), size2);
}
int i = 0;
for (Map.Entry next : this.map.entrySet()) {
T key = next.getKey();
int i3 = ((MutableInteger) next.getValue()).value;
while (i3 > 0) {
tArr[i] = key;
i3--;
i++;
}
}
while (i < tArr.length) {
tArr[i] = null;
i++;
}
return tArr;
}

public int uniqueElements() {
return this.map.size();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\commons\collections4\sequence\ReplacementsHandler.java

package org.apache.commons.collections4.sequence;

import java.util.List;

public interface ReplacementsHandler<T> {
void handleReplacement(int i, List<T> list, List<T> list2);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\ddf\EscherComplexProperty.java

package org.apache.poi.ddf;

import android.support.v4.media.b;
import android.support.v4.media.c;
import java.util.Arrays;
import org.apache.poi.hpsf.WqM.zrtAcABpPYmqeJ;
import org.apache.poi.util.HexDump;
import org.apache.poi.util.LittleEndian;

public class EscherComplexProperty extends EscherProperty {
private byte[] _complexData;

public EscherComplexProperty(short s, boolean z, byte[] bArr) {
super(s, true, z);
if (bArr != null) {
this._complexData = (byte[]) bArr.clone();
return;
}
throw new IllegalArgumentException("complexData can't be null");
}

public EscherComplexProperty(short s, byte[] bArr) {
super(s);
if (bArr != null) {
this._complexData = (byte[]) bArr.clone();
return;
}
throw new IllegalArgumentException("complexData can't be null");
}

public boolean equals(Object obj) {
if (this == obj) {
return true;
}
if (obj == null || !(obj instanceof EscherComplexProperty)) {
return false;
}
return Arrays.equals(this._complexData, ((EscherComplexProperty) obj)._complexData);
}

public byte[] getComplexData() {
return this._complexData;
}

public int getPropertySize() {
return this._complexData.length + 6;
}

public int hashCode() {
return getId() * 11;
}

public int serializeComplexPart(byte[] bArr, int i) {
byte[] bArr2 = this._complexData;
System.arraycopy(bArr2, 0, bArr, i, bArr2.length);
return this._complexData.length;
}

public int serializeSimplePart(byte[] bArr, int i) {
LittleEndian.putShort(bArr, i, getId());
LittleEndian.putInt(bArr, i + 2, this._complexData.length);
return 6;
}

public void setComplexData(byte[] bArr) {
this._complexData = bArr;
}

public String toString() {
String hex = HexDump.toHex(this._complexData, 32);
StringBuilder q = b.q("propNum: ");
q.append(getPropertyNumber());
q.append(", propName: ");
q.append(EscherProperties.getPropertyName(getPropertyNumber()));
q.append(", complex: ");
q.append(isComplex());
q.append(", blipId: ");
q.append(isBlipId());
q.append(", data: ");
q.append(System.getProperty("line.separator"));
q.append(hex);
return q.toString();
}

public String toXml(String str) {
StringBuilder m = c.m(str, "<");
m.append(getClass().getSimpleName());
m.append(" id=\"0x");
m.append(HexDump.toHex(getId()));
m.append("\" name=\"");
m.append(getName());
m.append("\" blipId=\"");
m.append(isBlipId());
m.append("\">\n");
m.append(str);
m.append("</");
m.append(getClass().getSimpleName());
m.append(zrtAcABpPYmqeJ.mUigwQBCbq);
return m.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\ddf\EscherTertiaryOptRecord.java

package org.apache.poi.ddf;

public class EscherTertiaryOptRecord extends AbstractEscherOptRecord {
public static final short RECORD_ID = -3806;

public String getRecordName() {
return "TertiaryOpt";
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\hpsf\ReadingNotSupportedException.java

package org.apache.poi.hpsf;

public class ReadingNotSupportedException extends UnsupportedVariantTypeException {
public ReadingNotSupportedException(long j2, Object obj) {
super(j2, obj);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\hssf\eventusermodel\AbortableHSSFListener.java

package org.apache.poi.hssf.eventusermodel;

import org.apache.poi.hssf.record.Record;

public abstract class AbortableHSSFListener implements HSSFListener {
public abstract short abortableProcessRecord(Record record) throws HSSFUserException;

public void processRecord(Record record) {
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\hssf\extractor\ExcelExtractor.java

package org.apache.poi.hssf.extractor;

import android.support.v4.media.b;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintStream;
import org.apache.poi.POIOLE2TextExtractor;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFComment;
import org.apache.poi.hssf.usermodel.HSSFDataFormatter;
import org.apache.poi.hssf.usermodel.HSSFRichTextString;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.poifs.filesystem.DirectoryNode;
import org.apache.poi.poifs.filesystem.POIFSFileSystem;
import org.apache.poi.ss.formula.eval.ErrorEval;
import org.apache.poi.ss.usermodel.HeaderFooter;
import org.apache.poi.ss.usermodel.Row;

public class ExcelExtractor extends POIOLE2TextExtractor implements org.apache.poi.ss.extractor.ExcelExtractor {
private final HSSFDataFormatter _formatter;
private boolean _includeBlankCells;
private boolean _includeCellComments;
private boolean _includeHeadersFooters;
private boolean _includeSheetNames;
private boolean _shouldEvaluateFormulas;
private final HSSFWorkbook _wb;

public ExcelExtractor(HSSFWorkbook hSSFWorkbook) {
super(hSSFWorkbook);
this._includeSheetNames = true;
this._shouldEvaluateFormulas = true;
this._includeCellComments = false;
this._includeBlankCells = false;
this._includeHeadersFooters = true;
this._wb = hSSFWorkbook;
this._formatter = new HSSFDataFormatter();
}

public ExcelExtractor(DirectoryNode directoryNode) throws IOException {
this(new HSSFWorkbook(directoryNode, true));
}

public ExcelExtractor(POIFSFileSystem pOIFSFileSystem) throws IOException {
this(pOIFSFileSystem.getRoot());
}

public static String _extractHeaderFooter(HeaderFooter headerFooter) {
StringBuffer stringBuffer = new StringBuffer();
if (headerFooter.getLeft() != null) {
stringBuffer.append(headerFooter.getLeft());
}
if (headerFooter.getCenter() != null) {
if (stringBuffer.length() > 0) {
stringBuffer.append("\t");
}
stringBuffer.append(headerFooter.getCenter());
}
if (headerFooter.getRight() != null) {
if (stringBuffer.length() > 0) {
stringBuffer.append("\t");
}
stringBuffer.append(headerFooter.getRight());
}
if (stringBuffer.length() > 0) {
stringBuffer.append("\n");
}
return stringBuffer.toString();
}

public static void main(String[] strArr) throws IOException {
try {
CommandArgs commandArgs = new CommandArgs(strArr);
if (commandArgs.isRequestHelp()) {
printUsageMessage(System.out);
return;
}
InputStream fileInputStream = commandArgs.getInputFile() == null ? System.in : new FileInputStream(commandArgs.getInputFile());
HSSFWorkbook hSSFWorkbook = new HSSFWorkbook(fileInputStream);
fileInputStream.close();
ExcelExtractor excelExtractor = new ExcelExtractor(hSSFWorkbook);
excelExtractor.setIncludeSheetNames(commandArgs.shouldShowSheetNames());
excelExtractor.setFormulasNotResults(true ^ commandArgs.shouldEvaluateFormulas());
excelExtractor.setIncludeCellComments(commandArgs.shouldShowCellComments());
excelExtractor.setIncludeBlankCells(commandArgs.shouldShowBlankCells());
excelExtractor.setIncludeHeadersFooters(commandArgs.shouldIncludeHeadersFooters());
System.out.println(excelExtractor.getText());
excelExtractor.close();
hSSFWorkbook.close();
} catch (CommandParseException e) {
System.err.println(e.getMessage());
printUsageMessage(System.err);
System.exit(1);
}
}

private static void printUsageMessage(PrintStream printStream) {
printStream.println("Use:");
printStream.println("    " + ExcelExtractor.class.getName() + " [<flag> <value> [<flag> <value> [...]]] [-i <filename.xls>]");
printStream.println("       -i <filename.xls> specifies input file (default is to use stdin)");
printStream.println("       Flags can be set on or off by using the values 'Y' or 'N'.");
printStream.println("       Following are available flags and their default values:");
printStream.println("       --show-sheet-names  Y");
printStream.println("       --evaluate-formulas Y");
printStream.println("       --show-comments     N");
printStream.println("       --show-blanks       Y");
printStream.println("       --headers-footers   Y");
}

public String getText() {
boolean z;
String sheetName;
StringBuffer stringBuffer = new StringBuffer();
this._wb.setMissingCellPolicy(Row.MissingCellPolicy.RETURN_BLANK_AS_NULL);
for (int i = 0; i < this._wb.getNumberOfSheets(); i++) {
HSSFSheet sheetAt = this._wb.getSheetAt(i);
if (sheetAt != null) {
if (this._includeSheetNames && (sheetName = this._wb.getSheetName(i)) != null) {
stringBuffer.append(sheetName);
stringBuffer.append("\n");
}
if (this._includeHeadersFooters) {
stringBuffer.append(_extractHeaderFooter(sheetAt.getHeader()));
}
int lastRowNum = sheetAt.getLastRowNum();
for (int firstRowNum = sheetAt.getFirstRowNum(); firstRowNum <= lastRowNum; firstRowNum++) {
HSSFRow row = sheetAt.getRow(firstRowNum);
if (row != null) {
int firstCellNum = row.getFirstCellNum();
short lastCellNum = row.getLastCellNum();
if (this._includeBlankCells) {
firstCellNum = 0;
}
while (firstCellNum < lastCellNum) {
HSSFCell cell = row.getCell(firstCellNum);
if (cell == null) {
z = this._includeBlankCells;
} else {
int[] iArr = 1.$SwitchMap$org$apache$poi$ss$usermodel$CellType;
int i3 = iArr[cell.getCellTypeEnum().ordinal()];
if (i3 == 1) {
stringBuffer.append(cell.getRichStringCellValue().getString());
} else if (i3 == 2) {
stringBuffer.append(this._formatter.formatCellValue(cell));
} else if (i3 == 3) {
stringBuffer.append(cell.getBooleanCellValue());
} else if (i3 == 4) {
stringBuffer.append(ErrorEval.getText(cell.getErrorCellValue()));
} else if (i3 != 5) {
StringBuilder q = b.q("Unexpected cell type (");
q.append(cell.getCellTypeEnum());
q.append(")");
throw new RuntimeException(q.toString());
} else if (!this._shouldEvaluateFormulas) {
stringBuffer.append(cell.getCellFormula());
} else {
int i4 = iArr[cell.getCachedFormulaResultTypeEnum().ordinal()];
if (i4 == 1) {
HSSFRichTextString richStringCellValue = cell.getRichStringCellValue();
if (richStringCellValue != null && richStringCellValue.length() > 0) {
stringBuffer.append(richStringCellValue);
}
} else if (i4 == 2) {
HSSFCellStyle cellStyle = cell.getCellStyle();
stringBuffer.append(this._formatter.formatRawCellContents(cell.getNumericCellValue(), cellStyle.getDataFormat(), cellStyle.getDataFormatString()));
} else if (i4 == 3) {
stringBuffer.append(cell.getBooleanCellValue());
} else if (i4 == 4) {
stringBuffer.append(ErrorEval.getText(cell.getErrorCellValue()));
} else {
StringBuilder q2 = b.q("Unexpected cell cached formula result type: ");
q2.append(cell.getCachedFormulaResultTypeEnum());
throw new IllegalStateException(q2.toString());
}
}
HSSFComment cellComment = cell.getCellComment();
if (this._includeCellComments && cellComment != null) {
String replace = cellComment.getString().getString().replace(10, ' ');
StringBuilder q3 = b.q(" Comment by ");
q3.append(cellComment.getAuthor());
q3.append(": ");
q3.append(replace);
stringBuffer.append(q3.toString());
}
z = true;
}
if (z && firstCellNum < lastCellNum - 1) {
stringBuffer.append("\t");
}
firstCellNum++;
}
stringBuffer.append("\n");
}
}
if (this._includeHeadersFooters) {
stringBuffer.append(_extractHeaderFooter(sheetAt.getFooter()));
}
}
}
return stringBuffer.toString();
}

public void setFormulasNotResults(boolean z) {
this._shouldEvaluateFormulas = !z;
}

public void setIncludeBlankCells(boolean z) {
this._includeBlankCells = z;
}

public void setIncludeCellComments(boolean z) {
this._includeCellComments = z;
}

public void setIncludeHeadersFooters(boolean z) {
this._includeHeadersFooters = z;
}

public void setIncludeSheetNames(boolean z) {
this._includeSheetNames = z;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\hssf\record\ArrayRecord.java

package org.apache.poi.hssf.record;

import android.support.v4.media.c;
import org.apache.poi.hssf.util.CellRangeAddress8Bit;
import org.apache.poi.ss.formula.Formula;
import org.apache.poi.ss.formula.ptg.Ptg;
import org.apache.poi.util.HexDump;
import org.apache.poi.util.LittleEndianOutput;

public final class ArrayRecord extends SharedValueRecordBase implements Cloneable {
private static final int OPT_ALWAYS_RECALCULATE = 1;
private static final int OPT_CALCULATE_ON_OPEN = 2;
public static final short sid = 545;
private int _field3notUsed;
private Formula _formula;
private int _options;

public ArrayRecord(RecordInputStream recordInputStream) {
super(recordInputStream);
this._options = recordInputStream.readUShort();
this._field3notUsed = recordInputStream.readInt();
this._formula = Formula.read(recordInputStream.readUShort(), recordInputStream, recordInputStream.available());
}

public ArrayRecord(Formula formula, CellRangeAddress8Bit cellRangeAddress8Bit) {
super(cellRangeAddress8Bit);
this._options = 0;
this._field3notUsed = 0;
this._formula = formula;
}

public ArrayRecord clone() {
ArrayRecord arrayRecord = new ArrayRecord(this._formula.copy(), getRange());
arrayRecord._options = this._options;
arrayRecord._field3notUsed = this._field3notUsed;
return arrayRecord;
}

public int getExtraDataSize() {
return this._formula.getEncodedSize() + 6;
}

public Ptg[] getFormulaTokens() {
return this._formula.getTokens();
}

public short getSid() {
return sid;
}

public boolean isAlwaysRecalculate() {
return (this._options & 1) != 0;
}

public boolean isCalculateOnOpen() {
return (this._options & 2) != 0;
}

public void serializeExtraData(LittleEndianOutput littleEndianOutput) {
littleEndianOutput.writeShort(this._options);
littleEndianOutput.writeInt(this._field3notUsed);
this._formula.serialize(littleEndianOutput);
}

public String toString() {
StringBuffer stringBuffer = new StringBuffer();
stringBuffer.append(ArrayRecord.class.getName());
stringBuffer.append(" [ARRAY]\n");
stringBuffer.append(" range=");
stringBuffer.append(getRange());
stringBuffer.append("\n");
stringBuffer.append(" options=");
c.n(this._options, stringBuffer, "\n", " notUsed=");
stringBuffer.append(HexDump.intToHex(this._field3notUsed));
stringBuffer.append("\n");
stringBuffer.append(" formula:");
stringBuffer.append("\n");
Ptg[] tokens = this._formula.getTokens();
for (Ptg ptg : tokens) {
stringBuffer.append(ptg);
stringBuffer.append(ptg.getRVAType());
stringBuffer.append("\n");
}
stringBuffer.append("]");
return stringBuffer.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\hssf\record\FooterRecord.java

package org.apache.poi.hssf.record;

import android.support.v4.media.a;

public final class FooterRecord extends HeaderFooterBase implements Cloneable {
public static final short sid = 21;

public FooterRecord(String str) {
super(str);
}

public FooterRecord(RecordInputStream recordInputStream) {
super(recordInputStream);
}

public FooterRecord clone() {
return new FooterRecord(getText());
}

public short getSid() {
return 21;
}

public String toString() {
StringBuffer s = a.s("[FOOTER]\n", "    .footer = ");
s.append(getText());
s.append("\n");
s.append("[/FOOTER]\n");
return s.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\hssf\record\NoteStructureSubRecord.java

package org.apache.poi.hssf.record;

import android.support.v4.media.a;
import android.support.v4.media.b;
import org.apache.poi.util.HexDump;
import org.apache.poi.util.LittleEndianInput;
import org.apache.poi.util.LittleEndianOutput;
import org.apache.poi.util.RecordFormatException;

public final class NoteStructureSubRecord extends SubRecord implements Cloneable {
private static final int ENCODED_SIZE = 22;
public static final short sid = 13;
private byte[] reserved;

public NoteStructureSubRecord() {
this.reserved = new byte[22];
}

public NoteStructureSubRecord(LittleEndianInput littleEndianInput, int i) {
if (i == 22) {
byte[] bArr = new byte[i];
littleEndianInput.readFully(bArr);
this.reserved = bArr;
return;
}
throw new RecordFormatException(b.h("Unexpected size (", i, ")"));
}

public NoteStructureSubRecord clone() {
NoteStructureSubRecord noteStructureSubRecord = new NoteStructureSubRecord();
byte[] bArr = this.reserved;
int length = bArr.length;
byte[] bArr2 = new byte[length];
System.arraycopy(bArr, 0, bArr2, 0, length);
noteStructureSubRecord.reserved = bArr2;
return noteStructureSubRecord;
}

public int getDataSize() {
return this.reserved.length;
}

public short getSid() {
return 13;
}

public void serialize(LittleEndianOutput littleEndianOutput) {
littleEndianOutput.writeShort(13);
littleEndianOutput.writeShort(this.reserved.length);
littleEndianOutput.write(this.reserved);
}

public String toString() {
StringBuffer t = a.t("[ftNts ]", "\n", "  size     = ");
t.append(getDataSize());
t.append("\n");
t.append("  reserved = ");
t.append(HexDump.toHex(this.reserved));
t.append("\n");
t.append("[/ftNts ]");
t.append("\n");
return t.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\hssf\record\aggregates\ColumnInfoRecordsAggregate.java

package org.apache.poi.hssf.record.aggregates;

import android.support.v4.media.a;
import android.support.v4.media.b;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import org.apache.poi.hssf.model.RecordStream;
import org.apache.poi.hssf.record.ColumnInfoRecord;
import org.apache.poi.hssf.record.aggregates.RecordAggregate;

public final class ColumnInfoRecordsAggregate extends RecordAggregate implements Cloneable {
private final List<ColumnInfoRecord> records;

public ColumnInfoRecordsAggregate() {
this.records = new ArrayList();
}

public ColumnInfoRecordsAggregate(RecordStream recordStream) {
this();
ColumnInfoRecord columnInfoRecord = null;
boolean z = true;
while (recordStream.peekNextClass() == ColumnInfoRecord.class) {
ColumnInfoRecord columnInfoRecord2 = (ColumnInfoRecord) recordStream.getNext();
this.records.add(columnInfoRecord2);
if (columnInfoRecord != null && CIRComparator.compareColInfos(columnInfoRecord, columnInfoRecord2) > 0) {
z = false;
}
columnInfoRecord = columnInfoRecord2;
}
if (this.records.size() < 1) {
throw new RuntimeException("No column info records found");
} else if (!z) {
Collections.sort(this.records, CIRComparator.instance);
}
}

private void attemptMergeColInfoRecords(int i) {
int size = this.records.size();
if (i < 0 || i >= size) {
StringBuilder u = a.u("colInfoIx ", i, " is out of range (0..");
u.append(size - 1);
u.append(")");
throw new IllegalArgumentException(u.toString());
}
ColumnInfoRecord colInfo = getColInfo(i);
int i3 = i + 1;
if (i3 < size && mergeColInfoRecords(colInfo, getColInfo(i3))) {
this.records.remove(i3);
}
if (i > 0 && mergeColInfoRecords(getColInfo(i - 1), colInfo)) {
this.records.remove(i);
}
}

private static ColumnInfoRecord copyColInfo(ColumnInfoRecord columnInfoRecord) {
return columnInfoRecord.clone();
}

private int findColInfoIdx(int i, int i3) {
if (i < 0) {
throw new IllegalArgumentException(b.g("column parameter out of range: ", i));
} else if (i3 >= 0) {
while (i3 < this.records.size()) {
ColumnInfoRecord colInfo = getColInfo(i3);
if (colInfo.containsColumn(i)) {
return i3;
}
if (colInfo.getFirstColumn() > i) {
return -1;
}
i3++;
}
return -1;
} else {
throw new IllegalArgumentException(b.g("fromIdx parameter out of range: ", i3));
}
}

private int findEndOfColumnOutlineGroup(int i) {
ColumnInfoRecord columnInfoRecord = this.records.get(i);
int outlineLevel = columnInfoRecord.getOutlineLevel();
while (i < this.records.size() - 1) {
int i3 = i + 1;
ColumnInfoRecord columnInfoRecord2 = this.records.get(i3);
if (!columnInfoRecord.isAdjacentBefore(columnInfoRecord2) || columnInfoRecord2.getOutlineLevel() < outlineLevel) {
break;
}
columnInfoRecord = columnInfoRecord2;
i = i3;
}
return i;
}

private int findStartOfColumnOutlineGroup(int i) {
ColumnInfoRecord columnInfoRecord = this.records.get(i);
int outlineLevel = columnInfoRecord.getOutlineLevel();
while (i != 0) {
ColumnInfoRecord columnInfoRecord2 = this.records.get(i - 1);
if (!columnInfoRecord2.isAdjacentBefore(columnInfoRecord) || columnInfoRecord2.getOutlineLevel() < outlineLevel) {
break;
}
i--;
columnInfoRecord = columnInfoRecord2;
}
return i;
}

private ColumnInfoRecord getColInfo(int i) {
return this.records.get(i);
}

private void insertColumn(int i, ColumnInfoRecord columnInfoRecord) {
this.records.add(i, columnInfoRecord);
}

private boolean isColumnGroupCollapsed(int i) {
int findEndOfColumnOutlineGroup = findEndOfColumnOutlineGroup(i);
int i3 = findEndOfColumnOutlineGroup + 1;
if (i3 >= this.records.size()) {
return false;
}
ColumnInfoRecord colInfo = getColInfo(i3);
if (!getColInfo(findEndOfColumnOutlineGroup).isAdjacentBefore(colInfo)) {
return false;
}
return colInfo.getCollapsed();
}

/* JADX WARNING: Removed duplicated region for block: B:13:0x004a A[RETURN] */
/* JADX WARNING: Removed duplicated region for block: B:14:0x004b A[RETURN] */
/* JADX WARNING: Removed duplicated region for block: B:8:0x002e  */
/* Code decompiled incorrectly, please refer to instructions dump. */
private boolean isColumnGroupHiddenByParent(int r5) {
/*
r4 = this;
int r0 = r4.findEndOfColumnOutlineGroup(r5)
java.util.List<org.apache.poi.hssf.record.ColumnInfoRecord> r1 = r4.records
int r1 = r1.size()
r2 = 0
if (r0 >= r1) goto L_0x0026
int r1 = r0 + 1
org.apache.poi.hssf.record.ColumnInfoRecord r1 = r4.getColInfo(r1)
org.apache.poi.hssf.record.ColumnInfoRecord r0 = r4.getColInfo(r0)
boolean r0 = r0.isAdjacentBefore(r1)
if (r0 == 0) goto L_0x0026
int r0 = r1.getOutlineLevel()
boolean r1 = r1.getHidden()
goto L_0x0028
L_0x0026:
r0 = r2
r1 = r0
L_0x0028:
int r5 = r4.findStartOfColumnOutlineGroup(r5)
if (r5 <= 0) goto L_0x0047
int r3 = r5 + -1
org.apache.poi.hssf.record.ColumnInfoRecord r3 = r4.getColInfo(r3)
org.apache.poi.hssf.record.ColumnInfoRecord r5 = r4.getColInfo(r5)
boolean r5 = r3.isAdjacentBefore(r5)
if (r5 == 0) goto L_0x0047
int r2 = r3.getOutlineLevel()
boolean r5 = r3.getHidden()
goto L_0x0048
L_0x0047:
r5 = r2
L_0x0048:
if (r0 <= r2) goto L_0x004b
return r1
L_0x004b:
return r5
*/
throw new UnsupportedOperationException("Method not decompiled: org.apache.poi.hssf.record.aggregates.ColumnInfoRecordsAggregate.isColumnGroupHiddenByParent(int):boolean");
}

private static boolean mergeColInfoRecords(ColumnInfoRecord columnInfoRecord, ColumnInfoRecord columnInfoRecord2) {
if (!columnInfoRecord.isAdjacentBefore(columnInfoRecord2) || !columnInfoRecord.formatMatches(columnInfoRecord2)) {
return false;
}
columnInfoRecord.setLastColumn(columnInfoRecord2.getLastColumn());
return true;
}

private static void setColumnInfoFields(ColumnInfoRecord columnInfoRecord, Short sh, Integer num, Integer num2, Boolean bool, Boolean bool2) {
if (sh != null) {
columnInfoRecord.setXFIndex(sh.shortValue());
}
if (num != null) {
columnInfoRecord.setColumnWidth(num.intValue());
}
if (num2 != null) {
columnInfoRecord.setOutlineLevel(num2.shortValue());
}
if (bool != null) {
columnInfoRecord.setHidden(bool.booleanValue());
}
if (bool2 != null) {
columnInfoRecord.setCollapsed(bool2.booleanValue());
}
}

private int setGroupHidden(int i, int i3, boolean z) {
ColumnInfoRecord colInfo = getColInfo(i);
while (i < this.records.size()) {
colInfo.setHidden(z);
i++;
if (i < this.records.size()) {
ColumnInfoRecord colInfo2 = getColInfo(i);
if (!colInfo.isAdjacentBefore(colInfo2) || colInfo2.getOutlineLevel() < i3) {
break;
}
colInfo = colInfo2;
}
}
return colInfo.getLastColumn();
}

public ColumnInfoRecordsAggregate clone() {
ColumnInfoRecordsAggregate columnInfoRecordsAggregate = new ColumnInfoRecordsAggregate();
for (ColumnInfoRecord clone : this.records) {
columnInfoRecordsAggregate.records.add(clone.clone());
}
return columnInfoRecordsAggregate;
}

public void collapseColumn(int i) {
int findColInfoIdx = findColInfoIdx(i, 0);
if (findColInfoIdx != -1) {
int findStartOfColumnOutlineGroup = findStartOfColumnOutlineGroup(findColInfoIdx);
setColumn(setGroupHidden(findStartOfColumnOutlineGroup, getColInfo(findStartOfColumnOutlineGroup).getOutlineLevel(), true) + 1, (Short) null, (Integer) null, (Integer) null, (Boolean) null, Boolean.TRUE);
}
}

public void expandColumn(int i) {
int findColInfoIdx = findColInfoIdx(i, 0);
if (findColInfoIdx != -1 && isColumnGroupCollapsed(findColInfoIdx)) {
int findEndOfColumnOutlineGroup = findEndOfColumnOutlineGroup(findColInfoIdx);
ColumnInfoRecord colInfo = getColInfo(findEndOfColumnOutlineGroup);
if (!isColumnGroupHiddenByParent(findColInfoIdx)) {
int outlineLevel = colInfo.getOutlineLevel();
for (int findStartOfColumnOutlineGroup = findStartOfColumnOutlineGroup(findColInfoIdx); findStartOfColumnOutlineGroup <= findEndOfColumnOutlineGroup; findStartOfColumnOutlineGroup++) {
ColumnInfoRecord colInfo2 = getColInfo(findStartOfColumnOutlineGroup);
if (outlineLevel == colInfo2.getOutlineLevel()) {
colInfo2.setHidden(false);
}
}
}
setColumn(colInfo.getLastColumn() + 1, (Short) null, (Integer) null, (Integer) null, (Boolean) null, Boolean.FALSE);
}
}

public ColumnInfoRecord findColumnInfo(int i) {
int size = this.records.size();
for (int i3 = 0; i3 < size; i3++) {
ColumnInfoRecord colInfo = getColInfo(i3);
if (colInfo.containsColumn(i)) {
return colInfo;
}
}
return null;
}

public int getMaxOutlineLevel() {
int size = this.records.size();
int i = 0;
for (int i3 = 0; i3 < size; i3++) {
i = Math.max(getColInfo(i3).getOutlineLevel(), i);
}
return i;
}

public int getNumColumns() {
return this.records.size();
}

public int getOutlineLevel(int i) {
ColumnInfoRecord findColumnInfo = findColumnInfo(i);
if (findColumnInfo != null) {
return findColumnInfo.getOutlineLevel();
}
return 0;
}

public void groupColumnRange(int i, int i3, boolean z) {
int i4;
int i5;
int i6 = 0;
while (i <= i3) {
int findColInfoIdx = findColInfoIdx(i, i6);
if (findColInfoIdx != -1) {
int outlineLevel = getColInfo(findColInfoIdx).getOutlineLevel();
i5 = Math.min(7, Math.max(0, z ? outlineLevel + 1 : outlineLevel - 1));
i4 = Math.max(0, findColInfoIdx - 1);
} else {
i4 = i6;
i5 = 1;
}
setColumn(i, (Short) null, (Integer) null, Integer.valueOf(i5), (Boolean) null, (Boolean) null);
i++;
i6 = i4;
}
}

public void insertColumn(ColumnInfoRecord columnInfoRecord) {
this.records.add(columnInfoRecord);
Collections.sort(this.records, CIRComparator.instance);
}

public void setColumn(int i, Short sh, Integer num, Integer num2, Boolean bool, Boolean bool2) {
ColumnInfoRecord columnInfoRecord;
int i3 = i;
boolean z = false;
int i4 = 0;
while (true) {
if (i4 >= this.records.size()) {
break;
}
columnInfoRecord = this.records.get(i4);
if (columnInfoRecord.containsColumn(i)) {
break;
} else if (columnInfoRecord.getFirstColumn() > i3) {
break;
} else {
i4++;
}
}
columnInfoRecord = null;
ColumnInfoRecord columnInfoRecord2 = columnInfoRecord;
if (columnInfoRecord2 == null) {
ColumnInfoRecord columnInfoRecord3 = new ColumnInfoRecord();
columnInfoRecord3.setFirstColumn(i);
columnInfoRecord3.setLastColumn(i);
setColumnInfoFields(columnInfoRecord3, sh, num, num2, bool, bool2);
insertColumn(i4, columnInfoRecord3);
attemptMergeColInfoRecords(i4);
return;
}
boolean z2 = (sh == null || columnInfoRecord2.getXFIndex() == sh.shortValue()) ? false : true;
boolean z3 = (num == null || columnInfoRecord2.getColumnWidth() == num.shortValue()) ? false : true;
boolean z4 = (num2 == null || columnInfoRecord2.getOutlineLevel() == num2.intValue()) ? false : true;
boolean z5 = (bool == null || columnInfoRecord2.getHidden() == bool.booleanValue()) ? false : true;
boolean z6 = (bool2 == null || columnInfoRecord2.getCollapsed() == bool2.booleanValue()) ? false : true;
if (z2 || z3 || z4 || z5 || z6) {
z = true;
}
if (z) {
if (columnInfoRecord2.getFirstColumn() == i3 && columnInfoRecord2.getLastColumn() == i3) {
setColumnInfoFields(columnInfoRecord2, sh, num, num2, bool, bool2);
attemptMergeColInfoRecords(i4);
} else if (columnInfoRecord2.getFirstColumn() == i3 || columnInfoRecord2.getLastColumn() == i3) {
if (columnInfoRecord2.getFirstColumn() == i3) {
columnInfoRecord2.setFirstColumn(i3 + 1);
} else {
columnInfoRecord2.setLastColumn(i3 - 1);
i4++;
}
ColumnInfoRecord copyColInfo = copyColInfo(columnInfoRecord2);
copyColInfo.setFirstColumn(i);
copyColInfo.setLastColumn(i);
setColumnInfoFields(copyColInfo, sh, num, num2, bool, bool2);
insertColumn(i4, copyColInfo);
attemptMergeColInfoRecords(i4);
} else {
ColumnInfoRecord copyColInfo2 = copyColInfo(columnInfoRecord2);
ColumnInfoRecord copyColInfo3 = copyColInfo(columnInfoRecord2);
int lastColumn = columnInfoRecord2.getLastColumn();
columnInfoRecord2.setLastColumn(i3 - 1);
copyColInfo2.setFirstColumn(i);
copyColInfo2.setLastColumn(i);
setColumnInfoFields(copyColInfo2, sh, num, num2, bool, bool2);
int i5 = i4 + 1;
insertColumn(i5, copyColInfo2);
copyColInfo3.setFirstColumn(i3 + 1);
copyColInfo3.setLastColumn(lastColumn);
insertColumn(i5 + 1, copyColInfo3);
}
}
}

public void visitContainedRecords(RecordAggregate.RecordVisitor recordVisitor) {
int size = this.records.size();
if (size >= 1) {
ColumnInfoRecord columnInfoRecord = null;
int i = 0;
while (i < size) {
ColumnInfoRecord columnInfoRecord2 = this.records.get(i);
recordVisitor.visitRecord(columnInfoRecord2);
if (columnInfoRecord == null || CIRComparator.compareColInfos(columnInfoRecord, columnInfoRecord2) <= 0) {
i++;
columnInfoRecord = columnInfoRecord2;
} else {
throw new RuntimeException("Column info records are out of order");
}
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\hssf\record\chart\ChartEndBlockRecord.java

package org.apache.poi.hssf.record.chart;

import android.support.v4.media.a;
import android.support.v4.media.b;
import org.apache.poi.hssf.record.RecordInputStream;
import org.apache.poi.hssf.record.StandardRecord;
import org.apache.poi.util.HexDump;
import org.apache.poi.util.LittleEndianOutput;

public final class ChartEndBlockRecord extends StandardRecord implements Cloneable {
public static final short sid = 2131;
private short grbitFrt;
private short iObjectKind;
private short rt;
private byte[] unused;

public ChartEndBlockRecord() {
}

public ChartEndBlockRecord(RecordInputStream recordInputStream) {
this.rt = recordInputStream.readShort();
this.grbitFrt = recordInputStream.readShort();
this.iObjectKind = recordInputStream.readShort();
if (recordInputStream.available() == 0) {
this.unused = new byte[0];
return;
}
byte[] bArr = new byte[6];
this.unused = bArr;
recordInputStream.readFully(bArr);
}

public ChartEndBlockRecord clone() {
ChartEndBlockRecord chartEndBlockRecord = new ChartEndBlockRecord();
chartEndBlockRecord.rt = this.rt;
chartEndBlockRecord.grbitFrt = this.grbitFrt;
chartEndBlockRecord.iObjectKind = this.iObjectKind;
chartEndBlockRecord.unused = (byte[]) this.unused.clone();
return chartEndBlockRecord;
}

public int getDataSize() {
return this.unused.length + 6;
}

public short getSid() {
return sid;
}

public void serialize(LittleEndianOutput littleEndianOutput) {
littleEndianOutput.writeShort(this.rt);
littleEndianOutput.writeShort(this.grbitFrt);
littleEndianOutput.writeShort(this.iObjectKind);
littleEndianOutput.write(this.unused);
}

public String toString() {
StringBuffer s = a.s("[ENDBLOCK]\n", "    .rt         =");
b.x(this.rt, s, 10, "    .grbitFrt   =");
b.x(this.grbitFrt, s, 10, "    .iObjectKind=");
b.x(this.iObjectKind, s, 10, "    .unused     =");
s.append(HexDump.toHex(this.unused));
s.append(10);
s.append("[/ENDBLOCK]\n");
return s.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\hssf\record\chart\LinkedDataRecord.java

package org.apache.poi.hssf.record.chart;

import android.support.v4.media.a;
import org.apache.poi.hssf.record.RecordInputStream;
import org.apache.poi.hssf.record.StandardRecord;
import org.apache.poi.ss.formula.Formula;
import org.apache.poi.ss.formula.ptg.Ptg;
import org.apache.poi.util.BitField;
import org.apache.poi.util.BitFieldFactory;
import org.apache.poi.util.HexDump;
import org.apache.poi.util.LittleEndianOutput;

public final class LinkedDataRecord extends StandardRecord implements Cloneable {
public static final byte LINK_TYPE_CATEGORIES = 2;
public static final byte LINK_TYPE_SECONDARY_CATEGORIES = 3;
public static final byte LINK_TYPE_TITLE_OR_TEXT = 0;
public static final byte LINK_TYPE_VALUES = 1;
public static final byte REFERENCE_TYPE_DEFAULT_CATEGORIES = 0;
public static final byte REFERENCE_TYPE_DIRECT = 1;
public static final byte REFERENCE_TYPE_ERROR_REPORTED = 4;
public static final byte REFERENCE_TYPE_NOT_USED = 3;
public static final byte REFERENCE_TYPE_WORKSHEET = 2;
private static final BitField customNumberFormat = BitFieldFactory.getInstance(1);
public static final short sid = 4177;
private byte field_1_linkType;
private byte field_2_referenceType;
private short field_3_options;
private short field_4_indexNumberFmtRecord;
private Formula field_5_formulaOfLink;

public LinkedDataRecord() {
}

public LinkedDataRecord(RecordInputStream recordInputStream) {
this.field_1_linkType = recordInputStream.readByte();
this.field_2_referenceType = recordInputStream.readByte();
this.field_3_options = recordInputStream.readShort();
this.field_4_indexNumberFmtRecord = recordInputStream.readShort();
this.field_5_formulaOfLink = Formula.read(recordInputStream.readUShort(), recordInputStream);
}

public LinkedDataRecord clone() {
LinkedDataRecord linkedDataRecord = new LinkedDataRecord();
linkedDataRecord.field_1_linkType = this.field_1_linkType;
linkedDataRecord.field_2_referenceType = this.field_2_referenceType;
linkedDataRecord.field_3_options = this.field_3_options;
linkedDataRecord.field_4_indexNumberFmtRecord = this.field_4_indexNumberFmtRecord;
linkedDataRecord.field_5_formulaOfLink = this.field_5_formulaOfLink.copy();
return linkedDataRecord;
}

public int getDataSize() {
return this.field_5_formulaOfLink.getEncodedSize() + 6;
}

public Ptg[] getFormulaOfLink() {
return this.field_5_formulaOfLink.getTokens();
}

public short getIndexNumberFmtRecord() {
return this.field_4_indexNumberFmtRecord;
}

public byte getLinkType() {
return this.field_1_linkType;
}

public short getOptions() {
return this.field_3_options;
}

public byte getReferenceType() {
return this.field_2_referenceType;
}

public short getSid() {
return sid;
}

public boolean isCustomNumberFormat() {
return customNumberFormat.isSet(this.field_3_options);
}

public void serialize(LittleEndianOutput littleEndianOutput) {
littleEndianOutput.writeByte(this.field_1_linkType);
littleEndianOutput.writeByte(this.field_2_referenceType);
littleEndianOutput.writeShort(this.field_3_options);
littleEndianOutput.writeShort(this.field_4_indexNumberFmtRecord);
this.field_5_formulaOfLink.serialize(littleEndianOutput);
}

public void setCustomNumberFormat(boolean z) {
this.field_3_options = customNumberFormat.setShortBoolean(this.field_3_options, z);
}

public void setFormulaOfLink(Ptg[] ptgArr) {
this.field_5_formulaOfLink = Formula.create(ptgArr);
}

public void setIndexNumberFmtRecord(short s) {
this.field_4_indexNumberFmtRecord = s;
}

public void setLinkType(byte b) {
this.field_1_linkType = b;
}

public void setOptions(short s) {
this.field_3_options = s;
}

public void setReferenceType(byte b) {
this.field_2_referenceType = b;
}

public String toString() {
StringBuffer s = a.s("[AI]\n", "    .linkType             = ");
s.append(HexDump.byteToHex(getLinkType()));
s.append(10);
s.append("    .referenceType        = ");
s.append(HexDump.byteToHex(getReferenceType()));
s.append(10);
s.append("    .options              = ");
s.append(HexDump.shortToHex(getOptions()));
s.append(10);
s.append("    .customNumberFormat   = ");
s.append(isCustomNumberFormat());
s.append(10);
s.append("    .indexNumberFmtRecord = ");
s.append(HexDump.shortToHex(getIndexNumberFmtRecord()));
s.append(10);
s.append("    .formulaOfLink        = ");
s.append(10);
Ptg[] tokens = this.field_5_formulaOfLink.getTokens();
for (Ptg ptg : tokens) {
s.append(ptg);
s.append(ptg.getRVAType());
s.append(10);
}
s.append("[/AI]\n");
return s.toString();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\hssf\usermodel\HSSFHeader.java

package org.apache.poi.hssf.usermodel;

import com.google.firebase.installations.interop.BuildConfig;
import org.apache.poi.hssf.record.HeaderRecord;
import org.apache.poi.hssf.record.aggregates.PageSettingsBlock;
import org.apache.poi.ss.usermodel.Header;

public final class HSSFHeader extends HeaderFooter implements Header {
private final PageSettingsBlock _psb;

public HSSFHeader(PageSettingsBlock pageSettingsBlock) {
this._psb = pageSettingsBlock;
}

public String getRawText() {
HeaderRecord header = this._psb.getHeader();
return header == null ? BuildConfig.FLAVOR : header.getText();
}

public void setHeaderFooterText(String str) {
HeaderRecord header = this._psb.getHeader();
if (header == null) {
this._psb.setHeader(new HeaderRecord(str));
return;
}
header.setText(str);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\hssf\usermodel\HSSFPolygon.java

package org.apache.poi.hssf.usermodel;

import org.apache.poi.ddf.EscherArrayProperty;
import org.apache.poi.ddf.EscherBoolProperty;
import org.apache.poi.ddf.EscherClientDataRecord;
import org.apache.poi.ddf.EscherContainerRecord;
import org.apache.poi.ddf.EscherOptRecord;
import org.apache.poi.ddf.EscherRGBProperty;
import org.apache.poi.ddf.EscherRecord;
import org.apache.poi.ddf.EscherShapePathProperty;
import org.apache.poi.ddf.EscherSimpleProperty;
import org.apache.poi.ddf.EscherSpRecord;
import org.apache.poi.hssf.record.CommonObjectDataSubRecord;
import org.apache.poi.hssf.record.EndSubRecord;
import org.apache.poi.hssf.record.ObjRecord;
import org.apache.poi.hssf.record.TextObjectRecord;
import org.apache.poi.util.LittleEndian;
import org.apache.poi.util.POILogFactory;
import org.apache.poi.util.POILogger;

public class HSSFPolygon extends HSSFSimpleShape {
public static final short OBJECT_TYPE_MICROSOFT_OFFICE_DRAWING = 30;
private static POILogger logger = POILogFactory.getLogger(HSSFPolygon.class);

public HSSFPolygon(EscherContainerRecord escherContainerRecord, ObjRecord objRecord) {
super(escherContainerRecord, objRecord);
}

public HSSFPolygon(EscherContainerRecord escherContainerRecord, ObjRecord objRecord, TextObjectRecord textObjectRecord) {
super(escherContainerRecord, objRecord, textObjectRecord);
}

public HSSFPolygon(HSSFShape hSSFShape, HSSFAnchor hSSFAnchor) {
super(hSSFShape, hSSFAnchor);
}

public void afterRemove(HSSFPatriarch hSSFPatriarch) {
hSSFPatriarch.getBoundAggregate().removeShapeToObjRecord(getEscherContainer().getChildById(-4079));
}

public ObjRecord createObjRecord() {
ObjRecord objRecord = new ObjRecord();
CommonObjectDataSubRecord commonObjectDataSubRecord = new CommonObjectDataSubRecord();
commonObjectDataSubRecord.setObjectType(30);
commonObjectDataSubRecord.setLocked(true);
commonObjectDataSubRecord.setPrintable(true);
commonObjectDataSubRecord.setAutofill(true);
commonObjectDataSubRecord.setAutoline(true);
EndSubRecord endSubRecord = new EndSubRecord();
objRecord.addSubRecord(commonObjectDataSubRecord);
objRecord.addSubRecord(endSubRecord);
return objRecord;
}

public EscherContainerRecord createSpContainer() {
EscherContainerRecord escherContainerRecord = new EscherContainerRecord();
EscherSpRecord escherSpRecord = new EscherSpRecord();
EscherOptRecord escherOptRecord = new EscherOptRecord();
EscherClientDataRecord escherClientDataRecord = new EscherClientDataRecord();
escherContainerRecord.setRecordId(-4092);
escherContainerRecord.setOptions(15);
escherSpRecord.setRecordId(-4086);
escherSpRecord.setOptions(2);
if (getParent() == null) {
escherSpRecord.setFlags(2560);
} else {
escherSpRecord.setFlags(2562);
}
escherOptRecord.setRecordId(-4085);
escherOptRecord.setEscherProperty(new EscherSimpleProperty(4, false, false, 0));
escherOptRecord.setEscherProperty(new EscherSimpleProperty(322, false, false, 100));
escherOptRecord.setEscherProperty(new EscherSimpleProperty(323, false, false, 100));
escherOptRecord.setEscherProperty(new EscherShapePathProperty(324, 4));
escherOptRecord.setEscherProperty(new EscherSimpleProperty(383, false, false, 65537));
escherOptRecord.setEscherProperty(new EscherSimpleProperty(464, false, false, 0));
escherOptRecord.setEscherProperty(new EscherSimpleProperty(465, false, false, 0));
escherOptRecord.setEscherProperty(new EscherSimpleProperty(471, false, false, 0));
escherOptRecord.setEscherProperty(new EscherSimpleProperty(462, 0));
escherOptRecord.setEscherProperty(new EscherBoolProperty(511, 524296));
escherOptRecord.setEscherProperty(new EscherSimpleProperty(459, 9525));
escherOptRecord.setEscherProperty(new EscherRGBProperty(385, 134217737));
escherOptRecord.setEscherProperty(new EscherRGBProperty(448, 134217792));
escherOptRecord.setEscherProperty(new EscherBoolProperty(447, 1));
escherOptRecord.setEscherProperty(new EscherBoolProperty(959, 524288));
EscherRecord escherAnchor = getAnchor().getEscherAnchor();
escherClientDataRecord.setRecordId(-4079);
escherClientDataRecord.setOptions(0);
escherContainerRecord.addChildRecord(escherSpRecord);
escherContainerRecord.addChildRecord(escherOptRecord);
escherContainerRecord.addChildRecord(escherAnchor);
escherContainerRecord.addChildRecord(escherClientDataRecord);
return escherContainerRecord;
}

public TextObjectRecord createTextObjRecord() {
return null;
}

public int getDrawAreaHeight() {
EscherSimpleProperty lookup = getOptRecord().lookup(323);
if (lookup == null) {
return 100;
}
return lookup.getPropertyValue();
}

public int getDrawAreaWidth() {
EscherSimpleProperty lookup = getOptRecord().lookup(322);
if (lookup == null) {
return 100;
}
return lookup.getPropertyValue();
}

public int[] getXPoints() {
EscherArrayProperty lookup = getOptRecord().lookup(325);
if (lookup == null) {
return new int[0];
}
int[] iArr = new int[(lookup.getNumberOfElementsInArray() - 1)];
for (int i = 0; i < lookup.getNumberOfElementsInArray() - 1; i++) {
iArr[i] = LittleEndian.getShort(lookup.getElement(i), 0);
}
return iArr;
}

public int[] getYPoints() {
EscherArrayProperty lookup = getOptRecord().lookup(325);
if (lookup == null) {
return new int[0];
}
int[] iArr = new int[(lookup.getNumberOfElementsInArray() - 1)];
for (int i = 0; i < lookup.getNumberOfElementsInArray() - 1; i++) {
iArr[i] = LittleEndian.getShort(lookup.getElement(i), 2);
}
return iArr;
}

public void setPoints(int[] iArr, int[] iArr2) {
if (iArr.length != iArr2.length) {
logger.log(7, new Object[]{"xPoint.length must be equal to yPoints.length"});
return;
}
if (iArr.length == 0) {
logger.log(7, new Object[]{"HSSFPolygon must have at least one point"});
}
EscherArrayProperty escherArrayProperty = new EscherArrayProperty(325, false, new byte[0]);
escherArrayProperty.setNumberOfElementsInArray(iArr.length + 1);
escherArrayProperty.setNumberOfElementsInMemory(iArr.length + 1);
escherArrayProperty.setSizeOfElements(65520);
for (int i = 0; i < iArr.length; i++) {
byte[] bArr = new byte[4];
LittleEndian.putShort(bArr, 0, (short) iArr[i]);
LittleEndian.putShort(bArr, 2, (short) iArr2[i]);
escherArrayProperty.setElement(i, bArr);
}
int length = iArr.length;
byte[] bArr2 = new byte[4];
LittleEndian.putShort(bArr2, 0, (short) iArr[0]);
LittleEndian.putShort(bArr2, 2, (short) iArr2[0]);
escherArrayProperty.setElement(length, bArr2);
setPropertyValue(escherArrayProperty);
EscherArrayProperty escherArrayProperty2 = new EscherArrayProperty(326, false, (byte[]) null);
escherArrayProperty2.setSizeOfElements(2);
escherArrayProperty2.setNumberOfElementsInArray((iArr.length * 2) + 4);
escherArrayProperty2.setNumberOfElementsInMemory((iArr.length * 2) + 4);
escherArrayProperty2.setElement(0, new byte[]{0, 64});
escherArrayProperty2.setElement(1, new byte[]{0, -84});
for (int i3 = 0; i3 < iArr.length; i3++) {
int i4 = i3 * 2;
escherArrayProperty2.setElement(i4 + 2, new byte[]{1, 0});
escherArrayProperty2.setElement(i4 + 3, new byte[]{0, -84});
}
escherArrayProperty2.setElement(escherArrayProperty2.getNumberOfElementsInArray() - 2, new byte[]{1, 96});
escherArrayProperty2.setElement(escherArrayProperty2.getNumberOfElementsInArray() - 1, new byte[]{0, Byte.MIN_VALUE});
setPropertyValue(escherArrayProperty2);
}

public void setPolygonDrawArea(int i, int i3) {
setPropertyValue(new EscherSimpleProperty(322, i));
setPropertyValue(new EscherSimpleProperty(323, i3));
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\hssf\util\HSSFColor$DARK_TEAL.java

package org.apache.poi.hssf.util;

import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.util.Removal;

@Removal(version = "3.18")
@Deprecated
public class HSSFColor$DARK_TEAL extends HSSFColor.HSSFColorRef {
public static final String hexString;
public static final short index;
public static final int index2;
private static final HSSFColor.HSSFColorPredefined ref;
public static final short[] triplet;

static {
HSSFColor.HSSFColorPredefined hSSFColorPredefined = HSSFColor.HSSFColorPredefined.DARK_TEAL;
ref = hSSFColorPredefined;
index = hSSFColorPredefined.getIndex();
index2 = hSSFColorPredefined.getIndex2();
triplet = hSSFColorPredefined.getTriplet();
hexString = hSSFColorPredefined.getHexString();
}

public HSSFColor$DARK_TEAL() {
super(ref);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\hssf\util\HSSFColor$DARK_YELLOW.java

package org.apache.poi.hssf.util;

import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.util.Removal;

@Removal(version = "3.18")
@Deprecated
public class HSSFColor$DARK_YELLOW extends HSSFColor.HSSFColorRef {
public static final String hexString;
public static final short index;
public static final int index2;
private static final HSSFColor.HSSFColorPredefined ref;
public static final short[] triplet;

static {
HSSFColor.HSSFColorPredefined hSSFColorPredefined = HSSFColor.HSSFColorPredefined.DARK_YELLOW;
ref = hSSFColorPredefined;
index = hSSFColorPredefined.getIndex();
index2 = hSSFColorPredefined.getIndex2();
triplet = hSSFColorPredefined.getTriplet();
hexString = hSSFColorPredefined.getHexString();
}

public HSSFColor$DARK_YELLOW() {
super(ref);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\openxml4j\util\ZipInputStreamZipEntrySource$FakeZipEntry.java

package org.apache.poi.openxml4j.util;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.zip.ZipEntry;

public class ZipInputStreamZipEntrySource$FakeZipEntry extends ZipEntry {
private byte[] data;

public ZipInputStreamZipEntrySource$FakeZipEntry(ZipEntry zipEntry, InputStream inputStream) throws IOException {
super(zipEntry.getName());
ByteArrayOutputStream byteArrayOutputStream;
long size = zipEntry.getSize();
if (size == -1) {
byteArrayOutputStream = new ByteArrayOutputStream();
} else if (size < 2147483647L) {
byteArrayOutputStream = new ByteArrayOutputStream((int) size);
} else {
throw new IOException("ZIP entry size is too large");
}
byte[] bArr = new byte[4096];
while (true) {
int read = inputStream.read(bArr);
if (read != -1) {
byteArrayOutputStream.write(bArr, 0, read);
} else {
this.data = byteArrayOutputStream.toByteArray();
return;
}
}
}

public InputStream getInputStream() {
return new ByteArrayInputStream(this.data);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\poifs\crypt\DataSpaceMapUtils$1.java

package org.apache.poi.poifs.crypt;

import java.io.IOException;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.poifs.filesystem.POIFSWriterEvent;
import org.apache.poi.poifs.filesystem.POIFSWriterListener;

public class DataSpaceMapUtils$1 implements POIFSWriterListener {
public final /* synthetic */ byte[] val$buf;

public DataSpaceMapUtils$1(byte[] bArr) {
this.val$buf = bArr;
}

public void processPOIFSWriterEvent(POIFSWriterEvent pOIFSWriterEvent) {
try {
pOIFSWriterEvent.getStream().write(this.val$buf, 0, pOIFSWriterEvent.getLimit());
} catch (IOException e) {
throw new EncryptedDocumentException(e);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\poifs\crypt\cryptoapi\CryptoAPIDecryptor.java

package org.apache.poi.poifs.crypt.cryptoapi;

import com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser;
import java.io.IOException;
import java.io.InputStream;
import java.security.GeneralSecurityException;
import java.security.MessageDigest;
import java.util.Arrays;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.poifs.crypt.ChainingMode;
import org.apache.poi.poifs.crypt.ChunkedCipherInputStream;
import org.apache.poi.poifs.crypt.CryptoFunctions;
import org.apache.poi.poifs.crypt.Decryptor;
import org.apache.poi.poifs.crypt.EncryptionHeader;
import org.apache.poi.poifs.crypt.EncryptionInfo;
import org.apache.poi.poifs.crypt.EncryptionVerifier;
import org.apache.poi.poifs.crypt.HashAlgorithm;
import org.apache.poi.poifs.filesystem.DirectoryNode;
import org.apache.poi.util.LittleEndian;
import org.apache.poi.util.StringUtil;

public class CryptoAPIDecryptor extends Decryptor {
public static final /* synthetic */ boolean $assertionsDisabled = false;
/* access modifiers changed from: private */
public int chunkSize = -1;
private long length = -1;

static {
Class<CryptoAPIDecryptor> cls = CryptoAPIDecryptor.class;
}

public static SecretKey generateSecretKey(String str, EncryptionVerifier encryptionVerifier) {
if (str.length() > 255) {
str = str.substring(0, DefaultImageHeaderParser.SEGMENT_START_ID);
}
MessageDigest messageDigest = CryptoFunctions.getMessageDigest(encryptionVerifier.getHashAlgorithm());
messageDigest.update(encryptionVerifier.getSalt());
return new SecretKeySpec(messageDigest.digest(StringUtil.getToUnicodeLE(str)), encryptionVerifier.getCipherAlgorithm().jceId);
}

public static Cipher initCipherForBlock(Cipher cipher, int i, EncryptionInfo encryptionInfo, SecretKey secretKey, int i3) throws GeneralSecurityException {
HashAlgorithm hashAlgorithm = encryptionInfo.getVerifier().getHashAlgorithm();
byte[] bArr = new byte[4];
LittleEndian.putUInt(bArr, 0, (long) i);
MessageDigest messageDigest = CryptoFunctions.getMessageDigest(hashAlgorithm);
messageDigest.update(secretKey.getEncoded());
byte[] digest = messageDigest.digest(bArr);
EncryptionHeader header = encryptionInfo.getHeader();
int keySize = header.getKeySize();
byte[] block0 = CryptoFunctions.getBlock0(digest, keySize / 8);
if (keySize == 40) {
block0 = CryptoFunctions.getBlock0(block0, 16);
}
SecretKeySpec secretKeySpec = new SecretKeySpec(block0, secretKey.getAlgorithm());
if (cipher == null) {
return CryptoFunctions.getCipher(secretKeySpec, header.getCipherAlgorithm(), (ChainingMode) null, (byte[]) null, i3);
}
cipher.init(i3, secretKeySpec);
return cipher;
}

public CryptoAPIDecryptor clone() throws CloneNotSupportedException {
return CryptoAPIDecryptor.super.clone();
}

public ChunkedCipherInputStream getDataStream(InputStream inputStream, int i, int i3) throws IOException, GeneralSecurityException {
return new CryptoAPICipherInputStream(this, inputStream, (long) i, i3);
}

public ChunkedCipherInputStream getDataStream(DirectoryNode directoryNode) throws IOException, GeneralSecurityException {
throw new IOException("not supported");
}

public long getLength() {
long j2 = this.length;
if (j2 != -1) {
return j2;
}
throw new IllegalStateException("Decryptor.getDataStream() was not called");
}

/* JADX WARNING: Removed duplicated region for block: B:24:0x00bf A[Catch:{ all -> 0x00b5 }] */
/* JADX WARNING: Removed duplicated region for block: B:30:0x00ce A[Catch:{ all -> 0x00b5 }] */
/* Code decompiled incorrectly, please refer to instructions dump. */
public org.apache.poi.poifs.filesystem.POIFSFileSystem getSummaryEntries(org.apache.poi.poifs.filesystem.DirectoryNode r9, java.lang.String r10) throws java.io.IOException, java.security.GeneralSecurityException {
/*
r8 = this;
org.apache.poi.poifs.filesystem.Entry r10 = r9.getEntry(r10)
org.apache.poi.poifs.filesystem.DocumentNode r10 = (org.apache.poi.poifs.filesystem.DocumentNode) r10
org.apache.poi.poifs.filesystem.DocumentInputStream r9 = r9.createDocumentInputStream(r10)
java.io.ByteArrayOutputStream r10 = new java.io.ByteArrayOutputStream
r10.<init>()
org.apache.poi.util.IOUtils.copy(r9, r10)
r9.close()
org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDocumentInputStream r9 = new org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDocumentInputStream
byte[] r10 = r10.toByteArray()
r9.<init>(r8, r10)
org.apache.poi.util.LittleEndianInputStream r10 = new org.apache.poi.util.LittleEndianInputStream
r10.<init>(r9)
r0 = 0
long r1 = r10.readUInt()     // Catch:{ Exception -> 0x00b7 }
int r1 = (int) r1     // Catch:{ Exception -> 0x00b7 }
r10.readUInt()     // Catch:{ Exception -> 0x00b7 }
long r1 = (long) r1     // Catch:{ Exception -> 0x00b7 }
r3 = 8
long r1 = r1 - r3
long r3 = r9.skip(r1)     // Catch:{ Exception -> 0x00b7 }
int r1 = (r3 > r1 ? 1 : (r3 == r1 ? 0 : -1))
if (r1 < 0) goto L_0x00ad
r1 = 0
r9.setBlock(r1)     // Catch:{ Exception -> 0x00b7 }
long r2 = r10.readUInt()     // Catch:{ Exception -> 0x00b7 }
int r2 = (int) r2     // Catch:{ Exception -> 0x00b7 }
org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor$StreamDescriptorEntry[] r3 = new org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor.StreamDescriptorEntry[r2]     // Catch:{ Exception -> 0x00b7 }
r4 = r1
L_0x0044:
if (r4 >= r2) goto L_0x007d
org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor$StreamDescriptorEntry r5 = new org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor$StreamDescriptorEntry     // Catch:{ Exception -> 0x00b7 }
r5.<init>()     // Catch:{ Exception -> 0x00b7 }
r3[r4] = r5     // Catch:{ Exception -> 0x00b7 }
long r6 = r10.readUInt()     // Catch:{ Exception -> 0x00b7 }
int r6 = (int) r6     // Catch:{ Exception -> 0x00b7 }
r5.streamOffset = r6     // Catch:{ Exception -> 0x00b7 }
long r6 = r10.readUInt()     // Catch:{ Exception -> 0x00b7 }
int r6 = (int) r6     // Catch:{ Exception -> 0x00b7 }
r5.streamSize = r6     // Catch:{ Exception -> 0x00b7 }
int r6 = r10.readUShort()     // Catch:{ Exception -> 0x00b7 }
r5.block = r6     // Catch:{ Exception -> 0x00b7 }
int r6 = r10.readUByte()     // Catch:{ Exception -> 0x00b7 }
int r7 = r10.readUByte()     // Catch:{ Exception -> 0x00b7 }
r5.flags = r7     // Catch:{ Exception -> 0x00b7 }
int r7 = r10.readInt()     // Catch:{ Exception -> 0x00b7 }
r5.reserved2 = r7     // Catch:{ Exception -> 0x00b7 }
java.lang.String r6 = org.apache.poi.util.StringUtil.readUnicodeLE(r10, r6)     // Catch:{ Exception -> 0x00b7 }
r5.streamName = r6     // Catch:{ Exception -> 0x00b7 }
r10.readShort()     // Catch:{ Exception -> 0x00b7 }
int r4 = r4 + 1
goto L_0x0044
L_0x007d:
org.apache.poi.poifs.filesystem.POIFSFileSystem r4 = new org.apache.poi.poifs.filesystem.POIFSFileSystem     // Catch:{ Exception -> 0x00b7 }
r4.<init>()     // Catch:{ Exception -> 0x00b7 }
L_0x0082:
if (r1 >= r2) goto L_0x00a6
r0 = r3[r1]     // Catch:{ Exception -> 0x00a3 }
int r5 = r0.streamOffset     // Catch:{ Exception -> 0x00a3 }
r9.seek(r5)     // Catch:{ Exception -> 0x00a3 }
int r5 = r0.block     // Catch:{ Exception -> 0x00a3 }
r9.setBlock(r5)     // Catch:{ Exception -> 0x00a3 }
org.apache.poi.util.BoundedInputStream r5 = new org.apache.poi.util.BoundedInputStream     // Catch:{ Exception -> 0x00a3 }
int r6 = r0.streamSize     // Catch:{ Exception -> 0x00a3 }
long r6 = (long) r6     // Catch:{ Exception -> 0x00a3 }
r5.<init>(r9, r6)     // Catch:{ Exception -> 0x00a3 }
java.lang.String r0 = r0.streamName     // Catch:{ Exception -> 0x00a3 }
r4.createDocument(r5, r0)     // Catch:{ Exception -> 0x00a3 }
r5.close()     // Catch:{ Exception -> 0x00a3 }
int r1 = r1 + 1
goto L_0x0082
L_0x00a3:
r1 = move-exception
r0 = r4
goto L_0x00b8
L_0x00a6:
org.apache.poi.util.IOUtils.closeQuietly(r10)
org.apache.poi.util.IOUtils.closeQuietly(r9)
return r4
L_0x00ad:
java.io.EOFException r1 = new java.io.EOFException     // Catch:{ Exception -> 0x00b7 }
java.lang.String r2 = "buffer underrun"
r1.<init>(r2)     // Catch:{ Exception -> 0x00b7 }
throw r1     // Catch:{ Exception -> 0x00b7 }
L_0x00b5:
r0 = move-exception
goto L_0x00d1
L_0x00b7:
r1 = move-exception
L_0x00b8:
org.apache.poi.util.IOUtils.closeQuietly(r0)     // Catch:{ all -> 0x00b5 }
boolean r0 = r1 instanceof java.security.GeneralSecurityException     // Catch:{ all -> 0x00b5 }
if (r0 != 0) goto L_0x00ce
boolean r0 = r1 instanceof java.io.IOException     // Catch:{ all -> 0x00b5 }
if (r0 == 0) goto L_0x00c6
java.io.IOException r1 = (java.io.IOException) r1     // Catch:{ all -> 0x00b5 }
throw r1     // Catch:{ all -> 0x00b5 }
L_0x00c6:
java.io.IOException r0 = new java.io.IOException     // Catch:{ all -> 0x00b5 }
java.lang.String r2 = "summary entries can't be read"
r0.<init>(r2, r1)     // Catch:{ all -> 0x00b5 }
throw r0     // Catch:{ all -> 0x00b5 }
L_0x00ce:
java.security.GeneralSecurityException r1 = (java.security.GeneralSecurityException) r1     // Catch:{ all -> 0x00b5 }
throw r1     // Catch:{ all -> 0x00b5 }
L_0x00d1:
org.apache.poi.util.IOUtils.closeQuietly(r10)
org.apache.poi.util.IOUtils.closeQuietly(r9)
throw r0
*/
throw new UnsupportedOperationException("Method not decompiled: org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor.getSummaryEntries(org.apache.poi.poifs.filesystem.DirectoryNode, java.lang.String):org.apache.poi.poifs.filesystem.POIFSFileSystem");
}

public Cipher initCipherForBlock(Cipher cipher, int i) throws GeneralSecurityException {
return initCipherForBlock(cipher, i, getEncryptionInfo(), getSecretKey(), 2);
}

public void setChunkSize(int i) {
this.chunkSize = i;
}

public boolean verifyPassword(String str) {
EncryptionVerifier verifier = getEncryptionInfo().getVerifier();
SecretKey generateSecretKey = generateSecretKey(str, verifier);
try {
Cipher initCipherForBlock = initCipherForBlock((Cipher) null, 0, getEncryptionInfo(), generateSecretKey, 2);
byte[] encryptedVerifier = verifier.getEncryptedVerifier();
byte[] bArr = new byte[encryptedVerifier.length];
initCipherForBlock.update(encryptedVerifier, 0, encryptedVerifier.length, bArr);
setVerifier(bArr);
if (!Arrays.equals(CryptoFunctions.getMessageDigest(verifier.getHashAlgorithm()).digest(bArr), initCipherForBlock.doFinal(verifier.getEncryptedVerifierHash()))) {
return false;
}
setSecretKey(generateSecretKey);
return true;
} catch (GeneralSecurityException e) {
throw new EncryptedDocumentException(e);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\poifs\crypt\cryptoapi\CryptoAPIEncryptionHeader.java

package org.apache.poi.poifs.crypt.cryptoapi;

import android.support.v4.media.a;
import java.io.IOException;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.poifs.crypt.ChainingMode;
import org.apache.poi.poifs.crypt.CipherAlgorithm;
import org.apache.poi.poifs.crypt.CipherProvider;
import org.apache.poi.poifs.crypt.HashAlgorithm;
import org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader;
import org.apache.poi.util.LittleEndianInput;

public class CryptoAPIEncryptionHeader extends StandardEncryptionHeader {
public CryptoAPIEncryptionHeader(CipherAlgorithm cipherAlgorithm, HashAlgorithm hashAlgorithm, int i, int i3, ChainingMode chainingMode) {
super(cipherAlgorithm, hashAlgorithm, i, i3, chainingMode);
}

public CryptoAPIEncryptionHeader(LittleEndianInput littleEndianInput) throws IOException {
super(littleEndianInput);
}

public CryptoAPIEncryptionHeader clone() throws CloneNotSupportedException {
return CryptoAPIEncryptionHeader.super.clone();
}

public void setKeySize(int i) {
int[] iArr = getCipherAlgorithm().allowedKeySize;
int length = iArr.length;
boolean z = false;
int i3 = 0;
while (true) {
if (i3 >= length) {
break;
} else if (iArr[i3] == i) {
z = true;
break;
} else {
i3++;
}
}
if (z) {
CryptoAPIEncryptionHeader.super.setKeySize(i);
if (i > 40) {
setCspName("Microsoft Enhanced Cryptographic Provider v1.0");
} else {
setCspName(CipherProvider.rc4.cipherProviderName);
}
} else {
StringBuilder u = a.u("invalid keysize ", i, " for cipher algorithm ");
u.append(getCipherAlgorithm());
throw new EncryptedDocumentException(u.toString());
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\poifs\filesystem\NPOIFSFileSystem.java

package org.apache.poi.poifs.filesystem;

import android.support.v4.media.b;
import java.io.ByteArrayInputStream;
import java.io.Closeable;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import org.apache.poi.EmptyFileException;
import org.apache.poi.poifs.common.POIFSBigBlockSize;
import org.apache.poi.poifs.common.POIFSConstants;
import org.apache.poi.poifs.dev.POIFSViewable;
import org.apache.poi.poifs.filesystem.BlockStore;
import org.apache.poi.poifs.nio.ByteArrayBackedDataSource;
import org.apache.poi.poifs.nio.DataSource;
import org.apache.poi.poifs.nio.FileBackedDataSource;
import org.apache.poi.poifs.property.DirectoryProperty;
import org.apache.poi.poifs.property.NPropertyTable;
import org.apache.poi.poifs.storage.BATBlock;
import org.apache.poi.poifs.storage.BlockAllocationTableWriter;
import org.apache.poi.poifs.storage.HeaderBlock;
import org.apache.poi.poifs.storage.HeaderBlockWriter;
import org.apache.poi.util.CloseIgnoringInputStream;
import org.apache.poi.util.IOUtils;
import org.apache.poi.util.Internal;
import org.apache.poi.util.POILogFactory;
import org.apache.poi.util.POILogger;
import org.apache.poi.util.Removal;

public class NPOIFSFileSystem extends BlockStore implements POIFSViewable, Closeable {
private static final POILogger LOG = POILogFactory.getLogger(NPOIFSFileSystem.class);
private List<BATBlock> _bat_blocks;
private DataSource _data;
private HeaderBlock _header;
private NPOIFSMiniStore _mini_store;
private NPropertyTable _property_table;
private DirectoryNode _root;
private List<BATBlock> _xbat_blocks;
private POIFSBigBlockSize bigBlockSize;

public NPOIFSFileSystem() {
this(true);
this._header.setBATCount(1);
this._header.setBATArray(new int[]{1});
BATBlock createEmptyBATBlock = BATBlock.createEmptyBATBlock(this.bigBlockSize, false);
createEmptyBATBlock.setOurBlockIndex(1);
this._bat_blocks.add(createEmptyBATBlock);
setNextBlock(0, -2);
setNextBlock(1, -3);
this._property_table.setStartBlock(0);
}

public NPOIFSFileSystem(File file) throws IOException {
this(file, true);
}

public NPOIFSFileSystem(File file, boolean z) throws IOException {
this((FileChannel) null, file, z, true);
}

/* JADX WARNING: Removed duplicated region for block: B:19:0x006b  */
/* Code decompiled incorrectly, please refer to instructions dump. */
public NPOIFSFileSystem(java.io.InputStream r8) throws java.io.IOException {
/*
r7 = this;
r0 = 0
r7.<init>((boolean) r0)
java.nio.channels.ReadableByteChannel r1 = java.nio.channels.Channels.newChannel(r8)     // Catch:{ all -> 0x0067 }
r2 = 512(0x200, float:7.175E-43)
java.nio.ByteBuffer r2 = java.nio.ByteBuffer.allocate(r2)     // Catch:{ all -> 0x0065 }
org.apache.poi.util.IOUtils.readFully(r1, r2)     // Catch:{ all -> 0x0065 }
org.apache.poi.poifs.storage.HeaderBlock r3 = new org.apache.poi.poifs.storage.HeaderBlock     // Catch:{ all -> 0x0065 }
r3.<init>(r2)     // Catch:{ all -> 0x0065 }
r7._header = r3     // Catch:{ all -> 0x0065 }
int r3 = r3.getBATCount()     // Catch:{ all -> 0x0065 }
org.apache.poi.poifs.storage.BlockAllocationTableReader.sanityCheckBlockCount(r3)     // Catch:{ all -> 0x0065 }
org.apache.poi.poifs.storage.HeaderBlock r3 = r7._header     // Catch:{ all -> 0x0065 }
long r3 = org.apache.poi.poifs.storage.BATBlock.calculateMaximumSize(r3)     // Catch:{ all -> 0x0065 }
r5 = 2147483647(0x7fffffff, double:1.060997895E-314)
int r5 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
if (r5 > 0) goto L_0x005d
int r3 = (int) r3     // Catch:{ all -> 0x0065 }
java.nio.ByteBuffer r3 = java.nio.ByteBuffer.allocate(r3)     // Catch:{ all -> 0x0065 }
r2.position(r0)     // Catch:{ all -> 0x0065 }
r3.put(r2)     // Catch:{ all -> 0x0065 }
int r2 = r2.capacity()     // Catch:{ all -> 0x0065 }
r3.position(r2)     // Catch:{ all -> 0x0065 }
org.apache.poi.util.IOUtils.readFully(r1, r3)     // Catch:{ all -> 0x0065 }
r0 = 1
org.apache.poi.poifs.nio.ByteArrayBackedDataSource r2 = new org.apache.poi.poifs.nio.ByteArrayBackedDataSource     // Catch:{ all -> 0x0065 }
byte[] r4 = r3.array()     // Catch:{ all -> 0x0065 }
int r3 = r3.position()     // Catch:{ all -> 0x0065 }
r2.<init>(r4, r3)     // Catch:{ all -> 0x0065 }
r7._data = r2     // Catch:{ all -> 0x0065 }
if (r1 == 0) goto L_0x0056
r1.close()
L_0x0056:
r7.closeInputStream(r8, r0)
r7.readCoreContents()
return
L_0x005d:
java.lang.IllegalArgumentException r2 = new java.lang.IllegalArgumentException     // Catch:{ all -> 0x0065 }
java.lang.String r3 = "Unable read a >2gb file via an InputStream"
r2.<init>(r3)     // Catch:{ all -> 0x0065 }
throw r2     // Catch:{ all -> 0x0065 }
L_0x0065:
r2 = move-exception
goto L_0x0069
L_0x0067:
r2 = move-exception
r1 = 0
L_0x0069:
if (r1 == 0) goto L_0x006e
r1.close()
L_0x006e:
r7.closeInputStream(r8, r0)
throw r2
*/
throw new UnsupportedOperationException("Method not decompiled: org.apache.poi.poifs.filesystem.NPOIFSFileSystem.<init>(java.io.InputStream):void");
}

public NPOIFSFileSystem(FileChannel fileChannel) throws IOException {
this(fileChannel, true);
}

private NPOIFSFileSystem(FileChannel fileChannel, File file, boolean z, boolean z2) throws IOException {
this(false);
if (file != null) {
try {
if (file.length() != 0) {
FileBackedDataSource fileBackedDataSource = new FileBackedDataSource(file, z);
fileChannel = fileBackedDataSource.getChannel();
this._data = fileBackedDataSource;
} else {
throw new EmptyFileException();
}
} catch (IOException e) {
if (z2 && fileChannel != null) {
fileChannel.close();
}
throw e;
} catch (RuntimeException e2) {
if (z2 && fileChannel != null) {
fileChannel.close();
}
throw e2;
}
} else {
this._data = new FileBackedDataSource(fileChannel, z);
}
ByteBuffer allocate = ByteBuffer.allocate(512);
IOUtils.readFully(fileChannel, allocate);
this._header = new HeaderBlock(allocate);
readCoreContents();
}

public NPOIFSFileSystem(FileChannel fileChannel, boolean z) throws IOException {
this(fileChannel, (File) null, z, false);
}

private NPOIFSFileSystem(boolean z) {
POIFSBigBlockSize pOIFSBigBlockSize = POIFSConstants.SMALLER_BIG_BLOCK_SIZE_DETAILS;
this.bigBlockSize = pOIFSBigBlockSize;
this._header = new HeaderBlock(pOIFSBigBlockSize);
NPropertyTable nPropertyTable = new NPropertyTable(this._header);
this._property_table = nPropertyTable;
this._mini_store = new NPOIFSMiniStore(this, nPropertyTable.getRoot(), new ArrayList(), this._header);
this._xbat_blocks = new ArrayList();
this._bat_blocks = new ArrayList();
this._root = null;
if (z) {
this._data = new ByteArrayBackedDataSource(new byte[(this.bigBlockSize.getBigBlockSize() * 3)]);
}
}

private void closeInputStream(InputStream inputStream, boolean z) {
try {
inputStream.close();
} catch (IOException e) {
if (!z) {
LOG.log(7, new Object[]{"can't close input stream", e});
return;
}
throw new RuntimeException(e);
}
}

private BATBlock createBAT(int i, boolean z) throws IOException {
BATBlock createEmptyBATBlock = BATBlock.createEmptyBATBlock(this.bigBlockSize, !z);
createEmptyBATBlock.setOurBlockIndex(i);
this._data.write(ByteBuffer.allocate(this.bigBlockSize.getBigBlockSize()), (long) (this.bigBlockSize.getBigBlockSize() * (i + 1)));
return createEmptyBATBlock;
}

public static InputStream createNonClosingInputStream(InputStream inputStream) {
return new CloseIgnoringInputStream(inputStream);
}

@Deprecated
@Removal(version = "4.0")
public static boolean hasPOIFSHeader(InputStream inputStream) throws IOException {
return FileMagic.valueOf(inputStream) == FileMagic.OLE2;
}

@Deprecated
@Removal(version = "4.0")
public static boolean hasPOIFSHeader(byte[] bArr) {
try {
return hasPOIFSHeader((InputStream) new ByteArrayInputStream(bArr));
} catch (IOException e) {
throw new RuntimeException("invalid header check", e);
}
}

public static void main(String[] strArr) throws IOException {
NPOIFSFileSystem nPOIFSFileSystem;
if (strArr.length != 2) {
System.err.println("two arguments required: input filename and output filename");
System.exit(1);
}
FileInputStream fileInputStream = new FileInputStream(strArr[0]);
try {
FileOutputStream fileOutputStream = new FileOutputStream(strArr[1]);
try {
nPOIFSFileSystem = new NPOIFSFileSystem((InputStream) fileInputStream);
nPOIFSFileSystem.writeFilesystem(fileOutputStream);
nPOIFSFileSystem.close();
fileOutputStream.close();
} catch (Throwable th) {
fileOutputStream.close();
throw th;
}
} finally {
fileInputStream.close();
}
}

private void readBAT(int i, BlockStore.ChainLoopDetector chainLoopDetector) throws IOException {
chainLoopDetector.claim(i);
BATBlock createBATBlock = BATBlock.createBATBlock(this.bigBlockSize, getBlockAt(i));
createBATBlock.setOurBlockIndex(i);
this._bat_blocks.add(createBATBlock);
}

private void readCoreContents() throws IOException {
this.bigBlockSize = this._header.getBigBlockSize();
BlockStore.ChainLoopDetector chainLoopDetector = getChainLoopDetector();
for (int readBAT : this._header.getBATArray()) {
readBAT(readBAT, chainLoopDetector);
}
int bATCount = this._header.getBATCount() - this._header.getBATArray().length;
int xBATIndex = this._header.getXBATIndex();
for (int i = 0; i < this._header.getXBATCount(); i++) {
chainLoopDetector.claim(xBATIndex);
BATBlock createBATBlock = BATBlock.createBATBlock(this.bigBlockSize, getBlockAt(xBATIndex));
createBATBlock.setOurBlockIndex(xBATIndex);
xBATIndex = createBATBlock.getValueAt(this.bigBlockSize.getXBATEntriesPerBlock());
this._xbat_blocks.add(createBATBlock);
int min = Math.min(bATCount, this.bigBlockSize.getXBATEntriesPerBlock());
for (int i3 = 0; i3 < min; i3++) {
int valueAt = createBATBlock.getValueAt(i3);
if (valueAt == -1 || valueAt == -2) {
break;
}
readBAT(valueAt, chainLoopDetector);
}
bATCount -= min;
}
this._property_table = new NPropertyTable(this._header, this);
ArrayList arrayList = new ArrayList();
this._mini_store = new NPOIFSMiniStore(this, this._property_table.getRoot(), arrayList, this._header);
int sBATStart = this._header.getSBATStart();
for (int i4 = 0; i4 < this._header.getSBATCount() && sBATStart != -2; i4++) {
chainLoopDetector.claim(sBATStart);
BATBlock createBATBlock2 = BATBlock.createBATBlock(this.bigBlockSize, getBlockAt(sBATStart));
createBATBlock2.setOurBlockIndex(sBATStart);
arrayList.add(createBATBlock2);
sBATStart = getNextBlock(sBATStart);
}
}

private void syncWithDataSource() throws IOException {
this._mini_store.syncWithDataSource();
NPOIFSStream nPOIFSStream = new NPOIFSStream(this, this._header.getPropertyStart());
this._property_table.preWrite();
this._property_table.write(nPOIFSStream);
new HeaderBlockWriter(this._header).writeBlock(getBlockAt(-1));
for (BATBlock next : this._bat_blocks) {
BlockAllocationTableWriter.writeBlock(next, getBlockAt(next.getOurBlockIndex()));
}
for (BATBlock next2 : this._xbat_blocks) {
BlockAllocationTableWriter.writeBlock(next2, getBlockAt(next2.getOurBlockIndex()));
}
}

public NPropertyTable _get_property_table() {
return this._property_table;
}

public void addDirectory(DirectoryProperty directoryProperty) {
this._property_table.addProperty(directoryProperty);
}

public void addDocument(NPOIFSDocument nPOIFSDocument) {
this._property_table.addProperty(nPOIFSDocument.getDocumentProperty());
}

public void close() throws IOException {
this._data.close();
}

public ByteBuffer createBlockIfNeeded(int i) throws IOException {
try {
return getBlockAt(i);
} catch (IndexOutOfBoundsException unused) {
long bigBlockSize2 = (((long) i) + 1) * ((long) this.bigBlockSize.getBigBlockSize());
this._data.write(ByteBuffer.allocate(getBigBlockSize()), bigBlockSize2);
return getBlockAt(i);
}
}

public DirectoryEntry createDirectory(String str) throws IOException {
return getRoot().createDirectory(str);
}

public DocumentEntry createDocument(InputStream inputStream, String str) throws IOException {
return getRoot().createDocument(str, inputStream);
}

public DocumentEntry createDocument(String str, int i, POIFSWriterListener pOIFSWriterListener) throws IOException {
return getRoot().createDocument(str, i, pOIFSWriterListener);
}

public DocumentInputStream createDocumentInputStream(String str) throws IOException {
return getRoot().createDocumentInputStream(str);
}

public DocumentEntry createOrUpdateDocument(InputStream inputStream, String str) throws IOException {
return getRoot().createOrUpdateDocument(str, inputStream);
}

public BATBlock.BATBlockAndIndex getBATBlockAndIndex(int i) {
return BATBlock.getBATBlockAndIndex(i, this._header, this._bat_blocks);
}

public int getBigBlockSize() {
return this.bigBlockSize.getBigBlockSize();
}

public POIFSBigBlockSize getBigBlockSizeDetails() {
return this.bigBlockSize;
}

public ByteBuffer getBlockAt(int i) throws IOException {
try {
return this._data.read(this.bigBlockSize.getBigBlockSize(), (((long) i) + 1) * ((long) this.bigBlockSize.getBigBlockSize()));
} catch (IndexOutOfBoundsException e) {
IndexOutOfBoundsException indexOutOfBoundsException = new IndexOutOfBoundsException(b.h("Block ", i, " not found"));
indexOutOfBoundsException.initCause(e);
throw indexOutOfBoundsException;
}
}

public int getBlockStoreBlockSize() {
return getBigBlockSize();
}

public BlockStore.ChainLoopDetector getChainLoopDetector() throws IOException {
return new BlockStore.ChainLoopDetector(this, this._data.size());
}

public int getFreeBlock() throws IOException {
int bATEntriesPerBlock = this.bigBlockSize.getBATEntriesPerBlock();
int i = 0;
int i3 = 0;
for (BATBlock next : this._bat_blocks) {
if (next.hasFreeSectors()) {
for (int i4 = 0; i4 < bATEntriesPerBlock; i4++) {
if (next.getValueAt(i4) == -1) {
return i3 + i4;
}
}
continue;
}
i3 += bATEntriesPerBlock;
}
BATBlock createBAT = createBAT(i3, true);
createBAT.setValueAt(0, -3);
this._bat_blocks.add(createBAT);
if (this._header.getBATCount() >= 109) {
BATBlock bATBlock = null;
Iterator<BATBlock> it = this._xbat_blocks.iterator();
while (true) {
if (!it.hasNext()) {
break;
}
BATBlock next2 = it.next();
if (next2.hasFreeSectors()) {
bATBlock = next2;
break;
}
}
if (bATBlock == null) {
int i5 = i3 + 1;
BATBlock createBAT2 = createBAT(i5, false);
createBAT2.setValueAt(0, i3);
createBAT.setValueAt(1, -4);
if (this._xbat_blocks.size() == 0) {
this._header.setXBATStart(i5);
} else {
List<BATBlock> list = this._xbat_blocks;
list.get(list.size() - 1).setValueAt(this.bigBlockSize.getXBATEntriesPerBlock(), i5);
}
this._xbat_blocks.add(createBAT2);
this._header.setXBATCount(this._xbat_blocks.size());
i3 = i5;
} else {
while (true) {
if (i >= this.bigBlockSize.getXBATEntriesPerBlock()) {
break;
} else if (bATBlock.getValueAt(i) == -1) {
bATBlock.setValueAt(i, i3);
break;
} else {
i++;
}
}
}
} else {
int bATCount = this._header.getBATCount() + 1;
int[] iArr = new int[bATCount];
int i6 = bATCount - 1;
System.arraycopy(this._header.getBATArray(), 0, iArr, 0, i6);
iArr[i6] = i3;
this._header.setBATArray(iArr);
}
this._header.setBATCount(this._bat_blocks.size());
return i3 + 1;
}

@Internal
public HeaderBlock getHeaderBlock() {
return this._header;
}

public NPOIFSMiniStore getMiniStore() {
return this._mini_store;
}

public int getNextBlock(int i) {
BATBlock.BATBlockAndIndex bATBlockAndIndex = getBATBlockAndIndex(i);
return bATBlockAndIndex.getBlock().getValueAt(bATBlockAndIndex.getIndex());
}

@Internal
public NPropertyTable getPropertyTable() {
return this._property_table;
}

public DirectoryNode getRoot() {
if (this._root == null) {
this._root = new DirectoryNode(this._property_table.getRoot(), this, (DirectoryNode) null);
}
return this._root;
}

public String getShortDescription() {
return "POIFS FileSystem";
}

public Object[] getViewableArray() {
return preferArray() ? getRoot().getViewableArray() : new Object[0];
}

public Iterator<Object> getViewableIterator() {
return !preferArray() ? getRoot().getViewableIterator() : Collections.emptyList().iterator();
}

public boolean isInPlaceWriteable() {
FileBackedDataSource fileBackedDataSource = this._data;
return (fileBackedDataSource instanceof FileBackedDataSource) && fileBackedDataSource.isWriteable();
}

public boolean preferArray() {
return getRoot().preferArray();
}

public void remove(EntryNode entryNode) throws IOException {
if (entryNode instanceof DocumentEntry) {
new NPOIFSDocument(entryNode.getProperty(), this).free();
}
this._property_table.removeProperty(entryNode.getProperty());
}

public void setNextBlock(int i, int i3) {
BATBlock.BATBlockAndIndex bATBlockAndIndex = getBATBlockAndIndex(i);
bATBlockAndIndex.getBlock().setValueAt(bATBlockAndIndex.getIndex(), i3);
}

public long size() throws IOException {
return this._data.size();
}

public void writeFilesystem() throws IOException {
FileBackedDataSource fileBackedDataSource = this._data;
if (!(fileBackedDataSource instanceof FileBackedDataSource)) {
throw new IllegalArgumentException("POIFS opened from an inputstream, so writeFilesystem() may not be called. Use writeFilesystem(OutputStream) instead");
} else if (fileBackedDataSource.isWriteable()) {
syncWithDataSource();
} else {
throw new IllegalArgumentException("POIFS opened in read only mode, so writeFilesystem() may not be called. Open the FileSystem in read-write mode first");
}
}

public void writeFilesystem(OutputStream outputStream) throws IOException {
syncWithDataSource();
this._data.copyTo(outputStream);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\poifs\property\Parent.java

package org.apache.poi.poifs.property;

import java.io.IOException;
import java.util.Iterator;

public interface Parent extends Child, Iterable<Property> {
void addChild(Property property) throws IOException;

Iterator<Property> getChildren();

void setNextChild(Child child);

void setPreviousChild(Child child);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\sl\draw\DrawShape$1.java

package org.apache.poi.sl.draw;

public /* synthetic */ class DrawShape$1 {
public static final /* synthetic */ int[] $SwitchMap$org$apache$poi$sl$usermodel$StrokeStyle$LineCap;

/* JADX WARNING: Can't wrap try/catch for region: R(6:0|1|2|3|4|(3:5|6|8)) */
/* JADX WARNING: Failed to process nested try/catch */
/* JADX WARNING: Missing exception handler attribute for start block: B:3:0x0012 */
/* JADX WARNING: Missing exception handler attribute for start block: B:5:0x001d */
static {
/*
org.apache.poi.sl.usermodel.StrokeStyle$LineCap[] r0 = org.apache.poi.sl.usermodel.StrokeStyle.LineCap.values()
int r0 = r0.length
int[] r0 = new int[r0]
$SwitchMap$org$apache$poi$sl$usermodel$StrokeStyle$LineCap = r0
org.apache.poi.sl.usermodel.StrokeStyle$LineCap r1 = org.apache.poi.sl.usermodel.StrokeStyle.LineCap.ROUND     // Catch:{ NoSuchFieldError -> 0x0012 }
int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x0012 }
r2 = 1
r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x0012 }
L_0x0012:
int[] r0 = $SwitchMap$org$apache$poi$sl$usermodel$StrokeStyle$LineCap     // Catch:{ NoSuchFieldError -> 0x001d }
org.apache.poi.sl.usermodel.StrokeStyle$LineCap r1 = org.apache.poi.sl.usermodel.StrokeStyle.LineCap.SQUARE     // Catch:{ NoSuchFieldError -> 0x001d }
int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x001d }
r2 = 2
r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x001d }
L_0x001d:
int[] r0 = $SwitchMap$org$apache$poi$sl$usermodel$StrokeStyle$LineCap     // Catch:{ NoSuchFieldError -> 0x0028 }
org.apache.poi.sl.usermodel.StrokeStyle$LineCap r1 = org.apache.poi.sl.usermodel.StrokeStyle.LineCap.FLAT     // Catch:{ NoSuchFieldError -> 0x0028 }
int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x0028 }
r2 = 3
r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x0028 }
L_0x0028:
return
*/
throw new UnsupportedOperationException("Method not decompiled: org.apache.poi.sl.draw.DrawShape$1.<clinit>():void");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\sl\draw\binding\CTScale2D.java

package org.apache.poi.sl.draw.binding;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CT_Scale2D", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", propOrder = {"sx", "sy"})
public class CTScale2D {
@XmlElement(namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", required = true)
public CTRatio sx;
@XmlElement(namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", required = true)
public CTRatio sy;

public CTRatio getSx() {
return this.sx;
}

public CTRatio getSy() {
return this.sy;
}

public boolean isSetSx() {
return this.sx != null;
}

public boolean isSetSy() {
return this.sy != null;
}

public void setSx(CTRatio cTRatio) {
this.sx = cTRatio;
}

public void setSy(CTRatio cTRatio) {
this.sy = cTRatio;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\sl\draw\binding\ObjectFactory.java

package org.apache.poi.sl.draw.binding;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

@XmlRegistry
public class ObjectFactory {
private static final QName _CTSRgbColorAlphaMod_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "alphaMod");
private static final QName _CTSRgbColorAlphaOff_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "alphaOff");
private static final QName _CTSRgbColorAlpha_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "alpha");
private static final QName _CTSRgbColorBlueMod_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "blueMod");
private static final QName _CTSRgbColorBlueOff_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "blueOff");
private static final QName _CTSRgbColorBlue_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "blue");
private static final QName _CTSRgbColorComp_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "comp");
private static final QName _CTSRgbColorGamma_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "gamma");
private static final QName _CTSRgbColorGray_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "gray");
private static final QName _CTSRgbColorGreenMod_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "greenMod");
private static final QName _CTSRgbColorGreenOff_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "greenOff");
private static final QName _CTSRgbColorGreen_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "green");
private static final QName _CTSRgbColorHueMod_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "hueMod");
private static final QName _CTSRgbColorHueOff_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "hueOff");
private static final QName _CTSRgbColorHue_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "hue");
private static final QName _CTSRgbColorInvGamma_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "invGamma");
private static final QName _CTSRgbColorInv_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "inv");
private static final QName _CTSRgbColorLumMod_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "lumMod");
private static final QName _CTSRgbColorLumOff_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "lumOff");
private static final QName _CTSRgbColorLum_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "lum");
private static final QName _CTSRgbColorRedMod_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "redMod");
private static final QName _CTSRgbColorRedOff_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "redOff");
private static final QName _CTSRgbColorRed_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "red");
private static final QName _CTSRgbColorSatMod_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "satMod");
private static final QName _CTSRgbColorSatOff_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "satOff");
private static final QName _CTSRgbColorSat_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "sat");
private static final QName _CTSRgbColorShade_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "shade");
private static final QName _CTSRgbColorTint_QNAME = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "tint");

public CTAdjPoint2D createCTAdjPoint2D() {
return new CTAdjPoint2D();
}

public CTAdjustHandleList createCTAdjustHandleList() {
return new CTAdjustHandleList();
}

public CTAngle createCTAngle() {
return new CTAngle();
}

public CTColor createCTColor() {
return new CTColor();
}

public CTColorMRU createCTColorMRU() {
return new CTColorMRU();
}

public CTComplementTransform createCTComplementTransform() {
return new CTComplementTransform();
}

public CTConnection createCTConnection() {
return new CTConnection();
}

public CTConnectionSite createCTConnectionSite() {
return new CTConnectionSite();
}

public CTConnectionSiteList createCTConnectionSiteList() {
return new CTConnectionSiteList();
}

public CTCustomGeometry2D createCTCustomGeometry2D() {
return new CTCustomGeometry2D();
}

public CTEmbeddedWAVAudioFile createCTEmbeddedWAVAudioFile() {
return new CTEmbeddedWAVAudioFile();
}

public CTFixedPercentage createCTFixedPercentage() {
return new CTFixedPercentage();
}

public CTGammaTransform createCTGammaTransform() {
return new CTGammaTransform();
}

public CTGeomGuide createCTGeomGuide() {
return new CTGeomGuide();
}

public CTGeomGuideList createCTGeomGuideList() {
return new CTGeomGuideList();
}

public CTGeomRect createCTGeomRect() {
return new CTGeomRect();
}

public CTGrayscaleTransform createCTGrayscaleTransform() {
return new CTGrayscaleTransform();
}

public CTGroupTransform2D createCTGroupTransform2D() {
return new CTGroupTransform2D();
}

public CTHslColor createCTHslColor() {
return new CTHslColor();
}

@XmlElementDecl(name = "alpha", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTHslColorAlpha(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorAlpha_QNAME, CTPositiveFixedPercentage.class, CTHslColor.class, cTPositiveFixedPercentage);
}

@XmlElementDecl(name = "alphaMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPositivePercentage> createCTHslColorAlphaMod(CTPositivePercentage cTPositivePercentage) {
return new JAXBElement<>(_CTSRgbColorAlphaMod_QNAME, CTPositivePercentage.class, CTHslColor.class, cTPositivePercentage);
}

@XmlElementDecl(name = "alphaOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTFixedPercentage> createCTHslColorAlphaOff(CTFixedPercentage cTFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorAlphaOff_QNAME, CTFixedPercentage.class, CTHslColor.class, cTFixedPercentage);
}

@XmlElementDecl(name = "blue", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorBlue(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlue_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "blueMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorBlueMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlueMod_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "blueOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorBlueOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlueOff_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "comp", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTComplementTransform> createCTHslColorComp(CTComplementTransform cTComplementTransform) {
return new JAXBElement<>(_CTSRgbColorComp_QNAME, CTComplementTransform.class, CTHslColor.class, cTComplementTransform);
}

@XmlElementDecl(name = "gamma", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTGammaTransform> createCTHslColorGamma(CTGammaTransform cTGammaTransform) {
return new JAXBElement<>(_CTSRgbColorGamma_QNAME, CTGammaTransform.class, CTHslColor.class, cTGammaTransform);
}

@XmlElementDecl(name = "gray", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTGrayscaleTransform> createCTHslColorGray(CTGrayscaleTransform cTGrayscaleTransform) {
return new JAXBElement<>(_CTSRgbColorGray_QNAME, CTGrayscaleTransform.class, CTHslColor.class, cTGrayscaleTransform);
}

@XmlElementDecl(name = "green", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorGreen(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreen_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "greenMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorGreenMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreenMod_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "greenOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorGreenOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreenOff_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "hue", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPositiveFixedAngle> createCTHslColorHue(CTPositiveFixedAngle cTPositiveFixedAngle) {
return new JAXBElement<>(_CTSRgbColorHue_QNAME, CTPositiveFixedAngle.class, CTHslColor.class, cTPositiveFixedAngle);
}

@XmlElementDecl(name = "hueMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPositivePercentage> createCTHslColorHueMod(CTPositivePercentage cTPositivePercentage) {
return new JAXBElement<>(_CTSRgbColorHueMod_QNAME, CTPositivePercentage.class, CTHslColor.class, cTPositivePercentage);
}

@XmlElementDecl(name = "hueOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTAngle> createCTHslColorHueOff(CTAngle cTAngle) {
return new JAXBElement<>(_CTSRgbColorHueOff_QNAME, CTAngle.class, CTHslColor.class, cTAngle);
}

@XmlElementDecl(name = "inv", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTInverseTransform> createCTHslColorInv(CTInverseTransform cTInverseTransform) {
return new JAXBElement<>(_CTSRgbColorInv_QNAME, CTInverseTransform.class, CTHslColor.class, cTInverseTransform);
}

@XmlElementDecl(name = "invGamma", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTInverseGammaTransform> createCTHslColorInvGamma(CTInverseGammaTransform cTInverseGammaTransform) {
return new JAXBElement<>(_CTSRgbColorInvGamma_QNAME, CTInverseGammaTransform.class, CTHslColor.class, cTInverseGammaTransform);
}

@XmlElementDecl(name = "lum", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorLum(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLum_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "lumMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorLumMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLumMod_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "lumOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorLumOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLumOff_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "red", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorRed(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRed_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "redMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorRedMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRedMod_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "redOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorRedOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRedOff_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "sat", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorSat(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSat_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "satMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorSatMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSatMod_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "satOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPercentage> createCTHslColorSatOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSatOff_QNAME, CTPercentage.class, CTHslColor.class, cTPercentage);
}

@XmlElementDecl(name = "shade", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTHslColorShade(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorShade_QNAME, CTPositiveFixedPercentage.class, CTHslColor.class, cTPositiveFixedPercentage);
}

@XmlElementDecl(name = "tint", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTHslColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTHslColorTint(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorTint_QNAME, CTPositiveFixedPercentage.class, CTHslColor.class, cTPositiveFixedPercentage);
}

public CTHyperlink createCTHyperlink() {
return new CTHyperlink();
}

public CTInverseGammaTransform createCTInverseGammaTransform() {
return new CTInverseGammaTransform();
}

public CTInverseTransform createCTInverseTransform() {
return new CTInverseTransform();
}

public CTOfficeArtExtension createCTOfficeArtExtension() {
return new CTOfficeArtExtension();
}

public CTOfficeArtExtensionList createCTOfficeArtExtensionList() {
return new CTOfficeArtExtensionList();
}

public CTPath2D createCTPath2D() {
return new CTPath2D();
}

public CTPath2DArcTo createCTPath2DArcTo() {
return new CTPath2DArcTo();
}

public CTPath2DClose createCTPath2DClose() {
return new CTPath2DClose();
}

public CTPath2DCubicBezierTo createCTPath2DCubicBezierTo() {
return new CTPath2DCubicBezierTo();
}

public CTPath2DLineTo createCTPath2DLineTo() {
return new CTPath2DLineTo();
}

public CTPath2DList createCTPath2DList() {
return new CTPath2DList();
}

public CTPath2DMoveTo createCTPath2DMoveTo() {
return new CTPath2DMoveTo();
}

public CTPath2DQuadBezierTo createCTPath2DQuadBezierTo() {
return new CTPath2DQuadBezierTo();
}

public CTPercentage createCTPercentage() {
return new CTPercentage();
}

public CTPoint2D createCTPoint2D() {
return new CTPoint2D();
}

public CTPoint3D createCTPoint3D() {
return new CTPoint3D();
}

public CTPolarAdjustHandle createCTPolarAdjustHandle() {
return new CTPolarAdjustHandle();
}

public CTPositiveFixedAngle createCTPositiveFixedAngle() {
return new CTPositiveFixedAngle();
}

public CTPositiveFixedPercentage createCTPositiveFixedPercentage() {
return new CTPositiveFixedPercentage();
}

public CTPositivePercentage createCTPositivePercentage() {
return new CTPositivePercentage();
}

public CTPositiveSize2D createCTPositiveSize2D() {
return new CTPositiveSize2D();
}

public CTPresetColor createCTPresetColor() {
return new CTPresetColor();
}

@XmlElementDecl(name = "alpha", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTPresetColorAlpha(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorAlpha_QNAME, CTPositiveFixedPercentage.class, CTPresetColor.class, cTPositiveFixedPercentage);
}

@XmlElementDecl(name = "alphaMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPositivePercentage> createCTPresetColorAlphaMod(CTPositivePercentage cTPositivePercentage) {
return new JAXBElement<>(_CTSRgbColorAlphaMod_QNAME, CTPositivePercentage.class, CTPresetColor.class, cTPositivePercentage);
}

@XmlElementDecl(name = "alphaOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTFixedPercentage> createCTPresetColorAlphaOff(CTFixedPercentage cTFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorAlphaOff_QNAME, CTFixedPercentage.class, CTPresetColor.class, cTFixedPercentage);
}

@XmlElementDecl(name = "blue", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorBlue(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlue_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "blueMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorBlueMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlueMod_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "blueOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorBlueOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlueOff_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "comp", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTComplementTransform> createCTPresetColorComp(CTComplementTransform cTComplementTransform) {
return new JAXBElement<>(_CTSRgbColorComp_QNAME, CTComplementTransform.class, CTPresetColor.class, cTComplementTransform);
}

@XmlElementDecl(name = "gamma", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTGammaTransform> createCTPresetColorGamma(CTGammaTransform cTGammaTransform) {
return new JAXBElement<>(_CTSRgbColorGamma_QNAME, CTGammaTransform.class, CTPresetColor.class, cTGammaTransform);
}

@XmlElementDecl(name = "gray", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTGrayscaleTransform> createCTPresetColorGray(CTGrayscaleTransform cTGrayscaleTransform) {
return new JAXBElement<>(_CTSRgbColorGray_QNAME, CTGrayscaleTransform.class, CTPresetColor.class, cTGrayscaleTransform);
}

@XmlElementDecl(name = "green", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorGreen(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreen_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "greenMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorGreenMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreenMod_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "greenOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorGreenOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreenOff_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "hue", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPositiveFixedAngle> createCTPresetColorHue(CTPositiveFixedAngle cTPositiveFixedAngle) {
return new JAXBElement<>(_CTSRgbColorHue_QNAME, CTPositiveFixedAngle.class, CTPresetColor.class, cTPositiveFixedAngle);
}

@XmlElementDecl(name = "hueMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPositivePercentage> createCTPresetColorHueMod(CTPositivePercentage cTPositivePercentage) {
return new JAXBElement<>(_CTSRgbColorHueMod_QNAME, CTPositivePercentage.class, CTPresetColor.class, cTPositivePercentage);
}

@XmlElementDecl(name = "hueOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTAngle> createCTPresetColorHueOff(CTAngle cTAngle) {
return new JAXBElement<>(_CTSRgbColorHueOff_QNAME, CTAngle.class, CTPresetColor.class, cTAngle);
}

@XmlElementDecl(name = "inv", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTInverseTransform> createCTPresetColorInv(CTInverseTransform cTInverseTransform) {
return new JAXBElement<>(_CTSRgbColorInv_QNAME, CTInverseTransform.class, CTPresetColor.class, cTInverseTransform);
}

@XmlElementDecl(name = "invGamma", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTInverseGammaTransform> createCTPresetColorInvGamma(CTInverseGammaTransform cTInverseGammaTransform) {
return new JAXBElement<>(_CTSRgbColorInvGamma_QNAME, CTInverseGammaTransform.class, CTPresetColor.class, cTInverseGammaTransform);
}

@XmlElementDecl(name = "lum", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorLum(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLum_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "lumMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorLumMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLumMod_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "lumOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorLumOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLumOff_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "red", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorRed(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRed_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "redMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorRedMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRedMod_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "redOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorRedOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRedOff_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "sat", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorSat(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSat_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "satMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorSatMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSatMod_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "satOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPercentage> createCTPresetColorSatOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSatOff_QNAME, CTPercentage.class, CTPresetColor.class, cTPercentage);
}

@XmlElementDecl(name = "shade", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTPresetColorShade(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorShade_QNAME, CTPositiveFixedPercentage.class, CTPresetColor.class, cTPositiveFixedPercentage);
}

@XmlElementDecl(name = "tint", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTPresetColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTPresetColorTint(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorTint_QNAME, CTPositiveFixedPercentage.class, CTPresetColor.class, cTPositiveFixedPercentage);
}

public CTPresetGeometry2D createCTPresetGeometry2D() {
return new CTPresetGeometry2D();
}

public CTPresetTextShape createCTPresetTextShape() {
return new CTPresetTextShape();
}

public CTRatio createCTRatio() {
return new CTRatio();
}

public CTRelativeRect createCTRelativeRect() {
return new CTRelativeRect();
}

public CTSRgbColor createCTSRgbColor() {
return new CTSRgbColor();
}

@XmlElementDecl(name = "alpha", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTSRgbColorAlpha(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorAlpha_QNAME, CTPositiveFixedPercentage.class, CTSRgbColor.class, cTPositiveFixedPercentage);
}

@XmlElementDecl(name = "alphaMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPositivePercentage> createCTSRgbColorAlphaMod(CTPositivePercentage cTPositivePercentage) {
return new JAXBElement<>(_CTSRgbColorAlphaMod_QNAME, CTPositivePercentage.class, CTSRgbColor.class, cTPositivePercentage);
}

@XmlElementDecl(name = "alphaOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTFixedPercentage> createCTSRgbColorAlphaOff(CTFixedPercentage cTFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorAlphaOff_QNAME, CTFixedPercentage.class, CTSRgbColor.class, cTFixedPercentage);
}

@XmlElementDecl(name = "blue", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorBlue(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlue_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "blueMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorBlueMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlueMod_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "blueOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorBlueOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlueOff_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "comp", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTComplementTransform> createCTSRgbColorComp(CTComplementTransform cTComplementTransform) {
return new JAXBElement<>(_CTSRgbColorComp_QNAME, CTComplementTransform.class, CTSRgbColor.class, cTComplementTransform);
}

@XmlElementDecl(name = "gamma", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTGammaTransform> createCTSRgbColorGamma(CTGammaTransform cTGammaTransform) {
return new JAXBElement<>(_CTSRgbColorGamma_QNAME, CTGammaTransform.class, CTSRgbColor.class, cTGammaTransform);
}

@XmlElementDecl(name = "gray", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTGrayscaleTransform> createCTSRgbColorGray(CTGrayscaleTransform cTGrayscaleTransform) {
return new JAXBElement<>(_CTSRgbColorGray_QNAME, CTGrayscaleTransform.class, CTSRgbColor.class, cTGrayscaleTransform);
}

@XmlElementDecl(name = "green", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorGreen(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreen_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "greenMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorGreenMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreenMod_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "greenOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorGreenOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreenOff_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "hue", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPositiveFixedAngle> createCTSRgbColorHue(CTPositiveFixedAngle cTPositiveFixedAngle) {
return new JAXBElement<>(_CTSRgbColorHue_QNAME, CTPositiveFixedAngle.class, CTSRgbColor.class, cTPositiveFixedAngle);
}

@XmlElementDecl(name = "hueMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPositivePercentage> createCTSRgbColorHueMod(CTPositivePercentage cTPositivePercentage) {
return new JAXBElement<>(_CTSRgbColorHueMod_QNAME, CTPositivePercentage.class, CTSRgbColor.class, cTPositivePercentage);
}

@XmlElementDecl(name = "hueOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTAngle> createCTSRgbColorHueOff(CTAngle cTAngle) {
return new JAXBElement<>(_CTSRgbColorHueOff_QNAME, CTAngle.class, CTSRgbColor.class, cTAngle);
}

@XmlElementDecl(name = "inv", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTInverseTransform> createCTSRgbColorInv(CTInverseTransform cTInverseTransform) {
return new JAXBElement<>(_CTSRgbColorInv_QNAME, CTInverseTransform.class, CTSRgbColor.class, cTInverseTransform);
}

@XmlElementDecl(name = "invGamma", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTInverseGammaTransform> createCTSRgbColorInvGamma(CTInverseGammaTransform cTInverseGammaTransform) {
return new JAXBElement<>(_CTSRgbColorInvGamma_QNAME, CTInverseGammaTransform.class, CTSRgbColor.class, cTInverseGammaTransform);
}

@XmlElementDecl(name = "lum", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorLum(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLum_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "lumMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorLumMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLumMod_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "lumOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorLumOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLumOff_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "red", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorRed(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRed_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "redMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorRedMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRedMod_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "redOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorRedOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRedOff_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "sat", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorSat(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSat_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "satMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorSatMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSatMod_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "satOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPercentage> createCTSRgbColorSatOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSatOff_QNAME, CTPercentage.class, CTSRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "shade", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTSRgbColorShade(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorShade_QNAME, CTPositiveFixedPercentage.class, CTSRgbColor.class, cTPositiveFixedPercentage);
}

@XmlElementDecl(name = "tint", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSRgbColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTSRgbColorTint(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorTint_QNAME, CTPositiveFixedPercentage.class, CTSRgbColor.class, cTPositiveFixedPercentage);
}

public CTScRgbColor createCTScRgbColor() {
return new CTScRgbColor();
}

@XmlElementDecl(name = "alpha", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTScRgbColorAlpha(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorAlpha_QNAME, CTPositiveFixedPercentage.class, CTScRgbColor.class, cTPositiveFixedPercentage);
}

@XmlElementDecl(name = "alphaMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPositivePercentage> createCTScRgbColorAlphaMod(CTPositivePercentage cTPositivePercentage) {
return new JAXBElement<>(_CTSRgbColorAlphaMod_QNAME, CTPositivePercentage.class, CTScRgbColor.class, cTPositivePercentage);
}

@XmlElementDecl(name = "alphaOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTFixedPercentage> createCTScRgbColorAlphaOff(CTFixedPercentage cTFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorAlphaOff_QNAME, CTFixedPercentage.class, CTScRgbColor.class, cTFixedPercentage);
}

@XmlElementDecl(name = "blue", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorBlue(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlue_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "blueMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorBlueMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlueMod_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "blueOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorBlueOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlueOff_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "comp", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTComplementTransform> createCTScRgbColorComp(CTComplementTransform cTComplementTransform) {
return new JAXBElement<>(_CTSRgbColorComp_QNAME, CTComplementTransform.class, CTScRgbColor.class, cTComplementTransform);
}

@XmlElementDecl(name = "gamma", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTGammaTransform> createCTScRgbColorGamma(CTGammaTransform cTGammaTransform) {
return new JAXBElement<>(_CTSRgbColorGamma_QNAME, CTGammaTransform.class, CTScRgbColor.class, cTGammaTransform);
}

@XmlElementDecl(name = "gray", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTGrayscaleTransform> createCTScRgbColorGray(CTGrayscaleTransform cTGrayscaleTransform) {
return new JAXBElement<>(_CTSRgbColorGray_QNAME, CTGrayscaleTransform.class, CTScRgbColor.class, cTGrayscaleTransform);
}

@XmlElementDecl(name = "green", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorGreen(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreen_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "greenMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorGreenMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreenMod_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "greenOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorGreenOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreenOff_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "hue", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPositiveFixedAngle> createCTScRgbColorHue(CTPositiveFixedAngle cTPositiveFixedAngle) {
return new JAXBElement<>(_CTSRgbColorHue_QNAME, CTPositiveFixedAngle.class, CTScRgbColor.class, cTPositiveFixedAngle);
}

@XmlElementDecl(name = "hueMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPositivePercentage> createCTScRgbColorHueMod(CTPositivePercentage cTPositivePercentage) {
return new JAXBElement<>(_CTSRgbColorHueMod_QNAME, CTPositivePercentage.class, CTScRgbColor.class, cTPositivePercentage);
}

@XmlElementDecl(name = "hueOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTAngle> createCTScRgbColorHueOff(CTAngle cTAngle) {
return new JAXBElement<>(_CTSRgbColorHueOff_QNAME, CTAngle.class, CTScRgbColor.class, cTAngle);
}

@XmlElementDecl(name = "inv", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTInverseTransform> createCTScRgbColorInv(CTInverseTransform cTInverseTransform) {
return new JAXBElement<>(_CTSRgbColorInv_QNAME, CTInverseTransform.class, CTScRgbColor.class, cTInverseTransform);
}

@XmlElementDecl(name = "invGamma", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTInverseGammaTransform> createCTScRgbColorInvGamma(CTInverseGammaTransform cTInverseGammaTransform) {
return new JAXBElement<>(_CTSRgbColorInvGamma_QNAME, CTInverseGammaTransform.class, CTScRgbColor.class, cTInverseGammaTransform);
}

@XmlElementDecl(name = "lum", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorLum(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLum_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "lumMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorLumMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLumMod_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "lumOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorLumOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLumOff_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "red", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorRed(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRed_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "redMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorRedMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRedMod_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "redOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorRedOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRedOff_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "sat", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorSat(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSat_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "satMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorSatMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSatMod_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "satOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPercentage> createCTScRgbColorSatOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSatOff_QNAME, CTPercentage.class, CTScRgbColor.class, cTPercentage);
}

@XmlElementDecl(name = "shade", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTScRgbColorShade(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorShade_QNAME, CTPositiveFixedPercentage.class, CTScRgbColor.class, cTPositiveFixedPercentage);
}

@XmlElementDecl(name = "tint", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTScRgbColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTScRgbColorTint(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorTint_QNAME, CTPositiveFixedPercentage.class, CTScRgbColor.class, cTPositiveFixedPercentage);
}

public CTScale2D createCTScale2D() {
return new CTScale2D();
}

public CTSchemeColor createCTSchemeColor() {
return new CTSchemeColor();
}

@XmlElementDecl(name = "alpha", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTSchemeColorAlpha(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorAlpha_QNAME, CTPositiveFixedPercentage.class, CTSchemeColor.class, cTPositiveFixedPercentage);
}

@XmlElementDecl(name = "alphaMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPositivePercentage> createCTSchemeColorAlphaMod(CTPositivePercentage cTPositivePercentage) {
return new JAXBElement<>(_CTSRgbColorAlphaMod_QNAME, CTPositivePercentage.class, CTSchemeColor.class, cTPositivePercentage);
}

@XmlElementDecl(name = "alphaOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTFixedPercentage> createCTSchemeColorAlphaOff(CTFixedPercentage cTFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorAlphaOff_QNAME, CTFixedPercentage.class, CTSchemeColor.class, cTFixedPercentage);
}

@XmlElementDecl(name = "blue", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorBlue(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlue_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "blueMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorBlueMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlueMod_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "blueOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorBlueOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlueOff_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "comp", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTComplementTransform> createCTSchemeColorComp(CTComplementTransform cTComplementTransform) {
return new JAXBElement<>(_CTSRgbColorComp_QNAME, CTComplementTransform.class, CTSchemeColor.class, cTComplementTransform);
}

@XmlElementDecl(name = "gamma", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTGammaTransform> createCTSchemeColorGamma(CTGammaTransform cTGammaTransform) {
return new JAXBElement<>(_CTSRgbColorGamma_QNAME, CTGammaTransform.class, CTSchemeColor.class, cTGammaTransform);
}

@XmlElementDecl(name = "gray", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTGrayscaleTransform> createCTSchemeColorGray(CTGrayscaleTransform cTGrayscaleTransform) {
return new JAXBElement<>(_CTSRgbColorGray_QNAME, CTGrayscaleTransform.class, CTSchemeColor.class, cTGrayscaleTransform);
}

@XmlElementDecl(name = "green", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorGreen(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreen_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "greenMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorGreenMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreenMod_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "greenOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorGreenOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreenOff_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "hue", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPositiveFixedAngle> createCTSchemeColorHue(CTPositiveFixedAngle cTPositiveFixedAngle) {
return new JAXBElement<>(_CTSRgbColorHue_QNAME, CTPositiveFixedAngle.class, CTSchemeColor.class, cTPositiveFixedAngle);
}

@XmlElementDecl(name = "hueMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPositivePercentage> createCTSchemeColorHueMod(CTPositivePercentage cTPositivePercentage) {
return new JAXBElement<>(_CTSRgbColorHueMod_QNAME, CTPositivePercentage.class, CTSchemeColor.class, cTPositivePercentage);
}

@XmlElementDecl(name = "hueOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTAngle> createCTSchemeColorHueOff(CTAngle cTAngle) {
return new JAXBElement<>(_CTSRgbColorHueOff_QNAME, CTAngle.class, CTSchemeColor.class, cTAngle);
}

@XmlElementDecl(name = "inv", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTInverseTransform> createCTSchemeColorInv(CTInverseTransform cTInverseTransform) {
return new JAXBElement<>(_CTSRgbColorInv_QNAME, CTInverseTransform.class, CTSchemeColor.class, cTInverseTransform);
}

@XmlElementDecl(name = "invGamma", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTInverseGammaTransform> createCTSchemeColorInvGamma(CTInverseGammaTransform cTInverseGammaTransform) {
return new JAXBElement<>(_CTSRgbColorInvGamma_QNAME, CTInverseGammaTransform.class, CTSchemeColor.class, cTInverseGammaTransform);
}

@XmlElementDecl(name = "lum", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorLum(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLum_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "lumMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorLumMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLumMod_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "lumOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorLumOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLumOff_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "red", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorRed(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRed_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "redMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorRedMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRedMod_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "redOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorRedOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRedOff_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "sat", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorSat(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSat_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "satMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorSatMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSatMod_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "satOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPercentage> createCTSchemeColorSatOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSatOff_QNAME, CTPercentage.class, CTSchemeColor.class, cTPercentage);
}

@XmlElementDecl(name = "shade", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTSchemeColorShade(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorShade_QNAME, CTPositiveFixedPercentage.class, CTSchemeColor.class, cTPositiveFixedPercentage);
}

@XmlElementDecl(name = "tint", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSchemeColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTSchemeColorTint(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorTint_QNAME, CTPositiveFixedPercentage.class, CTSchemeColor.class, cTPositiveFixedPercentage);
}

public CTSphereCoords createCTSphereCoords() {
return new CTSphereCoords();
}

public CTSystemColor createCTSystemColor() {
return new CTSystemColor();
}

@XmlElementDecl(name = "alpha", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTSystemColorAlpha(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorAlpha_QNAME, CTPositiveFixedPercentage.class, CTSystemColor.class, cTPositiveFixedPercentage);
}

@XmlElementDecl(name = "alphaMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPositivePercentage> createCTSystemColorAlphaMod(CTPositivePercentage cTPositivePercentage) {
return new JAXBElement<>(_CTSRgbColorAlphaMod_QNAME, CTPositivePercentage.class, CTSystemColor.class, cTPositivePercentage);
}

@XmlElementDecl(name = "alphaOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTFixedPercentage> createCTSystemColorAlphaOff(CTFixedPercentage cTFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorAlphaOff_QNAME, CTFixedPercentage.class, CTSystemColor.class, cTFixedPercentage);
}

@XmlElementDecl(name = "blue", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorBlue(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlue_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "blueMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorBlueMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlueMod_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "blueOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorBlueOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorBlueOff_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "comp", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTComplementTransform> createCTSystemColorComp(CTComplementTransform cTComplementTransform) {
return new JAXBElement<>(_CTSRgbColorComp_QNAME, CTComplementTransform.class, CTSystemColor.class, cTComplementTransform);
}

@XmlElementDecl(name = "gamma", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTGammaTransform> createCTSystemColorGamma(CTGammaTransform cTGammaTransform) {
return new JAXBElement<>(_CTSRgbColorGamma_QNAME, CTGammaTransform.class, CTSystemColor.class, cTGammaTransform);
}

@XmlElementDecl(name = "gray", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTGrayscaleTransform> createCTSystemColorGray(CTGrayscaleTransform cTGrayscaleTransform) {
return new JAXBElement<>(_CTSRgbColorGray_QNAME, CTGrayscaleTransform.class, CTSystemColor.class, cTGrayscaleTransform);
}

@XmlElementDecl(name = "green", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorGreen(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreen_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "greenMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorGreenMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreenMod_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "greenOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorGreenOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorGreenOff_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "hue", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPositiveFixedAngle> createCTSystemColorHue(CTPositiveFixedAngle cTPositiveFixedAngle) {
return new JAXBElement<>(_CTSRgbColorHue_QNAME, CTPositiveFixedAngle.class, CTSystemColor.class, cTPositiveFixedAngle);
}

@XmlElementDecl(name = "hueMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPositivePercentage> createCTSystemColorHueMod(CTPositivePercentage cTPositivePercentage) {
return new JAXBElement<>(_CTSRgbColorHueMod_QNAME, CTPositivePercentage.class, CTSystemColor.class, cTPositivePercentage);
}

@XmlElementDecl(name = "hueOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTAngle> createCTSystemColorHueOff(CTAngle cTAngle) {
return new JAXBElement<>(_CTSRgbColorHueOff_QNAME, CTAngle.class, CTSystemColor.class, cTAngle);
}

@XmlElementDecl(name = "inv", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTInverseTransform> createCTSystemColorInv(CTInverseTransform cTInverseTransform) {
return new JAXBElement<>(_CTSRgbColorInv_QNAME, CTInverseTransform.class, CTSystemColor.class, cTInverseTransform);
}

@XmlElementDecl(name = "invGamma", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTInverseGammaTransform> createCTSystemColorInvGamma(CTInverseGammaTransform cTInverseGammaTransform) {
return new JAXBElement<>(_CTSRgbColorInvGamma_QNAME, CTInverseGammaTransform.class, CTSystemColor.class, cTInverseGammaTransform);
}

@XmlElementDecl(name = "lum", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorLum(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLum_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "lumMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorLumMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLumMod_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "lumOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorLumOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorLumOff_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "red", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorRed(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRed_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "redMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorRedMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRedMod_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "redOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorRedOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorRedOff_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "sat", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorSat(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSat_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "satMod", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorSatMod(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSatMod_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "satOff", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPercentage> createCTSystemColorSatOff(CTPercentage cTPercentage) {
return new JAXBElement<>(_CTSRgbColorSatOff_QNAME, CTPercentage.class, CTSystemColor.class, cTPercentage);
}

@XmlElementDecl(name = "shade", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTSystemColorShade(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorShade_QNAME, CTPositiveFixedPercentage.class, CTSystemColor.class, cTPositiveFixedPercentage);
}

@XmlElementDecl(name = "tint", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main", scope = CTSystemColor.class)
public JAXBElement<CTPositiveFixedPercentage> createCTSystemColorTint(CTPositiveFixedPercentage cTPositiveFixedPercentage) {
return new JAXBElement<>(_CTSRgbColorTint_QNAME, CTPositiveFixedPercentage.class, CTSystemColor.class, cTPositiveFixedPercentage);
}

public CTTransform2D createCTTransform2D() {
return new CTTransform2D();
}

public CTVector3D createCTVector3D() {
return new CTVector3D();
}

public CTXYAdjustHandle createCTXYAdjustHandle() {
return new CTXYAdjustHandle();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\sl\draw\binding\STPathFillMode.java

package org.apache.poi.sl.draw.binding;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;

@XmlEnum
@XmlType(name = "ST_PathFillMode", namespace = "http://schemas.openxmlformats.org/drawingml/2006/main")
public enum STPathFillMode {
NONE("none"),
NORM("norm"),
LIGHTEN("lighten"),
LIGHTEN_LESS("lightenLess"),
DARKEN("darken"),
DARKEN_LESS("darkenLess");

private final String value;

private STPathFillMode(String str) {
this.value = str;
}

public static STPathFillMode fromValue(String str) {
for (STPathFillMode sTPathFillMode : values()) {
if (sTPathFillMode.value.equals(str)) {
return sTPathFillMode;
}
}
throw new IllegalArgumentException(str);
}

public String value() {
return this.value;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\ss\formula\eval\RefListEval.java

package org.apache.poi.ss.formula.eval;

import java.util.ArrayList;
import java.util.List;

public class RefListEval implements ValueEval {
private final List<ValueEval> list = new ArrayList();

public RefListEval(ValueEval valueEval, ValueEval valueEval2) {
add(valueEval);
add(valueEval2);
}

private void add(ValueEval valueEval) {
if (valueEval instanceof RefListEval) {
this.list.addAll(((RefListEval) valueEval).list);
} else {
this.list.add(valueEval);
}
}

public List<ValueEval> getList() {
return this.list;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\ss\formula\functions\Delta.java

package org.apache.poi.ss.formula.functions;

import java.math.BigDecimal;
import org.apache.poi.ss.formula.OperationEvaluationContext;
import org.apache.poi.ss.formula.eval.ErrorEval;
import org.apache.poi.ss.formula.eval.EvaluationException;
import org.apache.poi.ss.formula.eval.NumberEval;
import org.apache.poi.ss.formula.eval.OperandResolver;
import org.apache.poi.ss.formula.eval.ValueEval;

public final class Delta extends Fixed2ArgFunction implements FreeRefFunction {
private static final NumberEval ONE = new NumberEval(1.0d);
private static final NumberEval ZERO = new NumberEval(0.0d);
public static final FreeRefFunction instance = new Delta();

public ValueEval evaluate(int i, int i3, ValueEval valueEval, ValueEval valueEval2) {
try {
Double parseDouble = OperandResolver.parseDouble(OperandResolver.coerceValueToString(OperandResolver.getSingleValue(valueEval, i, i3)));
if (parseDouble == null) {
return ErrorEval.VALUE_INVALID;
}
try {
Double parseDouble2 = OperandResolver.parseDouble(OperandResolver.coerceValueToString(OperandResolver.getSingleValue(valueEval2, i, i3)));
return parseDouble2 == null ? ErrorEval.VALUE_INVALID : new BigDecimal(parseDouble.doubleValue()).compareTo(new BigDecimal(parseDouble2.doubleValue())) == 0 ? ONE : ZERO;
} catch (EvaluationException e) {
return e.getErrorEval();
}
} catch (EvaluationException e2) {
return e2.getErrorEval();
}
}

public ValueEval evaluate(ValueEval[] valueEvalArr, OperationEvaluationContext operationEvaluationContext) {
return valueEvalArr.length == 2 ? evaluate(operationEvaluationContext.getRowIndex(), operationEvaluationContext.getColumnIndex(), valueEvalArr[0], valueEvalArr[1]) : ErrorEval.VALUE_INVALID;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\ss\formula\functions\ImReal.java

package org.apache.poi.ss.formula.functions;

import android.support.v4.media.b;
import com.google.firebase.installations.interop.BuildConfig;
import java.util.regex.Matcher;
import org.apache.poi.ss.formula.OperationEvaluationContext;
import org.apache.poi.ss.formula.eval.ErrorEval;
import org.apache.poi.ss.formula.eval.EvaluationException;
import org.apache.poi.ss.formula.eval.OperandResolver;
import org.apache.poi.ss.formula.eval.StringEval;
import org.apache.poi.ss.formula.eval.ValueEval;

public class ImReal extends Fixed1ArgFunction implements FreeRefFunction {
public static final FreeRefFunction instance = new ImReal();

public ValueEval evaluate(int i, int i3, ValueEval valueEval) {
try {
Matcher matcher = Imaginary.COMPLEX_NUMBER_PATTERN.matcher(OperandResolver.coerceValueToString(OperandResolver.getSingleValue(valueEval, i, i3)));
if (!matcher.matches()) {
return ErrorEval.NUM_ERROR;
}
String group = matcher.group(2);
boolean z = group.length() != 0;
if (group.length() == 0) {
return new StringEval(String.valueOf(0));
}
String str = BuildConfig.FLAVOR;
if (z) {
String group2 = matcher.group(1);
if (group2.length() != 0 && !group2.equals("+")) {
str = group2;
}
String group3 = matcher.group(2);
str = group3.length() != 0 ? b.k(str, group3) : b.k(str, "1");
}
return new StringEval(str);
} catch (EvaluationException e) {
return e.getErrorEval();
}
}

public ValueEval evaluate(ValueEval[] valueEvalArr, OperationEvaluationContext operationEvaluationContext) {
return valueEvalArr.length != 1 ? ErrorEval.VALUE_INVALID : evaluate(operationEvaluationContext.getRowIndex(), operationEvaluationContext.getColumnIndex(), valueEvalArr[0]);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\ss\formula\functions\Npv.java

package org.apache.poi.ss.formula.functions;

import org.apache.poi.ss.formula.eval.ErrorEval;
import org.apache.poi.ss.formula.eval.EvaluationException;
import org.apache.poi.ss.formula.eval.NumberEval;
import org.apache.poi.ss.formula.eval.ValueEval;
import org.apache.poi.ss.formula.functions.AggregateFunction;

public final class Npv implements Function {
public ValueEval evaluate(ValueEval[] valueEvalArr, int i, int i3) {
if (valueEvalArr.length < 2) {
return ErrorEval.VALUE_INVALID;
}
try {
double singleOperandEvaluate = NumericFunction.singleOperandEvaluate(valueEvalArr[0], i, i3);
int length = valueEvalArr.length - 1;
ValueEval[] valueEvalArr2 = new ValueEval[length];
System.arraycopy(valueEvalArr, 1, valueEvalArr2, 0, length);
double npv = FinanceLib.npv(singleOperandEvaluate, AggregateFunction.ValueCollector.collectValues(valueEvalArr2));
NumericFunction.checkValue(npv);
return new NumberEval(npv);
} catch (EvaluationException e) {
return e.getErrorEval();
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\ss\formula\ptg\ArrayPtg.java

package org.apache.poi.ss.formula.ptg;

import android.support.v4.media.a;
import android.support.v4.media.b;
import java.lang.reflect.Array;
import org.apache.poi.ss.formula.constant.ConstantValueParser;
import org.apache.poi.ss.formula.constant.ErrorConstant;
import org.apache.poi.ss.util.NumberToTextConverter;
import org.apache.poi.util.LittleEndianOutput;

public final class ArrayPtg extends Ptg {
public static final int PLAIN_TOKEN_SIZE = 8;
private static final int RESERVED_FIELD_LEN = 7;
public static final byte sid = 32;
private final Object[] _arrayValues;
private final int _nColumns;
private final int _nRows;
private final int _reserved0Int;
private final int _reserved1Short;
private final int _reserved2Byte;

public ArrayPtg(int i, int i3, int i4, int i5, int i6, Object[] objArr) {
this._reserved0Int = i;
this._reserved1Short = i3;
this._reserved2Byte = i4;
this._nColumns = i5;
this._nRows = i6;
this._arrayValues = (Object[]) objArr.clone();
}

public ArrayPtg(Object[][] objArr) {
int length = objArr[0].length;
int length2 = objArr.length;
short s = (short) length;
this._nColumns = s;
short s2 = (short) length2;
this._nRows = s2;
Object[] objArr2 = new Object[(s * s2)];
for (int i = 0; i < length2; i++) {
Object[] objArr3 = objArr[i];
for (int i3 = 0; i3 < length; i3++) {
objArr2[getValueIndex(i3, i)] = objArr3[i3];
}
}
this._arrayValues = objArr2;
this._reserved0Int = 0;
this._reserved1Short = 0;
this._reserved2Byte = 0;
}

private static String getConstantText(Object obj) {
if (obj == null) {
throw new RuntimeException("Array item cannot be null");
} else if (obj instanceof String) {
return a.p(b.q("\""), (String) obj, "\"");
} else {
if (obj instanceof Double) {
return NumberToTextConverter.toText(((Double) obj).doubleValue());
}
if (obj instanceof Boolean) {
return ((Boolean) obj).booleanValue() ? "TRUE" : "FALSE";
}
if (obj instanceof ErrorConstant) {
return ((ErrorConstant) obj).getText();
}
StringBuilder q = b.q("Unexpected constant class (");
q.append(obj.getClass().getName());
q.append(")");
throw new IllegalArgumentException(q.toString());
}
}

public int getColumnCount() {
return this._nColumns;
}

public byte getDefaultOperandClass() {
return 64;
}

public int getRowCount() {
return this._nRows;
}

public int getSize() {
return ConstantValueParser.getEncodedSize(this._arrayValues) + 11;
}

public Object[][] getTokenArrayValues() {
if (this._arrayValues != null) {
int i = this._nRows;
int[] iArr = new int[2];
iArr[1] = this._nColumns;
iArr[0] = i;
Object[][] objArr = (Object[][]) Array.newInstance(Object.class, iArr);
for (int i3 = 0; i3 < this._nRows; i3++) {
Object[] objArr2 = objArr[i3];
for (int i4 = 0; i4 < this._nColumns; i4++) {
objArr2[i4] = this._arrayValues[getValueIndex(i4, i3)];
}
}
return objArr;
}
throw new IllegalStateException("array values not read yet");
}

public int getValueIndex(int i, int i3) {
int i4;
if (i < 0 || i >= (i4 = this._nColumns)) {
StringBuilder u = a.u("Specified colIx (", i, ") is outside the allowed range (0..");
u.append(this._nColumns - 1);
u.append(")");
throw new IllegalArgumentException(u.toString());
} else if (i3 >= 0 && i3 < this._nRows) {
return (i3 * i4) + i;
} else {
StringBuilder u3 = a.u("Specified rowIx (", i3, ") is outside the allowed range (0..");
u3.append(this._nRows - 1);
u3.append(")");
throw new IllegalArgumentException(u3.toString());
}
}

public boolean isBaseToken() {
return false;
}

public String toFormulaString() {
StringBuffer n = b.n("{");
for (int i = 0; i < this._nRows; i++) {
if (i > 0) {
n.append(";");
}
for (int i3 = 0; i3 < this._nColumns; i3++) {
if (i3 > 0) {
n.append(",");
}
n.append(getConstantText(this._arrayValues[getValueIndex(i3, i)]));
}
}
n.append("}");
return n.toString();
}

public String toString() {
StringBuffer stringBuffer = new StringBuffer("[ArrayPtg]\n");
stringBuffer.append("nRows = ");
stringBuffer.append(getRowCount());
stringBuffer.append("\n");
stringBuffer.append("nCols = ");
stringBuffer.append(getColumnCount());
stringBuffer.append("\n");
if (this._arrayValues == null) {
stringBuffer.append("  #values#uninitialised#\n");
} else {
stringBuffer.append("  ");
stringBuffer.append(toFormulaString());
}
return stringBuffer.toString();
}

public void write(LittleEndianOutput littleEndianOutput) {
littleEndianOutput.writeByte(getPtgClass() + sid);
littleEndianOutput.writeInt(this._reserved0Int);
littleEndianOutput.writeShort(this._reserved1Short);
littleEndianOutput.writeByte(this._reserved2Byte);
}

public int writeTokenValueBytes(LittleEndianOutput littleEndianOutput) {
littleEndianOutput.writeByte(this._nColumns - 1);
littleEndianOutput.writeShort(this._nRows - 1);
ConstantValueParser.encode(littleEndianOutput, this._arrayValues);
return ConstantValueParser.getEncodedSize(this._arrayValues) + 3;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\ss\formula\ptg\BoolPtg.java

package org.apache.poi.ss.formula.ptg;

import org.apache.poi.util.LittleEndianInput;
import org.apache.poi.util.LittleEndianOutput;

public final class BoolPtg extends ScalarConstantPtg {
private static final BoolPtg FALSE = new BoolPtg(false);
public static final int SIZE = 2;
private static final BoolPtg TRUE = new BoolPtg(true);
public static final byte sid = 29;
private final boolean _value;

private BoolPtg(boolean z) {
this._value = z;
}

public static BoolPtg read(LittleEndianInput littleEndianInput) {
boolean z = true;
if (littleEndianInput.readByte() != 1) {
z = false;
}
return valueOf(z);
}

public static BoolPtg valueOf(boolean z) {
return z ? TRUE : FALSE;
}

public int getSize() {
return 2;
}

public boolean getValue() {
return this._value;
}

public String toFormulaString() {
return this._value ? "TRUE" : "FALSE";
}

public void write(LittleEndianOutput littleEndianOutput) {
littleEndianOutput.writeByte(getPtgClass() + sid);
littleEndianOutput.writeByte(this._value ? 1 : 0);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\ss\usermodel\charts\TitleType.java

package org.apache.poi.ss.usermodel.charts;

public enum TitleType {
STRING,
CELL_REFERENCE
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\ss\util\MutableFPNumber$Rounder.java

package org.apache.poi.ss.util;

import java.math.BigInteger;

public final class MutableFPNumber$Rounder {
private static final BigInteger[] HALF_BITS;

static {
BigInteger[] bigIntegerArr = new BigInteger[33];
long j2 = 1;
for (int i = 1; i < 33; i++) {
bigIntegerArr[i] = BigInteger.valueOf(j2);
j2 <<= 1;
}
HALF_BITS = bigIntegerArr;
}

private MutableFPNumber$Rounder() {
}

public static BigInteger round(BigInteger bigInteger, int i) {
return i < 1 ? bigInteger : bigInteger.add(HALF_BITS[i]);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xdgf\usermodel\section\geometry\RelMoveTo.java

package org.apache.poi.xdgf.usermodel.section.geometry;

import android.support.v4.media.a;
import com.microsoft.schemas.office.visio.x2012.main.CellType;
import com.microsoft.schemas.office.visio.x2012.main.RowType;
import java.awt.geom.Path2D;
import org.apache.poi.POIXMLException;
import org.apache.poi.xdgf.usermodel.XDGFCell;
import org.apache.poi.xdgf.usermodel.XDGFShape;

public class RelMoveTo implements GeometryRow {
public RelMoveTo _master = null;
public Boolean deleted = null;
public Double x = null;
public Double y = null;

public RelMoveTo(RowType rowType) {
if (rowType.isSetDel()) {
this.deleted = Boolean.valueOf(rowType.getDel());
}
for (CellType cellType : rowType.getCellArray()) {
String n = cellType.getN();
if (n.equals("X")) {
this.x = XDGFCell.parseDoubleValue(cellType);
} else if (n.equals("Y")) {
this.y = XDGFCell.parseDoubleValue(cellType);
} else {
throw new POIXMLException(a.k("Invalid cell '", n, "' in RelMoveTo row"));
}
}
}

public void addToPath(Path2D.Double doubleR, XDGFShape xDGFShape) {
if (!getDel()) {
doubleR.moveTo(xDGFShape.getWidth().doubleValue() * getX().doubleValue(), xDGFShape.getHeight().doubleValue() * getY().doubleValue());
}
}

public boolean getDel() {
Boolean bool = this.deleted;
if (bool != null) {
return bool.booleanValue();
}
RelMoveTo relMoveTo = this._master;
if (relMoveTo != null) {
return relMoveTo.getDel();
}
return false;
}

public Double getX() {
Double d = this.x;
return d == null ? this._master.x : d;
}

public Double getY() {
Double d = this.y;
return d == null ? this._master.y : d;
}

public void setupMaster(GeometryRow geometryRow) {
this._master = (RelMoveTo) geometryRow;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xdgf\util\VsdxToPng.java

package org.apache.poi.xdgf.util;

import android.support.v4.media.b;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import javax.imageio.ImageIO;
import org.apache.poi.xdgf.geom.Dimension2dDouble;
import org.apache.poi.xdgf.usermodel.XDGFPage;
import org.apache.poi.xdgf.usermodel.XmlVisioDocument;
import org.apache.poi.xdgf.usermodel.shape.ShapeDebuggerRenderer;
import org.apache.poi.xdgf.usermodel.shape.ShapeRenderer;

public class VsdxToPng {
public static void main(String[] strArr) throws Exception {
if (strArr.length > 2) {
System.err.println("Usage: [--debug] in.vsdx outdir");
System.exit(1);
}
ShapeDebuggerRenderer shapeRenderer = new ShapeRenderer();
String str = strArr[0];
String str2 = strArr[1];
if (strArr[0].equals("--debug")) {
str = strArr[1];
str2 = strArr[2];
shapeRenderer = new ShapeDebuggerRenderer();
}
renderToPng(new XmlVisioDocument(new FileInputStream(str)), str2, 181.8181818181818d, (ShapeRenderer) shapeRenderer);
}

public static void renderToPng(XDGFPage xDGFPage, File file, double d, ShapeRenderer shapeRenderer) throws IOException {
Dimension2dDouble pageSize = xDGFPage.getPageSize();
int width = (int) (pageSize.getWidth() * d);
int height = (int) (pageSize.getHeight() * d);
BufferedImage bufferedImage = new BufferedImage(width, height, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
createGraphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
createGraphics.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
createGraphics.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BICUBIC);
createGraphics.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);
createGraphics.setColor(Color.black);
createGraphics.setBackground(Color.white);
createGraphics.clearRect(0, 0, width, height);
createGraphics.translate(0, bufferedImage.getHeight());
createGraphics.scale(d, -d);
shapeRenderer.setGraphics(createGraphics);
xDGFPage.getContent().visitShapes(shapeRenderer);
createGraphics.dispose();
FileOutputStream fileOutputStream = new FileOutputStream(file);
try {
ImageIO.write(bufferedImage, "png", fileOutputStream);
} finally {
fileOutputStream.close();
}
}

public static void renderToPng(XDGFPage xDGFPage, String str, double d, ShapeRenderer shapeRenderer) throws IOException {
renderToPng(xDGFPage, new File(str), d, shapeRenderer);
}

public static void renderToPng(XmlVisioDocument xmlVisioDocument, String str, double d, ShapeRenderer shapeRenderer) throws IOException {
File file = new File(str);
for (XDGFPage renderToPngDir : xmlVisioDocument.getPages()) {
renderToPngDir(renderToPngDir, file, d, shapeRenderer);
}
}

public static void renderToPngDir(XDGFPage xDGFPage, File file, double d, ShapeRenderer shapeRenderer) throws IOException {
StringBuilder q = b.q("page");
q.append(xDGFPage.getPageNumber());
q.append("-");
q.append(Util.sanitizeFilename(xDGFPage.getName()));
q.append(".png");
File file2 = new File(file, q.toString());
PrintStream printStream = System.out;
printStream.println("** Writing image to " + file2);
renderToPng(xDGFPage, file2, d, shapeRenderer);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xslf\usermodel\XSLFTextParagraph$10.java

package org.apache.poi.xslf.usermodel;

import org.apache.poi.util.Units;
import org.apache.poi.xslf.model.ParagraphPropertyFetcher;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties;

public class XSLFTextParagraph$10 extends ParagraphPropertyFetcher<Double> {
public final /* synthetic */ XSLFTextParagraph this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public XSLFTextParagraph$10(XSLFTextParagraph xSLFTextParagraph, int i) {
super(i);
this.this$0 = xSLFTextParagraph;
}

public boolean fetch(CTTextParagraphProperties cTTextParagraphProperties) {
if (!cTTextParagraphProperties.isSetMarL()) {
return false;
}
setValue(Double.valueOf(Units.toPoints((long) cTTextParagraphProperties.getMarL())));
return true;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xslf\usermodel\XSLFTextParagraph$11.java

package org.apache.poi.xslf.usermodel;

import org.apache.poi.util.Units;
import org.apache.poi.xslf.model.ParagraphPropertyFetcher;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties;

public class XSLFTextParagraph$11 extends ParagraphPropertyFetcher<Double> {
public final /* synthetic */ XSLFTextParagraph this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public XSLFTextParagraph$11(XSLFTextParagraph xSLFTextParagraph, int i) {
super(i);
this.this$0 = xSLFTextParagraph;
}

public boolean fetch(CTTextParagraphProperties cTTextParagraphProperties) {
if (!cTTextParagraphProperties.isSetMarR()) {
return false;
}
setValue(Double.valueOf(Units.toPoints((long) cTTextParagraphProperties.getMarR())));
return true;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xslf\usermodel\XSLFTextParagraph$12.java

package org.apache.poi.xslf.usermodel;

import org.apache.poi.util.Units;
import org.apache.poi.xslf.model.ParagraphPropertyFetcher;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties;

public class XSLFTextParagraph$12 extends ParagraphPropertyFetcher<Double> {
public final /* synthetic */ XSLFTextParagraph this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public XSLFTextParagraph$12(XSLFTextParagraph xSLFTextParagraph, int i) {
super(i);
this.this$0 = xSLFTextParagraph;
}

public boolean fetch(CTTextParagraphProperties cTTextParagraphProperties) {
if (!cTTextParagraphProperties.isSetDefTabSz()) {
return false;
}
setValue(Double.valueOf(Units.toPoints((long) cTTextParagraphProperties.getDefTabSz())));
return true;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xslf\usermodel\XSLFTextParagraph$13.java

package org.apache.poi.xslf.usermodel;

import org.apache.poi.util.Units;
import org.apache.poi.xslf.model.ParagraphPropertyFetcher;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTextTabStopList;

public class XSLFTextParagraph$13 extends ParagraphPropertyFetcher<Double> {
public final /* synthetic */ XSLFTextParagraph this$0;
public final /* synthetic */ int val$idx;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public XSLFTextParagraph$13(XSLFTextParagraph xSLFTextParagraph, int i, int i3) {
super(i);
this.this$0 = xSLFTextParagraph;
this.val$idx = i3;
}

public boolean fetch(CTTextParagraphProperties cTTextParagraphProperties) {
if (!cTTextParagraphProperties.isSetTabLst()) {
return false;
}
CTTextTabStopList tabLst = cTTextParagraphProperties.getTabLst();
if (this.val$idx >= tabLst.sizeOfTabArray()) {
return false;
}
setValue(Double.valueOf(Units.toPoints((long) tabLst.getTabArray(this.val$idx).getPos())));
return true;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xslf\usermodel\XSLFTextParagraph$14.java

package org.apache.poi.xslf.usermodel;

import org.apache.poi.xslf.model.ParagraphPropertyFetcher;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing;

public class XSLFTextParagraph$14 extends ParagraphPropertyFetcher<Double> {
public final /* synthetic */ XSLFTextParagraph this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public XSLFTextParagraph$14(XSLFTextParagraph xSLFTextParagraph, int i) {
super(i);
this.this$0 = xSLFTextParagraph;
}

public boolean fetch(CTTextParagraphProperties cTTextParagraphProperties) {
if (!cTTextParagraphProperties.isSetLnSpc()) {
return false;
}
CTTextSpacing lnSpc = cTTextParagraphProperties.getLnSpc();
if (lnSpc.isSetSpcPct()) {
setValue(Double.valueOf(((double) lnSpc.getSpcPct().getVal()) * 0.001d));
return true;
} else if (!lnSpc.isSetSpcPts()) {
return true;
} else {
setValue(Double.valueOf(((double) (-lnSpc.getSpcPts().getVal())) * 0.01d));
return true;
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xslf\usermodel\XSLFTextParagraph$15.java

package org.apache.poi.xslf.usermodel;

import org.apache.poi.xslf.model.ParagraphPropertyFetcher;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing;

public class XSLFTextParagraph$15 extends ParagraphPropertyFetcher<Double> {
public final /* synthetic */ XSLFTextParagraph this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public XSLFTextParagraph$15(XSLFTextParagraph xSLFTextParagraph, int i) {
super(i);
this.this$0 = xSLFTextParagraph;
}

public boolean fetch(CTTextParagraphProperties cTTextParagraphProperties) {
if (!cTTextParagraphProperties.isSetSpcBef()) {
return false;
}
CTTextSpacing spcBef = cTTextParagraphProperties.getSpcBef();
if (spcBef.isSetSpcPct()) {
setValue(Double.valueOf(((double) spcBef.getSpcPct().getVal()) * 0.001d));
return true;
} else if (!spcBef.isSetSpcPts()) {
return true;
} else {
setValue(Double.valueOf(((double) (-spcBef.getSpcPts().getVal())) * 0.01d));
return true;
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xslf\usermodel\XSLFTextParagraph$17.java

package org.apache.poi.xslf.usermodel;

import org.apache.poi.xslf.model.ParagraphPropertyFetcher;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties;

public class XSLFTextParagraph$17 extends ParagraphPropertyFetcher<Boolean> {
public final /* synthetic */ XSLFTextParagraph this$0;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public XSLFTextParagraph$17(XSLFTextParagraph xSLFTextParagraph, int i) {
super(i);
this.this$0 = xSLFTextParagraph;
}

public boolean fetch(CTTextParagraphProperties cTTextParagraphProperties) {
if (cTTextParagraphProperties.isSetBuNone()) {
setValue(Boolean.FALSE);
return true;
} else if (!cTTextParagraphProperties.isSetBuFont() && !cTTextParagraphProperties.isSetBuChar()) {
return false;
} else {
setValue(Boolean.TRUE);
return true;
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xslf\usermodel\XSLFTextRun$XSLFFontInfo$1.java

package org.apache.poi.xslf.usermodel;

import org.apache.poi.xslf.model.CharacterPropertyFetcher;
import org.apache.poi.xslf.usermodel.XSLFTextRun;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont;

public class XSLFTextRun$XSLFFontInfo$1 extends CharacterPropertyFetcher<CTTextFont> {
public final /* synthetic */ XSLFTextRun.XSLFFontInfo this$1;

/* JADX INFO: super call moved to the top of the method (can break code semantics) */
public XSLFTextRun$XSLFFontInfo$1(XSLFTextRun.XSLFFontInfo xSLFFontInfo, int i) {
super(i);
this.this$1 = xSLFFontInfo;
}

public boolean fetch(CTTextCharacterProperties cTTextCharacterProperties) {
CTTextFont access$200 = XSLFTextRun.XSLFFontInfo.access$200(this.this$1, cTTextCharacterProperties, false);
if (access$200 == null) {
return false;
}
setValue(access$200);
return true;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xslf\usermodel\XSLFTextShape$7.java

package org.apache.poi.xslf.usermodel;

import org.apache.poi.xslf.model.TextBodyPropertyFetcher;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties;
import org.openxmlformats.schemas.drawingml.x2006.main.STTextWrappingType;

public class XSLFTextShape$7 extends TextBodyPropertyFetcher<Boolean> {
public final /* synthetic */ XSLFTextShape this$0;

public XSLFTextShape$7(XSLFTextShape xSLFTextShape) {
this.this$0 = xSLFTextShape;
}

public boolean fetch(CTTextBodyProperties cTTextBodyProperties) {
boolean z = false;
if (!cTTextBodyProperties.isSetWrap()) {
return false;
}
if (cTTextBodyProperties.getWrap() == STTextWrappingType.SQUARE) {
z = true;
}
setValue(Boolean.valueOf(z));
return true;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xslf\usermodel\XSLFTextShape$8.java

package org.apache.poi.xslf.usermodel;

public /* synthetic */ class XSLFTextShape$8 {
public static final /* synthetic */ int[] $SwitchMap$org$apache$poi$sl$usermodel$Placeholder;
public static final /* synthetic */ int[] $SwitchMap$org$apache$poi$sl$usermodel$TextShape$TextAutofit;
public static final /* synthetic */ int[] $SwitchMap$org$apache$poi$sl$usermodel$TextShape$TextPlaceholder;

/* JADX WARNING: Can't wrap try/catch for region: R(32:0|(2:1|2)|3|(2:5|6)|7|9|10|11|(2:13|14)|15|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|35|36|37|38|(3:39|40|42)) */
/* JADX WARNING: Can't wrap try/catch for region: R(33:0|(2:1|2)|3|5|6|7|9|10|11|(2:13|14)|15|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|35|36|37|38|(3:39|40|42)) */
/* JADX WARNING: Can't wrap try/catch for region: R(37:0|1|2|3|5|6|7|9|10|11|13|14|15|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|35|36|37|38|39|40|42) */
/* JADX WARNING: Failed to process nested try/catch */
/* JADX WARNING: Missing exception handler attribute for start block: B:19:0x0044 */
/* JADX WARNING: Missing exception handler attribute for start block: B:21:0x004e */
/* JADX WARNING: Missing exception handler attribute for start block: B:23:0x0058 */
/* JADX WARNING: Missing exception handler attribute for start block: B:25:0x0062 */
/* JADX WARNING: Missing exception handler attribute for start block: B:27:0x006d */
/* JADX WARNING: Missing exception handler attribute for start block: B:29:0x0078 */
/* JADX WARNING: Missing exception handler attribute for start block: B:31:0x0083 */
/* JADX WARNING: Missing exception handler attribute for start block: B:37:0x00a0 */
/* JADX WARNING: Missing exception handler attribute for start block: B:39:0x00aa */
static {
/*
org.apache.poi.sl.usermodel.Placeholder[] r0 = org.apache.poi.sl.usermodel.Placeholder.values()
int r0 = r0.length
int[] r0 = new int[r0]
$SwitchMap$org$apache$poi$sl$usermodel$Placeholder = r0
r1 = 1
org.apache.poi.sl.usermodel.Placeholder r2 = org.apache.poi.sl.usermodel.Placeholder.BODY     // Catch:{ NoSuchFieldError -> 0x0012 }
int r2 = r2.ordinal()     // Catch:{ NoSuchFieldError -> 0x0012 }
r0[r2] = r1     // Catch:{ NoSuchFieldError -> 0x0012 }
L_0x0012:
r0 = 2
int[] r2 = $SwitchMap$org$apache$poi$sl$usermodel$Placeholder     // Catch:{ NoSuchFieldError -> 0x001d }
org.apache.poi.sl.usermodel.Placeholder r3 = org.apache.poi.sl.usermodel.Placeholder.TITLE     // Catch:{ NoSuchFieldError -> 0x001d }
int r3 = r3.ordinal()     // Catch:{ NoSuchFieldError -> 0x001d }
r2[r3] = r0     // Catch:{ NoSuchFieldError -> 0x001d }
L_0x001d:
r2 = 3
int[] r3 = $SwitchMap$org$apache$poi$sl$usermodel$Placeholder     // Catch:{ NoSuchFieldError -> 0x0028 }
org.apache.poi.sl.usermodel.Placeholder r4 = org.apache.poi.sl.usermodel.Placeholder.CENTERED_TITLE     // Catch:{ NoSuchFieldError -> 0x0028 }
int r4 = r4.ordinal()     // Catch:{ NoSuchFieldError -> 0x0028 }
r3[r4] = r2     // Catch:{ NoSuchFieldError -> 0x0028 }
L_0x0028:
r3 = 4
int[] r4 = $SwitchMap$org$apache$poi$sl$usermodel$Placeholder     // Catch:{ NoSuchFieldError -> 0x0033 }
org.apache.poi.sl.usermodel.Placeholder r5 = org.apache.poi.sl.usermodel.Placeholder.CONTENT     // Catch:{ NoSuchFieldError -> 0x0033 }
int r5 = r5.ordinal()     // Catch:{ NoSuchFieldError -> 0x0033 }
r4[r5] = r3     // Catch:{ NoSuchFieldError -> 0x0033 }
L_0x0033:
org.apache.poi.sl.usermodel.TextShape$TextPlaceholder[] r4 = org.apache.poi.sl.usermodel.TextShape.TextPlaceholder.values()
int r4 = r4.length
int[] r4 = new int[r4]
$SwitchMap$org$apache$poi$sl$usermodel$TextShape$TextPlaceholder = r4
org.apache.poi.sl.usermodel.TextShape$TextPlaceholder r5 = org.apache.poi.sl.usermodel.TextShape.TextPlaceholder.NOTES     // Catch:{ NoSuchFieldError -> 0x0044 }
int r5 = r5.ordinal()     // Catch:{ NoSuchFieldError -> 0x0044 }
r4[r5] = r1     // Catch:{ NoSuchFieldError -> 0x0044 }
L_0x0044:
int[] r4 = $SwitchMap$org$apache$poi$sl$usermodel$TextShape$TextPlaceholder     // Catch:{ NoSuchFieldError -> 0x004e }
org.apache.poi.sl.usermodel.TextShape$TextPlaceholder r5 = org.apache.poi.sl.usermodel.TextShape.TextPlaceholder.HALF_BODY     // Catch:{ NoSuchFieldError -> 0x004e }
int r5 = r5.ordinal()     // Catch:{ NoSuchFieldError -> 0x004e }
r4[r5] = r0     // Catch:{ NoSuchFieldError -> 0x004e }
L_0x004e:
int[] r4 = $SwitchMap$org$apache$poi$sl$usermodel$TextShape$TextPlaceholder     // Catch:{ NoSuchFieldError -> 0x0058 }
org.apache.poi.sl.usermodel.TextShape$TextPlaceholder r5 = org.apache.poi.sl.usermodel.TextShape.TextPlaceholder.QUARTER_BODY     // Catch:{ NoSuchFieldError -> 0x0058 }
int r5 = r5.ordinal()     // Catch:{ NoSuchFieldError -> 0x0058 }
r4[r5] = r2     // Catch:{ NoSuchFieldError -> 0x0058 }
L_0x0058:
int[] r4 = $SwitchMap$org$apache$poi$sl$usermodel$TextShape$TextPlaceholder     // Catch:{ NoSuchFieldError -> 0x0062 }
org.apache.poi.sl.usermodel.TextShape$TextPlaceholder r5 = org.apache.poi.sl.usermodel.TextShape.TextPlaceholder.BODY     // Catch:{ NoSuchFieldError -> 0x0062 }
int r5 = r5.ordinal()     // Catch:{ NoSuchFieldError -> 0x0062 }
r4[r5] = r3     // Catch:{ NoSuchFieldError -> 0x0062 }
L_0x0062:
int[] r3 = $SwitchMap$org$apache$poi$sl$usermodel$TextShape$TextPlaceholder     // Catch:{ NoSuchFieldError -> 0x006d }
org.apache.poi.sl.usermodel.TextShape$TextPlaceholder r4 = org.apache.poi.sl.usermodel.TextShape.TextPlaceholder.TITLE     // Catch:{ NoSuchFieldError -> 0x006d }
int r4 = r4.ordinal()     // Catch:{ NoSuchFieldError -> 0x006d }
r5 = 5
r3[r4] = r5     // Catch:{ NoSuchFieldError -> 0x006d }
L_0x006d:
int[] r3 = $SwitchMap$org$apache$poi$sl$usermodel$TextShape$TextPlaceholder     // Catch:{ NoSuchFieldError -> 0x0078 }
org.apache.poi.sl.usermodel.TextShape$TextPlaceholder r4 = org.apache.poi.sl.usermodel.TextShape.TextPlaceholder.CENTER_BODY     // Catch:{ NoSuchFieldError -> 0x0078 }
int r4 = r4.ordinal()     // Catch:{ NoSuchFieldError -> 0x0078 }
r5 = 6
r3[r4] = r5     // Catch:{ NoSuchFieldError -> 0x0078 }
L_0x0078:
int[] r3 = $SwitchMap$org$apache$poi$sl$usermodel$TextShape$TextPlaceholder     // Catch:{ NoSuchFieldError -> 0x0083 }
org.apache.poi.sl.usermodel.TextShape$TextPlaceholder r4 = org.apache.poi.sl.usermodel.TextShape.TextPlaceholder.CENTER_TITLE     // Catch:{ NoSuchFieldError -> 0x0083 }
int r4 = r4.ordinal()     // Catch:{ NoSuchFieldError -> 0x0083 }
r5 = 7
r3[r4] = r5     // Catch:{ NoSuchFieldError -> 0x0083 }
L_0x0083:
int[] r3 = $SwitchMap$org$apache$poi$sl$usermodel$TextShape$TextPlaceholder     // Catch:{ NoSuchFieldError -> 0x008f }
org.apache.poi.sl.usermodel.TextShape$TextPlaceholder r4 = org.apache.poi.sl.usermodel.TextShape.TextPlaceholder.OTHER     // Catch:{ NoSuchFieldError -> 0x008f }
int r4 = r4.ordinal()     // Catch:{ NoSuchFieldError -> 0x008f }
r5 = 8
r3[r4] = r5     // Catch:{ NoSuchFieldError -> 0x008f }
L_0x008f:
org.apache.poi.sl.usermodel.TextShape$TextAutofit[] r3 = org.apache.poi.sl.usermodel.TextShape.TextAutofit.values()
int r3 = r3.length
int[] r3 = new int[r3]
$SwitchMap$org$apache$poi$sl$usermodel$TextShape$TextAutofit = r3
org.apache.poi.sl.usermodel.TextShape$TextAutofit r4 = org.apache.poi.sl.usermodel.TextShape.TextAutofit.NONE     // Catch:{ NoSuchFieldError -> 0x00a0 }
int r4 = r4.ordinal()     // Catch:{ NoSuchFieldError -> 0x00a0 }
r3[r4] = r1     // Catch:{ NoSuchFieldError -> 0x00a0 }
L_0x00a0:
int[] r1 = $SwitchMap$org$apache$poi$sl$usermodel$TextShape$TextAutofit     // Catch:{ NoSuchFieldError -> 0x00aa }
org.apache.poi.sl.usermodel.TextShape$TextAutofit r3 = org.apache.poi.sl.usermodel.TextShape.TextAutofit.NORMAL     // Catch:{ NoSuchFieldError -> 0x00aa }
int r3 = r3.ordinal()     // Catch:{ NoSuchFieldError -> 0x00aa }
r1[r3] = r0     // Catch:{ NoSuchFieldError -> 0x00aa }
L_0x00aa:
int[] r0 = $SwitchMap$org$apache$poi$sl$usermodel$TextShape$TextAutofit     // Catch:{ NoSuchFieldError -> 0x00b4 }
org.apache.poi.sl.usermodel.TextShape$TextAutofit r1 = org.apache.poi.sl.usermodel.TextShape.TextAutofit.SHAPE     // Catch:{ NoSuchFieldError -> 0x00b4 }
int r1 = r1.ordinal()     // Catch:{ NoSuchFieldError -> 0x00b4 }
r0[r1] = r2     // Catch:{ NoSuchFieldError -> 0x00b4 }
L_0x00b4:
return
*/
throw new UnsupportedOperationException("Method not decompiled: org.apache.poi.xslf.usermodel.XSLFTextShape$8.<clinit>():void");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xssf\streaming\AutoSizeColumnTracker$ColumnWidthPair.java

package org.apache.poi.xssf.streaming;

public class AutoSizeColumnTracker$ColumnWidthPair {
private double withSkipMergedCells;
private double withUseMergedCells;

public AutoSizeColumnTracker$ColumnWidthPair() {
this(-1.0d, -1.0d);
}

public AutoSizeColumnTracker$ColumnWidthPair(double d, double d2) {
this.withSkipMergedCells = d;
this.withUseMergedCells = d2;
}

public double getMaxColumnWidth(boolean z) {
return z ? this.withUseMergedCells : this.withSkipMergedCells;
}

public void setMaxColumnWidths(double d, double d2) {
double max = Math.max(this.withUseMergedCells, d2);
this.withUseMergedCells = max;
this.withSkipMergedCells = Math.max(max, d);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xssf\streaming\SXSSFCell$NumericValue.java

package org.apache.poi.xssf.streaming;

import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.streaming.SXSSFCell;

public class SXSSFCell$NumericValue implements SXSSFCell.Value {
public double _value;

public CellType getType() {
return CellType.NUMERIC;
}

public double getValue() {
return this._value;
}

public void setValue(double d) {
this._value = d;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xssf\usermodel\TextFontAlign.java

package org.apache.poi.xssf.usermodel;

public enum TextFontAlign {
AUTO,
TOP,
CENTER,
BASELINE,
BOTTOM
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xssf\usermodel\XSSFColorScaleFormatting.java

package org.apache.poi.xssf.usermodel;

import org.apache.poi.ss.usermodel.Color;
import org.apache.poi.ss.usermodel.ColorScaleFormatting;
import org.apache.poi.ss.usermodel.ConditionalFormattingThreshold;
import org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfvo;
import org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor;
import org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColorScale;

public class XSSFColorScaleFormatting implements ColorScaleFormatting {
private IndexedColorMap _indexedColorMap;
private CTColorScale _scale;

public XSSFColorScaleFormatting(CTColorScale cTColorScale, IndexedColorMap indexedColorMap) {
this._scale = cTColorScale;
this._indexedColorMap = indexedColorMap;
}

public XSSFColor createColor() {
return new XSSFColor(this._scale.addNewColor(), this._indexedColorMap);
}

public XSSFConditionalFormattingThreshold createThreshold() {
return new XSSFConditionalFormattingThreshold(this._scale.addNewCfvo());
}

public XSSFColor[] getColors() {
CTColor[] colorArray = this._scale.getColorArray();
XSSFColor[] xSSFColorArr = new XSSFColor[colorArray.length];
for (int i = 0; i < colorArray.length; i++) {
xSSFColorArr[i] = new XSSFColor(colorArray[i], this._indexedColorMap);
}
return xSSFColorArr;
}

public int getNumControlPoints() {
return this._scale.sizeOfCfvoArray();
}

public XSSFConditionalFormattingThreshold[] getThresholds() {
CTCfvo[] cfvoArray = this._scale.getCfvoArray();
XSSFConditionalFormattingThreshold[] xSSFConditionalFormattingThresholdArr = new XSSFConditionalFormattingThreshold[cfvoArray.length];
for (int i = 0; i < cfvoArray.length; i++) {
xSSFConditionalFormattingThresholdArr[i] = new XSSFConditionalFormattingThreshold(cfvoArray[i]);
}
return xSSFConditionalFormattingThresholdArr;
}

public void setColors(Color[] colorArr) {
CTColor[] cTColorArr = new CTColor[colorArr.length];
for (int i = 0; i < colorArr.length; i++) {
cTColorArr[i] = colorArr[i].getCTColor();
}
this._scale.setColorArray(cTColorArr);
}

public void setNumControlPoints(int i) {
while (i < this._scale.sizeOfCfvoArray()) {
CTColorScale cTColorScale = this._scale;
cTColorScale.removeCfvo(cTColorScale.sizeOfCfvoArray() - 1);
CTColorScale cTColorScale2 = this._scale;
cTColorScale2.removeColor(cTColorScale2.sizeOfColorArray() - 1);
}
while (i > this._scale.sizeOfCfvoArray()) {
this._scale.addNewCfvo();
this._scale.addNewColor();
}
}

public void setThresholds(ConditionalFormattingThreshold[] conditionalFormattingThresholdArr) {
CTCfvo[] cTCfvoArr = new CTCfvo[conditionalFormattingThresholdArr.length];
for (int i = 0; i < conditionalFormattingThresholdArr.length; i++) {
cTCfvoArr[i] = conditionalFormattingThresholdArr[i].getCTCfvo();
}
this._scale.setCfvoArray(cTCfvoArr);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xssf\util\NumericRanges.java

package org.apache.poi.xssf.util;

public class NumericRanges {
public static final int NO_OVERLAPS = -1;
public static final int OVERLAPS_1_MINOR = 0;
public static final int OVERLAPS_1_WRAPS = 2;
public static final int OVERLAPS_2_MINOR = 1;
public static final int OVERLAPS_2_WRAPS = 3;

public static long[] getOverlappingRange(long[] jArr, long[] jArr2) {
int overlappingType = getOverlappingType(jArr, jArr2);
if (overlappingType == 0) {
return new long[]{jArr2[0], jArr[1]};
} else if (overlappingType != 1) {
return overlappingType != 2 ? overlappingType != 3 ? new long[]{-1, -1} : jArr : jArr2;
} else {
return new long[]{jArr[0], jArr2[1]};
}
}

public static int getOverlappingType(long[] jArr, long[] jArr2) {
long j2 = jArr[0];
long j3 = jArr[1];
long j5 = jArr2[0];
long j6 = jArr2[1];
if (j2 >= j5) {
if (j3 <= j6) {
return 3;
}
return j2 <= j6 ? 1 : -1;
} else if (j3 >= j6) {
return 2;
} else {
return j3 >= j5 ? 0 : -1;
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\poi\xwpf\usermodel\TextAlignment.java

package org.apache.poi.xwpf.usermodel;

import android.support.v4.media.b;
import java.util.HashMap;
import java.util.Map;

public enum TextAlignment {
TOP(1),
CENTER(2),
BASELINE(3),
BOTTOM(4),
AUTO(5);

private static Map<Integer, TextAlignment> imap;
private final int value;

/* access modifiers changed from: public */
static {
int i;
imap = new HashMap();
for (TextAlignment textAlignment : values()) {
imap.put(Integer.valueOf(textAlignment.getValue()), textAlignment);
}
}

private TextAlignment(int i) {
this.value = i;
}

public static TextAlignment valueOf(int i) {
TextAlignment textAlignment = imap.get(Integer.valueOf(i));
if (textAlignment != null) {
return textAlignment;
}
throw new IllegalArgumentException(b.g("Unknown text alignment: ", i));
}

public int getValue() {
return this.value;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\ObjectFactory.java

package org.apache.xmlbeans;

public interface ObjectFactory {
Object createObject(Class cls);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\SchemaType.java

package org.apache.xmlbeans;

import javax.xml.namespace.QName;

public interface SchemaType extends SchemaComponent, SchemaAnnotated {
public static final int ATOMIC = 1;
public static final int BTC_ANY_SIMPLE = 2;
public static final int BTC_ANY_TYPE = 1;
public static final int BTC_ANY_URI = 6;
public static final int BTC_BASE_64_BINARY = 4;
public static final int BTC_BOOLEAN = 3;
public static final int BTC_BYTE = 26;
public static final int BTC_DATE = 16;
public static final int BTC_DATE_TIME = 14;
public static final int BTC_DECIMAL = 11;
public static final int BTC_DOUBLE = 10;
public static final int BTC_DURATION = 13;
public static final int BTC_ENTITIES = 44;
public static final int BTC_ENTITY = 43;
public static final int BTC_FIRST_PRIMITIVE = 2;
public static final int BTC_FLOAT = 9;
public static final int BTC_G_DAY = 20;
public static final int BTC_G_MONTH = 21;
public static final int BTC_G_MONTH_DAY = 19;
public static final int BTC_G_YEAR = 18;
public static final int BTC_G_YEAR_MONTH = 17;
public static final int BTC_HEX_BINARY = 5;
public static final int BTC_ID = 40;
public static final int BTC_IDREF = 41;
public static final int BTC_IDREFS = 42;
public static final int BTC_INT = 24;
public static final int BTC_INTEGER = 22;
public static final int BTC_LANGUAGE = 39;
public static final int BTC_LAST_BUILTIN = 46;
public static final int BTC_LAST_PRIMITIVE = 21;
public static final int BTC_LONG = 23;
public static final int BTC_NAME = 37;
public static final int BTC_NCNAME = 38;
public static final int BTC_NEGATIVE_INTEGER = 28;
public static final int BTC_NMTOKEN = 45;
public static final int BTC_NMTOKENS = 46;
public static final int BTC_NON_NEGATIVE_INTEGER = 29;
public static final int BTC_NON_POSITIVE_INTEGER = 27;
public static final int BTC_NORMALIZED_STRING = 35;
public static final int BTC_NOTATION = 8;
public static final int BTC_NOT_BUILTIN = 0;
public static final int BTC_POSITIVE_INTEGER = 30;
public static final int BTC_QNAME = 7;
public static final int BTC_SHORT = 25;
public static final int BTC_STRING = 12;
public static final int BTC_TIME = 15;
public static final int BTC_TOKEN = 36;
public static final int BTC_UNSIGNED_BYTE = 34;
public static final int BTC_UNSIGNED_INT = 32;
public static final int BTC_UNSIGNED_LONG = 31;
public static final int BTC_UNSIGNED_SHORT = 33;
public static final int DT_EXTENSION = 2;
public static final int DT_NOT_DERIVED = 0;
public static final int DT_RESTRICTION = 1;
public static final int ELEMENT_CONTENT = 3;
public static final int EMPTY_CONTENT = 1;
public static final int FACET_ENUMERATION = 11;
public static final int FACET_FRACTION_DIGITS = 8;
public static final int FACET_LENGTH = 0;
public static final int FACET_MAX_EXCLUSIVE = 6;
public static final int FACET_MAX_INCLUSIVE = 5;
public static final int FACET_MAX_LENGTH = 2;
public static final int FACET_MIN_EXCLUSIVE = 3;
public static final int FACET_MIN_INCLUSIVE = 4;
public static final int FACET_MIN_LENGTH = 1;
public static final int FACET_PATTERN = 10;
public static final int FACET_TOTAL_DIGITS = 7;
public static final int FACET_WHITE_SPACE = 9;
public static final int LAST_BASIC_FACET = 8;
public static final int LAST_FACET = 11;
public static final int LAST_PROPERTY = 15;
public static final int LIST = 3;
public static final int MIXED_CONTENT = 4;
public static final int NOT_COMPLEX_TYPE = 0;
public static final int NOT_DECIMAL = 0;
public static final int NOT_SIMPLE = 0;
public static final int PARTIAL_ORDER = 1;
public static final int PROPERTY_BOUNDED = 13;
public static final int PROPERTY_CARDINALITY = 14;
public static final int PROPERTY_NUMERIC = 15;
public static final int PROPERTY_ORDERED = 12;
public static final int SIMPLE_CONTENT = 2;
public static final int SIZE_BIG_DECIMAL = 1000001;
public static final int SIZE_BIG_INTEGER = 1000000;
public static final int SIZE_BYTE = 8;
public static final int SIZE_INT = 32;
public static final int SIZE_LONG = 64;
public static final int SIZE_SHORT = 16;
public static final int TOTAL_ORDER = 2;
public static final int UNION = 2;
public static final int UNORDERED = 0;
public static final int WS_COLLAPSE = 3;
public static final int WS_PRESERVE = 1;
public static final int WS_REPLACE = 2;
public static final int WS_UNSPECIFIED = 0;

boolean blockExtension();

boolean blockRestriction();

SchemaStringEnumEntry enumEntryForString(String str);

StringEnumAbstractBase enumForInt(int i);

StringEnumAbstractBase enumForString(String str);

boolean finalExtension();

boolean finalList();

boolean finalRestriction();

boolean finalUnion();

SchemaType[] getAnonymousTypes();

int getAnonymousUnionMemberOrdinal();

SchemaAttributeModel getAttributeModel();

SchemaProperty[] getAttributeProperties();

SchemaProperty getAttributeProperty(QName qName);

SchemaType getAttributeType(QName qName, SchemaTypeLoader schemaTypeLoader);

QName getAttributeTypeAttributeName();

SchemaType getBaseEnumType();

SchemaType getBaseType();

int getBuiltinTypeCode();

SchemaType getCommonBaseType(SchemaType schemaType);

SchemaField getContainerField();

SchemaType getContentBasedOnType();

SchemaParticle getContentModel();

int getContentType();

int getDecimalSize();

int getDerivationType();

SchemaProperty[] getDerivedProperties();

QName getDocumentElementName();

SchemaProperty[] getElementProperties();

SchemaProperty getElementProperty(QName qName);

SchemaTypeElementSequencer getElementSequencer();

SchemaType getElementType(QName qName, QName qName2, SchemaTypeLoader schemaTypeLoader);

Class getEnumJavaClass();

XmlAnySimpleType[] getEnumerationValues();

XmlAnySimpleType getFacet(int i);

String getFullJavaImplName();

String getFullJavaName();

Class getJavaClass();

SchemaType getListItemType();

QName getName();

SchemaType getOuterType();

String[] getPatterns();

SchemaType getPrimitiveType();

SchemaProperty[] getProperties();

Ref getRef();

String getShortJavaImplName();

String getShortJavaName();

int getSimpleVariety();

SchemaStringEnumEntry[] getStringEnumEntries();

SchemaTypeSystem getTypeSystem();

SchemaType getUnionCommonBaseType();

SchemaType[] getUnionConstituentTypes();

SchemaType[] getUnionMemberTypes();

SchemaType[] getUnionSubTypes();

Object getUserData();

int getWhiteSpaceRule();

boolean hasAllContent();

boolean hasAttributeWildcards();

boolean hasElementWildcards();

boolean hasPatternFacet();

boolean hasStringEnumValues();

boolean isAbstract();

boolean isAnonymousType();

boolean isAssignableFrom(SchemaType schemaType);

boolean isAttributeType();

boolean isBounded();

boolean isBuiltinType();

boolean isCompiled();

boolean isDocumentType();

boolean isFacetFixed(int i);

boolean isFinite();

boolean isNoType();

boolean isNumeric();

boolean isOrderSensitive();

boolean isPrimitiveType();

boolean isSimpleType();

boolean isSkippedAnonymousType();

boolean isURType();

boolean isValidSubstitution(QName qName);

boolean matchPatternFacet(String str);

XmlAnySimpleType newValue(Object obj);

int ordered();

QNameSet qnameSetForWildcardAttributes();

QNameSet qnameSetForWildcardElements();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\XmlNMTOKENS.java

package org.apache.xmlbeans;

import java.util.List;

public interface XmlNMTOKENS extends XmlAnySimpleType {
public static final SchemaType type = XmlBeans.getBuiltinTypeSystem().typeForHandle("_BI_NMTOKENS");

List getListValue();

List listValue();

void set(List list);

void setListValue(List list);

List xgetListValue();

List xlistValue();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\XmlUnsignedLong$Factory.java

package org.apache.xmlbeans;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class XmlUnsignedLong$Factory {
private XmlUnsignedLong$Factory() {
}

public static XmlUnsignedLong newInstance() {
return XmlBeans.getContextTypeLoader().newInstance(XmlUnsignedLong.type, (XmlOptions) null);
}

public static XmlUnsignedLong newInstance(XmlOptions xmlOptions) {
return XmlBeans.getContextTypeLoader().newInstance(XmlUnsignedLong.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return XmlBeans.getContextTypeLoader().newValidatingXMLInputStream(xMLInputStream, XmlUnsignedLong.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return XmlBeans.getContextTypeLoader().newValidatingXMLInputStream(xMLInputStream, XmlUnsignedLong.type, xmlOptions);
}

public static XmlUnsignedLong newValue(Object obj) {
return XmlUnsignedLong.type.newValue(obj);
}

public static XmlUnsignedLong parse(File file) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(file, XmlUnsignedLong.type, (XmlOptions) null);
}

public static XmlUnsignedLong parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(file, XmlUnsignedLong.type, xmlOptions);
}

public static XmlUnsignedLong parse(InputStream inputStream) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(inputStream, XmlUnsignedLong.type, (XmlOptions) null);
}

public static XmlUnsignedLong parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(inputStream, XmlUnsignedLong.type, xmlOptions);
}

public static XmlUnsignedLong parse(Reader reader) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(reader, XmlUnsignedLong.type, (XmlOptions) null);
}

public static XmlUnsignedLong parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(reader, XmlUnsignedLong.type, xmlOptions);
}

public static XmlUnsignedLong parse(String str) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(str, XmlUnsignedLong.type, (XmlOptions) null);
}

public static XmlUnsignedLong parse(String str, XmlOptions xmlOptions) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(str, XmlUnsignedLong.type, xmlOptions);
}

public static XmlUnsignedLong parse(URL url) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(url, XmlUnsignedLong.type, (XmlOptions) null);
}

public static XmlUnsignedLong parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(url, XmlUnsignedLong.type, xmlOptions);
}

public static XmlUnsignedLong parse(XMLStreamReader xMLStreamReader) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(xMLStreamReader, XmlUnsignedLong.type, (XmlOptions) null);
}

public static XmlUnsignedLong parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(xMLStreamReader, XmlUnsignedLong.type, xmlOptions);
}

public static XmlUnsignedLong parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return XmlBeans.getContextTypeLoader().parse(xMLInputStream, XmlUnsignedLong.type, (XmlOptions) null);
}

public static XmlUnsignedLong parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return XmlBeans.getContextTypeLoader().parse(xMLInputStream, XmlUnsignedLong.type, xmlOptions);
}

public static XmlUnsignedLong parse(Node node) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(node, XmlUnsignedLong.type, (XmlOptions) null);
}

public static XmlUnsignedLong parse(Node node, XmlOptions xmlOptions) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(node, XmlUnsignedLong.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\config\PrePostExtensionImpl.java

package org.apache.xmlbeans.impl.config;

import android.support.v4.media.b;
import android.support.v4.media.c;
import org.apache.xmlbeans.PrePostExtension;
import org.apache.xmlbeans.XmlObject;
import org.apache.xmlbeans.impl.jam.JClass;
import org.apache.xmlbeans.impl.jam.JMethod;
import org.apache.xmlbeans.impl.jam.JamClassLoader;
import org.apache.xmlbeans.impl.xb.xmlconfig.Extensionconfig;

public class PrePostExtensionImpl implements PrePostExtension {
public static final /* synthetic */ boolean $assertionsDisabled = false;
private static JClass[] PARAMTYPES_PREPOST;
private static final String[] PARAMTYPES_STRING = {"int", "org.apache.xmlbeans.XmlObject", "javax.xml.namespace.QName", "boolean", "int"};
private static final String SIGNATURE;
private JClass _delegateToClass;
private String _delegateToClassName;
private JMethod _postSet;
private JMethod _preSet;
private NameSet _xbeanSet;

static {
int i = 0;
String str = "(";
while (true) {
String[] strArr = PARAMTYPES_STRING;
if (i < strArr.length) {
String str2 = strArr[i];
if (i != 0) {
str = b.k(str, ", ");
}
str = b.k(str, str2);
i++;
} else {
SIGNATURE = b.k(str, ")");
return;
}
}
}

private void initParamPrePost(JamClassLoader jamClassLoader) {
if (PARAMTYPES_PREPOST == null) {
PARAMTYPES_PREPOST = new JClass[PARAMTYPES_STRING.length];
int i = 0;
while (true) {
JClass[] jClassArr = PARAMTYPES_PREPOST;
if (i < jClassArr.length) {
jClassArr[i] = jamClassLoader.loadClass(PARAMTYPES_STRING[i]);
if (PARAMTYPES_PREPOST[i] != null) {
i++;
} else {
StringBuilder q = b.q("JAM should have access to the following types ");
q.append(SIGNATURE);
throw new IllegalStateException(q.toString());
}
} else {
return;
}
}
}
}

private boolean lookAfterPreAndPost(JamClassLoader jamClassLoader, XmlObject xmlObject) {
initParamPrePost(jamClassLoader);
JMethod method = InterfaceExtensionImpl.getMethod(this._delegateToClass, "preSet", PARAMTYPES_PREPOST);
this._preSet = method;
if (method != null && !method.getReturnType().equals(jamClassLoader.loadClass("boolean"))) {
StringBuilder q = b.q("Method '");
q.append(this._delegateToClass.getSimpleName());
q.append(".preSet");
q.append(SIGNATURE);
q.append("' ");
q.append("should return boolean to be considered for a preSet handler.");
BindingConfigImpl.warning(q.toString(), xmlObject);
this._preSet = null;
}
JMethod method2 = InterfaceExtensionImpl.getMethod(this._delegateToClass, "postSet", PARAMTYPES_PREPOST);
this._postSet = method2;
if (this._preSet != null || method2 != null) {
return true;
}
StringBuilder q2 = b.q("prePostSet handler specified '");
q2.append(this._delegateToClass.getSimpleName());
q2.append("' but no preSet");
String str = SIGNATURE;
c.w(q2, str, " or ", "postSet", str);
q2.append(" methods found.");
BindingConfigImpl.error(q2.toString(), xmlObject);
return false;
}

public static PrePostExtensionImpl newInstance(JamClassLoader jamClassLoader, NameSet nameSet, Extensionconfig.PrePostSet prePostSet) {
if (prePostSet == null) {
return null;
}
PrePostExtensionImpl prePostExtensionImpl = new PrePostExtensionImpl();
prePostExtensionImpl._xbeanSet = nameSet;
String staticHandler = prePostSet.getStaticHandler();
prePostExtensionImpl._delegateToClassName = staticHandler;
JClass validateClass = InterfaceExtensionImpl.validateClass(jamClassLoader, staticHandler, prePostSet);
prePostExtensionImpl._delegateToClass = validateClass;
if (validateClass == null) {
StringBuilder q = b.q("Handler class '");
q.append(prePostSet.getStaticHandler());
q.append("' not found on classpath, skip validation.");
BindingConfigImpl.warning(q.toString(), prePostSet);
return prePostExtensionImpl;
} else if (!prePostExtensionImpl.lookAfterPreAndPost(jamClassLoader, prePostSet)) {
return null;
} else {
return prePostExtensionImpl;
}
}

public boolean contains(String str) {
return this._xbeanSet.contains(str);
}

public String getHandlerNameForJavaSource() {
JClass jClass = this._delegateToClass;
if (jClass == null) {
return null;
}
return InterfaceExtensionImpl.emitType(jClass);
}

public NameSet getNameSet() {
return this._xbeanSet;
}

public String getStaticHandler() {
return this._delegateToClassName;
}

public boolean hasNameSetIntersection(PrePostExtensionImpl prePostExtensionImpl) {
return !NameSet.EMPTY.equals(this._xbeanSet.intersect(prePostExtensionImpl._xbeanSet));
}

public boolean hasPostCall() {
return this._postSet != null;
}

public boolean hasPreCall() {
return this._preSet != null;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\jam\internal\elements\ParameterImpl.java

package org.apache.xmlbeans.impl.jam.internal.elements;

import org.apache.xmlbeans.impl.jam.JClass;
import org.apache.xmlbeans.impl.jam.internal.classrefs.DirectJClassRef;
import org.apache.xmlbeans.impl.jam.internal.classrefs.JClassRef;
import org.apache.xmlbeans.impl.jam.internal.classrefs.QualifiedJClassRef;
import org.apache.xmlbeans.impl.jam.internal.classrefs.UnqualifiedJClassRef;
import org.apache.xmlbeans.impl.jam.mutable.MParameter;
import org.apache.xmlbeans.impl.jam.visitor.JVisitor;
import org.apache.xmlbeans.impl.jam.visitor.MVisitor;

public class ParameterImpl extends MemberImpl implements MParameter {
private JClassRef mTypeClassRef;

public ParameterImpl(String str, InvokableImpl invokableImpl, String str2) {
super(invokableImpl);
setSimpleName(str);
setType(str2);
}

public void accept(JVisitor jVisitor) {
jVisitor.visit(this);
}

public void accept(MVisitor mVisitor) {
mVisitor.visit(this);
}

public String getQualifiedName() {
return getSimpleName();
}

public JClass getType() {
return this.mTypeClassRef.getRefClass();
}

public void setType(String str) {
if (str != null) {
this.mTypeClassRef = QualifiedJClassRef.create(str, getContainingClass());
return;
}
throw new IllegalArgumentException("null typename");
}

public void setType(JClass jClass) {
if (jClass != null) {
this.mTypeClassRef = DirectJClassRef.create(jClass);
return;
}
throw new IllegalArgumentException("null qcname");
}

public void setUnqualifiedType(String str) {
if (str != null) {
this.mTypeClassRef = UnqualifiedJClassRef.create(str, getContainingClass());
return;
}
throw new IllegalArgumentException("null ucname");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\jam\visitor\CompositeMVisitor.java

package org.apache.xmlbeans.impl.jam.visitor;

import org.apache.xmlbeans.impl.jam.mutable.MAnnotation;
import org.apache.xmlbeans.impl.jam.mutable.MClass;
import org.apache.xmlbeans.impl.jam.mutable.MComment;
import org.apache.xmlbeans.impl.jam.mutable.MConstructor;
import org.apache.xmlbeans.impl.jam.mutable.MField;
import org.apache.xmlbeans.impl.jam.mutable.MMethod;
import org.apache.xmlbeans.impl.jam.mutable.MPackage;
import org.apache.xmlbeans.impl.jam.mutable.MParameter;

public class CompositeMVisitor extends MVisitor {
private MVisitor[] mVisitors;

public CompositeMVisitor(MVisitor[] mVisitorArr) {
if (mVisitorArr != null) {
this.mVisitors = mVisitorArr;
return;
}
throw new IllegalArgumentException("null visitors");
}

public void visit(MAnnotation mAnnotation) {
int i = 0;
while (true) {
MVisitor[] mVisitorArr = this.mVisitors;
if (i < mVisitorArr.length) {
mVisitorArr[i].visit(mAnnotation);
i++;
} else {
return;
}
}
}

public void visit(MClass mClass) {
int i = 0;
while (true) {
MVisitor[] mVisitorArr = this.mVisitors;
if (i < mVisitorArr.length) {
mVisitorArr[i].visit(mClass);
i++;
} else {
return;
}
}
}

public void visit(MComment mComment) {
int i = 0;
while (true) {
MVisitor[] mVisitorArr = this.mVisitors;
if (i < mVisitorArr.length) {
mVisitorArr[i].visit(mComment);
i++;
} else {
return;
}
}
}

public void visit(MConstructor mConstructor) {
int i = 0;
while (true) {
MVisitor[] mVisitorArr = this.mVisitors;
if (i < mVisitorArr.length) {
mVisitorArr[i].visit(mConstructor);
i++;
} else {
return;
}
}
}

public void visit(MField mField) {
int i = 0;
while (true) {
MVisitor[] mVisitorArr = this.mVisitors;
if (i < mVisitorArr.length) {
mVisitorArr[i].visit(mField);
i++;
} else {
return;
}
}
}

public void visit(MMethod mMethod) {
int i = 0;
while (true) {
MVisitor[] mVisitorArr = this.mVisitors;
if (i < mVisitorArr.length) {
mVisitorArr[i].visit(mMethod);
i++;
} else {
return;
}
}
}

public void visit(MPackage mPackage) {
int i = 0;
while (true) {
MVisitor[] mVisitorArr = this.mVisitors;
if (i < mVisitorArr.length) {
mVisitorArr[i].visit(mPackage);
i++;
} else {
return;
}
}
}

public void visit(MParameter mParameter) {
int i = 0;
while (true) {
MVisitor[] mVisitorArr = this.mVisitors;
if (i < mVisitorArr.length) {
mVisitorArr[i].visit(mParameter);
i++;
} else {
return;
}
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\tool\CodeGenUtil$1.java

package org.apache.xmlbeans.impl.tool;

import java.io.File;
import java.io.FileFilter;

public class CodeGenUtil$1 implements FileFilter {
public boolean accept(File file) {
return (file.isFile() && file.getName().endsWith(".java")) || file.isDirectory();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\tool\Diff$FileNameComparator.java

package org.apache.xmlbeans.impl.tool;

import java.io.File;
import java.util.Comparator;

public class Diff$FileNameComparator implements Comparator {
public static final /* synthetic */ boolean $assertionsDisabled = false;

private Diff$FileNameComparator() {
}

public int compare(Object obj, Object obj2) {
return ((File) obj).getName().compareTo(((File) obj2).getName());
}

public boolean equals(Object obj) {
return this == obj;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\values\XmlTokenImpl.java

package org.apache.xmlbeans.impl.values;

import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlToken;

public class XmlTokenImpl extends JavaStringHolderEx implements XmlToken {
public XmlTokenImpl() {
super(XmlToken.type, false);
}

public XmlTokenImpl(SchemaType schemaType, boolean z) {
super(schemaType, z);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\ltgfmt\TestsDocument$Factory.java

package org.apache.xmlbeans.impl.xb.ltgfmt;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.xmlbeans.XmlBeans;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class TestsDocument$Factory {
private TestsDocument$Factory() {
}

public static TestsDocument newInstance() {
return XmlBeans.getContextTypeLoader().newInstance(TestsDocument.type, (XmlOptions) null);
}

public static TestsDocument newInstance(XmlOptions xmlOptions) {
return XmlBeans.getContextTypeLoader().newInstance(TestsDocument.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return XmlBeans.getContextTypeLoader().newValidatingXMLInputStream(xMLInputStream, TestsDocument.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return XmlBeans.getContextTypeLoader().newValidatingXMLInputStream(xMLInputStream, TestsDocument.type, xmlOptions);
}

public static TestsDocument parse(File file) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(file, TestsDocument.type, (XmlOptions) null);
}

public static TestsDocument parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(file, TestsDocument.type, xmlOptions);
}

public static TestsDocument parse(InputStream inputStream) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(inputStream, TestsDocument.type, (XmlOptions) null);
}

public static TestsDocument parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(inputStream, TestsDocument.type, xmlOptions);
}

public static TestsDocument parse(Reader reader) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(reader, TestsDocument.type, (XmlOptions) null);
}

public static TestsDocument parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(reader, TestsDocument.type, xmlOptions);
}

public static TestsDocument parse(String str) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(str, TestsDocument.type, (XmlOptions) null);
}

public static TestsDocument parse(String str, XmlOptions xmlOptions) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(str, TestsDocument.type, xmlOptions);
}

public static TestsDocument parse(URL url) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(url, TestsDocument.type, (XmlOptions) null);
}

public static TestsDocument parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(url, TestsDocument.type, xmlOptions);
}

public static TestsDocument parse(XMLStreamReader xMLStreamReader) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(xMLStreamReader, TestsDocument.type, (XmlOptions) null);
}

public static TestsDocument parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(xMLStreamReader, TestsDocument.type, xmlOptions);
}

public static TestsDocument parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return XmlBeans.getContextTypeLoader().parse(xMLInputStream, TestsDocument.type, (XmlOptions) null);
}

public static TestsDocument parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return XmlBeans.getContextTypeLoader().parse(xMLInputStream, TestsDocument.type, xmlOptions);
}

public static TestsDocument parse(Node node) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(node, TestsDocument.type, (XmlOptions) null);
}

public static TestsDocument parse(Node node, XmlOptions xmlOptions) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(node, TestsDocument.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xmlconfig\impl\QnametargetlistImpl.java

package org.apache.xmlbeans.impl.xb.xmlconfig.impl;

import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.impl.values.XmlListImpl;
import org.apache.xmlbeans.impl.xb.xmlconfig.Qnametargetlist;

public class QnametargetlistImpl extends XmlListImpl implements Qnametargetlist {
private static final long serialVersionUID = 1;

public QnametargetlistImpl(SchemaType schemaType) {
super(schemaType, false);
}

public QnametargetlistImpl(SchemaType schemaType, boolean z) {
super(schemaType, z);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xsdschema\AllNNI$Member$Factory.java

package org.apache.xmlbeans.impl.xb.xsdschema;

import org.apache.xmlbeans.XmlBeans;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.impl.xb.xsdschema.AllNNI;

public final class AllNNI$Member$Factory {
private AllNNI$Member$Factory() {
}

public static AllNNI.Member newInstance() {
return XmlBeans.getContextTypeLoader().newInstance(AllNNI.Member.type, (XmlOptions) null);
}

public static AllNNI.Member newInstance(XmlOptions xmlOptions) {
return XmlBeans.getContextTypeLoader().newInstance(AllNNI.Member.type, xmlOptions);
}

public static AllNNI.Member newValue(Object obj) {
return AllNNI.Member.type.newValue(obj);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xsdschema\ComplexContentDocument.java

package org.apache.xmlbeans.impl.xb.xsdschema;

import android.support.v4.media.b;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlObject;

public interface ComplexContentDocument extends XmlObject {
public static final SchemaType type = b.v(ComplexContentDocument.class, "schemaorg_apache_xmlbeans.system.sXMLSCHEMA", "complexcontentc57adoctype");

ComplexContent addNewComplexContent();

ComplexContent getComplexContent();

void setComplexContent(ComplexContent complexContent);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xsdschema\DerivationControl$Enum.java

package org.apache.xmlbeans.impl.xb.xsdschema;

import org.apache.xmlbeans.StringEnumAbstractBase;

public final class DerivationControl$Enum extends StringEnumAbstractBase {
public static final int INT_EXTENSION = 2;
public static final int INT_LIST = 4;
public static final int INT_RESTRICTION = 3;
public static final int INT_SUBSTITUTION = 1;
public static final int INT_UNION = 5;
private static final long serialVersionUID = 1;
public static final StringEnumAbstractBase.Table table = new StringEnumAbstractBase.Table(new DerivationControl$Enum[]{new DerivationControl$Enum("substitution", 1), new DerivationControl$Enum("extension", 2), new DerivationControl$Enum("restriction", 3), new DerivationControl$Enum("list", 4), new DerivationControl$Enum("union", 5)});

private DerivationControl$Enum(String str, int i) {
super(str, i);
}

public static DerivationControl$Enum forInt(int i) {
return table.forInt(i);
}

public static DerivationControl$Enum forString(String str) {
return table.forString(str);
}

private Object readResolve() {
return forInt(intValue());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xsdschema\NamespaceList$Member2$Item$Member$Enum.java

package org.apache.xmlbeans.impl.xb.xsdschema;

import org.apache.xmlbeans.StringEnumAbstractBase;

public final class NamespaceList$Member2$Item$Member$Enum extends StringEnumAbstractBase {
public static final int INT_LOCAL = 2;
public static final int INT_TARGET_NAMESPACE = 1;
private static final long serialVersionUID = 1;
public static final StringEnumAbstractBase.Table table = new StringEnumAbstractBase.Table(new NamespaceList$Member2$Item$Member$Enum[]{new NamespaceList$Member2$Item$Member$Enum("##targetNamespace", 1), new NamespaceList$Member2$Item$Member$Enum("##local", 2)});

private NamespaceList$Member2$Item$Member$Enum(String str, int i) {
super(str, i);
}

public static NamespaceList$Member2$Item$Member$Enum forInt(int i) {
return table.forInt(i);
}

public static NamespaceList$Member2$Item$Member$Enum forString(String str) {
return table.forString(str);
}

private Object readResolve() {
return forInt(intValue());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xsdschema\RestrictionDocument$Factory.java

package org.apache.xmlbeans.impl.xb.xsdschema;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.xmlbeans.XmlBeans;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class RestrictionDocument$Factory {
private RestrictionDocument$Factory() {
}

public static RestrictionDocument newInstance() {
return XmlBeans.getContextTypeLoader().newInstance(RestrictionDocument.type, (XmlOptions) null);
}

public static RestrictionDocument newInstance(XmlOptions xmlOptions) {
return XmlBeans.getContextTypeLoader().newInstance(RestrictionDocument.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return XmlBeans.getContextTypeLoader().newValidatingXMLInputStream(xMLInputStream, RestrictionDocument.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return XmlBeans.getContextTypeLoader().newValidatingXMLInputStream(xMLInputStream, RestrictionDocument.type, xmlOptions);
}

public static RestrictionDocument parse(File file) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(file, RestrictionDocument.type, (XmlOptions) null);
}

public static RestrictionDocument parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(file, RestrictionDocument.type, xmlOptions);
}

public static RestrictionDocument parse(InputStream inputStream) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(inputStream, RestrictionDocument.type, (XmlOptions) null);
}

public static RestrictionDocument parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(inputStream, RestrictionDocument.type, xmlOptions);
}

public static RestrictionDocument parse(Reader reader) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(reader, RestrictionDocument.type, (XmlOptions) null);
}

public static RestrictionDocument parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(reader, RestrictionDocument.type, xmlOptions);
}

public static RestrictionDocument parse(String str) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(str, RestrictionDocument.type, (XmlOptions) null);
}

public static RestrictionDocument parse(String str, XmlOptions xmlOptions) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(str, RestrictionDocument.type, xmlOptions);
}

public static RestrictionDocument parse(URL url) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(url, RestrictionDocument.type, (XmlOptions) null);
}

public static RestrictionDocument parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return XmlBeans.getContextTypeLoader().parse(url, RestrictionDocument.type, xmlOptions);
}

public static RestrictionDocument parse(XMLStreamReader xMLStreamReader) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(xMLStreamReader, RestrictionDocument.type, (XmlOptions) null);
}

public static RestrictionDocument parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(xMLStreamReader, RestrictionDocument.type, xmlOptions);
}

public static RestrictionDocument parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return XmlBeans.getContextTypeLoader().parse(xMLInputStream, RestrictionDocument.type, (XmlOptions) null);
}

public static RestrictionDocument parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return XmlBeans.getContextTypeLoader().parse(xMLInputStream, RestrictionDocument.type, xmlOptions);
}

public static RestrictionDocument parse(Node node) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(node, RestrictionDocument.type, (XmlOptions) null);
}

public static RestrictionDocument parse(Node node, XmlOptions xmlOptions) throws XmlException {
return XmlBeans.getContextTypeLoader().parse(node, RestrictionDocument.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xsdschema\RestrictionType.java

package org.apache.xmlbeans.impl.xb.xsdschema;

import android.support.v4.media.b;
import javax.xml.namespace.QName;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlQName;
import org.apache.xmlbeans.impl.xb.xsdschema.PatternDocument;
import org.apache.xmlbeans.impl.xb.xsdschema.TotalDigitsDocument;
import org.apache.xmlbeans.impl.xb.xsdschema.WhiteSpaceDocument;

public interface RestrictionType extends Annotated {
public static final SchemaType type = b.v(RestrictionType.class, "schemaorg_apache_xmlbeans.system.sXMLSCHEMA", "restrictiontype939ftype");

All addNewAll();

Wildcard addNewAnyAttribute();

Attribute addNewAttribute();

AttributeGroupRef addNewAttributeGroup();

ExplicitGroup addNewChoice();

NoFixedFacet addNewEnumeration();

NumFacet addNewFractionDigits();

GroupRef addNewGroup();

NumFacet addNewLength();

Facet addNewMaxExclusive();

Facet addNewMaxInclusive();

NumFacet addNewMaxLength();

Facet addNewMinExclusive();

Facet addNewMinInclusive();

NumFacet addNewMinLength();

PatternDocument.Pattern addNewPattern();

ExplicitGroup addNewSequence();

LocalSimpleType addNewSimpleType();

TotalDigitsDocument.TotalDigits addNewTotalDigits();

WhiteSpaceDocument.WhiteSpace addNewWhiteSpace();

All getAll();

Wildcard getAnyAttribute();

Attribute getAttributeArray(int i);

Attribute[] getAttributeArray();

AttributeGroupRef getAttributeGroupArray(int i);

AttributeGroupRef[] getAttributeGroupArray();

QName getBase();

ExplicitGroup getChoice();

NoFixedFacet getEnumerationArray(int i);

NoFixedFacet[] getEnumerationArray();

NumFacet getFractionDigitsArray(int i);

NumFacet[] getFractionDigitsArray();

GroupRef getGroup();

NumFacet getLengthArray(int i);

NumFacet[] getLengthArray();

Facet getMaxExclusiveArray(int i);

Facet[] getMaxExclusiveArray();

Facet getMaxInclusiveArray(int i);

Facet[] getMaxInclusiveArray();

NumFacet getMaxLengthArray(int i);

NumFacet[] getMaxLengthArray();

Facet getMinExclusiveArray(int i);

Facet[] getMinExclusiveArray();

Facet getMinInclusiveArray(int i);

Facet[] getMinInclusiveArray();

NumFacet getMinLengthArray(int i);

NumFacet[] getMinLengthArray();

PatternDocument.Pattern getPatternArray(int i);

PatternDocument.Pattern[] getPatternArray();

ExplicitGroup getSequence();

LocalSimpleType getSimpleType();

TotalDigitsDocument.TotalDigits getTotalDigitsArray(int i);

TotalDigitsDocument.TotalDigits[] getTotalDigitsArray();

WhiteSpaceDocument.WhiteSpace getWhiteSpaceArray(int i);

WhiteSpaceDocument.WhiteSpace[] getWhiteSpaceArray();

Attribute insertNewAttribute(int i);

AttributeGroupRef insertNewAttributeGroup(int i);

NoFixedFacet insertNewEnumeration(int i);

NumFacet insertNewFractionDigits(int i);

NumFacet insertNewLength(int i);

Facet insertNewMaxExclusive(int i);

Facet insertNewMaxInclusive(int i);

NumFacet insertNewMaxLength(int i);

Facet insertNewMinExclusive(int i);

Facet insertNewMinInclusive(int i);

NumFacet insertNewMinLength(int i);

PatternDocument.Pattern insertNewPattern(int i);

TotalDigitsDocument.TotalDigits insertNewTotalDigits(int i);

WhiteSpaceDocument.WhiteSpace insertNewWhiteSpace(int i);

boolean isSetAll();

boolean isSetAnyAttribute();

boolean isSetChoice();

boolean isSetGroup();

boolean isSetSequence();

boolean isSetSimpleType();

void removeAttribute(int i);

void removeAttributeGroup(int i);

void removeEnumeration(int i);

void removeFractionDigits(int i);

void removeLength(int i);

void removeMaxExclusive(int i);

void removeMaxInclusive(int i);

void removeMaxLength(int i);

void removeMinExclusive(int i);

void removeMinInclusive(int i);

void removeMinLength(int i);

void removePattern(int i);

void removeTotalDigits(int i);

void removeWhiteSpace(int i);

void setAll(All all);

void setAnyAttribute(Wildcard wildcard);

void setAttributeArray(int i, Attribute attribute);

void setAttributeArray(Attribute[] attributeArr);

void setAttributeGroupArray(int i, AttributeGroupRef attributeGroupRef);

void setAttributeGroupArray(AttributeGroupRef[] attributeGroupRefArr);

void setBase(QName qName);

void setChoice(ExplicitGroup explicitGroup);

void setEnumerationArray(int i, NoFixedFacet noFixedFacet);

void setEnumerationArray(NoFixedFacet[] noFixedFacetArr);

void setFractionDigitsArray(int i, NumFacet numFacet);

void setFractionDigitsArray(NumFacet[] numFacetArr);

void setGroup(GroupRef groupRef);

void setLengthArray(int i, NumFacet numFacet);

void setLengthArray(NumFacet[] numFacetArr);

void setMaxExclusiveArray(int i, Facet facet);

void setMaxExclusiveArray(Facet[] facetArr);

void setMaxInclusiveArray(int i, Facet facet);

void setMaxInclusiveArray(Facet[] facetArr);

void setMaxLengthArray(int i, NumFacet numFacet);

void setMaxLengthArray(NumFacet[] numFacetArr);

void setMinExclusiveArray(int i, Facet facet);

void setMinExclusiveArray(Facet[] facetArr);

void setMinInclusiveArray(int i, Facet facet);

void setMinInclusiveArray(Facet[] facetArr);

void setMinLengthArray(int i, NumFacet numFacet);

void setMinLengthArray(NumFacet[] numFacetArr);

void setPatternArray(int i, PatternDocument.Pattern pattern);

void setPatternArray(PatternDocument.Pattern[] patternArr);

void setSequence(ExplicitGroup explicitGroup);

void setSimpleType(LocalSimpleType localSimpleType);

void setTotalDigitsArray(int i, TotalDigitsDocument.TotalDigits totalDigits);

void setTotalDigitsArray(TotalDigitsDocument.TotalDigits[] totalDigitsArr);

void setWhiteSpaceArray(int i, WhiteSpaceDocument.WhiteSpace whiteSpace);

void setWhiteSpaceArray(WhiteSpaceDocument.WhiteSpace[] whiteSpaceArr);

int sizeOfAttributeArray();

int sizeOfAttributeGroupArray();

int sizeOfEnumerationArray();

int sizeOfFractionDigitsArray();

int sizeOfLengthArray();

int sizeOfMaxExclusiveArray();

int sizeOfMaxInclusiveArray();

int sizeOfMaxLengthArray();

int sizeOfMinExclusiveArray();

int sizeOfMinInclusiveArray();

int sizeOfMinLengthArray();

int sizeOfPatternArray();

int sizeOfTotalDigitsArray();

int sizeOfWhiteSpaceArray();

void unsetAll();

void unsetAnyAttribute();

void unsetChoice();

void unsetGroup();

void unsetSequence();

void unsetSimpleType();

XmlQName xgetBase();

void xsetBase(XmlQName xmlQName);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xsdschema\TopLevelAttribute.java

package org.apache.xmlbeans.impl.xb.xsdschema;

import android.support.v4.media.b;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlNCName;

public interface TopLevelAttribute extends Attribute {
public static final SchemaType type = b.v(TopLevelAttribute.class, "schemaorg_apache_xmlbeans.system.sXMLSCHEMA", "toplevelattributeb338type");

String getName();

boolean isSetName();

void setName(String str);

void unsetName();

XmlNCName xgetName();

void xsetName(XmlNCName xmlNCName);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xsdschema\TotalDigitsDocument.java

package org.apache.xmlbeans.impl.xb.xsdschema;

import android.support.v4.media.b;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlObject;

public interface TotalDigitsDocument extends XmlObject {
public static final SchemaType type = b.v(TotalDigitsDocument.class, "schemaorg_apache_xmlbeans.system.sXMLSCHEMA", "totaldigits4a8bdoctype");

TotalDigits addNewTotalDigits();

TotalDigits getTotalDigits();

void setTotalDigits(TotalDigits totalDigits);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xsdschema\impl\DerivationSetImpl$MemberImpl.java

package org.apache.xmlbeans.impl.xb.xsdschema.impl;

import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.impl.values.JavaStringEnumerationHolderEx;
import org.apache.xmlbeans.impl.xb.xsdschema.DerivationSet;

public class DerivationSetImpl$MemberImpl extends JavaStringEnumerationHolderEx implements DerivationSet.Member {
private static final long serialVersionUID = 1;

public DerivationSetImpl$MemberImpl(SchemaType schemaType) {
super(schemaType, false);
}

public DerivationSetImpl$MemberImpl(SchemaType schemaType, boolean z) {
super(schemaType, z);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xsdschema\impl\ImportDocumentImpl.java

package org.apache.xmlbeans.impl.xb.xsdschema.impl;

import javax.xml.namespace.QName;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.impl.values.XmlComplexContentImpl;
import org.apache.xmlbeans.impl.xb.xsdschema.ImportDocument;

public class ImportDocumentImpl extends XmlComplexContentImpl implements ImportDocument {
private static final QName IMPORT$0 = new QName("http://www.w3.org/2001/XMLSchema", "import");
private static final long serialVersionUID = 1;

public ImportDocumentImpl(SchemaType schemaType) {
super(schemaType);
}

public ImportDocument.Import addNewImport() {
ImportDocument.Import add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(IMPORT$0);
}
return add_element_user;
}

public ImportDocument.Import getImport() {
synchronized (monitor()) {
check_orphaned();
ImportDocument.Import find_element_user = get_store().find_element_user(IMPORT$0, 0);
if (find_element_user == null) {
return null;
}
return find_element_user;
}
}

public void setImport(ImportDocument.Import importR) {
generatedSetterHelperImpl(importR, IMPORT$0, 0, 1);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xsdschema\impl\NamedGroupImpl.java

package org.apache.xmlbeans.impl.xb.xsdschema.impl;

import com.google.firebase.installations.interop.BuildConfig;
import javax.xml.namespace.QName;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.SimpleValue;
import org.apache.xmlbeans.XmlNCName;
import org.apache.xmlbeans.impl.values.TypeStore;
import org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup;

public class NamedGroupImpl extends RealGroupImpl implements NamedGroup {
private static final QName NAME$0 = new QName(BuildConfig.FLAVOR, "name");
private static final long serialVersionUID = 1;

public NamedGroupImpl(SchemaType schemaType) {
super(schemaType);
}

public String getName() {
synchronized (monitor()) {
check_orphaned();
SimpleValue find_attribute_user = get_store().find_attribute_user(NAME$0);
if (find_attribute_user == null) {
return null;
}
String stringValue = find_attribute_user.getStringValue();
return stringValue;
}
}

public boolean isSetName() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().find_attribute_user(NAME$0) != null;
}
return z;
}

public void setName(String str) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NAME$0;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setStringValue(str);
}
}

public void unsetName() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_attribute(NAME$0);
}
}

public XmlNCName xgetName() {
XmlNCName find_attribute_user;
synchronized (monitor()) {
check_orphaned();
find_attribute_user = get_store().find_attribute_user(NAME$0);
}
return find_attribute_user;
}

public void xsetName(XmlNCName xmlNCName) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NAME$0;
XmlNCName find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = get_store().add_attribute_user(qName);
}
find_attribute_user.set(xmlNCName);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xsdschema\impl\NarrowMaxMinImpl.java

package org.apache.xmlbeans.impl.xb.xsdschema.impl;

import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.impl.xb.xsdschema.NarrowMaxMin;

public class NarrowMaxMinImpl extends LocalElementImpl implements NarrowMaxMin {
private static final long serialVersionUID = 1;

public NarrowMaxMinImpl(SchemaType schemaType) {
super(schemaType);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xsdschema\impl\NumFacetImpl.java

package org.apache.xmlbeans.impl.xb.xsdschema.impl;

import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.impl.xb.xsdschema.NumFacet;

public class NumFacetImpl extends FacetImpl implements NumFacet {
private static final long serialVersionUID = 1;

public NumFacetImpl(SchemaType schemaType) {
super(schemaType);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\apache\xmlbeans\impl\xb\xsdschema\impl\SequenceDocumentImpl.java

package org.apache.xmlbeans.impl.xb.xsdschema.impl;

import javax.xml.namespace.QName;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.impl.values.XmlComplexContentImpl;
import org.apache.xmlbeans.impl.xb.xsdschema.ExplicitGroup;
import org.apache.xmlbeans.impl.xb.xsdschema.SequenceDocument;

public class SequenceDocumentImpl extends XmlComplexContentImpl implements SequenceDocument {
private static final QName SEQUENCE$0 = new QName("http://www.w3.org/2001/XMLSchema", "sequence");
private static final long serialVersionUID = 1;

public SequenceDocumentImpl(SchemaType schemaType) {
super(schemaType);
}

public ExplicitGroup addNewSequence() {
ExplicitGroup add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(SEQUENCE$0);
}
return add_element_user;
}

public ExplicitGroup getSequence() {
synchronized (monitor()) {
check_orphaned();
ExplicitGroup find_element_user = get_store().find_element_user(SEQUENCE$0, 0);
if (find_element_user == null) {
return null;
}
return find_element_user;
}
}

public void setSequence(ExplicitGroup explicitGroup) {
generatedSetterHelperImpl(explicitGroup, SEQUENCE$0, 0, 1);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\checkerframework\checker\initialization\qual\UnderInitialization.java

package org.checkerframework.checker.initialization.qual;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import org.checkerframework.framework.qual.SubtypeOf;

@SubtypeOf({UnknownInitialization.class})
@Documented
@Target({ElementType.TYPE_USE, ElementType.TYPE_PARAMETER})
@Retention(RetentionPolicy.RUNTIME)
public @interface UnderInitialization {
Class<?> value() default Object.class;
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\checkerframework\checker\interning\qual\UsesObjectEquals.java

package org.checkerframework.checker.interning.qual;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Inherited;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Inherited
@Documented
@Target({ElementType.TYPE})
@Retention(RetentionPolicy.RUNTIME)
public @interface UsesObjectEquals {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\checkerframework\common\util\report\qual\ReportUse.java

package org.checkerframework.common.util.report.qual;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Documented
@Target({ElementType.PACKAGE, ElementType.TYPE})
@Retention(RetentionPolicy.RUNTIME)
public @interface ReportUse {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\checkerframework\framework\qual\AnnotatedFor.java

package org.checkerframework.framework.qual;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Documented
@Target({ElementType.TYPE, ElementType.METHOD, ElementType.CONSTRUCTOR, ElementType.PACKAGE})
@Retention(RetentionPolicy.SOURCE)
public @interface AnnotatedFor {
String[] value();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\codehaus\stax2\AttributeInfo.java

package org.codehaus.stax2;

public interface AttributeInfo {
int findAttributeIndex(String str, String str2);

int getAttributeCount();

int getIdAttributeIndex();

int getNotationAttributeIndex();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\codehaus\stax2\ri\SingletonIterator.java

package org.codehaus.stax2.ri;

import java.util.Iterator;
import java.util.NoSuchElementException;

public class SingletonIterator<T> implements Iterator<T> {
private boolean _done = false;
private final T _value;

@Deprecated
public SingletonIterator(T t) {
this._value = t;
}

public static <T> SingletonIterator<T> create(T t) {
return new SingletonIterator<>(t);
}

public boolean hasNext() {
return !this._done;
}

public T next() {
if (!this._done) {
this._done = true;
return this._value;
}
throw new NoSuchElementException();
}

public void remove() {
throw new UnsupportedOperationException("Can not remove item from SingletonIterator.");
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\jetbrains\annotations\ApiStatus$Internal.java

package org.jetbrains.annotations;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Documented
@Target({ElementType.TYPE, ElementType.ANNOTATION_TYPE, ElementType.METHOD, ElementType.CONSTRUCTOR, ElementType.FIELD, ElementType.PACKAGE})
@Retention(RetentionPolicy.CLASS)
public @interface ApiStatus$Internal {
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\chart\CTCrosses$Factory.java

package org.openxmlformats.schemas.drawingml.x2006.chart;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class CTCrosses$Factory {
private CTCrosses$Factory() {
}

public static CTCrosses newInstance() {
return POIXMLTypeLoader.newInstance(CTCrosses.type, (XmlOptions) null);
}

public static CTCrosses newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(CTCrosses.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTCrosses.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTCrosses.type, xmlOptions);
}

public static CTCrosses parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTCrosses.type, (XmlOptions) null);
}

public static CTCrosses parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTCrosses.type, xmlOptions);
}

public static CTCrosses parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTCrosses.type, (XmlOptions) null);
}

public static CTCrosses parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTCrosses.type, xmlOptions);
}

public static CTCrosses parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTCrosses.type, (XmlOptions) null);
}

public static CTCrosses parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTCrosses.type, xmlOptions);
}

public static CTCrosses parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, CTCrosses.type, (XmlOptions) null);
}

public static CTCrosses parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, CTCrosses.type, xmlOptions);
}

public static CTCrosses parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTCrosses.type, (XmlOptions) null);
}

public static CTCrosses parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTCrosses.type, xmlOptions);
}

public static CTCrosses parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTCrosses.type, (XmlOptions) null);
}

public static CTCrosses parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTCrosses.type, xmlOptions);
}

public static CTCrosses parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTCrosses.type, (XmlOptions) null);
}

public static CTCrosses parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTCrosses.type, xmlOptions);
}

public static CTCrosses parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, CTCrosses.type, (XmlOptions) null);
}

public static CTCrosses parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, CTCrosses.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\chart\CTDateAx.java

package org.openxmlformats.schemas.drawingml.x2006.chart;

import android.support.v4.media.b;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlObject;
import org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody;

public interface CTDateAx extends XmlObject {
public static final SchemaType type = b.v(CTDateAx.class, "schemaorg_apache_xmlbeans.system.sF1327CCA741569E70F9CA8C9AF9B44B2", "ctdateaxbdd7type");

CTBoolean addNewAuto();

CTUnsignedInt addNewAxId();

CTAxPos addNewAxPos();

CTTimeUnit addNewBaseTimeUnit();

CTUnsignedInt addNewCrossAx();

CTCrosses addNewCrosses();

CTDouble addNewCrossesAt();

CTBoolean addNewDelete();

CTExtensionList addNewExtLst();

CTLblOffset addNewLblOffset();

CTChartLines addNewMajorGridlines();

CTTickMark addNewMajorTickMark();

CTTimeUnit addNewMajorTimeUnit();

CTAxisUnit addNewMajorUnit();

CTChartLines addNewMinorGridlines();

CTTickMark addNewMinorTickMark();

CTTimeUnit addNewMinorTimeUnit();

CTAxisUnit addNewMinorUnit();

CTNumFmt addNewNumFmt();

CTScaling addNewScaling();

CTShapeProperties addNewSpPr();

CTTickLblPos addNewTickLblPos();

CTTitle addNewTitle();

CTTextBody addNewTxPr();

CTBoolean getAuto();

CTUnsignedInt getAxId();

CTAxPos getAxPos();

CTTimeUnit getBaseTimeUnit();

CTUnsignedInt getCrossAx();

CTCrosses getCrosses();

CTDouble getCrossesAt();

CTBoolean getDelete();

CTExtensionList getExtLst();

CTLblOffset getLblOffset();

CTChartLines getMajorGridlines();

CTTickMark getMajorTickMark();

CTTimeUnit getMajorTimeUnit();

CTAxisUnit getMajorUnit();

CTChartLines getMinorGridlines();

CTTickMark getMinorTickMark();

CTTimeUnit getMinorTimeUnit();

CTAxisUnit getMinorUnit();

CTNumFmt getNumFmt();

CTScaling getScaling();

CTShapeProperties getSpPr();

CTTickLblPos getTickLblPos();

CTTitle getTitle();

CTTextBody getTxPr();

boolean isSetAuto();

boolean isSetBaseTimeUnit();

boolean isSetCrosses();

boolean isSetCrossesAt();

boolean isSetDelete();

boolean isSetExtLst();

boolean isSetLblOffset();

boolean isSetMajorGridlines();

boolean isSetMajorTickMark();

boolean isSetMajorTimeUnit();

boolean isSetMajorUnit();

boolean isSetMinorGridlines();

boolean isSetMinorTickMark();

boolean isSetMinorTimeUnit();

boolean isSetMinorUnit();

boolean isSetNumFmt();

boolean isSetSpPr();

boolean isSetTickLblPos();

boolean isSetTitle();

boolean isSetTxPr();

void setAuto(CTBoolean cTBoolean);

void setAxId(CTUnsignedInt cTUnsignedInt);

void setAxPos(CTAxPos cTAxPos);

void setBaseTimeUnit(CTTimeUnit cTTimeUnit);

void setCrossAx(CTUnsignedInt cTUnsignedInt);

void setCrosses(CTCrosses cTCrosses);

void setCrossesAt(CTDouble cTDouble);

void setDelete(CTBoolean cTBoolean);

void setExtLst(CTExtensionList cTExtensionList);

void setLblOffset(CTLblOffset cTLblOffset);

void setMajorGridlines(CTChartLines cTChartLines);

void setMajorTickMark(CTTickMark cTTickMark);

void setMajorTimeUnit(CTTimeUnit cTTimeUnit);

void setMajorUnit(CTAxisUnit cTAxisUnit);

void setMinorGridlines(CTChartLines cTChartLines);

void setMinorTickMark(CTTickMark cTTickMark);

void setMinorTimeUnit(CTTimeUnit cTTimeUnit);

void setMinorUnit(CTAxisUnit cTAxisUnit);

void setNumFmt(CTNumFmt cTNumFmt);

void setScaling(CTScaling cTScaling);

void setSpPr(CTShapeProperties cTShapeProperties);

void setTickLblPos(CTTickLblPos cTTickLblPos);

void setTitle(CTTitle cTTitle);

void setTxPr(CTTextBody cTTextBody);

void unsetAuto();

void unsetBaseTimeUnit();

void unsetCrosses();

void unsetCrossesAt();

void unsetDelete();

void unsetExtLst();

void unsetLblOffset();

void unsetMajorGridlines();

void unsetMajorTickMark();

void unsetMajorTimeUnit();

void unsetMajorUnit();

void unsetMinorGridlines();

void unsetMinorTickMark();

void unsetMinorTimeUnit();

void unsetMinorUnit();

void unsetNumFmt();

void unsetSpPr();

void unsetTickLblPos();

void unsetTitle();

void unsetTxPr();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\chart\impl\CTNumValImpl.java

package org.openxmlformats.schemas.drawingml.x2006.chart.impl;

import com.google.firebase.installations.interop.BuildConfig;
import javax.xml.namespace.QName;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.SimpleValue;
import org.apache.xmlbeans.XmlUnsignedInt;
import org.apache.xmlbeans.impl.values.TypeStore;
import org.apache.xmlbeans.impl.values.XmlComplexContentImpl;
import org.openxmlformats.schemas.drawingml.x2006.chart.CTNumVal;
import org.openxmlformats.schemas.drawingml.x2006.chart.STXstring;

public class CTNumValImpl extends XmlComplexContentImpl implements CTNumVal {
private static final QName FORMATCODE$4 = new QName(BuildConfig.FLAVOR, "formatCode");
private static final QName IDX$2 = new QName(BuildConfig.FLAVOR, "idx");
private static final QName V$0 = new QName("http://schemas.openxmlformats.org/drawingml/2006/chart", "v");

public CTNumValImpl(SchemaType schemaType) {
super(schemaType);
}

public String getFormatCode() {
synchronized (monitor()) {
check_orphaned();
SimpleValue find_attribute_user = get_store().find_attribute_user(FORMATCODE$4);
if (find_attribute_user == null) {
return null;
}
String stringValue = find_attribute_user.getStringValue();
return stringValue;
}
}

public long getIdx() {
synchronized (monitor()) {
check_orphaned();
SimpleValue find_attribute_user = get_store().find_attribute_user(IDX$2);
if (find_attribute_user == null) {
return 0;
}
long longValue = find_attribute_user.getLongValue();
return longValue;
}
}

public String getV() {
synchronized (monitor()) {
check_orphaned();
SimpleValue find_element_user = get_store().find_element_user(V$0, 0);
if (find_element_user == null) {
return null;
}
String stringValue = find_element_user.getStringValue();
return stringValue;
}
}

public boolean isSetFormatCode() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().find_attribute_user(FORMATCODE$4) != null;
}
return z;
}

public void setFormatCode(String str) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = FORMATCODE$4;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setStringValue(str);
}
}

public void setIdx(long j2) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = IDX$2;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setLongValue(j2);
}
}

public void setV(String str) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = V$0;
SimpleValue find_element_user = typeStore.find_element_user(qName, 0);
if (find_element_user == null) {
find_element_user = (SimpleValue) get_store().add_element_user(qName);
}
find_element_user.setStringValue(str);
}
}

public void unsetFormatCode() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_attribute(FORMATCODE$4);
}
}

public STXstring xgetFormatCode() {
STXstring find_attribute_user;
synchronized (monitor()) {
check_orphaned();
find_attribute_user = get_store().find_attribute_user(FORMATCODE$4);
}
return find_attribute_user;
}

public XmlUnsignedInt xgetIdx() {
XmlUnsignedInt find_attribute_user;
synchronized (monitor()) {
check_orphaned();
find_attribute_user = get_store().find_attribute_user(IDX$2);
}
return find_attribute_user;
}

public STXstring xgetV() {
STXstring find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(V$0, 0);
}
return find_element_user;
}

public void xsetFormatCode(STXstring sTXstring) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = FORMATCODE$4;
STXstring find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = get_store().add_attribute_user(qName);
}
find_attribute_user.set(sTXstring);
}
}

public void xsetIdx(XmlUnsignedInt xmlUnsignedInt) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = IDX$2;
XmlUnsignedInt find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = get_store().add_attribute_user(qName);
}
find_attribute_user.set(xmlUnsignedInt);
}
}

public void xsetV(STXstring sTXstring) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = V$0;
STXstring find_element_user = typeStore.find_element_user(qName, 0);
if (find_element_user == null) {
find_element_user = get_store().add_element_user(qName);
}
find_element_user.set(sTXstring);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\main\CTPath2D.java

package org.openxmlformats.schemas.drawingml.x2006.main;

import android.support.v4.media.b;
import java.util.List;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlBoolean;
import org.apache.xmlbeans.XmlObject;
import org.openxmlformats.schemas.drawingml.x2006.main.STPathFillMode;

public interface CTPath2D extends XmlObject {
public static final SchemaType type = b.v(CTPath2D.class, "schemaorg_apache_xmlbeans.system.sF1327CCA741569E70F9CA8C9AF9B44B2", "ctpath2d73d2type");

CTPath2DArcTo addNewArcTo();

CTPath2DClose addNewClose();

CTPath2DCubicBezierTo addNewCubicBezTo();

CTPath2DLineTo addNewLnTo();

CTPath2DMoveTo addNewMoveTo();

CTPath2DQuadBezierTo addNewQuadBezTo();

CTPath2DArcTo getArcToArray(int i);

CTPath2DArcTo[] getArcToArray();

List<CTPath2DArcTo> getArcToList();

CTPath2DClose getCloseArray(int i);

CTPath2DClose[] getCloseArray();

List<CTPath2DClose> getCloseList();

CTPath2DCubicBezierTo getCubicBezToArray(int i);

CTPath2DCubicBezierTo[] getCubicBezToArray();

List<CTPath2DCubicBezierTo> getCubicBezToList();

boolean getExtrusionOk();

STPathFillMode.Enum getFill();

long getH();

CTPath2DLineTo getLnToArray(int i);

CTPath2DLineTo[] getLnToArray();

List<CTPath2DLineTo> getLnToList();

CTPath2DMoveTo getMoveToArray(int i);

CTPath2DMoveTo[] getMoveToArray();

List<CTPath2DMoveTo> getMoveToList();

CTPath2DQuadBezierTo getQuadBezToArray(int i);

CTPath2DQuadBezierTo[] getQuadBezToArray();

List<CTPath2DQuadBezierTo> getQuadBezToList();

boolean getStroke();

long getW();

CTPath2DArcTo insertNewArcTo(int i);

CTPath2DClose insertNewClose(int i);

CTPath2DCubicBezierTo insertNewCubicBezTo(int i);

CTPath2DLineTo insertNewLnTo(int i);

CTPath2DMoveTo insertNewMoveTo(int i);

CTPath2DQuadBezierTo insertNewQuadBezTo(int i);

boolean isSetExtrusionOk();

boolean isSetFill();

boolean isSetH();

boolean isSetStroke();

boolean isSetW();

void removeArcTo(int i);

void removeClose(int i);

void removeCubicBezTo(int i);

void removeLnTo(int i);

void removeMoveTo(int i);

void removeQuadBezTo(int i);

void setArcToArray(int i, CTPath2DArcTo cTPath2DArcTo);

void setArcToArray(CTPath2DArcTo[] cTPath2DArcToArr);

void setCloseArray(int i, CTPath2DClose cTPath2DClose);

void setCloseArray(CTPath2DClose[] cTPath2DCloseArr);

void setCubicBezToArray(int i, CTPath2DCubicBezierTo cTPath2DCubicBezierTo);

void setCubicBezToArray(CTPath2DCubicBezierTo[] cTPath2DCubicBezierToArr);

void setExtrusionOk(boolean z);

void setFill(STPathFillMode.Enum enumR);

void setH(long j2);

void setLnToArray(int i, CTPath2DLineTo cTPath2DLineTo);

void setLnToArray(CTPath2DLineTo[] cTPath2DLineToArr);

void setMoveToArray(int i, CTPath2DMoveTo cTPath2DMoveTo);

void setMoveToArray(CTPath2DMoveTo[] cTPath2DMoveToArr);

void setQuadBezToArray(int i, CTPath2DQuadBezierTo cTPath2DQuadBezierTo);

void setQuadBezToArray(CTPath2DQuadBezierTo[] cTPath2DQuadBezierToArr);

void setStroke(boolean z);

void setW(long j2);

int sizeOfArcToArray();

int sizeOfCloseArray();

int sizeOfCubicBezToArray();

int sizeOfLnToArray();

int sizeOfMoveToArray();

int sizeOfQuadBezToArray();

void unsetExtrusionOk();

void unsetFill();

void unsetH();

void unsetStroke();

void unsetW();

XmlBoolean xgetExtrusionOk();

STPathFillMode xgetFill();

STPositiveCoordinate xgetH();

XmlBoolean xgetStroke();

STPositiveCoordinate xgetW();

void xsetExtrusionOk(XmlBoolean xmlBoolean);

void xsetFill(STPathFillMode sTPathFillMode);

void xsetH(STPositiveCoordinate sTPositiveCoordinate);

void xsetStroke(XmlBoolean xmlBoolean);

void xsetW(STPositiveCoordinate sTPositiveCoordinate);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\main\CTPathShadeProperties.java

package org.openxmlformats.schemas.drawingml.x2006.main;

import android.support.v4.media.b;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlObject;
import org.openxmlformats.schemas.drawingml.x2006.main.STPathShadeType;

public interface CTPathShadeProperties extends XmlObject {
public static final SchemaType type = b.v(CTPathShadeProperties.class, "schemaorg_apache_xmlbeans.system.sF1327CCA741569E70F9CA8C9AF9B44B2", "ctpathshadeproperties7ccctype");

CTRelativeRect addNewFillToRect();

CTRelativeRect getFillToRect();

STPathShadeType.Enum getPath();

boolean isSetFillToRect();

boolean isSetPath();

void setFillToRect(CTRelativeRect cTRelativeRect);

void setPath(STPathShadeType.Enum enumR);

void unsetFillToRect();

void unsetPath();

STPathShadeType xgetPath();

void xsetPath(STPathShadeType sTPathShadeType);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\main\CTStyleMatrix$Factory.java

package org.openxmlformats.schemas.drawingml.x2006.main;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class CTStyleMatrix$Factory {
private CTStyleMatrix$Factory() {
}

public static CTStyleMatrix newInstance() {
return POIXMLTypeLoader.newInstance(CTStyleMatrix.type, (XmlOptions) null);
}

public static CTStyleMatrix newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(CTStyleMatrix.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTStyleMatrix.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTStyleMatrix.type, xmlOptions);
}

public static CTStyleMatrix parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTStyleMatrix.type, (XmlOptions) null);
}

public static CTStyleMatrix parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTStyleMatrix.type, xmlOptions);
}

public static CTStyleMatrix parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTStyleMatrix.type, (XmlOptions) null);
}

public static CTStyleMatrix parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTStyleMatrix.type, xmlOptions);
}

public static CTStyleMatrix parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTStyleMatrix.type, (XmlOptions) null);
}

public static CTStyleMatrix parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTStyleMatrix.type, xmlOptions);
}

public static CTStyleMatrix parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, CTStyleMatrix.type, (XmlOptions) null);
}

public static CTStyleMatrix parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, CTStyleMatrix.type, xmlOptions);
}

public static CTStyleMatrix parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTStyleMatrix.type, (XmlOptions) null);
}

public static CTStyleMatrix parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTStyleMatrix.type, xmlOptions);
}

public static CTStyleMatrix parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTStyleMatrix.type, (XmlOptions) null);
}

public static CTStyleMatrix parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTStyleMatrix.type, xmlOptions);
}

public static CTStyleMatrix parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTStyleMatrix.type, (XmlOptions) null);
}

public static CTStyleMatrix parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTStyleMatrix.type, xmlOptions);
}

public static CTStyleMatrix parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, CTStyleMatrix.type, (XmlOptions) null);
}

public static CTStyleMatrix parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, CTStyleMatrix.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\main\STLineWidth.java

package org.openxmlformats.schemas.drawingml.x2006.main;

import android.support.v4.media.b;
import org.apache.xmlbeans.SchemaType;

public interface STLineWidth extends STCoordinate32 {
public static final SchemaType type = b.v(STLineWidth.class, "schemaorg_apache_xmlbeans.system.sF1327CCA741569E70F9CA8C9AF9B44B2", "stlinewidth8313type");
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\main\STTextFontSize.java

package org.openxmlformats.schemas.drawingml.x2006.main;

import android.support.v4.media.b;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlInt;

public interface STTextFontSize extends XmlInt {
public static final SchemaType type = b.v(STTextFontSize.class, "schemaorg_apache_xmlbeans.system.sF1327CCA741569E70F9CA8C9AF9B44B2", "sttextfontsizeb3a8type");
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\main\STTextHorzOverflowType$Factory.java

package org.openxmlformats.schemas.drawingml.x2006.main;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class STTextHorzOverflowType$Factory {
private STTextHorzOverflowType$Factory() {
}

public static STTextHorzOverflowType newInstance() {
return POIXMLTypeLoader.newInstance(STTextHorzOverflowType.type, (XmlOptions) null);
}

public static STTextHorzOverflowType newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(STTextHorzOverflowType.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, STTextHorzOverflowType.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, STTextHorzOverflowType.type, xmlOptions);
}

public static STTextHorzOverflowType newValue(Object obj) {
return STTextHorzOverflowType.type.newValue(obj);
}

public static STTextHorzOverflowType parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, STTextHorzOverflowType.type, (XmlOptions) null);
}

public static STTextHorzOverflowType parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, STTextHorzOverflowType.type, xmlOptions);
}

public static STTextHorzOverflowType parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, STTextHorzOverflowType.type, (XmlOptions) null);
}

public static STTextHorzOverflowType parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, STTextHorzOverflowType.type, xmlOptions);
}

public static STTextHorzOverflowType parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, STTextHorzOverflowType.type, (XmlOptions) null);
}

public static STTextHorzOverflowType parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, STTextHorzOverflowType.type, xmlOptions);
}

public static STTextHorzOverflowType parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, STTextHorzOverflowType.type, (XmlOptions) null);
}

public static STTextHorzOverflowType parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, STTextHorzOverflowType.type, xmlOptions);
}

public static STTextHorzOverflowType parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, STTextHorzOverflowType.type, (XmlOptions) null);
}

public static STTextHorzOverflowType parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, STTextHorzOverflowType.type, xmlOptions);
}

public static STTextHorzOverflowType parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, STTextHorzOverflowType.type, (XmlOptions) null);
}

public static STTextHorzOverflowType parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, STTextHorzOverflowType.type, xmlOptions);
}

public static STTextHorzOverflowType parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, STTextHorzOverflowType.type, (XmlOptions) null);
}

public static STTextHorzOverflowType parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, STTextHorzOverflowType.type, xmlOptions);
}

public static STTextHorzOverflowType parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, STTextHorzOverflowType.type, (XmlOptions) null);
}

public static STTextHorzOverflowType parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, STTextHorzOverflowType.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\main\STTileFlipMode$Enum.java

package org.openxmlformats.schemas.drawingml.x2006.main;

import org.apache.xmlbeans.StringEnumAbstractBase;

public final class STTileFlipMode$Enum extends StringEnumAbstractBase {
public static final int INT_NONE = 1;
public static final int INT_X = 2;
public static final int INT_XY = 4;
public static final int INT_Y = 3;
private static final long serialVersionUID = 1;
public static final StringEnumAbstractBase.Table table = new StringEnumAbstractBase.Table(new STTileFlipMode$Enum[]{new STTileFlipMode$Enum("none", 1), new STTileFlipMode$Enum("x", 2), new STTileFlipMode$Enum("y", 3), new STTileFlipMode$Enum("xy", 4)});

private STTileFlipMode$Enum(String str, int i) {
super(str, i);
}

public static STTileFlipMode$Enum forInt(int i) {
return table.forInt(i);
}

public static STTileFlipMode$Enum forString(String str) {
return table.forString(str);
}

private Object readResolve() {
return forInt(intValue());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\main\impl\CTBlipImpl.java

package org.openxmlformats.schemas.drawingml.x2006.main.impl;

import com.google.firebase.installations.interop.BuildConfig;
import java.util.ArrayList;
import java.util.List;
import javax.xml.namespace.QName;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.SimpleValue;
import org.apache.xmlbeans.impl.values.TypeStore;
import org.apache.xmlbeans.impl.values.XmlComplexContentImpl;
import org.openxmlformats.schemas.drawingml.x2006.main.CTAlphaBiLevelEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTAlphaCeilingEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTAlphaFloorEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTAlphaInverseEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTAlphaModulateEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTAlphaModulateFixedEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTAlphaReplaceEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTBiLevelEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTBlip;
import org.openxmlformats.schemas.drawingml.x2006.main.CTBlurEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTColorChangeEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTColorReplaceEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTDuotoneEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTFillOverlayEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTGrayscaleEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTHSLEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTLuminanceEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.CTOfficeArtExtensionList;
import org.openxmlformats.schemas.drawingml.x2006.main.CTTintEffect;
import org.openxmlformats.schemas.drawingml.x2006.main.STBlipCompression;
import org.openxmlformats.schemas.officeDocument.x2006.relationships.STRelationshipId;

public class CTBlipImpl extends XmlComplexContentImpl implements CTBlip {
private static final QName ALPHABILEVEL$0 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "alphaBiLevel");
private static final QName ALPHACEILING$2 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "alphaCeiling");
private static final QName ALPHAFLOOR$4 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "alphaFloor");
private static final QName ALPHAINV$6 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "alphaInv");
private static final QName ALPHAMOD$8 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "alphaMod");
private static final QName ALPHAMODFIX$10 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "alphaModFix");
private static final QName ALPHAREPL$12 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "alphaRepl");
private static final QName BILEVEL$14 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "biLevel");
private static final QName BLUR$16 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "blur");
private static final QName CLRCHANGE$18 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "clrChange");
private static final QName CLRREPL$20 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "clrRepl");
private static final QName CSTATE$40 = new QName(BuildConfig.FLAVOR, "cstate");
private static final QName DUOTONE$22 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "duotone");
private static final QName EMBED$36 = new QName("http://schemas.openxmlformats.org/officeDocument/2006/relationships", "embed");
private static final QName EXTLST$34 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "extLst");
private static final QName FILLOVERLAY$24 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "fillOverlay");
private static final QName GRAYSCL$26 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "grayscl");
private static final QName HSL$28 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "hsl");
private static final QName LINK$38 = new QName("http://schemas.openxmlformats.org/officeDocument/2006/relationships", "link");
private static final QName LUM$30 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "lum");
private static final QName TINT$32 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "tint");

public CTBlipImpl(SchemaType schemaType) {
super(schemaType);
}

public CTAlphaBiLevelEffect addNewAlphaBiLevel() {
CTAlphaBiLevelEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(ALPHABILEVEL$0);
}
return add_element_user;
}

public CTAlphaCeilingEffect addNewAlphaCeiling() {
CTAlphaCeilingEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(ALPHACEILING$2);
}
return add_element_user;
}

public CTAlphaFloorEffect addNewAlphaFloor() {
CTAlphaFloorEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(ALPHAFLOOR$4);
}
return add_element_user;
}

public CTAlphaInverseEffect addNewAlphaInv() {
CTAlphaInverseEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(ALPHAINV$6);
}
return add_element_user;
}

public CTAlphaModulateEffect addNewAlphaMod() {
CTAlphaModulateEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(ALPHAMOD$8);
}
return add_element_user;
}

public CTAlphaModulateFixedEffect addNewAlphaModFix() {
CTAlphaModulateFixedEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(ALPHAMODFIX$10);
}
return add_element_user;
}

public CTAlphaReplaceEffect addNewAlphaRepl() {
CTAlphaReplaceEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(ALPHAREPL$12);
}
return add_element_user;
}

public CTBiLevelEffect addNewBiLevel() {
CTBiLevelEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(BILEVEL$14);
}
return add_element_user;
}

public CTBlurEffect addNewBlur() {
CTBlurEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(BLUR$16);
}
return add_element_user;
}

public CTColorChangeEffect addNewClrChange() {
CTColorChangeEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(CLRCHANGE$18);
}
return add_element_user;
}

public CTColorReplaceEffect addNewClrRepl() {
CTColorReplaceEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(CLRREPL$20);
}
return add_element_user;
}

public CTDuotoneEffect addNewDuotone() {
CTDuotoneEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(DUOTONE$22);
}
return add_element_user;
}

public CTOfficeArtExtensionList addNewExtLst() {
CTOfficeArtExtensionList add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(EXTLST$34);
}
return add_element_user;
}

public CTFillOverlayEffect addNewFillOverlay() {
CTFillOverlayEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(FILLOVERLAY$24);
}
return add_element_user;
}

public CTGrayscaleEffect addNewGrayscl() {
CTGrayscaleEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(GRAYSCL$26);
}
return add_element_user;
}

public CTHSLEffect addNewHsl() {
CTHSLEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(HSL$28);
}
return add_element_user;
}

public CTLuminanceEffect addNewLum() {
CTLuminanceEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(LUM$30);
}
return add_element_user;
}

public CTTintEffect addNewTint() {
CTTintEffect add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(TINT$32);
}
return add_element_user;
}

public CTAlphaBiLevelEffect getAlphaBiLevelArray(int i) {
CTAlphaBiLevelEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(ALPHABILEVEL$0, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTAlphaBiLevelEffect[] getAlphaBiLevelArray() {
CTAlphaBiLevelEffect[] cTAlphaBiLevelEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(ALPHABILEVEL$0, arrayList);
cTAlphaBiLevelEffectArr = new CTAlphaBiLevelEffect[arrayList.size()];
arrayList.toArray(cTAlphaBiLevelEffectArr);
}
return cTAlphaBiLevelEffectArr;
}

public List<CTAlphaBiLevelEffect> getAlphaBiLevelList() {
1AlphaBiLevelList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1AlphaBiLevelList(this);
}
return r1;
}

public CTAlphaCeilingEffect getAlphaCeilingArray(int i) {
CTAlphaCeilingEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(ALPHACEILING$2, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTAlphaCeilingEffect[] getAlphaCeilingArray() {
CTAlphaCeilingEffect[] cTAlphaCeilingEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(ALPHACEILING$2, arrayList);
cTAlphaCeilingEffectArr = new CTAlphaCeilingEffect[arrayList.size()];
arrayList.toArray(cTAlphaCeilingEffectArr);
}
return cTAlphaCeilingEffectArr;
}

public List<CTAlphaCeilingEffect> getAlphaCeilingList() {
1AlphaCeilingList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1AlphaCeilingList(this);
}
return r1;
}

public CTAlphaFloorEffect getAlphaFloorArray(int i) {
CTAlphaFloorEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(ALPHAFLOOR$4, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTAlphaFloorEffect[] getAlphaFloorArray() {
CTAlphaFloorEffect[] cTAlphaFloorEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(ALPHAFLOOR$4, arrayList);
cTAlphaFloorEffectArr = new CTAlphaFloorEffect[arrayList.size()];
arrayList.toArray(cTAlphaFloorEffectArr);
}
return cTAlphaFloorEffectArr;
}

public List<CTAlphaFloorEffect> getAlphaFloorList() {
1AlphaFloorList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1AlphaFloorList(this);
}
return r1;
}

public CTAlphaInverseEffect getAlphaInvArray(int i) {
CTAlphaInverseEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(ALPHAINV$6, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTAlphaInverseEffect[] getAlphaInvArray() {
CTAlphaInverseEffect[] cTAlphaInverseEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(ALPHAINV$6, arrayList);
cTAlphaInverseEffectArr = new CTAlphaInverseEffect[arrayList.size()];
arrayList.toArray(cTAlphaInverseEffectArr);
}
return cTAlphaInverseEffectArr;
}

public List<CTAlphaInverseEffect> getAlphaInvList() {
1AlphaInvList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1AlphaInvList(this);
}
return r1;
}

public CTAlphaModulateEffect getAlphaModArray(int i) {
CTAlphaModulateEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(ALPHAMOD$8, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTAlphaModulateEffect[] getAlphaModArray() {
CTAlphaModulateEffect[] cTAlphaModulateEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(ALPHAMOD$8, arrayList);
cTAlphaModulateEffectArr = new CTAlphaModulateEffect[arrayList.size()];
arrayList.toArray(cTAlphaModulateEffectArr);
}
return cTAlphaModulateEffectArr;
}

public CTAlphaModulateFixedEffect getAlphaModFixArray(int i) {
CTAlphaModulateFixedEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(ALPHAMODFIX$10, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTAlphaModulateFixedEffect[] getAlphaModFixArray() {
CTAlphaModulateFixedEffect[] cTAlphaModulateFixedEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(ALPHAMODFIX$10, arrayList);
cTAlphaModulateFixedEffectArr = new CTAlphaModulateFixedEffect[arrayList.size()];
arrayList.toArray(cTAlphaModulateFixedEffectArr);
}
return cTAlphaModulateFixedEffectArr;
}

public List<CTAlphaModulateFixedEffect> getAlphaModFixList() {
1AlphaModFixList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1AlphaModFixList(this);
}
return r1;
}

public List<CTAlphaModulateEffect> getAlphaModList() {
1AlphaModList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1AlphaModList(this);
}
return r1;
}

public CTAlphaReplaceEffect getAlphaReplArray(int i) {
CTAlphaReplaceEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(ALPHAREPL$12, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTAlphaReplaceEffect[] getAlphaReplArray() {
CTAlphaReplaceEffect[] cTAlphaReplaceEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(ALPHAREPL$12, arrayList);
cTAlphaReplaceEffectArr = new CTAlphaReplaceEffect[arrayList.size()];
arrayList.toArray(cTAlphaReplaceEffectArr);
}
return cTAlphaReplaceEffectArr;
}

public List<CTAlphaReplaceEffect> getAlphaReplList() {
1AlphaReplList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1AlphaReplList(this);
}
return r1;
}

public CTBiLevelEffect getBiLevelArray(int i) {
CTBiLevelEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(BILEVEL$14, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTBiLevelEffect[] getBiLevelArray() {
CTBiLevelEffect[] cTBiLevelEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(BILEVEL$14, arrayList);
cTBiLevelEffectArr = new CTBiLevelEffect[arrayList.size()];
arrayList.toArray(cTBiLevelEffectArr);
}
return cTBiLevelEffectArr;
}

public List<CTBiLevelEffect> getBiLevelList() {
1BiLevelList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1BiLevelList(this);
}
return r1;
}

public CTBlurEffect getBlurArray(int i) {
CTBlurEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(BLUR$16, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTBlurEffect[] getBlurArray() {
CTBlurEffect[] cTBlurEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(BLUR$16, arrayList);
cTBlurEffectArr = new CTBlurEffect[arrayList.size()];
arrayList.toArray(cTBlurEffectArr);
}
return cTBlurEffectArr;
}

public List<CTBlurEffect> getBlurList() {
1BlurList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1BlurList(this);
}
return r1;
}

public CTColorChangeEffect getClrChangeArray(int i) {
CTColorChangeEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(CLRCHANGE$18, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTColorChangeEffect[] getClrChangeArray() {
CTColorChangeEffect[] cTColorChangeEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(CLRCHANGE$18, arrayList);
cTColorChangeEffectArr = new CTColorChangeEffect[arrayList.size()];
arrayList.toArray(cTColorChangeEffectArr);
}
return cTColorChangeEffectArr;
}

public List<CTColorChangeEffect> getClrChangeList() {
1ClrChangeList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1ClrChangeList(this);
}
return r1;
}

public CTColorReplaceEffect getClrReplArray(int i) {
CTColorReplaceEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(CLRREPL$20, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTColorReplaceEffect[] getClrReplArray() {
CTColorReplaceEffect[] cTColorReplaceEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(CLRREPL$20, arrayList);
cTColorReplaceEffectArr = new CTColorReplaceEffect[arrayList.size()];
arrayList.toArray(cTColorReplaceEffectArr);
}
return cTColorReplaceEffectArr;
}

public List<CTColorReplaceEffect> getClrReplList() {
1ClrReplList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1ClrReplList(this);
}
return r1;
}

public STBlipCompression.Enum getCstate() {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = CSTATE$40;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_default_attribute_value(qName);
}
if (find_attribute_user == null) {
return null;
}
STBlipCompression.Enum enumValue = find_attribute_user.getEnumValue();
return enumValue;
}
}

public CTDuotoneEffect getDuotoneArray(int i) {
CTDuotoneEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(DUOTONE$22, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTDuotoneEffect[] getDuotoneArray() {
CTDuotoneEffect[] cTDuotoneEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(DUOTONE$22, arrayList);
cTDuotoneEffectArr = new CTDuotoneEffect[arrayList.size()];
arrayList.toArray(cTDuotoneEffectArr);
}
return cTDuotoneEffectArr;
}

public List<CTDuotoneEffect> getDuotoneList() {
1DuotoneList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1DuotoneList(this);
}
return r1;
}

public String getEmbed() {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = EMBED$36;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_default_attribute_value(qName);
}
if (find_attribute_user == null) {
return null;
}
String stringValue = find_attribute_user.getStringValue();
return stringValue;
}
}

public CTOfficeArtExtensionList getExtLst() {
synchronized (monitor()) {
check_orphaned();
CTOfficeArtExtensionList find_element_user = get_store().find_element_user(EXTLST$34, 0);
if (find_element_user == null) {
return null;
}
return find_element_user;
}
}

public CTFillOverlayEffect getFillOverlayArray(int i) {
CTFillOverlayEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(FILLOVERLAY$24, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTFillOverlayEffect[] getFillOverlayArray() {
CTFillOverlayEffect[] cTFillOverlayEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(FILLOVERLAY$24, arrayList);
cTFillOverlayEffectArr = new CTFillOverlayEffect[arrayList.size()];
arrayList.toArray(cTFillOverlayEffectArr);
}
return cTFillOverlayEffectArr;
}

public List<CTFillOverlayEffect> getFillOverlayList() {
1FillOverlayList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1FillOverlayList(this);
}
return r1;
}

public CTGrayscaleEffect getGraysclArray(int i) {
CTGrayscaleEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(GRAYSCL$26, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTGrayscaleEffect[] getGraysclArray() {
CTGrayscaleEffect[] cTGrayscaleEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(GRAYSCL$26, arrayList);
cTGrayscaleEffectArr = new CTGrayscaleEffect[arrayList.size()];
arrayList.toArray(cTGrayscaleEffectArr);
}
return cTGrayscaleEffectArr;
}

public List<CTGrayscaleEffect> getGraysclList() {
1GraysclList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1GraysclList(this);
}
return r1;
}

public CTHSLEffect getHslArray(int i) {
CTHSLEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(HSL$28, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTHSLEffect[] getHslArray() {
CTHSLEffect[] cTHSLEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(HSL$28, arrayList);
cTHSLEffectArr = new CTHSLEffect[arrayList.size()];
arrayList.toArray(cTHSLEffectArr);
}
return cTHSLEffectArr;
}

public List<CTHSLEffect> getHslList() {
1HslList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1HslList(this);
}
return r1;
}

public String getLink() {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = LINK$38;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_default_attribute_value(qName);
}
if (find_attribute_user == null) {
return null;
}
String stringValue = find_attribute_user.getStringValue();
return stringValue;
}
}

public CTLuminanceEffect getLumArray(int i) {
CTLuminanceEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(LUM$30, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTLuminanceEffect[] getLumArray() {
CTLuminanceEffect[] cTLuminanceEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(LUM$30, arrayList);
cTLuminanceEffectArr = new CTLuminanceEffect[arrayList.size()];
arrayList.toArray(cTLuminanceEffectArr);
}
return cTLuminanceEffectArr;
}

public List<CTLuminanceEffect> getLumList() {
1LumList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1LumList(this);
}
return r1;
}

public CTTintEffect getTintArray(int i) {
CTTintEffect find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(TINT$32, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTTintEffect[] getTintArray() {
CTTintEffect[] cTTintEffectArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(TINT$32, arrayList);
cTTintEffectArr = new CTTintEffect[arrayList.size()];
arrayList.toArray(cTTintEffectArr);
}
return cTTintEffectArr;
}

public List<CTTintEffect> getTintList() {
1TintList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1TintList(this);
}
return r1;
}

public CTAlphaBiLevelEffect insertNewAlphaBiLevel(int i) {
CTAlphaBiLevelEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(ALPHABILEVEL$0, i);
}
return insert_element_user;
}

public CTAlphaCeilingEffect insertNewAlphaCeiling(int i) {
CTAlphaCeilingEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(ALPHACEILING$2, i);
}
return insert_element_user;
}

public CTAlphaFloorEffect insertNewAlphaFloor(int i) {
CTAlphaFloorEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(ALPHAFLOOR$4, i);
}
return insert_element_user;
}

public CTAlphaInverseEffect insertNewAlphaInv(int i) {
CTAlphaInverseEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(ALPHAINV$6, i);
}
return insert_element_user;
}

public CTAlphaModulateEffect insertNewAlphaMod(int i) {
CTAlphaModulateEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(ALPHAMOD$8, i);
}
return insert_element_user;
}

public CTAlphaModulateFixedEffect insertNewAlphaModFix(int i) {
CTAlphaModulateFixedEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(ALPHAMODFIX$10, i);
}
return insert_element_user;
}

public CTAlphaReplaceEffect insertNewAlphaRepl(int i) {
CTAlphaReplaceEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(ALPHAREPL$12, i);
}
return insert_element_user;
}

public CTBiLevelEffect insertNewBiLevel(int i) {
CTBiLevelEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(BILEVEL$14, i);
}
return insert_element_user;
}

public CTBlurEffect insertNewBlur(int i) {
CTBlurEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(BLUR$16, i);
}
return insert_element_user;
}

public CTColorChangeEffect insertNewClrChange(int i) {
CTColorChangeEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(CLRCHANGE$18, i);
}
return insert_element_user;
}

public CTColorReplaceEffect insertNewClrRepl(int i) {
CTColorReplaceEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(CLRREPL$20, i);
}
return insert_element_user;
}

public CTDuotoneEffect insertNewDuotone(int i) {
CTDuotoneEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(DUOTONE$22, i);
}
return insert_element_user;
}

public CTFillOverlayEffect insertNewFillOverlay(int i) {
CTFillOverlayEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(FILLOVERLAY$24, i);
}
return insert_element_user;
}

public CTGrayscaleEffect insertNewGrayscl(int i) {
CTGrayscaleEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(GRAYSCL$26, i);
}
return insert_element_user;
}

public CTHSLEffect insertNewHsl(int i) {
CTHSLEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(HSL$28, i);
}
return insert_element_user;
}

public CTLuminanceEffect insertNewLum(int i) {
CTLuminanceEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(LUM$30, i);
}
return insert_element_user;
}

public CTTintEffect insertNewTint(int i) {
CTTintEffect insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(TINT$32, i);
}
return insert_element_user;
}

public boolean isSetCstate() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().find_attribute_user(CSTATE$40) != null;
}
return z;
}

public boolean isSetEmbed() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().find_attribute_user(EMBED$36) != null;
}
return z;
}

public boolean isSetExtLst() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().count_elements(EXTLST$34) != 0;
}
return z;
}

public boolean isSetLink() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().find_attribute_user(LINK$38) != null;
}
return z;
}

public void removeAlphaBiLevel(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(ALPHABILEVEL$0, i);
}
}

public void removeAlphaCeiling(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(ALPHACEILING$2, i);
}
}

public void removeAlphaFloor(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(ALPHAFLOOR$4, i);
}
}

public void removeAlphaInv(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(ALPHAINV$6, i);
}
}

public void removeAlphaMod(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(ALPHAMOD$8, i);
}
}

public void removeAlphaModFix(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(ALPHAMODFIX$10, i);
}
}

public void removeAlphaRepl(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(ALPHAREPL$12, i);
}
}

public void removeBiLevel(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(BILEVEL$14, i);
}
}

public void removeBlur(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(BLUR$16, i);
}
}

public void removeClrChange(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(CLRCHANGE$18, i);
}
}

public void removeClrRepl(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(CLRREPL$20, i);
}
}

public void removeDuotone(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(DUOTONE$22, i);
}
}

public void removeFillOverlay(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(FILLOVERLAY$24, i);
}
}

public void removeGrayscl(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(GRAYSCL$26, i);
}
}

public void removeHsl(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(HSL$28, i);
}
}

public void removeLum(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(LUM$30, i);
}
}

public void removeTint(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(TINT$32, i);
}
}

public void setAlphaBiLevelArray(int i, CTAlphaBiLevelEffect cTAlphaBiLevelEffect) {
synchronized (monitor()) {
check_orphaned();
CTAlphaBiLevelEffect find_element_user = get_store().find_element_user(ALPHABILEVEL$0, i);
if (find_element_user != null) {
find_element_user.set(cTAlphaBiLevelEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setAlphaBiLevelArray(CTAlphaBiLevelEffect[] cTAlphaBiLevelEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTAlphaBiLevelEffectArr, ALPHABILEVEL$0);
}
}

public void setAlphaCeilingArray(int i, CTAlphaCeilingEffect cTAlphaCeilingEffect) {
synchronized (monitor()) {
check_orphaned();
CTAlphaCeilingEffect find_element_user = get_store().find_element_user(ALPHACEILING$2, i);
if (find_element_user != null) {
find_element_user.set(cTAlphaCeilingEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setAlphaCeilingArray(CTAlphaCeilingEffect[] cTAlphaCeilingEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTAlphaCeilingEffectArr, ALPHACEILING$2);
}
}

public void setAlphaFloorArray(int i, CTAlphaFloorEffect cTAlphaFloorEffect) {
synchronized (monitor()) {
check_orphaned();
CTAlphaFloorEffect find_element_user = get_store().find_element_user(ALPHAFLOOR$4, i);
if (find_element_user != null) {
find_element_user.set(cTAlphaFloorEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setAlphaFloorArray(CTAlphaFloorEffect[] cTAlphaFloorEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTAlphaFloorEffectArr, ALPHAFLOOR$4);
}
}

public void setAlphaInvArray(int i, CTAlphaInverseEffect cTAlphaInverseEffect) {
synchronized (monitor()) {
check_orphaned();
CTAlphaInverseEffect find_element_user = get_store().find_element_user(ALPHAINV$6, i);
if (find_element_user != null) {
find_element_user.set(cTAlphaInverseEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setAlphaInvArray(CTAlphaInverseEffect[] cTAlphaInverseEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTAlphaInverseEffectArr, ALPHAINV$6);
}
}

public void setAlphaModArray(int i, CTAlphaModulateEffect cTAlphaModulateEffect) {
synchronized (monitor()) {
check_orphaned();
CTAlphaModulateEffect find_element_user = get_store().find_element_user(ALPHAMOD$8, i);
if (find_element_user != null) {
find_element_user.set(cTAlphaModulateEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setAlphaModArray(CTAlphaModulateEffect[] cTAlphaModulateEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTAlphaModulateEffectArr, ALPHAMOD$8);
}
}

public void setAlphaModFixArray(int i, CTAlphaModulateFixedEffect cTAlphaModulateFixedEffect) {
synchronized (monitor()) {
check_orphaned();
CTAlphaModulateFixedEffect find_element_user = get_store().find_element_user(ALPHAMODFIX$10, i);
if (find_element_user != null) {
find_element_user.set(cTAlphaModulateFixedEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setAlphaModFixArray(CTAlphaModulateFixedEffect[] cTAlphaModulateFixedEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTAlphaModulateFixedEffectArr, ALPHAMODFIX$10);
}
}

public void setAlphaReplArray(int i, CTAlphaReplaceEffect cTAlphaReplaceEffect) {
synchronized (monitor()) {
check_orphaned();
CTAlphaReplaceEffect find_element_user = get_store().find_element_user(ALPHAREPL$12, i);
if (find_element_user != null) {
find_element_user.set(cTAlphaReplaceEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setAlphaReplArray(CTAlphaReplaceEffect[] cTAlphaReplaceEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTAlphaReplaceEffectArr, ALPHAREPL$12);
}
}

public void setBiLevelArray(int i, CTBiLevelEffect cTBiLevelEffect) {
synchronized (monitor()) {
check_orphaned();
CTBiLevelEffect find_element_user = get_store().find_element_user(BILEVEL$14, i);
if (find_element_user != null) {
find_element_user.set(cTBiLevelEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setBiLevelArray(CTBiLevelEffect[] cTBiLevelEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTBiLevelEffectArr, BILEVEL$14);
}
}

public void setBlurArray(int i, CTBlurEffect cTBlurEffect) {
synchronized (monitor()) {
check_orphaned();
CTBlurEffect find_element_user = get_store().find_element_user(BLUR$16, i);
if (find_element_user != null) {
find_element_user.set(cTBlurEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setBlurArray(CTBlurEffect[] cTBlurEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTBlurEffectArr, BLUR$16);
}
}

public void setClrChangeArray(int i, CTColorChangeEffect cTColorChangeEffect) {
synchronized (monitor()) {
check_orphaned();
CTColorChangeEffect find_element_user = get_store().find_element_user(CLRCHANGE$18, i);
if (find_element_user != null) {
find_element_user.set(cTColorChangeEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setClrChangeArray(CTColorChangeEffect[] cTColorChangeEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTColorChangeEffectArr, CLRCHANGE$18);
}
}

public void setClrReplArray(int i, CTColorReplaceEffect cTColorReplaceEffect) {
synchronized (monitor()) {
check_orphaned();
CTColorReplaceEffect find_element_user = get_store().find_element_user(CLRREPL$20, i);
if (find_element_user != null) {
find_element_user.set(cTColorReplaceEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setClrReplArray(CTColorReplaceEffect[] cTColorReplaceEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTColorReplaceEffectArr, CLRREPL$20);
}
}

public void setCstate(STBlipCompression.Enum enumR) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = CSTATE$40;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setEnumValue(enumR);
}
}

public void setDuotoneArray(int i, CTDuotoneEffect cTDuotoneEffect) {
synchronized (monitor()) {
check_orphaned();
CTDuotoneEffect find_element_user = get_store().find_element_user(DUOTONE$22, i);
if (find_element_user != null) {
find_element_user.set(cTDuotoneEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setDuotoneArray(CTDuotoneEffect[] cTDuotoneEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTDuotoneEffectArr, DUOTONE$22);
}
}

public void setEmbed(String str) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = EMBED$36;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setStringValue(str);
}
}

public void setExtLst(CTOfficeArtExtensionList cTOfficeArtExtensionList) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = EXTLST$34;
CTOfficeArtExtensionList find_element_user = typeStore.find_element_user(qName, 0);
if (find_element_user == null) {
find_element_user = get_store().add_element_user(qName);
}
find_element_user.set(cTOfficeArtExtensionList);
}
}

public void setFillOverlayArray(int i, CTFillOverlayEffect cTFillOverlayEffect) {
synchronized (monitor()) {
check_orphaned();
CTFillOverlayEffect find_element_user = get_store().find_element_user(FILLOVERLAY$24, i);
if (find_element_user != null) {
find_element_user.set(cTFillOverlayEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setFillOverlayArray(CTFillOverlayEffect[] cTFillOverlayEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTFillOverlayEffectArr, FILLOVERLAY$24);
}
}

public void setGraysclArray(int i, CTGrayscaleEffect cTGrayscaleEffect) {
synchronized (monitor()) {
check_orphaned();
CTGrayscaleEffect find_element_user = get_store().find_element_user(GRAYSCL$26, i);
if (find_element_user != null) {
find_element_user.set(cTGrayscaleEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setGraysclArray(CTGrayscaleEffect[] cTGrayscaleEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTGrayscaleEffectArr, GRAYSCL$26);
}
}

public void setHslArray(int i, CTHSLEffect cTHSLEffect) {
synchronized (monitor()) {
check_orphaned();
CTHSLEffect find_element_user = get_store().find_element_user(HSL$28, i);
if (find_element_user != null) {
find_element_user.set(cTHSLEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setHslArray(CTHSLEffect[] cTHSLEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTHSLEffectArr, HSL$28);
}
}

public void setLink(String str) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = LINK$38;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setStringValue(str);
}
}

public void setLumArray(int i, CTLuminanceEffect cTLuminanceEffect) {
synchronized (monitor()) {
check_orphaned();
CTLuminanceEffect find_element_user = get_store().find_element_user(LUM$30, i);
if (find_element_user != null) {
find_element_user.set(cTLuminanceEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setLumArray(CTLuminanceEffect[] cTLuminanceEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTLuminanceEffectArr, LUM$30);
}
}

public void setTintArray(int i, CTTintEffect cTTintEffect) {
synchronized (monitor()) {
check_orphaned();
CTTintEffect find_element_user = get_store().find_element_user(TINT$32, i);
if (find_element_user != null) {
find_element_user.set(cTTintEffect);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setTintArray(CTTintEffect[] cTTintEffectArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTTintEffectArr, TINT$32);
}
}

public int sizeOfAlphaBiLevelArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(ALPHABILEVEL$0);
}
return count_elements;
}

public int sizeOfAlphaCeilingArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(ALPHACEILING$2);
}
return count_elements;
}

public int sizeOfAlphaFloorArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(ALPHAFLOOR$4);
}
return count_elements;
}

public int sizeOfAlphaInvArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(ALPHAINV$6);
}
return count_elements;
}

public int sizeOfAlphaModArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(ALPHAMOD$8);
}
return count_elements;
}

public int sizeOfAlphaModFixArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(ALPHAMODFIX$10);
}
return count_elements;
}

public int sizeOfAlphaReplArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(ALPHAREPL$12);
}
return count_elements;
}

public int sizeOfBiLevelArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(BILEVEL$14);
}
return count_elements;
}

public int sizeOfBlurArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(BLUR$16);
}
return count_elements;
}

public int sizeOfClrChangeArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(CLRCHANGE$18);
}
return count_elements;
}

public int sizeOfClrReplArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(CLRREPL$20);
}
return count_elements;
}

public int sizeOfDuotoneArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(DUOTONE$22);
}
return count_elements;
}

public int sizeOfFillOverlayArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(FILLOVERLAY$24);
}
return count_elements;
}

public int sizeOfGraysclArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(GRAYSCL$26);
}
return count_elements;
}

public int sizeOfHslArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(HSL$28);
}
return count_elements;
}

public int sizeOfLumArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(LUM$30);
}
return count_elements;
}

public int sizeOfTintArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(TINT$32);
}
return count_elements;
}

public void unsetCstate() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_attribute(CSTATE$40);
}
}

public void unsetEmbed() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_attribute(EMBED$36);
}
}

public void unsetExtLst() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(EXTLST$34, 0);
}
}

public void unsetLink() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_attribute(LINK$38);
}
}

public STBlipCompression xgetCstate() {
STBlipCompression find_attribute_user;
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = CSTATE$40;
find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (STBlipCompression) get_default_attribute_value(qName);
}
}
return find_attribute_user;
}

public STRelationshipId xgetEmbed() {
STRelationshipId find_attribute_user;
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = EMBED$36;
find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (STRelationshipId) get_default_attribute_value(qName);
}
}
return find_attribute_user;
}

public STRelationshipId xgetLink() {
STRelationshipId find_attribute_user;
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = LINK$38;
find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (STRelationshipId) get_default_attribute_value(qName);
}
}
return find_attribute_user;
}

public void xsetCstate(STBlipCompression sTBlipCompression) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = CSTATE$40;
STBlipCompression find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (STBlipCompression) get_store().add_attribute_user(qName);
}
find_attribute_user.set(sTBlipCompression);
}
}

public void xsetEmbed(STRelationshipId sTRelationshipId) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = EMBED$36;
STRelationshipId find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = get_store().add_attribute_user(qName);
}
find_attribute_user.set(sTRelationshipId);
}
}

public void xsetLink(STRelationshipId sTRelationshipId) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = LINK$38;
STRelationshipId find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = get_store().add_attribute_user(qName);
}
find_attribute_user.set(sTRelationshipId);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\main\impl\CTGeomGuideListImpl.java

package org.openxmlformats.schemas.drawingml.x2006.main.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.namespace.QName;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.impl.values.XmlComplexContentImpl;
import org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuide;
import org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuideList;

public class CTGeomGuideListImpl extends XmlComplexContentImpl implements CTGeomGuideList {
private static final QName GD$0 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "gd");

public CTGeomGuideListImpl(SchemaType schemaType) {
super(schemaType);
}

public CTGeomGuide addNewGd() {
CTGeomGuide add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(GD$0);
}
return add_element_user;
}

public CTGeomGuide getGdArray(int i) {
CTGeomGuide find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(GD$0, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTGeomGuide[] getGdArray() {
CTGeomGuide[] cTGeomGuideArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(GD$0, arrayList);
cTGeomGuideArr = new CTGeomGuide[arrayList.size()];
arrayList.toArray(cTGeomGuideArr);
}
return cTGeomGuideArr;
}

public List<CTGeomGuide> getGdList() {
1GdList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1GdList(this);
}
return r1;
}

public CTGeomGuide insertNewGd(int i) {
CTGeomGuide insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(GD$0, i);
}
return insert_element_user;
}

public void removeGd(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(GD$0, i);
}
}

public void setGdArray(int i, CTGeomGuide cTGeomGuide) {
synchronized (monitor()) {
check_orphaned();
CTGeomGuide find_element_user = get_store().find_element_user(GD$0, i);
if (find_element_user != null) {
find_element_user.set(cTGeomGuide);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setGdArray(CTGeomGuide[] cTGeomGuideArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTGeomGuideArr, GD$0);
}
}

public int sizeOfGdArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(GD$0);
}
return count_elements;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\main\impl\CTGraphicalObjectFrameLockingImpl.java

package org.openxmlformats.schemas.drawingml.x2006.main.impl;

import com.google.firebase.installations.interop.BuildConfig;
import javax.xml.namespace.QName;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.SimpleValue;
import org.apache.xmlbeans.XmlBoolean;
import org.apache.xmlbeans.impl.values.TypeStore;
import org.apache.xmlbeans.impl.values.XmlComplexContentImpl;
import org.openxmlformats.schemas.drawingml.x2006.main.CTGraphicalObjectFrameLocking;
import org.openxmlformats.schemas.drawingml.x2006.main.CTOfficeArtExtensionList;

public class CTGraphicalObjectFrameLockingImpl extends XmlComplexContentImpl implements CTGraphicalObjectFrameLocking {
private static final QName EXTLST$0 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "extLst");
private static final QName NOCHANGEASPECT$8 = new QName(BuildConfig.FLAVOR, "noChangeAspect");
private static final QName NODRILLDOWN$4 = new QName(BuildConfig.FLAVOR, "noDrilldown");
private static final QName NOGRP$2 = new QName(BuildConfig.FLAVOR, "noGrp");
private static final QName NOMOVE$10 = new QName(BuildConfig.FLAVOR, "noMove");
private static final QName NORESIZE$12 = new QName(BuildConfig.FLAVOR, "noResize");
private static final QName NOSELECT$6 = new QName(BuildConfig.FLAVOR, "noSelect");

public CTGraphicalObjectFrameLockingImpl(SchemaType schemaType) {
super(schemaType);
}

public CTOfficeArtExtensionList addNewExtLst() {
CTOfficeArtExtensionList add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(EXTLST$0);
}
return add_element_user;
}

public CTOfficeArtExtensionList getExtLst() {
synchronized (monitor()) {
check_orphaned();
CTOfficeArtExtensionList find_element_user = get_store().find_element_user(EXTLST$0, 0);
if (find_element_user == null) {
return null;
}
return find_element_user;
}
}

public boolean getNoChangeAspect() {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOCHANGEASPECT$8;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_default_attribute_value(qName);
}
if (find_attribute_user == null) {
return false;
}
boolean booleanValue = find_attribute_user.getBooleanValue();
return booleanValue;
}
}

public boolean getNoDrilldown() {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NODRILLDOWN$4;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_default_attribute_value(qName);
}
if (find_attribute_user == null) {
return false;
}
boolean booleanValue = find_attribute_user.getBooleanValue();
return booleanValue;
}
}

public boolean getNoGrp() {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOGRP$2;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_default_attribute_value(qName);
}
if (find_attribute_user == null) {
return false;
}
boolean booleanValue = find_attribute_user.getBooleanValue();
return booleanValue;
}
}

public boolean getNoMove() {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOMOVE$10;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_default_attribute_value(qName);
}
if (find_attribute_user == null) {
return false;
}
boolean booleanValue = find_attribute_user.getBooleanValue();
return booleanValue;
}
}

public boolean getNoResize() {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NORESIZE$12;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_default_attribute_value(qName);
}
if (find_attribute_user == null) {
return false;
}
boolean booleanValue = find_attribute_user.getBooleanValue();
return booleanValue;
}
}

public boolean getNoSelect() {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOSELECT$6;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_default_attribute_value(qName);
}
if (find_attribute_user == null) {
return false;
}
boolean booleanValue = find_attribute_user.getBooleanValue();
return booleanValue;
}
}

public boolean isSetExtLst() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().count_elements(EXTLST$0) != 0;
}
return z;
}

public boolean isSetNoChangeAspect() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().find_attribute_user(NOCHANGEASPECT$8) != null;
}
return z;
}

public boolean isSetNoDrilldown() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().find_attribute_user(NODRILLDOWN$4) != null;
}
return z;
}

public boolean isSetNoGrp() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().find_attribute_user(NOGRP$2) != null;
}
return z;
}

public boolean isSetNoMove() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().find_attribute_user(NOMOVE$10) != null;
}
return z;
}

public boolean isSetNoResize() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().find_attribute_user(NORESIZE$12) != null;
}
return z;
}

public boolean isSetNoSelect() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().find_attribute_user(NOSELECT$6) != null;
}
return z;
}

public void setExtLst(CTOfficeArtExtensionList cTOfficeArtExtensionList) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = EXTLST$0;
CTOfficeArtExtensionList find_element_user = typeStore.find_element_user(qName, 0);
if (find_element_user == null) {
find_element_user = get_store().add_element_user(qName);
}
find_element_user.set(cTOfficeArtExtensionList);
}
}

public void setNoChangeAspect(boolean z) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOCHANGEASPECT$8;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setBooleanValue(z);
}
}

public void setNoDrilldown(boolean z) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NODRILLDOWN$4;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setBooleanValue(z);
}
}

public void setNoGrp(boolean z) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOGRP$2;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setBooleanValue(z);
}
}

public void setNoMove(boolean z) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOMOVE$10;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setBooleanValue(z);
}
}

public void setNoResize(boolean z) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NORESIZE$12;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setBooleanValue(z);
}
}

public void setNoSelect(boolean z) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOSELECT$6;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setBooleanValue(z);
}
}

public void unsetExtLst() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(EXTLST$0, 0);
}
}

public void unsetNoChangeAspect() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_attribute(NOCHANGEASPECT$8);
}
}

public void unsetNoDrilldown() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_attribute(NODRILLDOWN$4);
}
}

public void unsetNoGrp() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_attribute(NOGRP$2);
}
}

public void unsetNoMove() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_attribute(NOMOVE$10);
}
}

public void unsetNoResize() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_attribute(NORESIZE$12);
}
}

public void unsetNoSelect() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_attribute(NOSELECT$6);
}
}

public XmlBoolean xgetNoChangeAspect() {
XmlBoolean find_attribute_user;
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOCHANGEASPECT$8;
find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (XmlBoolean) get_default_attribute_value(qName);
}
}
return find_attribute_user;
}

public XmlBoolean xgetNoDrilldown() {
XmlBoolean find_attribute_user;
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NODRILLDOWN$4;
find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (XmlBoolean) get_default_attribute_value(qName);
}
}
return find_attribute_user;
}

public XmlBoolean xgetNoGrp() {
XmlBoolean find_attribute_user;
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOGRP$2;
find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (XmlBoolean) get_default_attribute_value(qName);
}
}
return find_attribute_user;
}

public XmlBoolean xgetNoMove() {
XmlBoolean find_attribute_user;
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOMOVE$10;
find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (XmlBoolean) get_default_attribute_value(qName);
}
}
return find_attribute_user;
}

public XmlBoolean xgetNoResize() {
XmlBoolean find_attribute_user;
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NORESIZE$12;
find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (XmlBoolean) get_default_attribute_value(qName);
}
}
return find_attribute_user;
}

public XmlBoolean xgetNoSelect() {
XmlBoolean find_attribute_user;
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOSELECT$6;
find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (XmlBoolean) get_default_attribute_value(qName);
}
}
return find_attribute_user;
}

public void xsetNoChangeAspect(XmlBoolean xmlBoolean) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOCHANGEASPECT$8;
XmlBoolean find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = get_store().add_attribute_user(qName);
}
find_attribute_user.set(xmlBoolean);
}
}

public void xsetNoDrilldown(XmlBoolean xmlBoolean) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NODRILLDOWN$4;
XmlBoolean find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = get_store().add_attribute_user(qName);
}
find_attribute_user.set(xmlBoolean);
}
}

public void xsetNoGrp(XmlBoolean xmlBoolean) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOGRP$2;
XmlBoolean find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = get_store().add_attribute_user(qName);
}
find_attribute_user.set(xmlBoolean);
}
}

public void xsetNoMove(XmlBoolean xmlBoolean) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOMOVE$10;
XmlBoolean find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = get_store().add_attribute_user(qName);
}
find_attribute_user.set(xmlBoolean);
}
}

public void xsetNoResize(XmlBoolean xmlBoolean) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NORESIZE$12;
XmlBoolean find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = get_store().add_attribute_user(qName);
}
find_attribute_user.set(xmlBoolean);
}
}

public void xsetNoSelect(XmlBoolean xmlBoolean) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = NOSELECT$6;
XmlBoolean find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = get_store().add_attribute_user(qName);
}
find_attribute_user.set(xmlBoolean);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\main\impl\CTPath2DCubicBezierToImpl.java

package org.openxmlformats.schemas.drawingml.x2006.main.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.namespace.QName;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.impl.values.XmlComplexContentImpl;
import org.openxmlformats.schemas.drawingml.x2006.main.CTAdjPoint2D;
import org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DCubicBezierTo;

public class CTPath2DCubicBezierToImpl extends XmlComplexContentImpl implements CTPath2DCubicBezierTo {
private static final QName PT$0 = new QName("http://schemas.openxmlformats.org/drawingml/2006/main", "pt");

public CTPath2DCubicBezierToImpl(SchemaType schemaType) {
super(schemaType);
}

public CTAdjPoint2D addNewPt() {
CTAdjPoint2D add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(PT$0);
}
return add_element_user;
}

public CTAdjPoint2D getPtArray(int i) {
CTAdjPoint2D find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(PT$0, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTAdjPoint2D[] getPtArray() {
CTAdjPoint2D[] cTAdjPoint2DArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(PT$0, arrayList);
cTAdjPoint2DArr = new CTAdjPoint2D[arrayList.size()];
arrayList.toArray(cTAdjPoint2DArr);
}
return cTAdjPoint2DArr;
}

public List<CTAdjPoint2D> getPtList() {
1PtList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1PtList(this);
}
return r1;
}

public CTAdjPoint2D insertNewPt(int i) {
CTAdjPoint2D insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(PT$0, i);
}
return insert_element_user;
}

public void removePt(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(PT$0, i);
}
}

public void setPtArray(int i, CTAdjPoint2D cTAdjPoint2D) {
synchronized (monitor()) {
check_orphaned();
CTAdjPoint2D find_element_user = get_store().find_element_user(PT$0, i);
if (find_element_user != null) {
find_element_user.set(cTAdjPoint2D);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setPtArray(CTAdjPoint2D[] cTAdjPoint2DArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTAdjPoint2DArr, PT$0);
}
}

public int sizeOfPtArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(PT$0);
}
return count_elements;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\main\impl\STLineEndWidthImpl.java

package org.openxmlformats.schemas.drawingml.x2006.main.impl;

import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.impl.values.JavaStringEnumerationHolderEx;
import org.openxmlformats.schemas.drawingml.x2006.main.STLineEndWidth;

public class STLineEndWidthImpl extends JavaStringEnumerationHolderEx implements STLineEndWidth {
public STLineEndWidthImpl(SchemaType schemaType) {
super(schemaType, false);
}

public STLineEndWidthImpl(SchemaType schemaType, boolean z) {
super(schemaType, z);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\main\impl\STTextStrikeTypeImpl.java

package org.openxmlformats.schemas.drawingml.x2006.main.impl;

import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.impl.values.JavaStringEnumerationHolderEx;
import org.openxmlformats.schemas.drawingml.x2006.main.STTextStrikeType;

public class STTextStrikeTypeImpl extends JavaStringEnumerationHolderEx implements STTextStrikeType {
public STTextStrikeTypeImpl(SchemaType schemaType) {
super(schemaType, false);
}

public STTextStrikeTypeImpl(SchemaType schemaType, boolean z) {
super(schemaType, z);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\drawingml\x2006\spreadsheetDrawing\CTGroupShapeNonVisual$Factory.java

package org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class CTGroupShapeNonVisual$Factory {
private CTGroupShapeNonVisual$Factory() {
}

public static CTGroupShapeNonVisual newInstance() {
return POIXMLTypeLoader.newInstance(CTGroupShapeNonVisual.type, (XmlOptions) null);
}

public static CTGroupShapeNonVisual newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(CTGroupShapeNonVisual.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTGroupShapeNonVisual.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTGroupShapeNonVisual.type, xmlOptions);
}

public static CTGroupShapeNonVisual parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTGroupShapeNonVisual.type, (XmlOptions) null);
}

public static CTGroupShapeNonVisual parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTGroupShapeNonVisual.type, xmlOptions);
}

public static CTGroupShapeNonVisual parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTGroupShapeNonVisual.type, (XmlOptions) null);
}

public static CTGroupShapeNonVisual parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTGroupShapeNonVisual.type, xmlOptions);
}

public static CTGroupShapeNonVisual parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTGroupShapeNonVisual.type, (XmlOptions) null);
}

public static CTGroupShapeNonVisual parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTGroupShapeNonVisual.type, xmlOptions);
}

public static CTGroupShapeNonVisual parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, CTGroupShapeNonVisual.type, (XmlOptions) null);
}

public static CTGroupShapeNonVisual parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, CTGroupShapeNonVisual.type, xmlOptions);
}

public static CTGroupShapeNonVisual parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTGroupShapeNonVisual.type, (XmlOptions) null);
}

public static CTGroupShapeNonVisual parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTGroupShapeNonVisual.type, xmlOptions);
}

public static CTGroupShapeNonVisual parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTGroupShapeNonVisual.type, (XmlOptions) null);
}

public static CTGroupShapeNonVisual parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTGroupShapeNonVisual.type, xmlOptions);
}

public static CTGroupShapeNonVisual parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTGroupShapeNonVisual.type, (XmlOptions) null);
}

public static CTGroupShapeNonVisual parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTGroupShapeNonVisual.type, xmlOptions);
}

public static CTGroupShapeNonVisual parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, CTGroupShapeNonVisual.type, (XmlOptions) null);
}

public static CTGroupShapeNonVisual parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, CTGroupShapeNonVisual.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\officeDocument\x2006\customProperties\impl\PropertiesDocumentImpl.java

package org.openxmlformats.schemas.officeDocument.x2006.customProperties.impl;

import javax.xml.namespace.QName;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.impl.values.TypeStore;
import org.apache.xmlbeans.impl.values.XmlComplexContentImpl;
import org.openxmlformats.schemas.officeDocument.x2006.customProperties.CTProperties;
import org.openxmlformats.schemas.officeDocument.x2006.customProperties.PropertiesDocument;

public class PropertiesDocumentImpl extends XmlComplexContentImpl implements PropertiesDocument {
private static final QName PROPERTIES$0 = new QName("http://schemas.openxmlformats.org/officeDocument/2006/custom-properties", "Properties");

public PropertiesDocumentImpl(SchemaType schemaType) {
super(schemaType);
}

public CTProperties addNewProperties() {
CTProperties add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(PROPERTIES$0);
}
return add_element_user;
}

public CTProperties getProperties() {
synchronized (monitor()) {
check_orphaned();
CTProperties find_element_user = get_store().find_element_user(PROPERTIES$0, 0);
if (find_element_user == null) {
return null;
}
return find_element_user;
}
}

public void setProperties(CTProperties cTProperties) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = PROPERTIES$0;
CTProperties find_element_user = typeStore.find_element_user(qName, 0);
if (find_element_user == null) {
find_element_user = get_store().add_element_user(qName);
}
find_element_user.set(cTProperties);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\presentationml\x2006\main\CTConnector.java

package org.openxmlformats.schemas.presentationml.x2006.main;

import android.support.v4.media.b;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlObject;
import org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties;
import org.openxmlformats.schemas.drawingml.x2006.main.CTShapeStyle;

public interface CTConnector extends XmlObject {
public static final SchemaType type = b.v(CTConnector.class, "schemaorg_apache_xmlbeans.system.sF1327CCA741569E70F9CA8C9AF9B44B2", "ctconnector3522type");

CTExtensionListModify addNewExtLst();

CTConnectorNonVisual addNewNvCxnSpPr();

CTShapeProperties addNewSpPr();

CTShapeStyle addNewStyle();

CTExtensionListModify getExtLst();

CTConnectorNonVisual getNvCxnSpPr();

CTShapeProperties getSpPr();

CTShapeStyle getStyle();

boolean isSetExtLst();

boolean isSetStyle();

void setExtLst(CTExtensionListModify cTExtensionListModify);

void setNvCxnSpPr(CTConnectorNonVisual cTConnectorNonVisual);

void setSpPr(CTShapeProperties cTShapeProperties);

void setStyle(CTShapeStyle cTShapeStyle);

void unsetExtLst();

void unsetStyle();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\presentationml\x2006\main\CTSlideMasterIdListEntry$Factory.java

package org.openxmlformats.schemas.presentationml.x2006.main;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class CTSlideMasterIdListEntry$Factory {
private CTSlideMasterIdListEntry$Factory() {
}

public static CTSlideMasterIdListEntry newInstance() {
return POIXMLTypeLoader.newInstance(CTSlideMasterIdListEntry.type, (XmlOptions) null);
}

public static CTSlideMasterIdListEntry newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(CTSlideMasterIdListEntry.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTSlideMasterIdListEntry.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTSlideMasterIdListEntry.type, xmlOptions);
}

public static CTSlideMasterIdListEntry parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTSlideMasterIdListEntry.type, (XmlOptions) null);
}

public static CTSlideMasterIdListEntry parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTSlideMasterIdListEntry.type, xmlOptions);
}

public static CTSlideMasterIdListEntry parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTSlideMasterIdListEntry.type, (XmlOptions) null);
}

public static CTSlideMasterIdListEntry parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTSlideMasterIdListEntry.type, xmlOptions);
}

public static CTSlideMasterIdListEntry parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTSlideMasterIdListEntry.type, (XmlOptions) null);
}

public static CTSlideMasterIdListEntry parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTSlideMasterIdListEntry.type, xmlOptions);
}

public static CTSlideMasterIdListEntry parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, CTSlideMasterIdListEntry.type, (XmlOptions) null);
}

public static CTSlideMasterIdListEntry parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, CTSlideMasterIdListEntry.type, xmlOptions);
}

public static CTSlideMasterIdListEntry parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTSlideMasterIdListEntry.type, (XmlOptions) null);
}

public static CTSlideMasterIdListEntry parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTSlideMasterIdListEntry.type, xmlOptions);
}

public static CTSlideMasterIdListEntry parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTSlideMasterIdListEntry.type, (XmlOptions) null);
}

public static CTSlideMasterIdListEntry parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTSlideMasterIdListEntry.type, xmlOptions);
}

public static CTSlideMasterIdListEntry parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTSlideMasterIdListEntry.type, (XmlOptions) null);
}

public static CTSlideMasterIdListEntry parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTSlideMasterIdListEntry.type, xmlOptions);
}

public static CTSlideMasterIdListEntry parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, CTSlideMasterIdListEntry.type, (XmlOptions) null);
}

public static CTSlideMasterIdListEntry parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, CTSlideMasterIdListEntry.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\presentationml\x2006\main\PresentationDocument$Factory.java

package org.openxmlformats.schemas.presentationml.x2006.main;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class PresentationDocument$Factory {
private PresentationDocument$Factory() {
}

public static PresentationDocument newInstance() {
return POIXMLTypeLoader.newInstance(PresentationDocument.type, (XmlOptions) null);
}

public static PresentationDocument newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(PresentationDocument.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, PresentationDocument.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, PresentationDocument.type, xmlOptions);
}

public static PresentationDocument parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, PresentationDocument.type, (XmlOptions) null);
}

public static PresentationDocument parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, PresentationDocument.type, xmlOptions);
}

public static PresentationDocument parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, PresentationDocument.type, (XmlOptions) null);
}

public static PresentationDocument parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, PresentationDocument.type, xmlOptions);
}

public static PresentationDocument parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, PresentationDocument.type, (XmlOptions) null);
}

public static PresentationDocument parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, PresentationDocument.type, xmlOptions);
}

public static PresentationDocument parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, PresentationDocument.type, (XmlOptions) null);
}

public static PresentationDocument parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, PresentationDocument.type, xmlOptions);
}

public static PresentationDocument parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, PresentationDocument.type, (XmlOptions) null);
}

public static PresentationDocument parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, PresentationDocument.type, xmlOptions);
}

public static PresentationDocument parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, PresentationDocument.type, (XmlOptions) null);
}

public static PresentationDocument parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, PresentationDocument.type, xmlOptions);
}

public static PresentationDocument parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, PresentationDocument.type, (XmlOptions) null);
}

public static PresentationDocument parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, PresentationDocument.type, xmlOptions);
}

public static PresentationDocument parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, PresentationDocument.type, (XmlOptions) null);
}

public static PresentationDocument parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, PresentationDocument.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\presentationml\x2006\main\STSlideId$Factory.java

package org.openxmlformats.schemas.presentationml.x2006.main;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class STSlideId$Factory {
private STSlideId$Factory() {
}

public static STSlideId newInstance() {
return POIXMLTypeLoader.newInstance(STSlideId.type, (XmlOptions) null);
}

public static STSlideId newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(STSlideId.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, STSlideId.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, STSlideId.type, xmlOptions);
}

public static STSlideId newValue(Object obj) {
return STSlideId.type.newValue(obj);
}

public static STSlideId parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, STSlideId.type, (XmlOptions) null);
}

public static STSlideId parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, STSlideId.type, xmlOptions);
}

public static STSlideId parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, STSlideId.type, (XmlOptions) null);
}

public static STSlideId parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, STSlideId.type, xmlOptions);
}

public static STSlideId parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, STSlideId.type, (XmlOptions) null);
}

public static STSlideId parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, STSlideId.type, xmlOptions);
}

public static STSlideId parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, STSlideId.type, (XmlOptions) null);
}

public static STSlideId parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, STSlideId.type, xmlOptions);
}

public static STSlideId parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, STSlideId.type, (XmlOptions) null);
}

public static STSlideId parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, STSlideId.type, xmlOptions);
}

public static STSlideId parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, STSlideId.type, (XmlOptions) null);
}

public static STSlideId parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, STSlideId.type, xmlOptions);
}

public static STSlideId parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, STSlideId.type, (XmlOptions) null);
}

public static STSlideId parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, STSlideId.type, xmlOptions);
}

public static STSlideId parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, STSlideId.type, (XmlOptions) null);
}

public static STSlideId parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, STSlideId.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\presentationml\x2006\main\impl\CTGroupShapeImpl$1SpList.java

package org.openxmlformats.schemas.presentationml.x2006.main.impl;

import java.util.AbstractList;
import org.openxmlformats.schemas.presentationml.x2006.main.CTShape;

public final class CTGroupShapeImpl$1SpList extends AbstractList<CTShape> {
public final /* synthetic */ CTGroupShapeImpl this$0;

public CTGroupShapeImpl$1SpList(CTGroupShapeImpl cTGroupShapeImpl) {
this.this$0 = cTGroupShapeImpl;
}

public void add(int i, CTShape cTShape) {
this.this$0.insertNewSp(i).set(cTShape);
}

public CTShape get(int i) {
return this.this$0.getSpArray(i);
}

public CTShape remove(int i) {
CTShape spArray = this.this$0.getSpArray(i);
this.this$0.removeSp(i);
return spArray;
}

public CTShape set(int i, CTShape cTShape) {
CTShape spArray = this.this$0.getSpArray(i);
this.this$0.setSpArray(i, cTShape);
return spArray;
}

public int size() {
return this.this$0.sizeOfSpArray();
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\spreadsheetml\x2006\main\CTCacheFields.java

package org.openxmlformats.schemas.spreadsheetml.x2006.main;

import android.support.v4.media.b;
import java.util.List;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlObject;
import org.apache.xmlbeans.XmlUnsignedInt;

public interface CTCacheFields extends XmlObject {
public static final SchemaType type = b.v(CTCacheFields.class, "schemaorg_apache_xmlbeans.system.sF1327CCA741569E70F9CA8C9AF9B44B2", "ctcachefieldsf5fatype");

CTCacheField addNewCacheField();

CTCacheField getCacheFieldArray(int i);

CTCacheField[] getCacheFieldArray();

List<CTCacheField> getCacheFieldList();

long getCount();

CTCacheField insertNewCacheField(int i);

boolean isSetCount();

void removeCacheField(int i);

void setCacheFieldArray(int i, CTCacheField cTCacheField);

void setCacheFieldArray(CTCacheField[] cTCacheFieldArr);

void setCount(long j2);

int sizeOfCacheFieldArray();

void unsetCount();

XmlUnsignedInt xgetCount();

void xsetCount(XmlUnsignedInt xmlUnsignedInt);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\spreadsheetml\x2006\main\CTCacheSource.java

package org.openxmlformats.schemas.spreadsheetml.x2006.main;

import android.support.v4.media.b;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlObject;
import org.apache.xmlbeans.XmlUnsignedInt;
import org.openxmlformats.schemas.spreadsheetml.x2006.main.STSourceType;

public interface CTCacheSource extends XmlObject {
public static final SchemaType type = b.v(CTCacheSource.class, "schemaorg_apache_xmlbeans.system.sF1327CCA741569E70F9CA8C9AF9B44B2", "ctcachesource00dctype");

CTConsolidation addNewConsolidation();

CTExtensionList addNewExtLst();

CTWorksheetSource addNewWorksheetSource();

long getConnectionId();

CTConsolidation getConsolidation();

CTExtensionList getExtLst();

STSourceType.Enum getType();

CTWorksheetSource getWorksheetSource();

boolean isSetConnectionId();

boolean isSetConsolidation();

boolean isSetExtLst();

boolean isSetWorksheetSource();

void setConnectionId(long j2);

void setConsolidation(CTConsolidation cTConsolidation);

void setExtLst(CTExtensionList cTExtensionList);

void setType(STSourceType.Enum enumR);

void setWorksheetSource(CTWorksheetSource cTWorksheetSource);

void unsetConnectionId();

void unsetConsolidation();

void unsetExtLst();

void unsetWorksheetSource();

XmlUnsignedInt xgetConnectionId();

STSourceType xgetType();

void xsetConnectionId(XmlUnsignedInt xmlUnsignedInt);

void xsetType(STSourceType sTSourceType);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\spreadsheetml\x2006\main\CTExternalDefinedNames.java

package org.openxmlformats.schemas.spreadsheetml.x2006.main;

import android.support.v4.media.b;
import java.util.List;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlObject;

public interface CTExternalDefinedNames extends XmlObject {
public static final SchemaType type = b.v(CTExternalDefinedNames.class, "schemaorg_apache_xmlbeans.system.sF1327CCA741569E70F9CA8C9AF9B44B2", "ctexternaldefinednamesccf3type");

CTExternalDefinedName addNewDefinedName();

CTExternalDefinedName getDefinedNameArray(int i);

CTExternalDefinedName[] getDefinedNameArray();

List<CTExternalDefinedName> getDefinedNameList();

CTExternalDefinedName insertNewDefinedName(int i);

void removeDefinedName(int i);

void setDefinedNameArray(int i, CTExternalDefinedName cTExternalDefinedName);

void setDefinedNameArray(CTExternalDefinedName[] cTExternalDefinedNameArr);

int sizeOfDefinedNameArray();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\spreadsheetml\x2006\main\CTExternalSheetName$Factory.java

package org.openxmlformats.schemas.spreadsheetml.x2006.main;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class CTExternalSheetName$Factory {
private CTExternalSheetName$Factory() {
}

public static CTExternalSheetName newInstance() {
return POIXMLTypeLoader.newInstance(CTExternalSheetName.type, (XmlOptions) null);
}

public static CTExternalSheetName newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(CTExternalSheetName.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTExternalSheetName.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTExternalSheetName.type, xmlOptions);
}

public static CTExternalSheetName parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTExternalSheetName.type, (XmlOptions) null);
}

public static CTExternalSheetName parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTExternalSheetName.type, xmlOptions);
}

public static CTExternalSheetName parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTExternalSheetName.type, (XmlOptions) null);
}

public static CTExternalSheetName parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTExternalSheetName.type, xmlOptions);
}

public static CTExternalSheetName parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTExternalSheetName.type, (XmlOptions) null);
}

public static CTExternalSheetName parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTExternalSheetName.type, xmlOptions);
}

public static CTExternalSheetName parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, CTExternalSheetName.type, (XmlOptions) null);
}

public static CTExternalSheetName parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, CTExternalSheetName.type, xmlOptions);
}

public static CTExternalSheetName parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTExternalSheetName.type, (XmlOptions) null);
}

public static CTExternalSheetName parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTExternalSheetName.type, xmlOptions);
}

public static CTExternalSheetName parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTExternalSheetName.type, (XmlOptions) null);
}

public static CTExternalSheetName parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTExternalSheetName.type, xmlOptions);
}

public static CTExternalSheetName parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTExternalSheetName.type, (XmlOptions) null);
}

public static CTExternalSheetName parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTExternalSheetName.type, xmlOptions);
}

public static CTExternalSheetName parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, CTExternalSheetName.type, (XmlOptions) null);
}

public static CTExternalSheetName parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, CTExternalSheetName.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\spreadsheetml\x2006\main\CTFont$Factory.java

package org.openxmlformats.schemas.spreadsheetml.x2006.main;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class CTFont$Factory {
private CTFont$Factory() {
}

public static CTFont newInstance() {
return POIXMLTypeLoader.newInstance(CTFont.type, (XmlOptions) null);
}

public static CTFont newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(CTFont.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTFont.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTFont.type, xmlOptions);
}

public static CTFont parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTFont.type, (XmlOptions) null);
}

public static CTFont parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTFont.type, xmlOptions);
}

public static CTFont parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTFont.type, (XmlOptions) null);
}

public static CTFont parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTFont.type, xmlOptions);
}

public static CTFont parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTFont.type, (XmlOptions) null);
}

public static CTFont parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTFont.type, xmlOptions);
}

public static CTFont parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, CTFont.type, (XmlOptions) null);
}

public static CTFont parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, CTFont.type, xmlOptions);
}

public static CTFont parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTFont.type, (XmlOptions) null);
}

public static CTFont parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTFont.type, xmlOptions);
}

public static CTFont parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTFont.type, (XmlOptions) null);
}

public static CTFont parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTFont.type, xmlOptions);
}

public static CTFont parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTFont.type, (XmlOptions) null);
}

public static CTFont parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTFont.type, xmlOptions);
}

public static CTFont parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, CTFont.type, (XmlOptions) null);
}

public static CTFont parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, CTFont.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\spreadsheetml\x2006\main\CTRElt.java

package org.openxmlformats.schemas.spreadsheetml.x2006.main;

import android.support.v4.media.b;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlObject;

public interface CTRElt extends XmlObject {
public static final SchemaType type = b.v(CTRElt.class, "schemaorg_apache_xmlbeans.system.sF1327CCA741569E70F9CA8C9AF9B44B2", "ctrelt6464type");

CTRPrElt addNewRPr();

CTRPrElt getRPr();

String getT();

boolean isSetRPr();

void setRPr(CTRPrElt cTRPrElt);

void setT(String str);

void unsetRPr();

STXstring xgetT();

void xsetT(STXstring sTXstring);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\spreadsheetml\x2006\main\CTTableStyleInfo$Factory.java

package org.openxmlformats.schemas.spreadsheetml.x2006.main;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class CTTableStyleInfo$Factory {
private CTTableStyleInfo$Factory() {
}

public static CTTableStyleInfo newInstance() {
return POIXMLTypeLoader.newInstance(CTTableStyleInfo.type, (XmlOptions) null);
}

public static CTTableStyleInfo newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(CTTableStyleInfo.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTTableStyleInfo.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTTableStyleInfo.type, xmlOptions);
}

public static CTTableStyleInfo parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTTableStyleInfo.type, (XmlOptions) null);
}

public static CTTableStyleInfo parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTTableStyleInfo.type, xmlOptions);
}

public static CTTableStyleInfo parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTTableStyleInfo.type, (XmlOptions) null);
}

public static CTTableStyleInfo parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTTableStyleInfo.type, xmlOptions);
}

public static CTTableStyleInfo parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTTableStyleInfo.type, (XmlOptions) null);
}

public static CTTableStyleInfo parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTTableStyleInfo.type, xmlOptions);
}

public static CTTableStyleInfo parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, CTTableStyleInfo.type, (XmlOptions) null);
}

public static CTTableStyleInfo parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, CTTableStyleInfo.type, xmlOptions);
}

public static CTTableStyleInfo parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTTableStyleInfo.type, (XmlOptions) null);
}

public static CTTableStyleInfo parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTTableStyleInfo.type, xmlOptions);
}

public static CTTableStyleInfo parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTTableStyleInfo.type, (XmlOptions) null);
}

public static CTTableStyleInfo parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTTableStyleInfo.type, xmlOptions);
}

public static CTTableStyleInfo parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTTableStyleInfo.type, (XmlOptions) null);
}

public static CTTableStyleInfo parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTTableStyleInfo.type, xmlOptions);
}

public static CTTableStyleInfo parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, CTTableStyleInfo.type, (XmlOptions) null);
}

public static CTTableStyleInfo parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, CTTableStyleInfo.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\spreadsheetml\x2006\main\STHorizontalAlignment$Factory.java

package org.openxmlformats.schemas.spreadsheetml.x2006.main;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class STHorizontalAlignment$Factory {
private STHorizontalAlignment$Factory() {
}

public static STHorizontalAlignment newInstance() {
return POIXMLTypeLoader.newInstance(STHorizontalAlignment.type, (XmlOptions) null);
}

public static STHorizontalAlignment newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(STHorizontalAlignment.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, STHorizontalAlignment.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, STHorizontalAlignment.type, xmlOptions);
}

public static STHorizontalAlignment newValue(Object obj) {
return STHorizontalAlignment.type.newValue(obj);
}

public static STHorizontalAlignment parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, STHorizontalAlignment.type, (XmlOptions) null);
}

public static STHorizontalAlignment parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, STHorizontalAlignment.type, xmlOptions);
}

public static STHorizontalAlignment parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, STHorizontalAlignment.type, (XmlOptions) null);
}

public static STHorizontalAlignment parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, STHorizontalAlignment.type, xmlOptions);
}

public static STHorizontalAlignment parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, STHorizontalAlignment.type, (XmlOptions) null);
}

public static STHorizontalAlignment parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, STHorizontalAlignment.type, xmlOptions);
}

public static STHorizontalAlignment parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, STHorizontalAlignment.type, (XmlOptions) null);
}

public static STHorizontalAlignment parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, STHorizontalAlignment.type, xmlOptions);
}

public static STHorizontalAlignment parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, STHorizontalAlignment.type, (XmlOptions) null);
}

public static STHorizontalAlignment parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, STHorizontalAlignment.type, xmlOptions);
}

public static STHorizontalAlignment parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, STHorizontalAlignment.type, (XmlOptions) null);
}

public static STHorizontalAlignment parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, STHorizontalAlignment.type, xmlOptions);
}

public static STHorizontalAlignment parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, STHorizontalAlignment.type, (XmlOptions) null);
}

public static STHorizontalAlignment parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, STHorizontalAlignment.type, xmlOptions);
}

public static STHorizontalAlignment parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, STHorizontalAlignment.type, (XmlOptions) null);
}

public static STHorizontalAlignment parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, STHorizontalAlignment.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\spreadsheetml\x2006\main\impl\CTPivotCacheRecordsImpl.java

package org.openxmlformats.schemas.spreadsheetml.x2006.main.impl;

import com.google.firebase.heartbeatinfo.wXN.SXUXICl;
import java.util.ArrayList;
import java.util.List;
import javax.xml.namespace.QName;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.SimpleValue;
import org.apache.xmlbeans.XmlUnsignedInt;
import org.apache.xmlbeans.impl.values.TypeStore;
import org.apache.xmlbeans.impl.values.XmlComplexContentImpl;
import org.openxmlformats.schemas.spreadsheetml.x2006.main.CTExtensionList;
import org.openxmlformats.schemas.spreadsheetml.x2006.main.CTPivotCacheRecords;
import org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRecord;

public class CTPivotCacheRecordsImpl extends XmlComplexContentImpl implements CTPivotCacheRecords {
private static final QName COUNT$4 = new QName(SXUXICl.PEUhbaegJPANr, "count");
private static final QName EXTLST$2 = new QName("http://schemas.openxmlformats.org/spreadsheetml/2006/main", "extLst");
private static final QName R$0 = new QName("http://schemas.openxmlformats.org/spreadsheetml/2006/main", "r");

public CTPivotCacheRecordsImpl(SchemaType schemaType) {
super(schemaType);
}

public CTExtensionList addNewExtLst() {
CTExtensionList add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(EXTLST$2);
}
return add_element_user;
}

public CTRecord addNewR() {
CTRecord add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(R$0);
}
return add_element_user;
}

public long getCount() {
synchronized (monitor()) {
check_orphaned();
SimpleValue find_attribute_user = get_store().find_attribute_user(COUNT$4);
if (find_attribute_user == null) {
return 0;
}
long longValue = find_attribute_user.getLongValue();
return longValue;
}
}

public CTExtensionList getExtLst() {
synchronized (monitor()) {
check_orphaned();
CTExtensionList find_element_user = get_store().find_element_user(EXTLST$2, 0);
if (find_element_user == null) {
return null;
}
return find_element_user;
}
}

public CTRecord getRArray(int i) {
CTRecord find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(R$0, i);
if (find_element_user == null) {
throw new IndexOutOfBoundsException();
}
}
return find_element_user;
}

public CTRecord[] getRArray() {
CTRecord[] cTRecordArr;
synchronized (monitor()) {
check_orphaned();
ArrayList arrayList = new ArrayList();
get_store().find_all_element_users(R$0, arrayList);
cTRecordArr = new CTRecord[arrayList.size()];
arrayList.toArray(cTRecordArr);
}
return cTRecordArr;
}

public List<CTRecord> getRList() {
1RList r1;
synchronized (monitor()) {
check_orphaned();
r1 = new 1RList(this);
}
return r1;
}

public CTRecord insertNewR(int i) {
CTRecord insert_element_user;
synchronized (monitor()) {
check_orphaned();
insert_element_user = get_store().insert_element_user(R$0, i);
}
return insert_element_user;
}

public boolean isSetCount() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().find_attribute_user(COUNT$4) != null;
}
return z;
}

public boolean isSetExtLst() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().count_elements(EXTLST$2) != 0;
}
return z;
}

public void removeR(int i) {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(R$0, i);
}
}

public void setCount(long j2) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = COUNT$4;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setLongValue(j2);
}
}

public void setExtLst(CTExtensionList cTExtensionList) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = EXTLST$2;
CTExtensionList find_element_user = typeStore.find_element_user(qName, 0);
if (find_element_user == null) {
find_element_user = (CTExtensionList) get_store().add_element_user(qName);
}
find_element_user.set(cTExtensionList);
}
}

public void setRArray(int i, CTRecord cTRecord) {
synchronized (monitor()) {
check_orphaned();
CTRecord find_element_user = get_store().find_element_user(R$0, i);
if (find_element_user != null) {
find_element_user.set(cTRecord);
} else {
throw new IndexOutOfBoundsException();
}
}
}

public void setRArray(CTRecord[] cTRecordArr) {
synchronized (monitor()) {
check_orphaned();
arraySetterHelper(cTRecordArr, R$0);
}
}

public int sizeOfRArray() {
int count_elements;
synchronized (monitor()) {
check_orphaned();
count_elements = get_store().count_elements(R$0);
}
return count_elements;
}

public void unsetCount() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_attribute(COUNT$4);
}
}

public void unsetExtLst() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(EXTLST$2, 0);
}
}

public XmlUnsignedInt xgetCount() {
XmlUnsignedInt find_attribute_user;
synchronized (monitor()) {
check_orphaned();
find_attribute_user = get_store().find_attribute_user(COUNT$4);
}
return find_attribute_user;
}

public void xsetCount(XmlUnsignedInt xmlUnsignedInt) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = COUNT$4;
XmlUnsignedInt find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = get_store().add_attribute_user(qName);
}
find_attribute_user.set(xmlUnsignedInt);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\spreadsheetml\x2006\main\impl\CTXmlCellPrImpl.java

package org.openxmlformats.schemas.spreadsheetml.x2006.main.impl;

import com.google.firebase.installations.interop.BuildConfig;
import javax.xml.namespace.QName;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.SimpleValue;
import org.apache.xmlbeans.XmlUnsignedInt;
import org.apache.xmlbeans.impl.values.TypeStore;
import org.apache.xmlbeans.impl.values.XmlComplexContentImpl;
import org.openxmlformats.schemas.spreadsheetml.x2006.main.CTExtensionList;
import org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXmlCellPr;
import org.openxmlformats.schemas.spreadsheetml.x2006.main.CTXmlPr;
import org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring;

public class CTXmlCellPrImpl extends XmlComplexContentImpl implements CTXmlCellPr {
private static final QName EXTLST$2 = new QName("http://schemas.openxmlformats.org/spreadsheetml/2006/main", "extLst");
private static final QName ID$4 = new QName(BuildConfig.FLAVOR, "id");
private static final QName UNIQUENAME$6 = new QName(BuildConfig.FLAVOR, "uniqueName");
private static final QName XMLPR$0 = new QName("http://schemas.openxmlformats.org/spreadsheetml/2006/main", "xmlPr");

public CTXmlCellPrImpl(SchemaType schemaType) {
super(schemaType);
}

public CTExtensionList addNewExtLst() {
CTExtensionList add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(EXTLST$2);
}
return add_element_user;
}

public CTXmlPr addNewXmlPr() {
CTXmlPr add_element_user;
synchronized (monitor()) {
check_orphaned();
add_element_user = get_store().add_element_user(XMLPR$0);
}
return add_element_user;
}

public CTExtensionList getExtLst() {
synchronized (monitor()) {
check_orphaned();
CTExtensionList find_element_user = get_store().find_element_user(EXTLST$2, 0);
if (find_element_user == null) {
return null;
}
return find_element_user;
}
}

public long getId() {
synchronized (monitor()) {
check_orphaned();
SimpleValue find_attribute_user = get_store().find_attribute_user(ID$4);
if (find_attribute_user == null) {
return 0;
}
long longValue = find_attribute_user.getLongValue();
return longValue;
}
}

public String getUniqueName() {
synchronized (monitor()) {
check_orphaned();
SimpleValue find_attribute_user = get_store().find_attribute_user(UNIQUENAME$6);
if (find_attribute_user == null) {
return null;
}
String stringValue = find_attribute_user.getStringValue();
return stringValue;
}
}

public CTXmlPr getXmlPr() {
synchronized (monitor()) {
check_orphaned();
CTXmlPr find_element_user = get_store().find_element_user(XMLPR$0, 0);
if (find_element_user == null) {
return null;
}
return find_element_user;
}
}

public boolean isSetExtLst() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().count_elements(EXTLST$2) != 0;
}
return z;
}

public boolean isSetUniqueName() {
boolean z;
synchronized (monitor()) {
check_orphaned();
z = get_store().find_attribute_user(UNIQUENAME$6) != null;
}
return z;
}

public void setExtLst(CTExtensionList cTExtensionList) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = EXTLST$2;
CTExtensionList find_element_user = typeStore.find_element_user(qName, 0);
if (find_element_user == null) {
find_element_user = (CTExtensionList) get_store().add_element_user(qName);
}
find_element_user.set(cTExtensionList);
}
}

public void setId(long j2) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = ID$4;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setLongValue(j2);
}
}

public void setUniqueName(String str) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = UNIQUENAME$6;
SimpleValue find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = (SimpleValue) get_store().add_attribute_user(qName);
}
find_attribute_user.setStringValue(str);
}
}

public void setXmlPr(CTXmlPr cTXmlPr) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = XMLPR$0;
CTXmlPr find_element_user = typeStore.find_element_user(qName, 0);
if (find_element_user == null) {
find_element_user = get_store().add_element_user(qName);
}
find_element_user.set(cTXmlPr);
}
}

public void unsetExtLst() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_element(EXTLST$2, 0);
}
}

public void unsetUniqueName() {
synchronized (monitor()) {
check_orphaned();
get_store().remove_attribute(UNIQUENAME$6);
}
}

public XmlUnsignedInt xgetId() {
XmlUnsignedInt find_attribute_user;
synchronized (monitor()) {
check_orphaned();
find_attribute_user = get_store().find_attribute_user(ID$4);
}
return find_attribute_user;
}

public STXstring xgetUniqueName() {
STXstring find_attribute_user;
synchronized (monitor()) {
check_orphaned();
find_attribute_user = get_store().find_attribute_user(UNIQUENAME$6);
}
return find_attribute_user;
}

public void xsetId(XmlUnsignedInt xmlUnsignedInt) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = ID$4;
XmlUnsignedInt find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = get_store().add_attribute_user(qName);
}
find_attribute_user.set(xmlUnsignedInt);
}
}

public void xsetUniqueName(STXstring sTXstring) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = UNIQUENAME$6;
STXstring find_attribute_user = typeStore.find_attribute_user(qName);
if (find_attribute_user == null) {
find_attribute_user = get_store().add_attribute_user(qName);
}
find_attribute_user.set(sTXstring);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\spreadsheetml\x2006\main\impl\STAxisImpl.java

package org.openxmlformats.schemas.spreadsheetml.x2006.main.impl;

import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.impl.values.JavaStringEnumerationHolderEx;
import org.openxmlformats.schemas.spreadsheetml.x2006.main.STAxis;

public class STAxisImpl extends JavaStringEnumerationHolderEx implements STAxis {
public STAxisImpl(SchemaType schemaType) {
super(schemaType, false);
}

public STAxisImpl(SchemaType schemaType, boolean z) {
super(schemaType, z);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\wordprocessingml\x2006\main\CTDocument1.java

package org.openxmlformats.schemas.wordprocessingml.x2006.main;

import android.support.v4.media.b;
import org.apache.xmlbeans.SchemaType;

public interface CTDocument1 extends CTDocumentBase {
public static final SchemaType type = b.v(CTDocument1.class, "schemaorg_apache_xmlbeans.system.sF1327CCA741569E70F9CA8C9AF9B44B2", "ctdocument64adtype");

CTBody addNewBody();

CTBody getBody();

boolean isSetBody();

void setBody(CTBody cTBody);

void unsetBody();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\wordprocessingml\x2006\main\CTLatentStyles.java

package org.openxmlformats.schemas.wordprocessingml.x2006.main;

import android.support.v4.media.b;
import java.math.BigInteger;
import java.util.List;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlObject;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff;

public interface CTLatentStyles extends XmlObject {
public static final SchemaType type = b.v(CTLatentStyles.class, "schemaorg_apache_xmlbeans.system.sF1327CCA741569E70F9CA8C9AF9B44B2", "ctlatentstyles2e3atype");

CTLsdException addNewLsdException();

BigInteger getCount();

STOnOff.Enum getDefLockedState();

STOnOff.Enum getDefQFormat();

STOnOff.Enum getDefSemiHidden();

BigInteger getDefUIPriority();

STOnOff.Enum getDefUnhideWhenUsed();

CTLsdException getLsdExceptionArray(int i);

CTLsdException[] getLsdExceptionArray();

List<CTLsdException> getLsdExceptionList();

CTLsdException insertNewLsdException(int i);

boolean isSetCount();

boolean isSetDefLockedState();

boolean isSetDefQFormat();

boolean isSetDefSemiHidden();

boolean isSetDefUIPriority();

boolean isSetDefUnhideWhenUsed();

void removeLsdException(int i);

void setCount(BigInteger bigInteger);

void setDefLockedState(STOnOff.Enum enumR);

void setDefQFormat(STOnOff.Enum enumR);

void setDefSemiHidden(STOnOff.Enum enumR);

void setDefUIPriority(BigInteger bigInteger);

void setDefUnhideWhenUsed(STOnOff.Enum enumR);

void setLsdExceptionArray(int i, CTLsdException cTLsdException);

void setLsdExceptionArray(CTLsdException[] cTLsdExceptionArr);

int sizeOfLsdExceptionArray();

void unsetCount();

void unsetDefLockedState();

void unsetDefQFormat();

void unsetDefSemiHidden();

void unsetDefUIPriority();

void unsetDefUnhideWhenUsed();

STDecimalNumber xgetCount();

STOnOff xgetDefLockedState();

STOnOff xgetDefQFormat();

STOnOff xgetDefSemiHidden();

STDecimalNumber xgetDefUIPriority();

STOnOff xgetDefUnhideWhenUsed();

void xsetCount(STDecimalNumber sTDecimalNumber);

void xsetDefLockedState(STOnOff sTOnOff);

void xsetDefQFormat(STOnOff sTOnOff);

void xsetDefSemiHidden(STOnOff sTOnOff);

void xsetDefUIPriority(STDecimalNumber sTDecimalNumber);

void xsetDefUnhideWhenUsed(STOnOff sTOnOff);
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\wordprocessingml\x2006\main\CTTbl.java

package org.openxmlformats.schemas.wordprocessingml.x2006.main;

import android.support.v4.media.b;
import java.util.List;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlObject;
import org.openxmlformats.schemas.officeDocument.x2006.math.CTOMath;
import org.openxmlformats.schemas.officeDocument.x2006.math.CTOMathPara;

public interface CTTbl extends XmlObject {
public static final SchemaType type = b.v(CTTbl.class, "schemaorg_apache_xmlbeans.system.sF1327CCA741569E70F9CA8C9AF9B44B2", "cttblc014type");

CTMarkupRange addNewBookmarkEnd();

CTBookmark addNewBookmarkStart();

CTMarkupRange addNewCommentRangeEnd();

CTMarkupRange addNewCommentRangeStart();

CTCustomXmlRow addNewCustomXml();

CTMarkup addNewCustomXmlDelRangeEnd();

CTTrackChange addNewCustomXmlDelRangeStart();

CTMarkup addNewCustomXmlInsRangeEnd();

CTTrackChange addNewCustomXmlInsRangeStart();

CTMarkup addNewCustomXmlMoveFromRangeEnd();

CTTrackChange addNewCustomXmlMoveFromRangeStart();

CTMarkup addNewCustomXmlMoveToRangeEnd();

CTTrackChange addNewCustomXmlMoveToRangeStart();

CTRunTrackChange addNewDel();

CTRunTrackChange addNewIns();

CTRunTrackChange addNewMoveFrom();

CTMarkupRange addNewMoveFromRangeEnd();

CTMoveBookmark addNewMoveFromRangeStart();

CTRunTrackChange addNewMoveTo();

CTMarkupRange addNewMoveToRangeEnd();

CTMoveBookmark addNewMoveToRangeStart();

CTOMath addNewOMath();

CTOMathPara addNewOMathPara();

CTPerm addNewPermEnd();

CTPermStart addNewPermStart();

CTProofErr addNewProofErr();

CTSdtRow addNewSdt();

CTTblGrid addNewTblGrid();

CTTblPr addNewTblPr();

CTRow addNewTr();

CTMarkupRange getBookmarkEndArray(int i);

CTMarkupRange[] getBookmarkEndArray();

List<CTMarkupRange> getBookmarkEndList();

CTBookmark getBookmarkStartArray(int i);

CTBookmark[] getBookmarkStartArray();

List<CTBookmark> getBookmarkStartList();

CTMarkupRange getCommentRangeEndArray(int i);

CTMarkupRange[] getCommentRangeEndArray();

List<CTMarkupRange> getCommentRangeEndList();

CTMarkupRange getCommentRangeStartArray(int i);

CTMarkupRange[] getCommentRangeStartArray();

List<CTMarkupRange> getCommentRangeStartList();

CTCustomXmlRow getCustomXmlArray(int i);

CTCustomXmlRow[] getCustomXmlArray();

CTMarkup getCustomXmlDelRangeEndArray(int i);

CTMarkup[] getCustomXmlDelRangeEndArray();

List<CTMarkup> getCustomXmlDelRangeEndList();

CTTrackChange getCustomXmlDelRangeStartArray(int i);

CTTrackChange[] getCustomXmlDelRangeStartArray();

List<CTTrackChange> getCustomXmlDelRangeStartList();

CTMarkup getCustomXmlInsRangeEndArray(int i);

CTMarkup[] getCustomXmlInsRangeEndArray();

List<CTMarkup> getCustomXmlInsRangeEndList();

CTTrackChange getCustomXmlInsRangeStartArray(int i);

CTTrackChange[] getCustomXmlInsRangeStartArray();

List<CTTrackChange> getCustomXmlInsRangeStartList();

List<CTCustomXmlRow> getCustomXmlList();

CTMarkup getCustomXmlMoveFromRangeEndArray(int i);

CTMarkup[] getCustomXmlMoveFromRangeEndArray();

List<CTMarkup> getCustomXmlMoveFromRangeEndList();

CTTrackChange getCustomXmlMoveFromRangeStartArray(int i);

CTTrackChange[] getCustomXmlMoveFromRangeStartArray();

List<CTTrackChange> getCustomXmlMoveFromRangeStartList();

CTMarkup getCustomXmlMoveToRangeEndArray(int i);

CTMarkup[] getCustomXmlMoveToRangeEndArray();

List<CTMarkup> getCustomXmlMoveToRangeEndList();

CTTrackChange getCustomXmlMoveToRangeStartArray(int i);

CTTrackChange[] getCustomXmlMoveToRangeStartArray();

List<CTTrackChange> getCustomXmlMoveToRangeStartList();

CTRunTrackChange getDelArray(int i);

CTRunTrackChange[] getDelArray();

List<CTRunTrackChange> getDelList();

CTRunTrackChange getInsArray(int i);

CTRunTrackChange[] getInsArray();

List<CTRunTrackChange> getInsList();

CTRunTrackChange getMoveFromArray(int i);

CTRunTrackChange[] getMoveFromArray();

List<CTRunTrackChange> getMoveFromList();

CTMarkupRange getMoveFromRangeEndArray(int i);

CTMarkupRange[] getMoveFromRangeEndArray();

List<CTMarkupRange> getMoveFromRangeEndList();

CTMoveBookmark getMoveFromRangeStartArray(int i);

CTMoveBookmark[] getMoveFromRangeStartArray();

List<CTMoveBookmark> getMoveFromRangeStartList();

CTRunTrackChange getMoveToArray(int i);

CTRunTrackChange[] getMoveToArray();

List<CTRunTrackChange> getMoveToList();

CTMarkupRange getMoveToRangeEndArray(int i);

CTMarkupRange[] getMoveToRangeEndArray();

List<CTMarkupRange> getMoveToRangeEndList();

CTMoveBookmark getMoveToRangeStartArray(int i);

CTMoveBookmark[] getMoveToRangeStartArray();

List<CTMoveBookmark> getMoveToRangeStartList();

CTOMath getOMathArray(int i);

CTOMath[] getOMathArray();

List<CTOMath> getOMathList();

CTOMathPara getOMathParaArray(int i);

CTOMathPara[] getOMathParaArray();

List<CTOMathPara> getOMathParaList();

CTPerm getPermEndArray(int i);

CTPerm[] getPermEndArray();

List<CTPerm> getPermEndList();

CTPermStart getPermStartArray(int i);

CTPermStart[] getPermStartArray();

List<CTPermStart> getPermStartList();

CTProofErr getProofErrArray(int i);

CTProofErr[] getProofErrArray();

List<CTProofErr> getProofErrList();

CTSdtRow getSdtArray(int i);

CTSdtRow[] getSdtArray();

List<CTSdtRow> getSdtList();

CTTblGrid getTblGrid();

CTTblPr getTblPr();

CTRow getTrArray(int i);

CTRow[] getTrArray();

List<CTRow> getTrList();

CTMarkupRange insertNewBookmarkEnd(int i);

CTBookmark insertNewBookmarkStart(int i);

CTMarkupRange insertNewCommentRangeEnd(int i);

CTMarkupRange insertNewCommentRangeStart(int i);

CTCustomXmlRow insertNewCustomXml(int i);

CTMarkup insertNewCustomXmlDelRangeEnd(int i);

CTTrackChange insertNewCustomXmlDelRangeStart(int i);

CTMarkup insertNewCustomXmlInsRangeEnd(int i);

CTTrackChange insertNewCustomXmlInsRangeStart(int i);

CTMarkup insertNewCustomXmlMoveFromRangeEnd(int i);

CTTrackChange insertNewCustomXmlMoveFromRangeStart(int i);

CTMarkup insertNewCustomXmlMoveToRangeEnd(int i);

CTTrackChange insertNewCustomXmlMoveToRangeStart(int i);

CTRunTrackChange insertNewDel(int i);

CTRunTrackChange insertNewIns(int i);

CTRunTrackChange insertNewMoveFrom(int i);

CTMarkupRange insertNewMoveFromRangeEnd(int i);

CTMoveBookmark insertNewMoveFromRangeStart(int i);

CTRunTrackChange insertNewMoveTo(int i);

CTMarkupRange insertNewMoveToRangeEnd(int i);

CTMoveBookmark insertNewMoveToRangeStart(int i);

CTOMath insertNewOMath(int i);

CTOMathPara insertNewOMathPara(int i);

CTPerm insertNewPermEnd(int i);

CTPermStart insertNewPermStart(int i);

CTProofErr insertNewProofErr(int i);

CTSdtRow insertNewSdt(int i);

CTRow insertNewTr(int i);

void removeBookmarkEnd(int i);

void removeBookmarkStart(int i);

void removeCommentRangeEnd(int i);

void removeCommentRangeStart(int i);

void removeCustomXml(int i);

void removeCustomXmlDelRangeEnd(int i);

void removeCustomXmlDelRangeStart(int i);

void removeCustomXmlInsRangeEnd(int i);

void removeCustomXmlInsRangeStart(int i);

void removeCustomXmlMoveFromRangeEnd(int i);

void removeCustomXmlMoveFromRangeStart(int i);

void removeCustomXmlMoveToRangeEnd(int i);

void removeCustomXmlMoveToRangeStart(int i);

void removeDel(int i);

void removeIns(int i);

void removeMoveFrom(int i);

void removeMoveFromRangeEnd(int i);

void removeMoveFromRangeStart(int i);

void removeMoveTo(int i);

void removeMoveToRangeEnd(int i);

void removeMoveToRangeStart(int i);

void removeOMath(int i);

void removeOMathPara(int i);

void removePermEnd(int i);

void removePermStart(int i);

void removeProofErr(int i);

void removeSdt(int i);

void removeTr(int i);

void setBookmarkEndArray(int i, CTMarkupRange cTMarkupRange);

void setBookmarkEndArray(CTMarkupRange[] cTMarkupRangeArr);

void setBookmarkStartArray(int i, CTBookmark cTBookmark);

void setBookmarkStartArray(CTBookmark[] cTBookmarkArr);

void setCommentRangeEndArray(int i, CTMarkupRange cTMarkupRange);

void setCommentRangeEndArray(CTMarkupRange[] cTMarkupRangeArr);

void setCommentRangeStartArray(int i, CTMarkupRange cTMarkupRange);

void setCommentRangeStartArray(CTMarkupRange[] cTMarkupRangeArr);

void setCustomXmlArray(int i, CTCustomXmlRow cTCustomXmlRow);

void setCustomXmlArray(CTCustomXmlRow[] cTCustomXmlRowArr);

void setCustomXmlDelRangeEndArray(int i, CTMarkup cTMarkup);

void setCustomXmlDelRangeEndArray(CTMarkup[] cTMarkupArr);

void setCustomXmlDelRangeStartArray(int i, CTTrackChange cTTrackChange);

void setCustomXmlDelRangeStartArray(CTTrackChange[] cTTrackChangeArr);

void setCustomXmlInsRangeEndArray(int i, CTMarkup cTMarkup);

void setCustomXmlInsRangeEndArray(CTMarkup[] cTMarkupArr);

void setCustomXmlInsRangeStartArray(int i, CTTrackChange cTTrackChange);

void setCustomXmlInsRangeStartArray(CTTrackChange[] cTTrackChangeArr);

void setCustomXmlMoveFromRangeEndArray(int i, CTMarkup cTMarkup);

void setCustomXmlMoveFromRangeEndArray(CTMarkup[] cTMarkupArr);

void setCustomXmlMoveFromRangeStartArray(int i, CTTrackChange cTTrackChange);

void setCustomXmlMoveFromRangeStartArray(CTTrackChange[] cTTrackChangeArr);

void setCustomXmlMoveToRangeEndArray(int i, CTMarkup cTMarkup);

void setCustomXmlMoveToRangeEndArray(CTMarkup[] cTMarkupArr);

void setCustomXmlMoveToRangeStartArray(int i, CTTrackChange cTTrackChange);

void setCustomXmlMoveToRangeStartArray(CTTrackChange[] cTTrackChangeArr);

void setDelArray(int i, CTRunTrackChange cTRunTrackChange);

void setDelArray(CTRunTrackChange[] cTRunTrackChangeArr);

void setInsArray(int i, CTRunTrackChange cTRunTrackChange);

void setInsArray(CTRunTrackChange[] cTRunTrackChangeArr);

void setMoveFromArray(int i, CTRunTrackChange cTRunTrackChange);

void setMoveFromArray(CTRunTrackChange[] cTRunTrackChangeArr);

void setMoveFromRangeEndArray(int i, CTMarkupRange cTMarkupRange);

void setMoveFromRangeEndArray(CTMarkupRange[] cTMarkupRangeArr);

void setMoveFromRangeStartArray(int i, CTMoveBookmark cTMoveBookmark);

void setMoveFromRangeStartArray(CTMoveBookmark[] cTMoveBookmarkArr);

void setMoveToArray(int i, CTRunTrackChange cTRunTrackChange);

void setMoveToArray(CTRunTrackChange[] cTRunTrackChangeArr);

void setMoveToRangeEndArray(int i, CTMarkupRange cTMarkupRange);

void setMoveToRangeEndArray(CTMarkupRange[] cTMarkupRangeArr);

void setMoveToRangeStartArray(int i, CTMoveBookmark cTMoveBookmark);

void setMoveToRangeStartArray(CTMoveBookmark[] cTMoveBookmarkArr);

void setOMathArray(int i, CTOMath cTOMath);

void setOMathArray(CTOMath[] cTOMathArr);

void setOMathParaArray(int i, CTOMathPara cTOMathPara);

void setOMathParaArray(CTOMathPara[] cTOMathParaArr);

void setPermEndArray(int i, CTPerm cTPerm);

void setPermEndArray(CTPerm[] cTPermArr);

void setPermStartArray(int i, CTPermStart cTPermStart);

void setPermStartArray(CTPermStart[] cTPermStartArr);

void setProofErrArray(int i, CTProofErr cTProofErr);

void setProofErrArray(CTProofErr[] cTProofErrArr);

void setSdtArray(int i, CTSdtRow cTSdtRow);

void setSdtArray(CTSdtRow[] cTSdtRowArr);

void setTblGrid(CTTblGrid cTTblGrid);

void setTblPr(CTTblPr cTTblPr);

void setTrArray(int i, CTRow cTRow);

void setTrArray(CTRow[] cTRowArr);

int sizeOfBookmarkEndArray();

int sizeOfBookmarkStartArray();

int sizeOfCommentRangeEndArray();

int sizeOfCommentRangeStartArray();

int sizeOfCustomXmlArray();

int sizeOfCustomXmlDelRangeEndArray();

int sizeOfCustomXmlDelRangeStartArray();

int sizeOfCustomXmlInsRangeEndArray();

int sizeOfCustomXmlInsRangeStartArray();

int sizeOfCustomXmlMoveFromRangeEndArray();

int sizeOfCustomXmlMoveFromRangeStartArray();

int sizeOfCustomXmlMoveToRangeEndArray();

int sizeOfCustomXmlMoveToRangeStartArray();

int sizeOfDelArray();

int sizeOfInsArray();

int sizeOfMoveFromArray();

int sizeOfMoveFromRangeEndArray();

int sizeOfMoveFromRangeStartArray();

int sizeOfMoveToArray();

int sizeOfMoveToRangeEndArray();

int sizeOfMoveToRangeStartArray();

int sizeOfOMathArray();

int sizeOfOMathParaArray();

int sizeOfPermEndArray();

int sizeOfPermStartArray();

int sizeOfProofErrArray();

int sizeOfSdtArray();

int sizeOfTrArray();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\wordprocessingml\x2006\main\CTTextAlignment$Factory.java

package org.openxmlformats.schemas.wordprocessingml.x2006.main;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class CTTextAlignment$Factory {
private CTTextAlignment$Factory() {
}

public static CTTextAlignment newInstance() {
return POIXMLTypeLoader.newInstance(CTTextAlignment.type, (XmlOptions) null);
}

public static CTTextAlignment newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(CTTextAlignment.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTTextAlignment.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, CTTextAlignment.type, xmlOptions);
}

public static CTTextAlignment parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTTextAlignment.type, (XmlOptions) null);
}

public static CTTextAlignment parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, CTTextAlignment.type, xmlOptions);
}

public static CTTextAlignment parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTTextAlignment.type, (XmlOptions) null);
}

public static CTTextAlignment parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, CTTextAlignment.type, xmlOptions);
}

public static CTTextAlignment parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTTextAlignment.type, (XmlOptions) null);
}

public static CTTextAlignment parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, CTTextAlignment.type, xmlOptions);
}

public static CTTextAlignment parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, CTTextAlignment.type, (XmlOptions) null);
}

public static CTTextAlignment parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, CTTextAlignment.type, xmlOptions);
}

public static CTTextAlignment parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTTextAlignment.type, (XmlOptions) null);
}

public static CTTextAlignment parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, CTTextAlignment.type, xmlOptions);
}

public static CTTextAlignment parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTTextAlignment.type, (XmlOptions) null);
}

public static CTTextAlignment parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, CTTextAlignment.type, xmlOptions);
}

public static CTTextAlignment parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTTextAlignment.type, (XmlOptions) null);
}

public static CTTextAlignment parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, CTTextAlignment.type, xmlOptions);
}

public static CTTextAlignment parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, CTTextAlignment.type, (XmlOptions) null);
}

public static CTTextAlignment parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, CTTextAlignment.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\wordprocessingml\x2006\main\STHdrFtr$Enum.java

package org.openxmlformats.schemas.wordprocessingml.x2006.main;

import org.apache.xmlbeans.StringEnumAbstractBase;

public final class STHdrFtr$Enum extends StringEnumAbstractBase {
public static final int INT_DEFAULT = 2;
public static final int INT_EVEN = 1;
public static final int INT_FIRST = 3;
private static final long serialVersionUID = 1;
public static final StringEnumAbstractBase.Table table = new StringEnumAbstractBase.Table(new STHdrFtr$Enum[]{new STHdrFtr$Enum("even", 1), new STHdrFtr$Enum("default", 2), new STHdrFtr$Enum("first", 3)});

private STHdrFtr$Enum(String str, int i) {
super(str, i);
}

public static STHdrFtr$Enum forInt(int i) {
return table.forInt(i);
}

public static STHdrFtr$Enum forString(String str) {
return table.forString(str);
}

private Object readResolve() {
return forInt(intValue());
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\xpackage\x2006\digitalSignature\STFormat$Factory.java

package org.openxmlformats.schemas.xpackage.x2006.digitalSignature;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class STFormat$Factory {
private STFormat$Factory() {
}

public static STFormat newInstance() {
return POIXMLTypeLoader.newInstance(STFormat.type, (XmlOptions) null);
}

public static STFormat newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(STFormat.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, STFormat.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, STFormat.type, xmlOptions);
}

public static STFormat newValue(Object obj) {
return STFormat.type.newValue(obj);
}

public static STFormat parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, STFormat.type, (XmlOptions) null);
}

public static STFormat parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, STFormat.type, xmlOptions);
}

public static STFormat parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, STFormat.type, (XmlOptions) null);
}

public static STFormat parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, STFormat.type, xmlOptions);
}

public static STFormat parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, STFormat.type, (XmlOptions) null);
}

public static STFormat parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, STFormat.type, xmlOptions);
}

public static STFormat parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, STFormat.type, (XmlOptions) null);
}

public static STFormat parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, STFormat.type, xmlOptions);
}

public static STFormat parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, STFormat.type, (XmlOptions) null);
}

public static STFormat parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, STFormat.type, xmlOptions);
}

public static STFormat parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, STFormat.type, (XmlOptions) null);
}

public static STFormat parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, STFormat.type, xmlOptions);
}

public static STFormat parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, STFormat.type, (XmlOptions) null);
}

public static STFormat parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, STFormat.type, xmlOptions);
}

public static STFormat parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, STFormat.type, (XmlOptions) null);
}

public static STFormat parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, STFormat.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\openxmlformats\schemas\xpackage\x2006\digitalSignature\STValue.java

package org.openxmlformats.schemas.xpackage.x2006.digitalSignature;

import android.support.v4.media.b;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.XmlString;

public interface STValue extends XmlString {
public static final SchemaType type = b.v(STValue.class, "schemaorg_apache_xmlbeans.system.s8C3F193EE11A2F798ACF65489B9E6078", "stvalueb6e1type");
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\w3\x2000\x09\xmldsig\SignatureType$Factory.java

package org.w3.x2000.x09.xmldsig;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class SignatureType$Factory {
private SignatureType$Factory() {
}

public static SignatureType newInstance() {
return POIXMLTypeLoader.newInstance(SignatureType.type, (XmlOptions) null);
}

public static SignatureType newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(SignatureType.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, SignatureType.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, SignatureType.type, xmlOptions);
}

public static SignatureType parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, SignatureType.type, (XmlOptions) null);
}

public static SignatureType parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, SignatureType.type, xmlOptions);
}

public static SignatureType parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, SignatureType.type, (XmlOptions) null);
}

public static SignatureType parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, SignatureType.type, xmlOptions);
}

public static SignatureType parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, SignatureType.type, (XmlOptions) null);
}

public static SignatureType parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, SignatureType.type, xmlOptions);
}

public static SignatureType parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, SignatureType.type, (XmlOptions) null);
}

public static SignatureType parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, SignatureType.type, xmlOptions);
}

public static SignatureType parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, SignatureType.type, (XmlOptions) null);
}

public static SignatureType parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, SignatureType.type, xmlOptions);
}

public static SignatureType parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, SignatureType.type, (XmlOptions) null);
}

public static SignatureType parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, SignatureType.type, xmlOptions);
}

public static SignatureType parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, SignatureType.type, (XmlOptions) null);
}

public static SignatureType parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, SignatureType.type, xmlOptions);
}

public static SignatureType parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, SignatureType.type, (XmlOptions) null);
}

public static SignatureType parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, SignatureType.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\w3\x2000\x09\xmldsig\TransformDocument$Factory.java

package org.w3.x2000.x09.xmldsig;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import javax.xml.stream.XMLStreamReader;
import org.apache.poi.POIXMLTypeLoader;
import org.apache.xmlbeans.XmlException;
import org.apache.xmlbeans.XmlOptions;
import org.apache.xmlbeans.xml.stream.XMLInputStream;
import org.apache.xmlbeans.xml.stream.XMLStreamException;
import org.w3c.dom.Node;

public final class TransformDocument$Factory {
private TransformDocument$Factory() {
}

public static TransformDocument newInstance() {
return POIXMLTypeLoader.newInstance(TransformDocument.type, (XmlOptions) null);
}

public static TransformDocument newInstance(XmlOptions xmlOptions) {
return POIXMLTypeLoader.newInstance(TransformDocument.type, xmlOptions);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, TransformDocument.type, (XmlOptions) null);
}

public static XMLInputStream newValidatingXMLInputStream(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.newValidatingXMLInputStream(xMLInputStream, TransformDocument.type, xmlOptions);
}

public static TransformDocument parse(File file) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, TransformDocument.type, (XmlOptions) null);
}

public static TransformDocument parse(File file, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(file, TransformDocument.type, xmlOptions);
}

public static TransformDocument parse(InputStream inputStream) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, TransformDocument.type, (XmlOptions) null);
}

public static TransformDocument parse(InputStream inputStream, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(inputStream, TransformDocument.type, xmlOptions);
}

public static TransformDocument parse(Reader reader) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, TransformDocument.type, (XmlOptions) null);
}

public static TransformDocument parse(Reader reader, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(reader, TransformDocument.type, xmlOptions);
}

public static TransformDocument parse(String str) throws XmlException {
return POIXMLTypeLoader.parse(str, TransformDocument.type, (XmlOptions) null);
}

public static TransformDocument parse(String str, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(str, TransformDocument.type, xmlOptions);
}

public static TransformDocument parse(URL url) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, TransformDocument.type, (XmlOptions) null);
}

public static TransformDocument parse(URL url, XmlOptions xmlOptions) throws XmlException, IOException {
return POIXMLTypeLoader.parse(url, TransformDocument.type, xmlOptions);
}

public static TransformDocument parse(XMLStreamReader xMLStreamReader) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, TransformDocument.type, (XmlOptions) null);
}

public static TransformDocument parse(XMLStreamReader xMLStreamReader, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(xMLStreamReader, TransformDocument.type, xmlOptions);
}

public static TransformDocument parse(XMLInputStream xMLInputStream) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, TransformDocument.type, (XmlOptions) null);
}

public static TransformDocument parse(XMLInputStream xMLInputStream, XmlOptions xmlOptions) throws XmlException, XMLStreamException {
return POIXMLTypeLoader.parse(xMLInputStream, TransformDocument.type, xmlOptions);
}

public static TransformDocument parse(Node node) throws XmlException {
return POIXMLTypeLoader.parse(node, TransformDocument.type, (XmlOptions) null);
}

public static TransformDocument parse(Node node, XmlOptions xmlOptions) throws XmlException {
return POIXMLTypeLoader.parse(node, TransformDocument.type, xmlOptions);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\org\w3\x2000\x09\xmldsig\impl\X509IssuerSerialTypeImpl.java

package org.w3.x2000.x09.xmldsig.impl;

import java.math.BigInteger;
import javax.xml.namespace.QName;
import org.apache.xmlbeans.SchemaType;
import org.apache.xmlbeans.SimpleValue;
import org.apache.xmlbeans.XmlInteger;
import org.apache.xmlbeans.XmlString;
import org.apache.xmlbeans.impl.values.TypeStore;
import org.apache.xmlbeans.impl.values.XmlComplexContentImpl;
import org.w3.x2000.x09.xmldsig.X509IssuerSerialType;

public class X509IssuerSerialTypeImpl extends XmlComplexContentImpl implements X509IssuerSerialType {
private static final QName X509ISSUERNAME$0 = new QName("http://www.w3.org/2000/09/xmldsig#", "X509IssuerName");
private static final QName X509SERIALNUMBER$2 = new QName("http://www.w3.org/2000/09/xmldsig#", "X509SerialNumber");

public X509IssuerSerialTypeImpl(SchemaType schemaType) {
super(schemaType);
}

public String getX509IssuerName() {
synchronized (monitor()) {
check_orphaned();
SimpleValue find_element_user = get_store().find_element_user(X509ISSUERNAME$0, 0);
if (find_element_user == null) {
return null;
}
String stringValue = find_element_user.getStringValue();
return stringValue;
}
}

public BigInteger getX509SerialNumber() {
synchronized (monitor()) {
check_orphaned();
SimpleValue find_element_user = get_store().find_element_user(X509SERIALNUMBER$2, 0);
if (find_element_user == null) {
return null;
}
BigInteger bigIntegerValue = find_element_user.getBigIntegerValue();
return bigIntegerValue;
}
}

public void setX509IssuerName(String str) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = X509ISSUERNAME$0;
SimpleValue find_element_user = typeStore.find_element_user(qName, 0);
if (find_element_user == null) {
find_element_user = (SimpleValue) get_store().add_element_user(qName);
}
find_element_user.setStringValue(str);
}
}

public void setX509SerialNumber(BigInteger bigInteger) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = X509SERIALNUMBER$2;
SimpleValue find_element_user = typeStore.find_element_user(qName, 0);
if (find_element_user == null) {
find_element_user = (SimpleValue) get_store().add_element_user(qName);
}
find_element_user.setBigIntegerValue(bigInteger);
}
}

public XmlString xgetX509IssuerName() {
XmlString find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(X509ISSUERNAME$0, 0);
}
return find_element_user;
}

public XmlInteger xgetX509SerialNumber() {
XmlInteger find_element_user;
synchronized (monitor()) {
check_orphaned();
find_element_user = get_store().find_element_user(X509SERIALNUMBER$2, 0);
}
return find_element_user;
}

public void xsetX509IssuerName(XmlString xmlString) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = X509ISSUERNAME$0;
XmlString find_element_user = typeStore.find_element_user(qName, 0);
if (find_element_user == null) {
find_element_user = get_store().add_element_user(qName);
}
find_element_user.set(xmlString);
}
}

public void xsetX509SerialNumber(XmlInteger xmlInteger) {
synchronized (monitor()) {
check_orphaned();
TypeStore typeStore = get_store();
QName qName = X509SERIALNUMBER$2;
XmlInteger find_element_user = typeStore.find_element_user(qName, 0);
if (find_element_user == null) {
find_element_user = get_store().add_element_user(qName);
}
find_element_user.set(xmlInteger);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\q0\i0.java

package q0;

import android.view.View;
import androidx.annotation.NonNull;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;

public final class i0 implements ViewBinding {
@NonNull
public final ConstraintLayout c;
@NonNull
public final AppCompatImageView d;
@NonNull
public final AppCompatTextView e;
@NonNull
public final RecyclerView f;

public i0(@NonNull ConstraintLayout constraintLayout, @NonNull AppCompatImageView appCompatImageView, @NonNull AppCompatTextView appCompatTextView, @NonNull RecyclerView recyclerView) {
this.c = constraintLayout;
this.d = appCompatImageView;
this.e = appCompatTextView;
this.f = recyclerView;
}

@NonNull
public final View getRoot() {
return this.c;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\q0\m0.java

package q0;

import android.view.View;
import androidx.annotation.NonNull;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.airbnb.lottie.LottieAnimationView;
import com.energysh.common.view.roboto.RobotoRegularTextView;
import com.zhpan.bannerview.BannerViewPager;

public final class m0 implements ViewBinding {
@NonNull
public final ConstraintLayout c;
@NonNull
public final ConstraintLayout d;
@NonNull
public final AppCompatImageView e;
@NonNull
public final AppCompatImageView f;
@NonNull
public final LottieAnimationView g;
@NonNull
public final AppCompatImageView h;
@NonNull
public final AppCompatImageView i;
@NonNull

/* renamed from: j  reason: collision with root package name */
public final LottieAnimationView f7j;
@NonNull
public final AppCompatTextView k;
@NonNull
public final RobotoRegularTextView l;
@NonNull
public final BannerViewPager m;

public m0(@NonNull ConstraintLayout constraintLayout, @NonNull ConstraintLayout constraintLayout2, @NonNull AppCompatImageView appCompatImageView, @NonNull AppCompatImageView appCompatImageView2, @NonNull LottieAnimationView lottieAnimationView, @NonNull AppCompatImageView appCompatImageView3, @NonNull AppCompatImageView appCompatImageView4, @NonNull LottieAnimationView lottieAnimationView2, @NonNull AppCompatTextView appCompatTextView, @NonNull RobotoRegularTextView robotoRegularTextView, @NonNull BannerViewPager bannerViewPager) {
this.c = constraintLayout;
this.d = constraintLayout2;
this.e = appCompatImageView;
this.f = appCompatImageView2;
this.g = lottieAnimationView;
this.h = appCompatImageView3;
this.i = appCompatImageView4;
this.f7j = lottieAnimationView2;
this.k = appCompatTextView;
this.l = robotoRegularTextView;
this.m = bannerViewPager;
}

@NonNull
public final View getRoot() {
return this.c;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\q0\q0.java

package q0;

import android.view.View;
import androidx.annotation.NonNull;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;

public final class q0 implements ViewBinding {
@NonNull
public final ConstraintLayout c;
@NonNull
public final AppCompatTextView d;
@NonNull
public final AppCompatTextView e;
@NonNull
public final View f;

public q0(@NonNull ConstraintLayout constraintLayout, @NonNull AppCompatTextView appCompatTextView, @NonNull AppCompatTextView appCompatTextView2, @NonNull View view) {
this.c = constraintLayout;
this.d = appCompatTextView;
this.e = appCompatTextView2;
this.f = view;
}

@NonNull
public final View getRoot() {
return this.c;
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\schemaorg_apache_xmlbeans\system\sXMLLANG\TypeSystemHolder.java

package schemaorg_apache_xmlbeans.system.sXMLLANG;

import android.support.v4.media.b;
import androidx.media2.exoplayer.external.extractor.ogg.ztAH.PYxhM;
import java.lang.reflect.Constructor;
import org.apache.xmlbeans.SchemaTypeSystem;

public class TypeSystemHolder {
public static /* synthetic */ Class class$java$lang$Class;
public static /* synthetic */ Class class$schemaorg_apache_xmlbeans$system$sXMLLANG$TypeSystemHolder;
public static final SchemaTypeSystem typeSystem = loadTypeSystem();

private TypeSystemHolder() {
}

public static /* synthetic */ Class class$(String str) {
try {
return Class.forName(str);
} catch (ClassNotFoundException e) {
throw new NoClassDefFoundError().initCause(e);
}
}


}
objArr[0] = cls4;
return constructor.newInstance(objArr);
} catch (ClassNotFoundException e) {
throw new RuntimeException("Cannot load org.apache.xmlbeans.impl.SchemaTypeSystemImpl: make sure xbean.jar is on the classpath.", e);
} catch (Exception e2) {
StringBuffer n = b.n("Could not instantiate SchemaTypeSystemImpl (");
n.append(e2.toString());
n.append(PYxhM.gvHlCmO);
throw new RuntimeException(n.toString(), e2);
}
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\u2\a$a.java

package u2;

import com.jakewharton.retrofit2.adapter.rxjava2.HttpException;
import io.reactivex.disposables.b;
import io.reactivex.exceptions.CompositeException;
import j3.t;
import retrofit2.Response;
import s3.a;

public class a$a<R> implements t<Response<R>> {
public final t<? super R> c;
public boolean d;

public a$a(t<? super R> tVar) {
this.c = tVar;
}

public final void onComplete() {
if (!this.d) {
this.c.onComplete();
}
}

public final void onError(Throwable th) {
if (!this.d) {
this.c.onError(th);
return;
}
AssertionError assertionError = new AssertionError("This should never happen! Report as a bug with the full stacktrace.");
assertionError.initCause(th);
a.b(assertionError);
}

public final void onNext(Object obj) {
Response response = (Response) obj;
if (response.isSuccessful()) {
this.c.onNext(response.body());
return;
}
this.d = true;
Throwable httpException = new HttpException(response);
try {
this.c.onError(httpException);
} catch (Throwable th) {
z.a.o(th);
a.b(new CompositeException(new Throwable[]{httpException, th}));
}
}

public final void onSubscribe(b bVar) {
this.c.onSubscribe(bVar);
}
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\y3\c.java

package y3;

import org.jetbrains.annotations.Nullable;

public interface c {
@Nullable
c getCallerFrame();

@Nullable
StackTraceElement getStackTraceElement();
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\y3\d.java

package y3;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Target({ElementType.TYPE})
@Retention(RetentionPolicy.RUNTIME)
public @interface d {
String c() default "";

String f() default "";

int[] l() default {};

String m() default "";

int v() default 1;
}

File: C:\Users\Momoo\Desktop\funktions dateien\classes9.dex_Decompiler.com\sources\y3\e.java

package y3;

import java.lang.reflect.Method;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class e {
@NotNull
public static final a a = new a((Method) null, (Method) null, (Method) null);
@Nullable
public static a b;
}

